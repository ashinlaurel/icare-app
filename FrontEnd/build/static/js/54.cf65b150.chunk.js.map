{"version":3,"sources":["pages/Customers/UpdateCustomer.js","components/Modal/CustomerCreateModal.js"],"names":["UpdateCustomer","history","useHistory","id","useParams","useState","isReviewModalOpen","setIsReviewModalOpen","_id","customerName","username","email","password","confpassword","name","unitId","address","district","state","locationType","pincode","GSTnumber","contactPerson","contactNo","altContact","WhatsappNo","role","values","setValues","enc_password","err","handleChange","e","target","value","getCustomerInfo","a","data","axios","url","API","Emp","getId","method","res","console","log","useEffect","submitCustomer","update","whatsappNo","className","valid","type","onChange","onClick","aria-label","aria-haspopup","isOpen","onClose","push","CustomerCreateModal","isModalOpen","setIsModalOpen","setCustomer","customer","customers","setCustomers","tabIndex","setTabIndex","search","setSearch","handleSubmit","preventDefault","payload","response","pickCustomer","selectedIndex","onSelect","ind","onSubmit","placeholder","map","i","key"],"mappings":"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","file":"static/js/54.cf65b150.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\n\nimport { signup, signin, authenticate } from \"../../helpers/auth\";\nimport CustomerCreateModal from \"../../components/Modal/CustomerCreateModal\";\nimport EmpProfile from \"../../helpers/auth/EmpProfile\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport { resetIdCounter } from \"react-tabs\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n/////////////----------------->>>>>> bug <<<<<------------customerList refresh--------------------------\n\nfunction UpdateCustomer() {\n  let history = useHistory();\n  let { id } = useParams(); /////// 0-Customer 1-Account\n\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n\n  //modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [values, setValues] = useState({\n    //both\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confpassword: \"\",\n    //customer\n    name: \"\",\n    // accountId: [],\n    //account\n    unitId: [],\n    // //------> customerName from above\n    address: \"\",\n    district: \"\",\n    state: \"\",\n    locationType: \"\",\n    pincode: \"\",\n    GSTnumber: \"\",\n    contactPerson: \"\",\n    contactNo: \"\",\n    altContact: \"\",\n    WhatsappNo: \"\",\n    role: 0,\n  });\n  const [err, setErr] = useState({\n    email: \"\",\n    name: \"\",\n    // accountName: \"\",\n    enc_password: \"\",\n    confpassword: \"\",\n  });\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const getCustomerInfo = async () => {\n    let data = { id: id };\n    // console.log(API);\n    try {\n      let res = await axios({\n        url: `${API}/customer/${Emp.getId()}/getCustomerById`,\n        method: \"POST\",\n        data: data,\n      });\n\n      setValues({\n        username: res.data[0].username,\n        email: res.data[0].email,\n        name: res.data[0].name,\n        address: res.data[0].address,\n        district: res.data[0].district,\n        state: res.data[0].state,\n        locationType: res.data[0].locationType,\n        pincode: res.data[0].pincode,\n        GSTnumber: res.data[0].GSTnumber,\n        contactPerson: res.data[0].contactPerson,\n        contactNo: res.data[0].contactNo,\n        altContact: res.data[0].altContact,\n        role: res.data[0].role,\n        // WhatsappNo:WhatsappNo ,\n      });\n\n      console.log(\"Done\", res.data[0]);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    getCustomerInfo();\n  }, []);\n\n  const submitCustomer = async () => {\n    // e.preventDefault();\n    const data = {\n      id: id,\n      update: {\n        name: values.name,\n        //   email: values.email,\n        address: values.address,\n        district: values.district,\n        state: values.state,\n        locationType: values.locationType,\n        pincode: values.pincode,\n        GSTnumber: values.GSTnumber,\n        contactPerson: values.contactPerson,\n        contactNo: values.contactNo,\n        altContact: values.altContact,\n        whatsappNo: values.WhatsappNo,\n      },\n    };\n    console.log(\"PAYLOAD\", data);\n    try {\n      await axios({\n        url: `${API}/customer/${Emp.getId()}/update`,\n        method: \"POST\",\n        data: data,\n      });\n      setIsReviewModalOpen(true);\n      console.log(\"Done\");\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>Customer Updated Successfully!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() =>\n                history.push(`/app/customer/getCustomerById/${id}`)\n              }\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //ASSET\n  const addForm = () => {\n    return (\n      <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Update Customer</span>\n        </Label>\n        <hr className=\"mb-2 mt-2\" />\n        <Label>\n          <span> Type</span>\n          <SectionTitle>\n            {values.role == 1 ? <>Customer</> : <>Account</>}\n          </SectionTitle>\n        </Label>\n        <Label>\n          <span>UserName</span>\n          <SectionTitle>{values.username} </SectionTitle>\n        </Label>\n        <HelperText valid={false}>{err.username}</HelperText>\n        <Label>\n          <span>Email</span>\n          {/* ////////////// how to hadle unique */}\n          <SectionTitle>{values.email} </SectionTitle>\n          {/* <Input\n            className=\"mt-1\"\n            type=\"email\"\n            placeholder=\"\"\n            value={values.email}\n            onChange={handleChange(\"email\")}\n          /> */}\n        </Label>\n        <>\n          <Label>\n            <span>Customer Name</span>\n            <Input\n              className=\"mt-1\"\n              type=\"text\"\n              value={values.name}\n              onChange={handleChange(\"name\")}\n            />\n          </Label>\n          <HelperText valid={false}>{err.customerName}</HelperText>\n        </>\n        <HelperText valid={false}>{err.email}</HelperText>\n        {/* ///////////////////////////////////////////////////////// */}\n        <Label className=\"font-bold mt-5 mb-2\">\n          <span>Additional Information</span>\n        </Label>\n        <hr />\n        <Label>\n          <span>Address</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.address}\n            onChange={handleChange(\"address\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>District</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.district}\n            onChange={handleChange(\"district\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>state</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.state}\n            onChange={handleChange(\"state\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Location Type</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.locationType}\n            onChange={handleChange(\"locationType\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>PIN code</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.pincode}\n            onChange={handleChange(\"pincode\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>GST Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.GSTnumber}\n            onChange={handleChange(\"GSTnumber\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Person</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactPerson}\n            onChange={handleChange(\"contactPerson\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactNo}\n            onChange={handleChange(\"contactNo\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Whatsapp Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.WhatsappNo}\n            onChange={handleChange(\"WhatsappNo\")}\n          />\n        </Label>\n        <hr className=\"my-8\" />\n        {/* ///////////////////////////////////////////////////////// */}\n        <hr />\n        <Button\n          onClick={submitCustomer}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4\"\n        >\n          Update Information\n        </Button>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <PageTitle>Add Customer</PageTitle>\n      {addForm()}\n\n      {/* {productPicker()} */}\n      {ReviewSubmit()}\n    </>\n  );\n}\n\nexport default UpdateCustomer;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport { API } from \"../../backendapi\";\n\nexport default function CustomerCreateModal({\n  isModalOpen,\n  setIsModalOpen,\n  customer,\n  setCustomer,\n}) {\n  const [customers, setCustomers] = useState([]);\n  // const [accounts, setAccounts] = useState([]);\n  // const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n  const [tempbadgeView, setTempBadgeView] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setIsModalOpen(false);\n    // setTempBadgeView(customer.customerName);\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>Select Customer</ModalHeader>\n        <ModalBody className=\"overflow-y-scroll h-64\">\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n          </Tabs>\n        </ModalBody>\n        <ModalFooter>\n          {/* <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {tempbadgeView}\n          </Badge> */}\n          {/* <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge> */}\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}