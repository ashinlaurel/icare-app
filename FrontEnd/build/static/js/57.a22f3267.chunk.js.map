{"version":3,"sources":["pages/Assets/UpdateAsset.js"],"names":["UpdateAsset","useContext","TopBarContext","setTopHeading","topheading","useState","id","useParams","submitModal","setSubmitModal","_id","unitName","unit","setUnit","customerName","customer","setCustomer","accountName","account","setAccount","originalproduct","setOriginalProduct","brand","setBrand","model","setModel","serialno","setSerialNo","os","setOs","cpuname","cpusno","cpu","setCpu","ramname","ramsno","ram","setram","hddname","hddsno","hdd","sethdd","smpsname","smpssno","smps","setsmps","fanname","fansno","fan","setfan","motherboardname","motherboardsno","motherboard","setmotherboard","opticaldrivename","opticaldrivesno","opticaldrive","setopticaldrive","keyboardname","keyboardsno","kbd","setkbd","mousename","mousesno","mouse","setmouse","monitorname","monitorsno","monitor","setmonitor","gcardname","gcardsno","gcard","setgcard","enetcardname","enetcardsno","enetcard","setenetcard","serialcardname","serialcardsno","serialcard","setserialcard","parallelcardname","parallelcardsno","parallelcard","setparallelcard","hbacardname","hbacardsno","hbacard","sethbacard","raidcontrollername","raidcontrollersno","raidcontroller","setraidcontroller","tapecontrollername","tapecontrollersno","tapecontroller","settapecontroller","othersname","otherssno","others","setothers","Business","setBusiness","POnumber","setPOnumber","POdate","setPOdate","ContractFrom","setContractFrom","ContractTo","setContractTo","BillingFrom","setBillingFrom","BillingTo","setBillingTo","AMCRate","setAMCRate","GST","setGST","GSTAMOUNT","setGSTAMOUNT","NetAmount","setNetAmount","servicelocation","setServiceLocation","product","setProduct","isModalOpen","setIsModalOpen","useEffect","getAsset","a","axios","post","API","Emp","getId","res","console","log","data","asset","producttype","customerId","accountId","business","ponumber","amcrate","moment","podate","format","contractfrom","contractto","billingfrom","billingto","gstperc","gstamount","netamount","length","keyboard","netcardname","handleSubmit","e","preventDefault","payload","newproduct","newasset","url","method","className","to","layout","onChange","target","value","selected","disabled","name","type","toFixed","parseInt","onSubmit","placeholder","onClick","newcpu","push","icon","Add","aria-label","pop","Remove","map","item","i","key","newlist","newram","newfan","newmotherboard","newhdd","newsmps","newkbd","newmouse","newmonitor","newgcard","newenetcard","newserialcard","newparallelcard","newhbacard","newraidcontroller","newtapecontroller","newopticaldrive","newothers","isOpen","onClose"],"mappings":"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","file":"static/js/57.a22f3267.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Select,\n  Textarea,\n  Button,\n  Dropdown,\n  DropdownItem,\n  Badge,\n} from \"@windmill/react-ui\";\n\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport { Add, Remove, HeartIcon } from \"../../icons\";\nimport UnitListModal from \"../../components/Modal/UnitListModal\";\nimport CreateAssetFloat from \"../../components/FloatDetails/CreateAssetFloat\";\n\n// Migration\nimport { handleMigration } from \"../../migration/migration\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n\nfunction UpdateAsset() {\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n  // floatbox\n  const [floatbox, setFloatBox] = useState(false);\n  const { id } = useParams();\n  // console.log(id);\n  //modal\n  const [submitModal, setSubmitModal] = useState(false);\n\n  //customer\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n  const [originalproduct, setOriginalProduct] = useState(\"Nil\");\n  //prodcut\n  const [brand, setBrand] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [serialno, setSerialNo] = useState(\"\");\n  const [os, setOs] = useState(\"\");\n  const [cpu, setCpu] = useState([{ cpuname: \"\", cpusno: \"\" }]);\n  const [ram, setram] = useState([{ ramname: \"\", ramsno: \"\" }]);\n  const [hdd, sethdd] = useState([{ hddname: \"\", hddsno: \"\" }]);\n  const [smps, setsmps] = useState([{ smpsname: \"\", smpssno: \"\" }]);\n  const [fan, setfan] = useState([{ fanname: \"\", fansno: \"\" }]);\n  const [motherboard, setmotherboard] = useState([\n    { motherboardname: \"\", motherboardsno: \"\" },\n  ]);\n  const [opticaldrive, setopticaldrive] = useState([\n    { opticaldrivename: \"\", opticaldrivesno: \"\" },\n  ]);\n  const [kbd, setkbd] = useState([{ keyboardname: \"\", keyboardsno: \"\" }]);\n  const [mouse, setmouse] = useState([{ mousename: \"\", mousesno: \"\" }]);\n  const [monitor, setmonitor] = useState([{ monitorname: \"\", monitorsno: \"\" }]);\n  const [gcard, setgcard] = useState([{ gcardname: \"\", gcardsno: \"\" }]);\n  const [enetcard, setenetcard] = useState([\n    { enetcardname: \"\", enetcardsno: \"\" },\n  ]);\n  const [serialcard, setserialcard] = useState([\n    { serialcardname: \"\", serialcardsno: \"\" },\n  ]);\n  const [parallelcard, setparallelcard] = useState([\n    { parallelcardname: \"\", parallelcardsno: \"\" },\n  ]);\n  const [hbacard, sethbacard] = useState([{ hbacardname: \"\", hbacardsno: \"\" }]);\n  const [raidcontroller, setraidcontroller] = useState([\n    { raidcontrollername: \"\", raidcontrollersno: \"\" },\n  ]);\n  const [tapecontroller, settapecontroller] = useState([\n    { tapecontrollername: \"\", tapecontrollersno: \"\" },\n  ]);\n  const [others, setothers] = useState([{ othersname: \"\", otherssno: \"\" }]);\n  //asset\n\n  const [Business, setBusiness] = useState(\"\");\n  const [POnumber, setPOnumber] = useState(\"\");\n  const [POdate, setPOdate] = useState(\"\");\n  const [ContractFrom, setContractFrom] = useState(\"\");\n  const [ContractTo, setContractTo] = useState(\"\");\n  const [BillingFrom, setBillingFrom] = useState(\"\");\n  const [BillingTo, setBillingTo] = useState(\"\");\n  const [AMCRate, setAMCRate] = useState(\"\");\n  const [GST, setGST] = useState(\"\");\n  const [GSTAMOUNT, setGSTAMOUNT] = useState(\"\");\n  const [NetAmount, setNetAmount] = useState(\"\");\n  const [servicelocation, setServiceLocation] = useState(\"\");\n\n  //////////////-------------------------------------------->Product name not in asset\n  const [product, setProduct] = useState(\"Server\");\n\n  //MODAL\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    setTopHeading(\"Update Asset\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n\n  const getAsset = async () => {\n    try {\n      let res = await axios.post(`${API}/asset/${Emp.getId()}/getbyid`, {\n        id: id,\n      });\n      console.log(\"asset\", res.data);\n      let asset = res.data;\n      setServiceLocation(asset.servicelocation);\n      setProduct(asset.producttype);\n      setUnit({ _id: id, unitName: asset.unitName });\n      setCustomer({ _id: asset.customerId, customerName: asset.customerName });\n      setAccount({ _id: asset.accountId, accountName: asset.accountName });\n      ////------------------------>>>>>>>>\n      // setProduct(\"Server\");\n      ////////---------ASSET INFO\n      setBusiness(asset.business);\n      setPOnumber(asset.ponumber);\n      setAMCRate(asset.amcrate);\n      // Dates --------------------------\n      setPOdate(moment(asset.podate).format(\"YYYY-MM-DD\"));\n      setContractFrom(moment(asset.contractfrom).format(\"YYYY-MM-DD\"));\n      setContractTo(moment(asset.contractto).format(\"YYYY-MM-DD\"));\n      setBillingFrom(moment(asset.billingfrom).format(\"YYYY-MM-DD\"));\n      setBillingTo(moment(asset.billingto).format(\"YYYY-MM-DD\"));\n      ////////////------------>>>>>>>> misiing field GST(asset.gs)\n      setGST(asset.gstperc);\n      setGSTAMOUNT(asset.gstamount);\n      setNetAmount(asset.netamount);\n      // setProduct(asset);\n      //////////////////////////////\n\n      setBrand(asset.product.brand);\n      setModel(asset.product.model);\n      setSerialNo(asset.product.serialno);\n      setOs(asset.product.os);\n      setCpu(asset.product.cpu);\n      setram(asset.product.ram);\n\n      if (asset.originalproduct) {\n        setOriginalProduct(asset.originalproduct);\n      }\n\n      if (asset.product.hdd.length == 0) sethdd([{ hddname: \"\", hddsno: \"\" }]);\n      else sethdd(asset.product.hdd);\n      if (asset.product.smps.length == 0)\n        setsmps([{ smpsname: \"\", smpssno: \"\" }]);\n      else setsmps(asset.product.smps);\n      if (asset.product.fan.length == 0) setfan([{ fanname: \"\", fansno: \"\" }]);\n      else setfan(asset.product.fan);\n      if (asset.product.motherboard.length == 0)\n        setmotherboard([{ motherboardname: \"\", motherboardsno: \"\" }]);\n      else setmotherboard(asset.product.motherboard);\n      if (asset.product.opticaldrive.length == 0)\n        setopticaldrive([{ opticaldrivename: \"\", opticaldrivesno: \"\" }]);\n      else setopticaldrive(asset.product.opticaldrive);\n      if (asset.product.keyboard.length == 0)\n        setkbd([{ keyboardname: \"\", keyboardsno: \"\" }]);\n      else setkbd(asset.product.keyboard);\n      if (asset.product.mouse.length == 0)\n        setmouse([{ mousename: \"\", mousesno: \"\" }]);\n      else setmouse(asset.product.mouse);\n      if (asset.product.monitor.length == 0)\n        setmonitor([{ monitorname: \"\", monitorsno: \"\" }]);\n      else setmonitor(asset.product.monitor);\n      if (asset.product.gcard.length == 0)\n        setgcard([{ gcardname: \"\", gcardsno: \"\" }]);\n      else setgcard(asset.product.gcard);\n      if (asset.product.enetcard.length == 0)\n        setenetcard([{ netcardname: \"\", enetcardsno: \"\" }]);\n      else setenetcard(asset.product.enetcard);\n      if (asset.product.serialcard.length == 0)\n        setserialcard([{ serialcardname: \"\", serialcardsno: \"\" }]);\n      else setserialcard(asset.product.serialcard);\n\n      if (asset.product.parallelcard.length == 0)\n        setparallelcard([{ parallelcardname: \"\", parallelcardsno: \"\" }]);\n      else setparallelcard(asset.product.parallelcard);\n      if (asset.product.hbacard.length == 0)\n        sethbacard([{ hbacardname: \"\", hbacardsno: \"\" }]);\n      else sethbacard(asset.product.hbacard);\n      if (asset.product.raidcontroller.length == 0)\n        setraidcontroller([{ raidcontrollername: \"\", raidcontrollersno: \"\" }]);\n      else setraidcontroller(asset.product.raidcontroller);\n      if (asset.product.tapecontroller.length == 0)\n        settapecontroller([{ tapecontrollername: \"\", tapecontrollersno: \"\" }]);\n      else settapecontroller(asset.product.tapecontroller);\n      if (asset.product.others.length == 0)\n        setothers([{ othersname: \"\", otherssno: \"\" }]);\n      else setothers(asset.product.others);\n      //asset\n    } catch (err) {\n      console.log(\"assetFind Error\", err);\n    }\n  };\n\n  useEffect(() => {\n    getAsset();\n  }, []);\n\n  const UpdatedModal = () => {\n    return (\n      <>\n        <Modal isOpen={submitModal} onClose={() => setSubmitModal(false)}>\n          <ModalHeader>Asset Updated Successfully!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setSubmitModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //functions\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      business: Business,\n      producttype: product,\n      ponumber: POnumber,\n      podate: POdate,\n      contractfrom: ContractFrom,\n      contractto: ContractTo,\n      billingfrom: BillingFrom,\n      billingto: BillingTo,\n      amcrate: AMCRate,\n      gstperc: GST,\n      gstamount: GSTAMOUNT,\n      netamount: NetAmount,\n      servicelocation: servicelocation,\n      ///------------------ cust info\n      // unitId: unit._id,\n      // unitName: unit.unitName,\n      // accountId: account._id,\n      // accountName: account.accountName,\n      // customerId: customer._id,\n      // customerName: customer.customerName,\n    };\n    if (payload.podate == \"Invalid date\") payload.podate = \"\";\n    if (payload.contractfrom == \"Invalid date\") payload.contractfrom = \"\";\n    if (payload.contractto == \"Invalid date\") payload.contractto = \"\";\n    if (payload.billingfrom == \"Invalid date\") payload.billingfrom = \"\";\n    if (payload.billingto == \"Invalid date\") payload.billingto = \"\";\n    let newproduct = {\n      brand: brand,\n      model: model,\n      serialno: serialno,\n      os: os,\n      cpu: cpu,\n      ram: ram,\n      hdd: hdd,\n      smps: smps,\n      fan: fan,\n      motherboard: motherboard,\n      opticaldrive: opticaldrive,\n      keyboard: kbd,\n      mouse: mouse,\n      monitor: monitor,\n      gcard: gcard,\n      enetcard: enetcard,\n      serialcard: serialcard,\n      parallelcard: parallelcard,\n      hbacard: hbacard,\n      raidcontroller: raidcontroller,\n      tapecontroller: tapecontroller,\n      others: others,\n    };\n    console.log(payload, newproduct);\n\n    const data = { id: id, newasset: payload, newproduct: newproduct };\n    // console.log(API);\n    try {\n      let update = await axios({\n        url: `${API}/asset/${Emp.getId()}/update`,\n        method: \"POST\",\n        data: data,\n      });\n      setSubmitModal(true);\n      console.log(\"Done\");\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // useEffect(() => {\n  //   handleMigration();\n  // }, []);\n\n  //ASSET----------------------------------------------------\n  const assetPicker = () => {\n    return (\n      <div className=\"px-4 py-3 mt-4 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800\">\n        {/* {floatbox ? (\n          <UpdateAssetFloat Business={Business} POnumber={POnumber} />\n        ) : null} */}\n\n        <Label className=\"font-bold\">\n          <span>Asset Information</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n\n        <div className=\"flex flex-row mb-2 \">\n          <div className=\"flex flex-row space-x-4 w-3/4\">\n            <SectionTitle className=\"w-3/4\">\n              Customer: {customer.customerName}\n            </SectionTitle>\n            <SectionTitle>Account: {account.accountName} </SectionTitle>\n            <SectionTitle>Unit: {unit.unitName}</SectionTitle>\n          </div>\n          {originalproduct != \"Nil\" ? (\n            <div className=\"w-1/4 flex items-start justify-end\">\n              <Link to={`/app/unit/update/vieworiginal/${id}`}>\n                <Button layout=\"outline\" className=\"\">\n                  View Original Asset\n                </Button>\n              </Link>\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n\n        <hr className=\"mb-5 mt-2\" />\n\n        {/* <Label className=\"font-bold\">\n          <span>Customer: {customer.customerName}</span>\n        </Label> */}\n        {/* ----------------------------Row - 1 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full \">\n            {/* <Label className=\"my-3\">\n              <span>Business</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={Business}\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n              />\n            </Label> */}\n            <Label className=\"my-3\">\n              <span>Business Type</span>\n              <Select\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n                className=\"mt-1\"\n                value={Business}\n              >\n                <option value=\"\" selected disabled>\n                  Select Business Type\n                </option>\n                <option value=\"AMC\">AMC</option>\n                <option value=\"Warranty\">Warranty</option>\n              </Select>\n            </Label>\n          </div>\n          <div className=\"w-full  \">\n            <Label className=\"my-3\">\n              <span>Purchase Order Number</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={POnumber}\n                onChange={(e) => {\n                  setPOnumber(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full \">\n            <Label className=\"my-3\">\n              <span>Service Location*</span>\n              <Select\n                value={servicelocation}\n                onChange={(e) => {\n                  setServiceLocation(e.target.value);\n                }}\n                className=\"mt-1\"\n              >\n                <option value=\"\" selected disabled>\n                  Select Service Location\n                </option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </Select>\n            </Label>\n          </div>\n        </div>\n        {/* ----------------------------Row - 2 --------------------------------------------------------------------- */}\n\n        <div className=\"flex flex-col lg:flex-row  items-center justify-start lg:space-x-8\">\n          <Label className=\"w-full my-3\">\n            <span>Purchase Order Date</span>\n            <Input\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={POdate}\n              onChange={(e) => {\n                setPOdate(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Contract From</span>\n            <Input\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={ContractFrom}\n              onChange={(e) => {\n                setContractFrom(e.target.value);\n              }}\n            />\n          </Label>\n\n          <Label className=\"w-full my-3\">\n            <span>Contract To</span>\n            <Input\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={ContractTo}\n              onChange={(e) => {\n                setContractTo(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing From</span>\n            <Input\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={BillingFrom}\n              onChange={(e) => {\n                setBillingFrom(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing To</span>\n            <Input\n              type=\"date\"\n              className=\"mt-1\"\n              name=\"brand\"\n              value={BillingTo}\n              onChange={(e) => {\n                setBillingTo(e.target.value);\n              }}\n            />\n          </Label>\n        </div>\n        {/* ----------------------------Row - 3 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>AMC Rate</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={AMCRate}\n                onChange={(e) => {\n                  setAMCRate(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>GST</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={GST}\n                onChange={(e) => {\n                  setGST(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div>\n        {/* ----------------------------Row - 4 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3 font-bold\">\n              <span>GST AMOUNT: </span>\n\n              <span> Rs {(AMCRate * (GST / 100)).toFixed(2)}</span>\n            </Label>\n          </div>\n          <div className=\"w-full font-bold\">\n            <Label className=\"my-3\">\n              <span>Net Amount: </span>\n              <span>\n                Rs{\" \"}\n                {(parseInt(AMCRate) + parseInt(AMCRate) * (GST / 100)).toFixed(\n                  2\n                )}\n              </span>\n            </Label>\n          </div>\n        </div>\n        {/* <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>GST AMOUNT</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={GSTAMOUNT}\n                onChange={(e) => {\n                  setGSTAMOUNT(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>Net Amount</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={NetAmount}\n                onChange={(e) => {\n                  setNetAmount(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div> */}\n      </div>\n    );\n  };\n\n  //PRODUCT\n\n  const productPicker = () => {\n    return (\n      <>\n        <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800\">\n          <form onSubmit={handleSubmit}>\n            <Label className=\"font-bold\">\n              <span>Essential Details</span>\n            </Label>\n            <hr className=\"mb-5 mt-2\" />\n            <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n              <Label className=\"my-3 w-full\">\n                <span>Brand</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Brand\"\n                  name=\"brand\"\n                  value={brand}\n                  onChange={(e) => {\n                    setBrand(e.target.value);\n                  }}\n                />\n              </Label>\n              <Label className=\"my-3 w-full\">\n                <span>Model</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Model\"\n                  name=\"model\"\n                  value={model}\n                  onChange={(e) => {\n                    setModel(e.target.value);\n                  }}\n                />\n              </Label>\n              <Label className=\"my-3 w-full\">\n                <span>Serial Number</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Serial Number\"\n                  name=\"serialno\"\n                  value={serialno}\n                  onChange={(e) => {\n                    setSerialNo(e.target.value);\n                  }}\n                />\n              </Label>\n            </div>\n            {/* ---------------------------OS--------------------------------- */}\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <Label className=\"font-bold\">\n                  <span>Operating System</span>\n                </Label>\n                <hr className=\"mb-5 mt-2\" />\n                <Label className=\"my-3\">\n                  <span>OS</span>\n                  <Input\n                    className=\"mt-1\"\n                    placeholder=\"OS\"\n                    name=\"os\"\n                    value={os}\n                    onChange={(e) => {\n                      setOs(e.target.value);\n                    }}\n                  />\n                </Label>\n              </>\n            ) : null}\n\n            {/* //////////// ARRAY /////////////// */}\n            {/* -------------------CPU and RAM-------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------CPU------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>CPU</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newcpu = [...cpu];\n                            let add = { cpuname: \"\", cpusno: \"\" };\n                            newcpu.push(add);\n                            setCpu(newcpu);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newcpu = [...cpu];\n                            if (newcpu[1]) {\n                              newcpu.pop();\n                              setCpu(newcpu);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {cpu.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"w-full my-3\">\n                              <span>CPU {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`CPU ${i + 1}`}\n                                name=\"cpuname\"\n                                value={item.cpuname}\n                                onChange={(e) => {\n                                  let newlist = [...cpu];\n                                  newlist[i].cpuname = e.target.value;\n                                  setCpu(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"w-full my-3\">\n                              <span>CPU {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`CPU ${i + 1}'s Serial Number `}\n                                name=\"cpusno\"\n                                value={item.cpusno}\n                                onChange={(e) => {\n                                  let newlist = [...cpu];\n                                  newlist[i].cpusno = e.target.value;\n                                  setCpu(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------CPU------------------------------- */}\n\n              {/* ----------------RAM------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>RAM</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newram = [...ram];\n                            let add = { ramname: \"\", ramsno: \"\" };\n                            newram.push(add);\n                            setram(newram);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newram = [...ram];\n                            if (newram[1]) {\n                              newram.pop();\n                              setram(newram);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {ram.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>RAM {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`RAM ${i + 1}`}\n                                name=\"ramname\"\n                                value={item.ramname}\n                                onChange={(e) => {\n                                  let newlist = [...ram];\n                                  newlist[i].ramname = e.target.value;\n                                  setram(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>RAM {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`RAM ${i + 1}'s Serial Number `}\n                                name=\"cpusno\"\n                                value={item.ramsno}\n                                onChange={(e) => {\n                                  let newlist = [...ram];\n                                  newlist[i].ramsno = e.target.value;\n                                  setram(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------RAM------------------------------- */}\n            </div>\n\n            {/* -----------------------fan and motherboard------------------------------ */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------fan------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>FAN</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newfan = [...fan];\n                            let add = { fanname: \"\", fansno: \"\" };\n                            newfan.push(add);\n                            setfan(newfan);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newfan = [...fan];\n                            if (newfan[1]) {\n                              newfan.pop();\n                              setfan(newfan);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {fan.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>FAN {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`FAN ${i + 1}`}\n                                name=\"fanname\"\n                                value={item.fanname}\n                                onChange={(e) => {\n                                  let newlist = [...fan];\n                                  newlist[i].fanname = e.target.value;\n                                  setfan(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>FAN {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`FAN ${i + 1}'s Serial Number `}\n                                name=\"fansno\"\n                                value={item.fansno}\n                                onChange={(e) => {\n                                  let newlist = [...fan];\n                                  newlist[i].fansno = e.target.value;\n                                  setfan(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------fan------------------------------- */}\n\n              {/* ----------------motherboard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Motherboard</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmotherboard = [...motherboard];\n                            let add = {\n                              motherboardname: \"\",\n                              motherboardsno: \"\",\n                            };\n                            newmotherboard.push(add);\n                            setmotherboard(newmotherboard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmotherboard = [...motherboard];\n                            if (newmotherboard[1]) {\n                              newmotherboard.pop();\n                              setmotherboard(newmotherboard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {motherboard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Motherboard {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Motherboard ${i + 1}`}\n                                name=\"motherboardname\"\n                                value={item.motherboardname}\n                                onChange={(e) => {\n                                  let newlist = [...motherboard];\n                                  newlist[i].motherboardname = e.target.value;\n                                  setmotherboard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Motherboard {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Motherboard ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"motherboardsno\"\n                                value={item.motherboardsno}\n                                onChange={(e) => {\n                                  let newlist = [...motherboard];\n                                  newlist[i].motherboardsno = e.target.value;\n                                  setmotherboard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------motherboard------------------------------- */}\n            </div>\n\n            {/* ------------------------HDD And SMPS */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------hdd------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>HDD</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhdd = [...hdd];\n                            let add = { hddname: \"\", hddsno: \"\" };\n                            newhdd.push(add);\n                            sethdd(newhdd);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhdd = [...hdd];\n                            if (newhdd[1]) {\n                              newhdd.pop();\n                              sethdd(newhdd);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {hdd.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>HDD {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HDD ${i + 1}`}\n                                name=\"hddname\"\n                                value={item.hddname}\n                                onChange={(e) => {\n                                  let newlist = [...hdd];\n                                  newlist[i].hddname = e.target.value;\n                                  sethdd(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>HDD {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HDD ${i + 1}'s Serial Number `}\n                                name=\"hddsno\"\n                                value={item.hddsno}\n                                onChange={(e) => {\n                                  let newlist = [...hdd];\n                                  newlist[i].hddsno = e.target.value;\n                                  sethdd(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------hdd------------------------------- */}\n\n              {/* ----------------smps------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>SMPS</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newsmps = [...smps];\n                            let add = { smpsname: \"\", smpssno: \"\" };\n                            newsmps.push(add);\n                            setsmps(newsmps);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newsmps = [...smps];\n                            if (newsmps[1]) {\n                              newsmps.pop();\n                              setsmps(newsmps);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {smps.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>SMPS {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`SMPS ${i + 1}`}\n                                name=\"smpsname\"\n                                value={item.smpsname}\n                                onChange={(e) => {\n                                  let newlist = [...smps];\n                                  newlist[i].smpsname = e.target.value;\n                                  setsmps(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>SMPS {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`SMPS ${i + 1}'s Serial Number `}\n                                name=\"smpssno\"\n                                value={item.smpssno}\n                                onChange={(e) => {\n                                  let newlist = [...smps];\n                                  newlist[i].smpssno = e.target.value;\n                                  setsmps(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------smps------------------------------- */}\n            </div>\n\n            {/* -----------------------Keyboard And Mouse ------------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------kbd------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Keyboard</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newkbd = [...kbd];\n                            let add = { keyboardname: \"\", keyboardsno: \"\" };\n                            newkbd.push(add);\n                            setkbd(newkbd);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newkbd = [...kbd];\n                            if (newkbd[1]) {\n                              newkbd.pop();\n                              setkbd(newkbd);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {kbd.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Keyboard {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Keyboard ${i + 1}`}\n                                name=\"keyboardname\"\n                                value={item.keyboardname}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].keyboardname = e.target.value;\n                                  setkbd(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Keyboard {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Keyboard ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"keyboardsno\"\n                                value={item.keyboardsno}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].keyboardsno = e.target.value;\n                                  setkbd(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------kbd------------------------------- */}\n\n              {/* ----------------mouse------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Mouse</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmouse = [...mouse];\n                            let add = { mousename: \"\", mousesno: \"\" };\n                            newmouse.push(add);\n                            setmouse(newmouse);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmouse = [...mouse];\n                            if (newmouse[1]) {\n                              newmouse.pop();\n                              setmouse(newmouse);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {mouse.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Mouse {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Mouse ${i + 1}`}\n                                name=\"mousename\"\n                                value={item.mousename}\n                                onChange={(e) => {\n                                  let newlist = [...mouse];\n                                  newlist[i].mousename = e.target.value;\n                                  setmouse(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Mouse {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Mouse ${i + 1}'s Serial Number `}\n                                name=\"mousesno\"\n                                value={item.mousesno}\n                                onChange={(e) => {\n                                  let newlist = [...mouse];\n                                  newlist[i].mousesno = e.target.value;\n                                  setmouse(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------mouse------------------------------- */}\n            </div>\n\n            {/* ---------------------------Monitor and GCard ------------------------*/}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------monitor------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Monitor</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmonitor = [...monitor];\n                            let add = { monitorname: \"\", monitorsno: \"\" };\n                            newmonitor.push(add);\n                            setmonitor(newmonitor);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmonitor = [...monitor];\n                            if (newmonitor[1]) {\n                              newmonitor.pop();\n                              setmonitor(newmonitor);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {monitor.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Monitor {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Monitor ${i + 1}`}\n                                name=\"monitorname\"\n                                value={item.monitorname}\n                                onChange={(e) => {\n                                  let newlist = [...monitor];\n                                  newlist[i].monitorname = e.target.value;\n                                  setmonitor(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Monitor {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Monitor ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"monitorsno\"\n                                value={item.monitorsno}\n                                onChange={(e) => {\n                                  let newlist = [...monitor];\n                                  newlist[i].monitorsno = e.target.value;\n                                  setmonitor(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------monitor------------------------------- */}\n\n              {/* ----------------gcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Graphics Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newgcard = [...gcard];\n                            let add = { gcardname: \"\", gcardsno: \"\" };\n                            newgcard.push(add);\n                            setgcard(newgcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newgcard = [...gcard];\n                            if (newgcard[1]) {\n                              newgcard.pop();\n                              setgcard(newgcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {gcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Graphics Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Graphics Card ${i + 1}`}\n                                name=\"gcardname\"\n                                value={item.gcardname}\n                                onChange={(e) => {\n                                  let newlist = [...gcard];\n                                  newlist[i].gcardname = e.target.value;\n                                  setgcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Graphics Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Graphics Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"gcardsno\"\n                                value={item.gcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...gcard];\n                                  newlist[i].gcardsno = e.target.value;\n                                  setgcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------gcard------------------------------- */}\n            </div>\n\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------enetcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>E Net Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newenetcard = [...enetcard];\n                            let add = { enetcardname: \"\", enetcardsno: \"\" };\n                            newenetcard.push(add);\n                            setenetcard(newenetcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newenetcard = [...enetcard];\n                            if (newenetcard[1]) {\n                              newenetcard.pop();\n                              setenetcard(newenetcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {enetcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>E Net Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`E Net Card ${i + 1}`}\n                                name=\"enetcardname\"\n                                value={item.enetcardname}\n                                onChange={(e) => {\n                                  let newlist = [...enetcard];\n                                  newlist[i].enetcardname = e.target.value;\n                                  setenetcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>E Net Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`E Net Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"enetcardsno\"\n                                value={item.enetcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...enetcard];\n                                  newlist[i].enetcardsno = e.target.value;\n                                  setenetcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------enetcard------------------------------- */}\n\n              {/* ----------------serialcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Serial Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newserialcard = [...serialcard];\n                            let add = { serialcardname: \"\", serialcardsno: \"\" };\n                            newserialcard.push(add);\n                            setserialcard(newserialcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newserialcard = [...serialcard];\n                            if (newserialcard[1]) {\n                              newserialcard.pop();\n                              setserialcard(newserialcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {serialcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Serial Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Serial Card ${i + 1}`}\n                                name=\"serialcardname\"\n                                value={item.serialcardname}\n                                onChange={(e) => {\n                                  let newlist = [...serialcard];\n                                  newlist[i].serialcardname = e.target.value;\n                                  setserialcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Serial Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Serial Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"serialcardsno\"\n                                value={item.serialcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...serialcard];\n                                  newlist[i].serialcardsno = e.target.value;\n                                  setserialcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------serialcard------------------------------- */}\n            </div>\n\n            {/* --------------------Parallel And HBD Card ----------------------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------parallelcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Parallel Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newparallelcard = [...parallelcard];\n                            let add = {\n                              parallelcardname: \"\",\n                              parallelcardsno: \"\",\n                            };\n                            newparallelcard.push(add);\n                            setparallelcard(newparallelcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newparallelcard = [...parallelcard];\n                            if (newparallelcard[1]) {\n                              newparallelcard.pop();\n                              setparallelcard(newparallelcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {parallelcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Parallel Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Parallel Card ${i + 1}`}\n                                name=\"parallelcardname\"\n                                value={item.parallelcardname}\n                                onChange={(e) => {\n                                  let newlist = [...parallelcard];\n                                  newlist[i].parallelcardname = e.target.value;\n                                  setparallelcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Parallel Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Parallel Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"parallelcardsno\"\n                                value={item.parallelcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...parallelcard];\n                                  newlist[i].parallelcardsno = e.target.value;\n                                  setparallelcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------parallelcard------------------------------- */}\n\n              {/* ----------------hbacard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>HBA Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhbacard = [...hbacard];\n                            let add = { hbacardname: \"\", hbacardsno: \"\" };\n                            newhbacard.push(add);\n                            sethbacard(newhbacard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhbacard = [...hbacard];\n                            if (newhbacard[1]) {\n                              newhbacard.pop();\n                              sethbacard(newhbacard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {hbacard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>HBA Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HBA Card ${i + 1}`}\n                                name=\"hbacardname\"\n                                value={item.hbacardname}\n                                onChange={(e) => {\n                                  let newlist = [...hbacard];\n                                  newlist[i].hbacardname = e.target.value;\n                                  sethbacard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>HBA Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HBA Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"hbacardsno\"\n                                value={item.hbacardsno}\n                                onChange={(e) => {\n                                  let newlist = [...hbacard];\n                                  newlist[i].hbacardsno = e.target.value;\n                                  sethbacard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------hbacard------------------------------- */}\n            </div>\n            {/* --------------------Raid And Tape Controller------------------------------ */}\n\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------raidcontroller------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Raid Controller</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newraidcontroller = [...raidcontroller];\n                            let add = {\n                              raidcontrollername: \"\",\n                              raidcontrollersno: \"\",\n                            };\n                            newraidcontroller.push(add);\n                            setraidcontroller(newraidcontroller);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newraidcontroller = [...raidcontroller];\n                            if (newraidcontroller[1]) {\n                              newraidcontroller.pop();\n                              setraidcontroller(newraidcontroller);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {raidcontroller.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Raid Controller {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Raid Controller ${i + 1}`}\n                                name=\"raidcontrollername\"\n                                value={item.raidcontrollername}\n                                onChange={(e) => {\n                                  let newlist = [...raidcontroller];\n                                  newlist[i].raidcontrollername =\n                                    e.target.value;\n                                  setraidcontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>\n                                Raid Controller {i + 1}: Serial Number\n                              </span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Raid Controller ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"raidcontrollersno\"\n                                value={item.raidcontrollersno}\n                                onChange={(e) => {\n                                  let newlist = [...raidcontroller];\n                                  newlist[i].raidcontrollersno = e.target.value;\n                                  setraidcontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------raidcontroller------------------------------- */}\n\n              {/* ----------------tapecontroller------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Tape Controller</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newtapecontroller = [...tapecontroller];\n                            let add = {\n                              tapecontrollername: \"\",\n                              tapecontrollersno: \"\",\n                            };\n                            newtapecontroller.push(add);\n                            settapecontroller(newtapecontroller);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newtapecontroller = [...tapecontroller];\n                            if (newtapecontroller[1]) {\n                              newtapecontroller.pop();\n                              settapecontroller(newtapecontroller);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {tapecontroller.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Tape Controller {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Tape Controller ${i + 1}`}\n                                name=\"tapecontrollername\"\n                                value={item.tapecontrollername}\n                                onChange={(e) => {\n                                  let newlist = [...tapecontroller];\n                                  newlist[i].tapecontrollername =\n                                    e.target.value;\n                                  settapecontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>\n                                Tape Controller {i + 1}: Serial Number\n                              </span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Tape Controller ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"tapecontrollersno\"\n                                value={item.tapecontrollersno}\n                                onChange={(e) => {\n                                  let newlist = [...tapecontroller];\n                                  newlist[i].tapecontrollersno = e.target.value;\n                                  settapecontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------tapecontroller------------------------------- */}\n            </div>\n\n            {/* ----------------opticaldrive------------------------------- */}\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <div className=\"flex flex-row items-center\">\n                  <Label className=\"font-bold\">\n                    <span>Optical Drive</span>\n                  </Label>\n                  <div className=\"ml-3 \">\n                    <Button\n                      onClick={() => {\n                        let newopticaldrive = [...opticaldrive];\n                        let add = { opticaldrivename: \"\", opticaldrivesno: \"\" };\n                        newopticaldrive.push(add);\n                        setopticaldrive(newopticaldrive);\n                      }}\n                      icon={Add}\n                      layout=\"link\"\n                      aria-label=\"Like\"\n                    />\n                  </div>\n                  <div className=\"ml-3\">\n                    <Button\n                      onClick={() => {\n                        let newopticaldrive = [...opticaldrive];\n                        if (newopticaldrive[1]) {\n                          newopticaldrive.pop();\n                          setopticaldrive(newopticaldrive);\n                        }\n                      }}\n                      icon={Remove}\n                      layout=\"link\"\n                      aria-label=\"Like\"\n                    />\n                  </div>\n                </div>\n                <hr className=\"mb-5 mt-2\" />\n                {opticaldrive.map((item, i) => {\n                  return (\n                    <div key={i}>\n                      <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                        <Label className=\"my-3 w-full\">\n                          <span>Optical Drive {i + 1}</span>\n                          <Input\n                            className=\"mt-1\"\n                            placeholder={`Opticaldrive ${i + 1}`}\n                            name=\"opticaldrivename\"\n                            value={item.opticaldrivename}\n                            onChange={(e) => {\n                              let newlist = [...opticaldrive];\n                              newlist[i].opticaldrivename = e.target.value;\n                              setopticaldrive(newlist);\n                            }}\n                          />\n                        </Label>\n                        <Label className=\"my-3 w-full\">\n                          <span>Opticaldrive {i + 1}: Serial Number</span>\n                          <Input\n                            className=\"mt-1\"\n                            placeholder={`Optical Drive ${\n                              i + 1\n                            }'s Serial Number `}\n                            name=\"opticaldrivesno\"\n                            value={item.opticaldrivesno}\n                            onChange={(e) => {\n                              let newlist = [...opticaldrive];\n                              newlist[i].opticaldrivesno = e.target.value;\n                              setopticaldrive(newlist);\n                            }}\n                          />\n                        </Label>\n                      </div>\n                    </div>\n                  );\n                })}\n              </>\n            ) : null}\n            {/* ----------------opticaldrive------------------------------- */}\n\n            {/* ----------------others------------------------------- */}\n            <div className=\"flex flex-row items-center\">\n              <Label className=\"font-bold\">\n                <span>Others</span>\n              </Label>\n              <div className=\"ml-3\">\n                <Button\n                  onClick={() => {\n                    let newothers = [...others];\n                    let add = { othersname: \"\", otherssno: \"\" };\n                    newothers.push(add);\n                    setothers(newothers);\n                  }}\n                  icon={Add}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                />\n              </div>\n              <div className=\"ml-3\">\n                <Button\n                  onClick={() => {\n                    let newothers = [...others];\n                    if (newothers[1]) {\n                      newothers.pop();\n                      setothers(newothers);\n                    }\n                  }}\n                  icon={Remove}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                />\n              </div>\n            </div>\n            <hr className=\"mb-5 mt-2\" />\n            {others.map((item, i) => {\n              return (\n                <div key={i}>\n                  <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                    <Label className=\"my-3 w-full\">\n                      <span>Others {i + 1}</span>\n                      <Input\n                        className=\"mt-1\"\n                        placeholder={`Others ${i + 1}`}\n                        name=\"othersname\"\n                        value={item.othersname}\n                        onChange={(e) => {\n                          let newlist = [...others];\n                          newlist[i].othersname = e.target.value;\n                          setothers(newlist);\n                        }}\n                      />\n                    </Label>\n                    <Label className=\"my-3 w-full\">\n                      <span>Others {i + 1}: Serial Number</span>\n                      <Input\n                        className=\"mt-1\"\n                        placeholder={`Others ${i + 1}'s Serial Number `}\n                        name=\"otherssno\"\n                        value={item.otherssno}\n                        onChange={(e) => {\n                          let newlist = [...others];\n                          newlist[i].otherssno = e.target.value;\n                          setothers(newlist);\n                        }}\n                      />\n                    </Label>\n                  </div>\n                </div>\n              );\n            })}\n\n            {/* ----------------others------------------------------- */}\n\n            <div className=\"flex items-center justify-center my-10\">\n              <Button type=\"submit\">Submit</Button>\n            </div>\n\n            {/* <Label className=\"mt-4\">\n              <span>Disabled</span>\n              <Input disabled className=\"mt-1\" placeholder=\"Jane Doe\" />\n            </Label> */}\n          </form>\n        </div>\n      </>\n    );\n  };\n\n  //DROPDOWN------------------------------------------------------------------------------------\n\n  const [isOpen, setIsOpen] = useState(false);\n  function toggleDropdown() {\n    setIsOpen(!isOpen);\n  }\n\n  const test = () => {\n    console.log(test);\n  };\n\n  return (\n    <>\n      <UnitListModal\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setUnit={setUnit}\n        unit={unit}\n        customer={customer}\n        setCustomer={setCustomer}\n        account={account}\n        setAccount={setAccount}\n      />\n      {/* Heading of page with float button */}\n\n      {assetPicker()}\n      {/* <SectionTitle>Pick Product</SectionTitle> */}\n      {/* {dropdown()} */}\n      {product != \"null\" ? (\n        <>\n          <SectionTitle>{product} </SectionTitle>\n          {productPicker()}\n        </>\n      ) : null}\n      {/* {productPicker()} */}\n      {/* /////---------------------------- FOOTER */}\n      {/* <div class=\" w-7/12 bottom-0  border-t border-grey p-4 fixed pin-b bg-gray-700 text-xs text-white\">\n        Asset Summary Asset Information:\n        <br />\n        Business: {Business} POnumber: {POnumber} ContractFrom: {ContractFrom}\n        ContractTo: {ContractTo} BillingFrom: {BillingFrom} BillingTo:{\" \"}\n        {BillingTo} AMCRate:\n        {AMCRate} GST:{GST} GSTAMOUNT:{GSTAMOUNT} NetAmount:{NetAmount}\n        <br />\n        Product: {product}\n        <br />\n        Brind: {brand} model: {model} serialno: {serialno} os: {os}\n        <br />\n        {cpu.map((p, i) => {\n          return (\n            <>\n              CPU:{p.cpuname}, {p.cpusno}\n            </>\n          );\n        })}\n      </div> */}\n      {UpdatedModal()}\n    </>\n  );\n}\n\nexport default UpdateAsset;\n"],"sourceRoot":""}