{"version":3,"sources":["components/Modal/AddUnitModal.js","pages/Customers/CreateCustomer.js","components/Modal/CustomerCreateModal.js","helpers/unitHelper.js"],"names":["AddUnitModal","isModalOpen","setIsModalOpen","account","setAccount","customer","setCustomer","useState","customers","setCustomers","accounts","setAccounts","tabIndex","setTabIndex","useEffect","Axios","post","API","search","role","then","users","console","log","data","temp","map","user","push","catch","err","pickCustomer","a","_id","customerName","name","customerId","accs","pickAccount","accountName","isOpen","onClose","selectedIndex","onSelect","ind","i","key","className","onClick","type","CreateCustomer","useHistory","accType","setAccType","isReviewModalOpen","setIsReviewModalOpen","isErrModalOpen","setIsErrModalOpen","isReqFieldModal","setIsReqFieldModal","setTopHeading","useContext","TopBarContext","isUModalOpen","setIsUModalOpen","Ucustomer","setUCustomer","Uaccount","setUAccount","username","email","password","confpassword","accountId","unitId","unitName","address","district","state","locationType","pincode","GSTnumber","contactPerson","contactNo","altContact","WhatsappNo","values","setValues","enc_password","setErr","handleChange","e","target","value","submitCustomer","newuser","childAccountIds","whatsappNo","show_password","signup","Emp","getId","sumbitAccount","parentCustomerId","parentCustomerName","submitUnit","payload","customerMame","unitCreate","onChange","parseInt","valid","placeholder","length","aria-label","aria-haspopup","addForm","window","location","reload","CustomerCreatetModal","getCustomers","layout","newunit","unit","error","response","status","errors"],"mappings":"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","file":"static/js/20.a883805d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../backendapi\";\n\nexport default function AddUnitModal({\n  isModalOpen,\n  setIsModalOpen,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  useEffect(() => {\n    Axios.post(`${API}/customer/customers`, { search: \"\", role: 1 })\n      .then((users) => {\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        setCustomers(temp);\n      })\n      .catch((err) => {\n        console.log(\"axiosErr\", err);\n      });\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select {tabIndex == 0 ? <>Customer</> : <>Account</>}\n        </ModalHeader>\n        <ModalBody>\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n          </Tabs>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\n\nimport { signup, signin, authenticate } from \"../../helpers/auth\";\nimport CustomerCreateModal from \"../../components/Modal/CustomerCreateModal\";\nimport EmpProfile from \"../../helpers/auth/EmpProfile\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport { resetIdCounter } from \"react-tabs\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport { unitCreate } from \"../../helpers/unitHelper\";\nimport AddUnitModal from \"../../components/Modal/AddUnitModal\";\nimport { useHistory } from \"react-router-dom\";\n/////////////----------------->>>>>> bug <<<<<------------customerList refresh--------------------------\n\nfunction CreateCustomer() {\n  let history = useHistory();\n  const [accType, setAccType] = useState(0); /////// 0-Customer 1-Account 2-Unit\n\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [isErrModalOpen, setIsErrModalOpen] = useState(false);\n  const [isReqFieldModal, setIsReqFieldModal] = useState(false);\n  const { setTopHeading } = useContext(TopBarContext);\n\n  //modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  //States for unit\n  const [isUModalOpen, setIsUModalOpen] = useState(false);\n  const [Ucustomer, setUCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [Uaccount, setUAccount] = useState({ _id: \"\", accountName: \"\" });\n\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n\n  const [values, setValues] = useState({\n    //both\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confpassword: \"\",\n    //customer\n    customerName: \"\",\n    accountId: [],\n    //account\n    accountName: \"\",\n    unitId: [],\n    // //------> customerName from above\n    //unit\n    unitName: \"\",\n    address: \"\",\n    district: \"\",\n    state: \"\",\n    locationType: \"\",\n    pincode: \"\",\n    GSTnumber: \"\",\n    contactPerson: \"\",\n    contactNo: \"\",\n    altContact: \"\",\n    WhatsappNo: \"\",\n  });\n  const [err, setErr] = useState({\n    email: \"\",\n    name: \"\",\n    // accountName: \"\",\n    enc_password: \"\",\n    confpassword: \"\",\n  });\n\n  // ----------------------Heading Use Effect-------------\n\n  useEffect(() => {\n    setTopHeading(\"Add Customer\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const handleConfPassChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n    if (values.password !== e.target.value) {\n      setErr({ ...err, confpassword: \"Confirm password does not match\" });\n    } else setErr({ ...err, confpassword: \"\" });\n  };\n\n  const submitCustomer = async () => {\n    if (values.password !== values.confpassword) {\n      setErr({ ...err, confpassword: \"Confirm password does not match\" });\n      return;\n    }\n    if (\n      (values.customerName === \"\") |\n      (values.username === \"\") |\n      (values.email === \"\") |\n      (values.password === \"\") |\n      (values.confpassword === \"\")\n    ) {\n      setIsReqFieldModal(true);\n      return;\n    }\n    // e.preventDefault();\n    const newuser = {\n      username: values.username,\n      name: values.customerName,\n      email: values.email,\n      password: values.password,\n      role: 1,\n      childAccountIds: [],\n      address: values.address,\n      district: values.district,\n      state: values.state,\n      locationType: values.locationType,\n      pincode: values.pincode,\n      GSTnumber: values.GSTnumber,\n      contactPerson: values.contactPerson,\n      contactNo: values.contactNo,\n      altContact: values.altContact,\n      whatsappNo: values.WhatsappNo,\n      show_password:values.password\n    };\n    signup(newuser, `customer/${Emp.getId()}/signup`)\n      .then((data) => {\n        console.log(\"Signed Up\", data._id);\n        setIsReviewModalOpen(true);\n        setErr({\n          username: \"\",\n          email: \"\",\n          customerName: \"\",\n          enc_password: \"\",\n          confpassword: \"\",\n        });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        setErr({ ...err });\n      });\n  };\n\n  const sumbitAccount = async (e) => {\n    if (values.password !== values.confpassword) {\n      setErr({ ...err, confpassword: \"Confirm password does not match\" });\n      return;\n    }\n    if (\n      (values.accountName === \"\") |\n      (values.username === \"\") |\n      (values.email === \"\") |\n      (values.password === \"\") |\n      (values.confpassword === \"\")\n    ) {\n      setIsReqFieldModal(true);\n      return;\n    }\n    if (customer._id == \"\") {\n      setIsErrModalOpen(true);\n      return;\n    }\n    // e.preventDefault();\n    console.log(\"username\", values.username);\n    const newuser = {\n      username: values.username,\n      name: values.accountName,\n      email: values.email,\n      password: values.password,\n      parentCustomerId: customer._id,\n      parentCustomerName: customer.customerName,\n      role: 2,\n      address: values.address,\n      district: values.district,\n      state: values.state,\n      locationType: values.locationType,\n      pincode: values.pincode,\n      GSTnumber: values.GSTnumber,\n      contactPerson: values.contactPerson,\n      contactNo: values.contactNo,\n      altContact: values.altContact,\n      whatsappNo: values.WhatsappNo,\n      show_password:values.password  \n    };\n    signup(newuser, `customer/${Emp.getId()}/signup`)\n      .then((data) => {\n        setIsReviewModalOpen(true);\n        console.log(\"Signed Up\", data);\n        setErr({\n          username: \"\",\n          email: \"\",\n          accountName: \"\",\n          enc_password: \"\",\n          confpassword: \"\",\n        });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        setErr({ ...err });\n      });\n  };\n  const submitUnit = async (e) => {\n    if (Ucustomer._id == \"\" || Uaccount._id == \"\") {\n      setIsErrModalOpen(true);\n      return;\n    }\n    // e.preventDefault();\n    const payload = {\n      username: values.username,\n      email: values.email,\n      customerId: Ucustomer._id,\n      customerName: Ucustomer.customerMame,\n      accountId: Uaccount._id,\n      accountName: Uaccount.accountName,\n\n      unitName: values.unitName,\n      address: values.address,\n      district: values.district,\n      state: values.state,\n      locationType: values.locationType,\n      pincode: values.pincode,\n      GSTnumber: values.GSTnumber,\n      contactPerson: values.contactPerson,\n      contactNo: values.contactNo,\n      altContact: values.altContact,\n      whatsappNo: values.WhatsappNo,\n      show_password:values.password  \n    };\n    unitCreate(payload)\n      .then((data) => {\n        console.log(\"Signed Up\", data);\n        setIsReviewModalOpen(true);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        // setErr({ ...err });\n      });\n  };\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>\n            {accType === 0 ? <>Customer </> : null}\n            {accType === 1 ? <>Account </> : null}\n            {accType === 2 ? <>Unit </> : null}\n            Created Successfully!\n          </ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              // onClick={() => setIsReviewModalOpen(false)}\n              onClick={() => window.location.reload()}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const AccCustErr = () => {\n    return (\n      <>\n        <Modal isOpen={isErrModalOpen} onClose={() => setIsErrModalOpen(false)}>\n          <ModalHeader>Customer Not Selected!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsErrModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const ReqFieldErrModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReqFieldModal}\n          onClose={() => setIsReqFieldModal(false)}\n        >\n          <ModalHeader>Required fields are not filled!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReqFieldModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //ASSET\n  const addForm = () => {\n    return (\n      <div className=\"px-4 py-3 mt-4 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Add Customer</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n        {/* ------------------------Row 1-------------------------- */}\n        <div className=\"flex-row flex space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Select Account Type*</span>\n              <Select\n                className=\"mt-1\"\n                onChange={(e) => {\n                  setAccType(parseInt(e.target.value));\n                }}\n              >\n                <option value=\"0\">Customer</option>\n                <option value=\"1\">Account</option>\n                <option value=\"2\">Unit</option>\n              </Select>\n            </Label>\n          </div>\n          {accType === 0 ? (\n            <>\n              <div className=\"flex flex-col w-full\">\n                <Label className=\"w-full\">\n                  <span>Customer Name*</span>\n                  <Input\n                    className=\"mt-1\"\n                    type=\"text\"\n                    value={values.customerName}\n                    onChange={handleChange(\"customerName\")}\n                  />\n                </Label>\n                <HelperText valid={false}>{err.customerName}</HelperText>\n              </div>\n            </>\n          ) : null}\n          {accType === 1 ? (\n            <>\n              <div className=\"flex flex-col w-full\">\n                <Label className=\"w-full\">\n                  <span>Account Name*</span>\n                  <Input\n                    className=\"mt-1\"\n                    type=\"text\"\n                    value={values.accountName}\n                    onChange={handleChange(\"accountName\")}\n                  />\n                </Label>\n                <HelperText valid={false}>{err.accountName}</HelperText>\n              </div>\n            </>\n          ) : null}\n          {accType === 2 ? (\n            <>\n              <div className=\"flex flex-col w-full\">\n                <Label className=\"w-full\">\n                  <span>Unit Name*</span>\n                  <Input\n                    className=\"mt-1\"\n                    type=\"text\"\n                    value={values.unitName}\n                    onChange={handleChange(\"unitName\")}\n                  />\n                </Label>\n              </div>\n            </>\n          ) : null}\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>User Name*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.username}\n                onChange={handleChange(\"username\")}\n              />\n            </Label>\n            <HelperText valid={false}>{err.username}</HelperText>\n          </div>\n          <Label className=\"w-full\">\n            <span>Email*</span>\n            <Input\n              className=\"mt-1\"\n              type=\"email\"\n              placeholder=\"\"\n              value={values.email}\n              onChange={handleChange(\"email\")}\n            />\n          </Label>\n          <HelperText valid={false}>{err.email}</HelperText>\n        </div>\n        {/* ----------------------Row 2 ----------------------------- */}\n        <div className=\"flex-row flex space-x-3 \">\n          <Label className=\"w-full mt-4\">\n            <span>Password*</span>\n            <Input\n              className=\"mt-1\"\n              placeholder=\"\"\n              type=\"password\"\n              value={values.password}\n              onChange={handleChange(\"password\")}\n            />\n          </Label>\n          <HelperText valid={false}>{err.enc_password}</HelperText>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full mt-4\">\n              <span>Confirm password*</span>\n\n              <Input\n                className=\"mt-1\"\n                type=\"password\"\n                value={values.confpassword}\n                onChange={handleConfPassChange(\"confpassword\")}\n              />\n            </Label>\n\n            <HelperText valid={false}>{err.confpassword}</HelperText>\n          </div>\n        </div>\n        {/* ///////////////////////////////////////////////////////// */}\n        <Label className=\"font-bold mt-5 mb-2\">\n          <span>Additional Information</span>\n        </Label>\n        <hr />\n        {/* -------Row - 3 ---------------------- */}\n        <div className=\"flex-row flex space-x-3 mt-3 mb-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>GST Number</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.GSTnumber}\n                onChange={handleChange(\"GSTnumber\")}\n              />\n            </Label>{\" \"}\n            {values.GSTnumber.length != 15 && values.GSTnumber != 0 ? (\n              <>\n                <HelperText valid={false}>\n                  GST number shound be 15 digits\n                </HelperText>\n              </>\n            ) : null}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Contact Person</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.contactPerson}\n                onChange={handleChange(\"contactPerson\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Contact Number</span>\n              <Input\n                className=\"mt-1\"\n                type=\"number\"\n                value={values.contactNo}\n                onChange={handleChange(\"contactNo\")}\n              />\n            </Label>{\" \"}\n            {values.contactNo.length != 10 && values.contactNo != 0 ? (\n              <>\n                <HelperText valid={false}>\n                  Phone number shound be 10 digits\n                </HelperText>\n              </>\n            ) : null}\n          </div>\n          {/* <HelperText valid={false}>{digiterr.contactNo}</HelperText> */}\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Whatsapp Number</span>\n              <Input\n                className=\"mt-1\"\n                type=\"number\"\n                value={values.WhatsappNo}\n                onChange={handleChange(\"WhatsappNo\")}\n              />\n            </Label>\n            {values.WhatsappNo.length != 10 && values.WhatsappNo != 0 ? (\n              <>\n                <HelperText valid={false}>\n                  Phone number shound be 10 digits\n                </HelperText>\n              </>\n            ) : null}\n          </div>\n        </div>\n        <Label className=\"my-2\">\n          <span>Address</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.address}\n            onChange={handleChange(\"address\")}\n          />\n        </Label>{\" \"}\n        {/* -----------------------Row-4 */}\n        <div className=\"flex-row flex space-x-3 my-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>District</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.district}\n                onChange={handleChange(\"district\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>State</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.state}\n                onChange={handleChange(\"state\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Location Type</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.locationType}\n                onChange={handleChange(\"locationType\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>PIN code</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.pincode}\n                onChange={handleChange(\"pincode\")}\n              />\n            </Label>{\" \"}\n            {values.pincode.length != 6 && values.pincode != 0 ? (\n              <>\n                <HelperText valid={false}>PIN shound be 6 digits</HelperText>\n              </>\n            ) : null}\n          </div>\n        </div>\n        {/* ///////////////////////////////////////////////////////// */}\n        {accType === 1 ? (\n          <>\n            <Button\n              onClick={() => setIsModalOpen(true)}\n              aria-label=\"Notifications\"\n              aria-haspopup=\"true\"\n              className=\"mt-4 mr-2\"\n            >\n              {customer.customerName === \"\" ? (\n                <>Select Associations</>\n              ) : (\n                <>Customer: {customer.customerName}</>\n              )}\n            </Button>\n          </>\n        ) : null}\n        {accType === 2 ? (\n          <>\n            <Button\n              onClick={() => setIsUModalOpen(true)}\n              aria-label=\"Notifications\"\n              aria-haspopup=\"true\"\n              className=\"mt-4 mr-2\"\n            >\n              Select Associations\n            </Button>\n          </>\n        ) : null}\n        <Button\n          onClick={() => {\n            if (accType === 0) submitCustomer();\n            else if (accType === 1) sumbitAccount();\n            else submitUnit();\n          }}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4\"\n        >\n          {\" \"}\n          Create {}\n          {(accType === 0 && <> Customer </>) ||\n            (accType === 1 && <>Account</>) ||\n            (accType == 2 && <>Unit</>)}\n        </Button>\n        {/* <hr className=\"my-8\" />\n        <Label className=\"font-bold\">\n          <span>Additional Information</span>\n        </Label>\n      \n        <hr className=\"my-2\" />\n        // ////////////////////////// . INFO\n        <Label>\n          <span>Account</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.account}\n            onChange={handleChange(\"account\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Unit</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.unit}\n            onChange={handleChange(\"unit\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Address</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.address}\n            onChange={handleChange(\"address\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>District</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.district}\n            onChange={handleChange(\"district\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>state</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.state}\n            onChange={handleChange(\"state\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Location Type</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.locationType}\n            onChange={handleChange(\"locationType\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>PIN code</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.pincode}\n            onChange={handleChange(\"pincode\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>GST Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.GSTnumber}\n            onChange={handleChange(\"GSTnumber\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Person</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactPerson}\n            onChange={handleChange(\"contactPerson\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactNo}\n            onChange={handleChange(\"contactNi\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Whatsapp Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.WhatsappNo}\n            onChange={handleChange(\"WhatsappNo\")}\n          />\n        </Label>\n        <Button\n          //   tag={Link}\n          // to=\"/AdminSignUp\"\n          block\n          className=\"mt-4\"\n          onClick={handleSubmit}\n        >\n          Create account\n        </Button>\n        <hr className=\"my-8\" /> */}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <CustomerCreateModal\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setCustomer={setCustomer}\n      />\n      <AddUnitModal\n        isModalOpen={isUModalOpen}\n        setIsModalOpen={setIsUModalOpen}\n        setAccount={setUAccount}\n        account={Uaccount}\n        customer={Ucustomer}\n        setCustomer={setUCustomer}\n      />\n      {/* <PageTitle>Add Customer</PageTitle> */}\n      {addForm()}\n\n      {/* {productPicker()} */}\n      {ReviewSubmit()}\n      {AccCustErr()}\n      {ReqFieldErrModal()}\n    </>\n  );\n}\n\nexport default CreateCustomer;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nexport default function CustomerCreatetModal({\n  isModalOpen,\n  setIsModalOpen,\n  setCustomer,\n}) {\n  const [values, setValues] = useState([]);\n  useEffect(() => {\n    getCustomers();\n  }, []);\n\n  const getCustomers = () => {\n    Axios.post(`${API}/customer/customers`, { search: \"\", role: 1 })\n      .then((users) => {\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        setValues(temp);\n      })\n      .catch((err) => {\n        console.log(\"axiosErr\", err);\n      });\n  };\n\n  const userTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {values.map((user, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-900 \"\n                onClick={() => {\n                  setCustomer({\n                    _id: user._id,\n                    customerName: user.name,\n                  });\n                  setIsModalOpen(false);\n                }}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                {/* <TableCell>\n                    <span className=\"text-sm\">$ {user.email}</span>\n                  </TableCell> */}\n                {/* <TableCell>\n                    <Badge type={user.status}>{user.status}</Badge>\n                  </TableCell> */}\n                {/* <TableCell>\n                  <span className=\"text-sm\">{user.infoId.unit}</span>\n                </TableCell> */}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          {/* <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            /> */}\n        </TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>Modal header</ModalHeader>\n        <ModalBody>{userTable()}</ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Cancel\n          </Button>\n          <Button className=\"w-full sm:w-auto\">Accept</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import Axios from \"axios\";\nimport { API } from \"../backendapi\";\nimport Emp from \"../helpers/auth/EmpProfile\";\n\nexport const unitCreate = (newunit) => {\n  return Axios.post(`${API}/unit/${Emp.getId()}/create`, newunit)\n    .then((unit) => {\n      console.log(\"h\", unit.data);\n      return unit.data;\n    })\n    .catch((error) => {\n      console.log(\"ERRRROs\");\n      if (error.response) {\n        console.log(error.response.data);\n        console.log(error.response.status);\n        throw error.response.data.errors;\n      }\n    });\n};\n"],"sourceRoot":""}