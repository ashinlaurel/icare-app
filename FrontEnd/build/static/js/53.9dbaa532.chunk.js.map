{"version":3,"sources":["pages/Calls/UpdatCall.js"],"names":["UpdateCall","params","useParams","useContext","TopBarContext","setTopHeading","topheading","id","assetid","callid","useState","submitModal","setSubmitModal","sparemodal","setSpareModal","_id","unitName","unit","setUnit","customerName","customer","setCustomer","accountName","account","setAccount","brand","setBrand","model","setModel","serialno","setSerialNo","os","setOs","cpuname","cpusno","cpu","setCpu","ramname","ramsno","ram","setram","hddname","hddsno","hdd","sethdd","smpsname","smpssno","smps","setsmps","fanname","fansno","fan","setfan","motherboardname","motherboardsno","motherboard","setmotherboard","opticaldrivename","opticaldrivesno","opticaldrive","setopticaldrive","kbdname","kbdsno","kbd","setkbd","mousename","mousesno","mouse","setmouse","monitorname","monitorsno","monitor","setmonitor","gcardname","gcardsno","gcard","setgcard","enetcardname","enetcardsno","enetcard","setenetcard","serialcardname","serialcardsno","serialcard","setserialcard","parallelcardname","parallelcardsno","parallelcard","setparallelcard","hbacardname","hbacardsno","sethbacard","raidcontrollername","raidcontrollersno","setraidcontroller","tapecontrollername","tapecontrollersno","settapecontroller","othersname","otherssno","others","setothers","Business","setBusiness","servicelocation","setServiceLocation","POnumber","setPOnumber","setPOdate","setContractFrom","setContractTo","setBillingFrom","setBillingTo","setAMCRate","setGSTAMOUNT","setNetAmount","product","setProduct","activeRowID","setActiveRowID","secondactiveRowID","setSecondactiveRowID","itemtype","setItemtype","selectedItem","setSelectedItem","data","setData","inventdata","setInventData","name","sno","existswap","setExistswap","inventswap","setInventswap","useEffect","location","Date","page","searchtype","searchquery","a","console","log","payload","pages","limit","filters","type","toLowerCase","condition","axios","url","API","Emp","getId","method","response","out","temp","thetype","theitemandsystem","map","item","i","systype","thegetter","getAsset","post","res","asset","producttype","customerId","accountId","business","ponumber","amcrate","moment","podate","format","contractfrom","contractto","billingfrom","billingto","gstamount","netamount","length","keyboard","netcardname","hbacard","raidcontroller","tapecontroller","call","setCall","getCall","handleUpdate","update","callStatus","callAttendDate","startOfService","endOfService","spareUsed","handleSwap","newswap","assetserial","isOpen","setIsOpen","InvTable","items","className","user","key","onClick","layout","callNo","contactPerson","date","employeeName","onChange","e","target","value","problem","class","disabled","selected","xmlns","viewBox","d","aria-label","aria-haspopup","onClose","size","aria-hidden"],"mappings":"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","file":"static/js/53.9dbaa532.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { API } from \"../../backendapi\";\nimport AsyncSelect from \"react-select/async\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Input,\n  HelperText,\n  Label,\n  Select,\n  Textarea,\n  Button,\n  Dropdown,\n  DropdownItem,\n  Badge,\n} from \"@windmill/react-ui\";\n\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport { useParams } from \"react-router-dom\";\nimport { DropdownIcon } from \"../../icons\";\nimport { useMemo } from \"react\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n\nfunction UpdateCall() {\n  // floatbox\n\n  const params = useParams();\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const id = params.assetid;\n  const callid = params.callid;\n  // console.log(id);\n  //modal\n  const [submitModal, setSubmitModal] = useState(false);\n  const [sparemodal, setSpareModal] = useState(false);\n\n  //customer\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n\n  //prodcut\n  const [brand, setBrand] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [serialno, setSerialNo] = useState(\"\");\n  const [os, setOs] = useState(\"\");\n  const [cpu, setCpu] = useState([{ cpuname: \"\", cpusno: \"\" }]);\n  const [ram, setram] = useState([{ ramname: \"\", ramsno: \"\" }]);\n  const [hdd, sethdd] = useState([{ hddname: \"\", hddsno: \"\" }]);\n  const [smps, setsmps] = useState([{ smpsname: \"\", smpssno: \"\" }]);\n  const [fan, setfan] = useState([{ fanname: \"\", fansno: \"\" }]);\n  const [motherboard, setmotherboard] = useState([\n    { motherboardname: \"\", motherboardsno: \"\" },\n  ]);\n  const [opticaldrive, setopticaldrive] = useState([\n    { opticaldrivename: \"\", opticaldrivesno: \"\" },\n  ]);\n  const [kbd, setkbd] = useState([{ kbdname: \"\", kbdsno: \"\" }]);\n  const [mouse, setmouse] = useState([{ mousename: \"\", mousesno: \"\" }]);\n  const [monitor, setmonitor] = useState([{ monitorname: \"\", monitorsno: \"\" }]);\n  const [gcard, setgcard] = useState([{ gcardname: \"\", gcardsno: \"\" }]);\n  const [enetcard, setenetcard] = useState([\n    { enetcardname: \"\", enetcardsno: \"\" },\n  ]);\n  const [serialcard, setserialcard] = useState([\n    { serialcardname: \"\", serialcardsno: \"\" },\n  ]);\n  const [parallelcard, setparallelcard] = useState([\n    { parallelcardname: \"\", parallelcardsno: \"\" },\n  ]);\n  const [hbacard, sethbacard] = useState([{ hbacardname: \"\", hbacardsno: \"\" }]);\n  const [raidcontroller, setraidcontroller] = useState([\n    { raidcontrollername: \"\", raidcontrollersno: \"\" },\n  ]);\n  const [tapecontroller, settapecontroller] = useState([\n    { tapecontrollername: \"\", tapecontrollersno: \"\" },\n  ]);\n  const [others, setothers] = useState([{ othersname: \"\", otherssno: \"\" }]);\n  //asset\n\n  const [Business, setBusiness] = useState(\"\");\n  const [servicelocation, setServiceLocation] = useState(\"\");\n  const [POnumber, setPOnumber] = useState(\"\");\n  const [POdate, setPOdate] = useState(\"\");\n  const [ContractFrom, setContractFrom] = useState(\"\");\n  const [ContractTo, setContractTo] = useState(\"\");\n  const [BillingFrom, setBillingFrom] = useState(\"\");\n  const [BillingTo, setBillingTo] = useState(\"\");\n  const [AMCRate, setAMCRate] = useState(\"\");\n  const [GST, setGST] = useState(\"\");\n  const [GSTAMOUNT, setGSTAMOUNT] = useState(\"\");\n  const [NetAmount, setNetAmount] = useState(\"\");\n\n  //////////////-------------------------------------------->Product name not in asset\n  const [product, setProduct] = useState(\"Server\");\n\n  ////////////---------------- INVENTORY state\n  const [inventory, setInventory] = useState([]);\n\n  //MODAL\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // table variable styles\n\n  const [activeRowID, setActiveRowID] = useState(-1);\n  const [secondactiveRowID, setSecondactiveRowID] = useState(-1);\n\n  // ---------------New States------------\n  const [itemtype, setItemtype] = useState(\"\"); //Full system vs item\n  const [selectedItem, setSelectedItem] = useState(\"\"); //the selected item category\n  const [data, setData] = useState([]); //for first table expansion\n  const [inventdata, setInventData] = useState([]); //for second table expansion\n  const [existswap, setExistswap] = useState([\n    {\n      name: \"Not Selected\",\n      sno: \"Not Selected\",\n    },\n  ]);\n  const [inventswap, setInventswap] = useState([\n    {\n      name: \"Not Selected\",\n      sno: \"Not Selected\",\n    },\n  ]);\n\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Update Call\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  // filterhooks\n  const [type, setType] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [toLocation, setToLocation] = useState(\"\");\n  const [LSTNo, setLSTNo] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [condition, setCondition] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // use effect to add fields to the item coming from asset\n  useEffect(() => {\n    let temp = data;\n    let thetype = selectedItem.toLowerCase();\n    let theitemandsystem = itemtype.toLowerCase();\n\n    temp.map((item, i) => {\n      item.name = item[`${thetype}name`];\n      item.sno = item[`${thetype}sno`];\n      item.type = thetype;\n      item.condition = \"Bad\";\n      item.systype = theitemandsystem;\n    });\n    console.log(temp);\n    setData(temp);\n    return () => {\n      \"Data Updation Done\";\n    };\n  }, [data]);\n\n  // -----use effect to pull new inventory list according to filters\n  useEffect(() => {\n    thegetter();\n  }, [selectedItem]);\n\n  async function thegetter() {\n    console.log(\"getter called\");\n    console.log(selectedItem);\n    let payload = {\n      pages: {\n        page: page,\n        limit: 1000000,\n      },\n      filters: {\n        type: selectedItem.toLowerCase(),\n        location: location,\n        condition: \"Good\",\n        searchtype: searchtype,\n        searchquery: searchquery,\n      },\n    };\n    // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n    try {\n      let response = await axios({\n        url: `${API}/inventory/${Emp.getId()}/getall`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data.out);\n      // setTotalResults(response.data.total);\n      // const { total, data } = response.data;\n      // console.log(data + \"Now\");\n\n      setInventData(response.data.out);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // -----getting inventory items\n\n  const getAsset = async () => {\n    try {\n      let res = await axios.post(`${API}/asset/${Emp.getId()}/getbyid`, {\n        id: id,\n      });\n      console.log(\"asset\", res.data);\n      let asset = res.data;\n      setServiceLocation(asset.servicelocation);\n      setProduct(asset.producttype);\n      setUnit({ _id: id, unitName: asset.unitName });\n      setCustomer({ _id: asset.customerId, customerName: asset.customerName });\n      setAccount({ _id: asset.accountId, accountName: asset.accountName });\n      ////------------------------>>>>>>>>\n      // setProduct(\"Server\");\n      ////////---------ASSET INFO\n      setBusiness(asset.business);\n      setPOnumber(asset.ponumber);\n      setAMCRate(asset.amcrate);\n      // Dates --------------------------\n      setPOdate(moment(asset.podate).format(\"YYYY-MM-DD\"));\n      setContractFrom(moment(asset.contractfrom).format(\"YYYY-MM-DD\"));\n      setContractTo(moment(asset.contractto).format(\"YYYY-MM-DD\"));\n      setBillingFrom(moment(asset.billingfrom).format(\"YYYY-MM-DD\"));\n      setBillingTo(moment(asset.billingto).format(\"YYYY-MM-DD\"));\n      ////////////------------>>>>>>>> misiing field GST(asset.gs)\n      setGSTAMOUNT(asset.gstamount);\n      setNetAmount(asset.netamount);\n      // setProduct(asset);\n      //////////////////////////////\n\n      setBrand(asset.product.brand);\n      setModel(asset.product.model);\n      setSerialNo(asset.product.serialno);\n      setOs(asset.product.os);\n      setCpu(asset.product.cpu);\n      setram(asset.product.ram);\n      if (asset.product.hdd.length == 0) sethdd([{ hddname: \"\", hddsno: \"\" }]);\n      else sethdd(asset.product.hdd);\n      if (asset.product.smps.length == 0)\n        setsmps([{ smpsname: \"\", smpssno: \"\" }]);\n      else setsmps(asset.product.smps);\n      if (asset.product.fan.length == 0) setfan([{ fanname: \"\", fansno: \"\" }]);\n      else setfan(asset.product.fan);\n      if (asset.product.motherboard.length == 0)\n        setmotherboard([{ motherboardname: \"\", motherboardsno: \"\" }]);\n      else setmotherboard(asset.product.motherboard);\n      if (asset.product.opticaldrive.length == 0)\n        setopticaldrive([{ opticaldrivename: \"\", opticaldrivesno: \"\" }]);\n      else setopticaldrive(asset.product.opticaldrive);\n      if (asset.product.keyboard.length == 0)\n        setkbd([{ kbdname: \"\", kbdsno: \"\" }]);\n      else setkbd(asset.product.keyboard);\n      if (asset.product.mouse.length == 0)\n        setmouse([{ mousename: \"\", mousesno: \"\" }]);\n      else setmouse(asset.product.mouse);\n      if (asset.product.monitor.length == 0)\n        setmonitor([{ monitorname: \"\", monitorsno: \"\" }]);\n      else setmonitor(asset.product.monitor);\n      if (asset.product.gcard.length == 0)\n        setgcard([{ gcardname: \"\", gcardsno: \"\" }]);\n      else setgcard(asset.product.gcard);\n      if (asset.product.enetcard.length == 0)\n        setenetcard([{ netcardname: \"\", enetcardsno: \"\" }]);\n      else setenetcard(asset.product.enetcard);\n      if (asset.product.serialcard.length == 0)\n        setserialcard([{ serialcardname: \"\", serialcardsno: \"\" }]);\n      else setserialcard(asset.product.serialcard);\n\n      if (asset.product.parallelcard.length == 0)\n        setparallelcard([{ parallelcardname: \"\", parallelcardsno: \"\" }]);\n      else setparallelcard(asset.product.parallelcard);\n\n      if (asset.product.hbacard.length == 0)\n        sethbacard([{ hbacardname: \"\", hbacardsno: \"\" }]);\n      else sethbacard(asset.product.hbacard);\n\n      if (asset.product.raidcontroller.length == 0)\n        setraidcontroller([{ raidcontrollername: \"\", raidcontrollersno: \"\" }]);\n      else setraidcontroller(asset.product.raidcontroller);\n\n      if (asset.product.tapecontroller.length == 0)\n        settapecontroller([{ tapecontrollername: \"\", tapecontrollersno: \"\" }]);\n      else settapecontroller(asset.product.tapecontroller);\n\n      if (asset.product.others.length == 0)\n        setothers([{ othersname: \"\", otherssno: \"\" }]);\n      else setothers(asset.product.others);\n    } catch (err) {\n      console.log(\"assetFind Error\", err);\n    }\n  };\n\n  ////// CALL\n\n  const [call, setCall] = useState({});\n\n  const getCall = async () => {\n    try {\n      let res = await axios.post(`${API}/call/${Emp.getId()}/getbyid`, {\n        id: callid,\n      });\n      console.log(\"call\", res.data);\n      setCall(res.data);\n    } catch (err) {\n      console.log(\"call Find Error\", err);\n    }\n  };\n\n  useEffect(() => {\n    getAsset();\n    getCall();\n  }, []);\n\n  // ------Modals------\n\n  const UpdatedModal = () => {\n    return (\n      <>\n        <Modal isOpen={submitModal} onClose={() => setSubmitModal(false)}>\n          <ModalHeader>Swap Successfull</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setSubmitModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const SpareRequiredModal = () => {\n    return (\n      <>\n        <Modal isOpen={sparemodal}>\n          <ModalHeader>Spare Usage</ModalHeader>\n          <ModalBody> Was any spare used in this call ?</ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => {\n                setCall({ ...call, spareUsed: \"Yes\" });\n                setSpareModal(false);\n              }}\n            >\n              Yes\n            </Button>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => {\n                setCall({ ...call, spareUsed: \"No\" });\n                setSpareModal(false);\n              }}\n            >\n              No\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  // --------------------  Functions ---------------------------\n  const handleInventory = async () => {\n    let payload = { inventory, assetId: id, product: product };\n    console.log(payload);\n    try {\n      let update = await axios({\n        url: `${API}/inventory/${Emp.getId()}/assetupdate`,\n        method: \"POST\",\n        data: payload,\n      });\n      // setSubmitModal(true);\n      console.log(\"Done\");\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const handleUpdate = async () => {\n    let payload = {\n      id: call._id,\n      update: {\n        callStatus: call.callStatus,\n        callAttendDate: call.callAttendDate,\n        startOfService: call.startOfService,\n        endOfService: call.endOfService,\n        spareUsed: call.spareUsed,\n      },\n    };\n    console.log(payload);\n    try {\n      let response = await axios({\n        url: `${API}/call/${Emp.getId()}/assignEngg`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(\"updated\");\n      // setIsReviewModalOpen(true);\n    } catch (error) {\n      throw error;\n    }\n\n    if (call.spareUsed == \"Yes\") {\n      handleSwap();\n    }\n  };\n\n  const handleSwap = async () => {\n    let payload = {\n      existswap: existswap[0],\n      newswap: inventswap[0],\n      call: call,\n      type: selectedItem.toLowerCase(),\n      servicelocation: servicelocation,\n      assetserial: POnumber,\n    };\n\n    try {\n      let update = await axios({\n        url: `${API}/call/${Emp.getId()}/swapitems`,\n        method: \"POST\",\n        data: payload,\n      });\n\n      console.log(\"Done\");\n      setInventswap([\n        {\n          name: \"Not Selected\",\n          sno: \"Not Selected\",\n        },\n      ]);\n      setExistswap([\n        {\n          name: \"Not Selected\",\n          sno: \"Not Selected\",\n        },\n      ]);\n      getAsset();\n      setSubmitModal(true);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //DROPDOWN------------------------------------------------------------------------------------\n\n  const [isOpen, setIsOpen] = useState(false);\n  function toggleDropdown() {\n    setIsOpen(!isOpen);\n  }\n\n  const AssetBar = () => {\n    return (\n      <div className=\"dark:text-white my-4 \">\n        {/* Row 1  */}\n        {/* <div className=\"text-xl font-semibold\">Asset Information</div> */}\n        {/* Row 1*/}\n        <div className=\"flex space-x-1\">\n          <div className=\"dark:text-gray-200 text-black text-sm flex space-x-2 items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start  w-full my-2 \">\n            <div className=\" \">\n              <span>Call Number: {call.callNo}</span>\n            </div>\n            <div className=\" \">\n              <span>Contact Person: {call.contactPerson}</span>\n            </div>\n            <div className=\" \">\n              <span>Date: {moment(call.date).format(\"DD-MM-YYYY\")}</span>\n            </div>\n          </div>\n\n          <div className=\"dark:text-gray-200 text-black text-sm space-x-1  flex flex-row items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start   w-1/4 my-2 \">\n            <div className=\" font-semibold \">\n              <span>Call Status: </span>\n            </div>\n            <span>\n              {call.callStatus == 0 ? <Badge>Not Allocated</Badge> : null}\n              {call.callStatus == 1 ? (\n                <Badge>Pending for Percall Approval</Badge>\n              ) : null}\n              {call.callStatus == 2 ? (\n                <Badge>Pending for Response</Badge>\n              ) : null}\n              {call.callStatus == 3 ? (\n                <Badge>Pending for OEM Response</Badge>\n              ) : null}\n              {call.callStatus == 4 ? (\n                <Badge>Pending for 2nd Response</Badge>\n              ) : null}\n              {call.callStatus == 5 ? (\n                <Badge>Pending for Customer</Badge>\n              ) : null}\n              {call.callStatus == 6 ? <Badge>Under Observation</Badge> : null}\n              {call.callStatus == 7 ? <Badge>Pending for Others</Badge> : null}\n              {call.callStatus == 8 ? <Badge>Pending for Spare</Badge> : null}\n              {call.callStatus == 9 ? <Badge>Spare in Transit</Badge> : null}\n              {call.callStatus == 10 ? <Badge>Cancelled Calls</Badge> : null}\n              {call.callStatus == 11 ? <Badge>Closed Calls</Badge> : null}\n            </span>\n          </div>\n        </div>\n\n        {/*  Row 2*/}\n\n        <div className=\"flex space-x-1\">\n          <div className=\"dark:text-gray-200 text-black text-sm space-x-2  flex items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start w-full my-2\">\n            <div className=\" \">\n              <span>Brand :{brand}</span>\n            </div>\n            <div className=\" \">\n              <span>Model:{model}</span>\n            </div>\n            <div className=\" \">\n              <span>Serial Number: {serialno}</span>\n            </div>\n\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <div className=\"\">\n                  <span>Operating System :{os}</span>\n                </div>\n              </>\n            ) : null}\n          </div>\n\n          <div className=\"dark:text-gray-200 text-black text-sm  flex flex-row items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start w-1/4 my-2 \">\n            <div className=\" font-semibold \">\n              <span>Engineer:</span> {call.employeeName}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"dark:text-gray-200 text-black flex flex-row  items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start lg:space-x-8  w-full \">\n          {/* Row - 1 */}\n          <div className=\"flex flex-col  text-sm my-1 w-full \">\n            <div>\n              <span className=\"font-semibold w-1/5\">Product Type :</span>{\" \"}\n              {product}\n            </div>\n            <div>\n              <span className=\"font-semibold w-1/5\">Customer : </span>{\" \"}\n              {customer.customerName}\n            </div>\n            <div>\n              <span className=\"font-semibold w-1/5\">Account :</span>{\" \"}\n              {account.accountName}\n            </div>\n            <div>\n              <span className=\"font-semibold w-1/5\">Unit : </span>{\" \"}\n              {unit.unitName}\n            </div>\n            <div>\n              <span className=\"font-semibold w-1/5\">Business : </span>{\" \"}\n              {Business}\n            </div>\n          </div>\n\n          {/*  Row 2 */}\n          <div className=\"flex flex-col  text-sm my-1 w-full \">\n            {kbd[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">KBD Model :</span>{\" \"}\n                {kbd[0].kbdname}\n              </div>\n            ) : null}\n\n            {kbd[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">KBD Serial: </span>{\" \"}\n                {kbd[0] ? kbd[0].kbdsno : \"\"}\n              </div>\n            ) : null}\n            {mouse[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Mouse Model :</span>{\" \"}\n                {mouse[0] ? mouse[0].mousename : \"\"}\n              </div>\n            ) : null}\n            {mouse[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Mouse Serial : </span>{\" \"}\n                {mouse[0] ? mouse[0].mousesno : \"\"}\n              </div>\n            ) : null}\n            {monitor[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Monitor : </span>{\" \"}\n                {monitor[0] ? monitor[0].monitorname : \"\"}\n              </div>\n            ) : null}\n          </div>\n          {/*  Row 3 */}\n          <div className=\" flex flex-col  text-sm my-1 w-full\">\n            {monitor[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">\n                  Monitor Serial :\n                </span>{\" \"}\n                {monitor[0] ? monitor[0].monitorsno : \"\"}\n              </div>\n            ) : null}\n\n            {smps[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">SMPS1 Model :</span>{\" \"}\n                {smps[0] ? smps[0].smpsname : \"\"}\n              </div>\n            ) : null}\n            {smps[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">\n                  SMPS1 Serial :{\" \"}\n                </span>{\" \"}\n                {smps[0] ? smps[0].smpssno : \"\"}\n              </div>\n            ) : null}\n            {motherboard[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">Motherboard: </span>{\" \"}\n                {motherboard[0] ? motherboard[0].motherboardname : \"\"}\n              </div>\n            ) : null}\n\n            {motherboard[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">MBD Serial : </span>\n                {motherboard[0] ? motherboard[0].motherboardsno : \"\"}\n              </div>\n            ) : null}\n          </div>\n          {/* Row 4 */}\n          <div className=\"flex flex-col  text-sm my-1 w-full \">\n            {hdd[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">HDD1 Model:</span>{\" \"}\n                {hdd[0] ? hdd[0].hddname : \"\"}\n              </div>\n            ) : null}\n            {hdd[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">HDD1 Serial :</span>{\" \"}\n                {hdd[0] ? hdd[0].hddsno : \"\"}\n              </div>\n            ) : null}\n\n            {hdd[1] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">HDD2 Model : </span>{\" \"}\n                {hdd[1] ? hdd[1].hddname : \"\"}\n              </div>\n            ) : null}\n\n            {hdd[1] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">HDD2 Serial: </span>{\" \"}\n                {hdd[1] ? hdd[1].hddsno : \"\"}\n              </div>\n            ) : null}\n            {\n              ram[\n                0 ? (\n                  <div>\n                    <span className=\"font-semibold w-1/5\">RAM1 Model : </span>{\" \"}\n                    {ram[0] ? ram[0].ramname : \"\"}\n                  </div>\n                ) : null\n              ]\n            }\n          </div>\n          {/* -----------Row 5---------- */}\n          <div className=\"flex flex-col  text-sm my-1 w-full \">\n            {ram[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">RAM1 Serial:</span>{\" \"}\n                {ram[0] ? ram[0].ramsno : \"\"}\n              </div>\n            ) : null}\n\n            {ram[1] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">RAM2 Model:</span>{\" \"}\n                {ram[1] ? ram[1].ramname : \"\"}\n              </div>\n            ) : null}\n\n            {ram[1] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">RAM2 Serial : </span>{\" \"}\n                {ram[1] ? ram[1].ramsno : \"\"}\n              </div>\n            ) : null}\n            {opticaldrive[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Optical Model: </span>{\" \"}\n                {opticaldrive[0] ? opticaldrive[0].opticaldrivename : \"\"}\n              </div>\n            ) : null}\n\n            {opticaldrive[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Optical Serial : </span>{\" \"}\n                {opticaldrive[0] ? opticaldrive[0].opticaldrivesno : \"\"}\n              </div>\n            ) : null}\n          </div>\n        </div>\n\n        {/* <hr className=\"my-4\" /> */}\n\n        <div className=\"flex space-x-1\">\n          <div className=\"dark:text-gray-200 text-black text-sm flex  flex-wrap items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start  w-full my-2 \">\n            {/* /////////////////////////////// . Engineer INFO  ///////////////////////////////////////////// */}\n            <div className=\" font-semibold\">\n              <span>\n                Engineer:{\" \"}\n                <span className=\"font-normal\">{call.employeeName}</span>\n              </span>\n            </div>\n          </div>\n\n          {call.callStatus == \"11\" ? (\n            <div className=\"dark:text-gray-200 text-black text-sm flex flex-row items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-center   w-full my-2 \">\n              {/* /////////////////////////////// . Spare Status  ///////////////////////////////////////////// */}\n              <div className=\" font-semibold w-1/4\">\n                <span>Spare Used:</span>\n              </div>\n              <Select\n                className=\"inline w-1/2\"\n                onChange={(e) => {\n                  setCall({ ...call, spareUsed: e.target.value });\n                  console.log(call);\n                }}\n                value={call.spareUsed}\n              >\n                <option value=\"Yes\">Yes</option>\n                <option value=\"No\">No</option>\n              </Select>\n            </div>\n          ) : null}\n        </div>\n\n        <div className=\"dark:text-gray-200 text-black text-sm flex flex-col flex-wrap items-start bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start  w-full my-2 \">\n          {/* /////////////////////////////// . Engineer INFO  ///////////////////////////////////////////// */}\n          <div className=\" font-semibold\">\n            <span>\n              Problem Description:{\" \"}\n              <span className=\"font-normal\"> {call.problem}</span>\n            </span>\n          </div>\n        </div>\n\n        {/* //////////////////////////////////////////////////////////////////////////// */}\n      </div>\n    );\n  };\n\n  const InvTable = (items, activeRowID, setActiveRowID, setExistswap) => {\n    return (\n      <div className=\" bg-gray-200 dark:bg-gray-700 p-3\">\n        <div className=\"mb- mt-4\">\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n          <TableContainer className=\"mt-4\">\n            <Table>\n              <TableHeader>\n                <tr>\n                  <TableCell>Type</TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Serial Number</TableCell>\n                  <TableCell>Select</TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {items.map((user, i) => (\n                  <TableRow\n                    className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                      activeRowID == user._id\n                        ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                        : \"white\"\n                    } `}\n                    key={i}\n                    onClick={() => {\n                      // setActiveRowID(user._id);\n                      // console.log(\"the id is \" + user._id);\n                      // setSelectedProd(user);\n                      // setAssetDetails(user);\n                      // console.log(user.product.keyboard[0].kbdname);\n                    }}\n                  >\n                    <TableCell className=\"w-8\">\n                      <div className=\"flex items-center text-sm \">\n                        {/* <Avatar\n                          className=\"hidden ml-2 mr-3 md:block\"\n                          src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                          alt=\"User image\"\n                        /> */}\n                        <div>\n                          <p className=\"font-semibold\">{user.type}</p>\n                          {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                            {user.accountName}\n                          </p> */}\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.name}</span>\n                    </TableCell>\n\n                    <TableCell>\n                      <span className=\"text-sm\">{user.sno}</span>\n                    </TableCell>\n                    <TableCell>\n                      <Button\n                        layout=\"outline\"\n                        className=\"dark:border-green-700 border-green-400\"\n                        onClick={() => {\n                          setExistswap([user]);\n                          setActiveRowID(-1);\n                        }}\n                      >\n                        Select\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n        </div>\n\n        {/* ------------------------------------Bottom Bar---------------------------------- */}\n      </div>\n    );\n  };\n\n  const AssetItemPick = () => {\n    return (\n      <div className=\"my-2\">\n        {/* <div className=\"text-xl dark:text-white\">Swap Items</div> */}\n\n        {/* -----Type Selection---- */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-6 \">\n            <div class=\"relative  \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={itemtype}\n                onChange={(e) => {\n                  setItemtype(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Select Inventory Category\n                </option>\n\n                <option value=\"Full System\" disabled>\n                  Full System\n                </option>\n                <option value=\"Item\">Item</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* ---------------------------Product Drop Down-------------------------------------- */}\n            <div className=\"relative z-40 \">\n              <button\n                onClick={() => {\n                  if (itemtype != \"\") {\n                    setIsOpen(!isOpen);\n                  }\n                }}\n                className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                aria-label=\"Notifications\"\n                aria-haspopup=\"true\"\n              >\n                {selectedItem ? selectedItem : \"Pick Item\"}\n              </button>\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n              <Dropdown isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                {itemtype == \"Full\" ? (\n                  <>\n                    {\" \"}\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Console\");\n                      }}\n                    >\n                      <span>Console</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"DMP\");\n                      }}\n                    >\n                      <span>DMP</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Inkjet\");\n                      }}\n                    >\n                      <span>Inkjet</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"KVM\");\n                      }}\n                    >\n                      <span>KVM</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Laptop\");\n                      }}\n                    >\n                      <span>Laptop</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Laser\");\n                      }}\n                    >\n                      <span>Laser</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"LMP\");\n                      }}\n                    >\n                      <span>LMP</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Module\");\n                      }}\n                    >\n                      <span>Module</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Router\");\n                      }}\n                    >\n                      <span>Router</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Scanner\");\n                      }}\n                    >\n                      <span>Scanner</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Server\");\n                      }}\n                    >\n                      <span>Server</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Desktop\");\n                      }}\n                    >\n                      <span>Desktop</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Storage\");\n                      }}\n                    >\n                      <span>Storage</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Switch\");\n                      }}\n                    >\n                      <span>Switch</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"UPS\");\n                      }}\n                    >\n                      <span>UPS</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Others\");\n                      }}\n                    >\n                      <span>Others</span>\n                    </DropdownItem>\n                  </>\n                ) : (\n                  <>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Mouse\");\n                        // thegetter();\n                        setData(mouse);\n                      }}\n                    >\n                      <span>Mouse</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Kbd\");\n                        setData(kbd);\n                      }}\n                    >\n                      <span>Keyboard</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Monitor\");\n                        setData(monitor);\n                      }}\n                    >\n                      <span>Monitor</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Cpu\");\n                        setData(cpu);\n                      }}\n                    >\n                      <span>Cpu</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Ram\");\n                        setData(ram);\n                      }}\n                    >\n                      <span>Ram</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Fan\");\n                        setData(fan);\n                      }}\n                    >\n                      <span>Fan</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Motherboard\");\n                        setData(motherboard);\n                      }}\n                    >\n                      <span>Motherboard</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"SMPS\");\n                        setData(smps);\n                      }}\n                    >\n                      <span>SMPS</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"HDD\");\n                        setData(hdd);\n                      }}\n                    >\n                      <span>HDD</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Gcard\");\n                        setData(gcard);\n                      }}\n                    >\n                      <span>Gcard</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"EnetCard\");\n                        setData(enetcard);\n                      }}\n                    >\n                      <span>Enet Card</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"SerialCard\");\n                        setData(serialcard);\n                      }}\n                    >\n                      <span>Serial Card</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"ParalellCard\");\n                        setData(parallelcard);\n                      }}\n                    >\n                      <span>Paralell Card</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"OpticalDrive\");\n                        setData(opticaldrive);\n                      }}\n                    >\n                      <span>Optical Drive</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Others\");\n                        setData(others);\n                      }}\n                    >\n                      <span>Others</span>\n                    </DropdownItem>\n                  </>\n                )}\n              </Dropdown>\n            </div>\n            {/* <Button\n              layout=\"outline\"\n              className=\"dark:border-green-700 border-green-400\"\n              onClick={() => {\n                console.log(\"Swap\");\n                handleSwap();\n              }}\n            >\n              Swap\n            </Button> */}\n          </div>\n        </div>\n\n        {/* Selection Modules */}\n        <div className=\"flex flex-row items-start space-x-2\">\n          {/* -------Existing Item Table ----------*/}\n\n          <TableContainer className=\"mt-4\">\n            <Table>\n              <TableHeader>\n                <tr className=\"flex flex-row justify-between\">\n                  <TableCell>Type</TableCell>\n                  <TableCell>Model</TableCell>\n                  <TableCell>Serial Number</TableCell>\n\n                  <TableCell>\n                    <span\n                      className=\"cursor-pointer\"\n                      // onClick={() => setActiveRowID(-1)}\n                    >\n                      Items\n                    </span>\n                  </TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {existswap.map((user, i) => (\n                  <div className=\"flex flex-col justify-around\">\n                    <TableRow\n                      className={`hover:shadow-lg dark:hover:bg-gray-600 flex flex-row justify-between  ${\n                        activeRowID == user._id\n                          ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                          : \"white\"\n                      } `}\n                      key={i}\n                      onClick={() => {\n                        // setActiveRowID(i);\n                      }}\n                    >\n                      <TableCell className=\"w-8\">\n                        <div className=\"flex items-center text-sm \">\n                          <div>\n                            <p className=\"font-semibold\">{selectedItem}</p>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <span className=\"text-sm\">{user.name}</span>\n                      </TableCell>\n\n                      <TableCell>\n                        <span className=\"text-sm\">{user.sno}</span>\n                      </TableCell>\n\n                      <TableCell className=\"text-center \">\n                        <Button\n                          // layout=\"link\"\n                          size=\"icon\"\n                          aria-label=\"DropDown\"\n                          onClick={() => {\n                            console.log(activeRowID);\n                            if (activeRowID != -1) {\n                              setActiveRowID(-1);\n                            } else {\n                              setActiveRowID(i);\n                            }\n                            // setActiveRowID(-1);\n                          }}\n                          className=\"rounded-lg m-1\"\n                        >\n                          <DropdownIcon\n                            className=\"w-5 h-5\"\n                            aria-hidden=\"true\"\n                          />\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n\n                    {activeRowID == i\n                      ? InvTable(\n                          data,\n                          activeRowID,\n                          setActiveRowID,\n                          setExistswap\n                        )\n                      : null}\n                  </div>\n                ))}\n              </TableBody>\n            </Table>\n            {/* <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter> */}\n          </TableContainer>\n\n          {/*----------- Inventory Selection Table ----------- */}\n\n          <TableContainer className=\"mt-4\">\n            <Table>\n              <TableHeader>\n                <tr className=\"flex flex-row justify-between\">\n                  <TableCell>Type</TableCell>\n                  <TableCell>Model</TableCell>\n                  <TableCell>Serial Number</TableCell>\n\n                  <TableCell>\n                    <span\n                      className=\"cursor-pointer\"\n                      // onClick={() => setActiveRowID(-1)}\n                    >\n                      Items\n                    </span>\n                  </TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {inventswap.map((user, i) => (\n                  <div className=\"flex flex-col justify-around\">\n                    <TableRow\n                      className={`hover:shadow-lg dark:hover:bg-gray-600 flex flex-row justify-between  ${\n                        secondactiveRowID == user._id\n                          ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                          : \"white\"\n                      } `}\n                      key={i}\n                      onClick={() => {\n                        // setActiveRowID(i);\n                      }}\n                    >\n                      <TableCell className=\"w-8\">\n                        <div className=\"flex items-center text-sm \">\n                          <div>\n                            <p className=\"font-semibold\">{selectedItem}</p>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <span className=\"text-sm\">{user.name}</span>\n                      </TableCell>\n\n                      <TableCell>\n                        <span className=\"text-sm\">{user.sno}</span>\n                      </TableCell>\n\n                      <TableCell className=\"text-center \">\n                        <Button\n                          // layout=\"link\"\n                          size=\"icon\"\n                          aria-label=\"DropDown\"\n                          onClick={() => {\n                            if (secondactiveRowID != -1) {\n                              setSecondactiveRowID(-1);\n                            } else {\n                              setSecondactiveRowID(i);\n                            }\n                            // setActiveRowID(-1);\n                          }}\n                          className=\"rounded-lg m-1\"\n                        >\n                          <DropdownIcon\n                            className=\"w-5 h-5\"\n                            aria-hidden=\"true\"\n                          />\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n\n                    {secondactiveRowID == i\n                      ? InvTable(\n                          inventdata,\n                          secondactiveRowID,\n                          setSecondactiveRowID,\n                          setInventswap\n                        )\n                      : null}\n                  </div>\n                ))}\n              </TableBody>\n            </Table>\n            {/* <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter> */}\n          </TableContainer>\n        </div>\n      </div>\n    );\n  };\n\n  const CallUpdater = () => {\n    return (\n      <div className=\"flex-row flex  space-x-3 border-b pb-3\">\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Call Attended Date</span>\n            <Input\n              className=\"\"\n              type=\"date\"\n              value={call.callAttendDate}\n              onChange={(e) => {\n                setCall({ ...call, callAttendDate: e.target.value });\n              }}\n            />\n          </Label>\n        </div>\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Start Of Service</span>\n            <Input\n              className=\"\"\n              type=\"time\"\n              value={call.startOfService}\n              onChange={(e) => {\n                setCall({ ...call, startOfService: e.target.value });\n              }}\n            />\n          </Label>\n        </div>\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>End Of Service</span>\n            <Input\n              className=\"\"\n              type=\"time\"\n              value={call.endOfService}\n              onChange={(e) => {\n                setCall({ ...call, endOfService: e.target.value });\n              }}\n            />\n          </Label>\n        </div>\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Status Update</span>\n            <Select\n              className=\"inline\"\n              onChange={(e) => {\n                setCall({ ...call, callStatus: e.target.value });\n                console.log(call);\n                if (e.target.value == \"11\") {\n                  setSpareModal(true);\n                }\n              }}\n              value={call.callStatus}\n            >\n              <option value=\"0\">Not Allocated</option>\n              <option value=\"1\">Pending for Percall Approval</option>\n              <option value=\"2\"> Pending for Response</option>\n              <option value=\"3\"> Pending for OEM Response</option>\n              <option value=\"4\"> Pending for 2nd Response</option>\n              <option value=\"5\"> Pending for Customer</option>\n              <option value=\"6\"> Under Observation</option>\n              <option value=\"7\"> Pending for Others</option>\n              <option value=\"8\"> Pending for Spare</option>\n              <option value=\"9\"> Spare in Transit</option>\n              <option value=\"10\"> Cancelled Calls</option>\n              <option value=\"11\"> Closed Calls</option>\n            </Select>\n          </Label>\n        </div>\n        <div className=\"flex flex-col w-1/2 mt-5\">\n          <Button\n            onClick={() => {\n              handleUpdate();\n            }}\n            layout=\"outline\"\n          >\n            Update\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {AssetBar()}\n      {CallUpdater()}\n\n      {call.spareUsed == \"Yes\" ? AssetItemPick() : null}\n      {UpdatedModal()}\n      {SpareRequiredModal()}\n    </>\n  );\n}\n\nexport default UpdateCall;\n"],"sourceRoot":""}