{"version":3,"sources":["components/Modal/CustomerCreateModal.js","pages/Employee/CreateEmployee.js","helpers/unitHelper.js","components/Modal/AddUnitModal.js"],"names":["CustomerCreatetModal","isModalOpen","setIsModalOpen","setCustomer","useState","values","setValues","useEffect","getCustomers","Axios","post","API","search","role","then","users","console","log","data","temp","map","user","push","catch","err","isOpen","onClose","i","key","className","onClick","_id","customerName","name","layout","CreateEmployee","useHistory","accType","setAccType","sex","setSex","dob","setDob","location","setLocation","isReviewModalOpen","setIsReviewModalOpen","isReqFieldModal","setIsReqFieldModal","setTopHeading","useContext","TopBarContext","employeeID","email","password","confpassword","employeeName","address","district","state","pincode","contactPerson","contactNo","contactNoLand","contactPersonOcc","altContact","WhatsappNo","enc_password","setErr","handleChange","e","target","value","submitCustomer","a","newuser","whatsappNo","signup","Emp","getId","username","type","onChange","valid","parseInt","placeholder","length","aria-label","aria-haspopup","addForm","unitCreate","newunit","unit","error","response","status","errors","AddUnitModal","account","setAccount","customer","customers","setCustomers","accounts","setAccounts","tabIndex","setTabIndex","pickCustomer","customerId","accs","pickAccount","accountName","selectedIndex","onSelect","ind"],"mappings":"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","file":"static/js/19.7ca8641f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nexport default function CustomerCreatetModal({\n  isModalOpen,\n  setIsModalOpen,\n  setCustomer,\n}) {\n  const [values, setValues] = useState([]);\n  useEffect(() => {\n    getCustomers();\n  }, []);\n\n  const getCustomers = () => {\n    Axios.post(`${API}/customer/customers`, { search: \"\", role: 1 })\n      .then((users) => {\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        setValues(temp);\n      })\n      .catch((err) => {\n        console.log(\"axiosErr\", err);\n      });\n  };\n\n  const userTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {values.map((user, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-900 \"\n                onClick={() => {\n                  setCustomer({\n                    _id: user._id,\n                    customerName: user.name,\n                  });\n                  setIsModalOpen(false);\n                }}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                {/* <TableCell>\n                    <span className=\"text-sm\">$ {user.email}</span>\n                  </TableCell> */}\n                {/* <TableCell>\n                    <Badge type={user.status}>{user.status}</Badge>\n                  </TableCell> */}\n                {/* <TableCell>\n                  <span className=\"text-sm\">{user.infoId.unit}</span>\n                </TableCell> */}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          {/* <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            /> */}\n        </TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>Modal header</ModalHeader>\n        <ModalBody>{userTable()}</ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Cancel\n          </Button>\n          <Button className=\"w-full sm:w-auto\">Accept</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\n\nimport { signup, signin, authenticate } from \"../../helpers/auth\";\nimport CustomerCreateModal from \"../../components/Modal/CustomerCreateModal\";\nimport EmpProfile from \"../../helpers/auth/EmpProfile\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport { resetIdCounter } from \"react-tabs\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport { unitCreate } from \"../../helpers/unitHelper\";\nimport AddUnitModal from \"../../components/Modal/AddUnitModal\";\nimport { useHistory } from \"react-router-dom\";\n/////////////----------------->>>>>> bug <<<<<------------customerList refresh--------------------------\n\nfunction CreateEmployee() {\n  let history = useHistory();\n  // dropdown states\n  const [accType, setAccType] = useState(0); /////// 0-Customer 1-Account 2-Unit\n  const [sex, setSex] = useState(\"Male\");\n  const [dob, setDob] = useState(\"\");\n  const [location, setLocation] = useState(\"All\");\n\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [isErrModalOpen, setIsErrModalOpen] = useState(false);\n  const [isReqFieldModal, setIsReqFieldModal] = useState(false);\n  const { setTopHeading } = useContext(TopBarContext);\n\n  const [values, setValues] = useState({\n    //both\n\n    employeeID: \"\",\n    email: \"\",\n    password: \"\",\n    confpassword: \"\",\n    employeeName: \"\",\n    address: \"\",\n    district: \"Trivandrum\",\n    state: \"Kerala\",\n    pincode: \"\",\n    contactPerson: \"\",\n    contactNo: \"\",\n    contactNoLand: \"\",\n    contactPersonOcc: \"\",\n    altContact: \"\",\n    WhatsappNo: \"\",\n\n    // ---new ones\n  });\n\n  const [err, setErr] = useState({\n    email: \"\",\n    name: \"\",\n    // accountName: \"\",\n    enc_password: \"\",\n    confpassword: \"\",\n  });\n\n  // ----------------------Heading Use Effect-------------\n\n  useEffect(() => {\n    setTopHeading(\"Add Employee\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const handleConfPassChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n    if (values.password !== e.target.value) {\n      setErr({ ...err, confpassword: \"Confirm password does not match\" });\n    } else setErr({ ...err, confpassword: \"\" });\n  };\n\n  const submitCustomer = async () => {\n    if (values.password !== values.confpassword) {\n      setErr({ ...err, confpassword: \"Confirm password does not match\" });\n      return;\n    }\n    if (\n      (values.employeeID === \"\") |\n      (values.employeeName === \"\") |\n      (values.email === \"\") |\n      (values.password === \"\") |\n      (values.confpassword === \"\")\n    ) {\n      setIsReqFieldModal(true);\n      return;\n    }\n    // e.preventDefault();\n    const newuser = {\n      employeeID: values.employeeID,\n      employeeName: values.employeeName,\n      email: values.email,\n      password: values.password,\n      role: accType,\n      address: values.address,\n      district: values.district,\n      state: values.state,\n      pincode: values.pincode,\n      contactPerson: values.contactPerson,\n      contactNo: values.contactNo,\n      contactNoLand: values.contactNoLand,\n      contactPersonOcc: values.contactPersonOcc,\n      whatsappNo: values.WhatsappNo,\n      sex: sex,\n      \n      dob: dob,\n      location: location,\n    };\n    console.log(newuser);\n    signup(newuser, `admin/${Emp.getId()}/signup`)\n      .then((data) => {\n        console.log(\"Signed Up\", data._id);\n        setIsReviewModalOpen(true);\n        setErr({\n          employeeID: \"\",\n          username: \"\",\n          email: \"\",\n          customerName: \"\",\n          enc_password: \"\",\n          confpassword: \"\",\n        });\n        setValues({\n          //both\n      \n          employeeID: \"\",\n          email: \"\",\n          password: \"\",\n          confpassword: \"\",\n          employeeName: \"\",\n          address: \"\",\n          district: \"Trivandrum\",\n          state: \"Kerala\",\n          pincode: \"\",\n          contactPerson: \"\",\n          contactNo: \"\",\n          contactNoLand: \"\",\n          contactPersonOcc: \"\",\n          altContact: \"\",\n          WhatsappNo: \"\",\n      \n          // ---new ones\n        });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        setErr({ ...err });\n      });\n  };\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>\n            {accType === 0 ? <>Admin </> : null}\n            {accType === 11 ? <>Engineer </> : null}\n            {accType === 12 ? <>Assistant </> : null}\n            Created Successfully!\n          </ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              // onClick={() => setIsReviewModalOpen(false)}\n              onClick={() => setIsReviewModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const ReqFieldErrModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReqFieldModal}\n          onClose={() => setIsReqFieldModal(false)}\n        >\n          <ModalHeader>Required fields are not filled!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReqFieldModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //ASSET\n  const addForm = () => {\n    return (\n      <div className=\"px-4 py-3 mt-4 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Add Employee</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n        {/* -----Row 0 --------- */}\n        <div className=\"flex-row flex  space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Employee ID*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.employeeID}\n                onChange={handleChange(\"employeeID\")}\n              />\n            </Label>\n            <HelperText valid={false}>{err.employeeID}</HelperText>\n          </div>\n        </div>\n        {/* ------------------------Row 1-------------------------- */}\n        <div className=\"flex-row flex  space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Select Account Type*</span>\n              <Select\n                className=\"mt-1\"\n                onChange={(e) => {\n                  setAccType(parseInt(e.target.value));\n                }}\n              >\n                <option value=\"0\">Admin</option>\n                <option value=\"11\">Engineer</option>\n                <option value=\"12\">Assistant</option>\n                <option value=\"13\">Store Keeper</option>\n                <option value=\"14\">Coordinator</option>\n                <option value=\"15\">Accounts</option>\n              </Select>\n            </Label>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Location</span>\n              <Select\n                className=\"mt-1\"\n                onChange={(e) => {\n                  setLocation(e.target.value);\n                }}\n              >\n                <option value=\"All\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </Select>\n            </Label>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Employee Name*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.employeeName}\n                onChange={handleChange(\"employeeName\")}\n              />\n            </Label>\n            <HelperText valid={false}>{err.employeeName}</HelperText>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full \">\n              <span>Email*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"email\"\n                placeholder=\"\"\n                value={values.email}\n                onChange={handleChange(\"email\")}\n              />\n            </Label>\n            <HelperText valid={false}>{err.email}</HelperText>\n          </div>\n        </div>\n        {/* ----------------------Row 2 ----------------------------- */}\n        <div className=\"flex-row flex space-x-3 \">\n          <Label className=\"w-full mt-4\">\n            <span>Password*</span>\n            <Input\n              className=\"mt-1\"\n              placeholder=\"\"\n              type=\"password\"\n              value={values.password}\n              onChange={handleChange(\"password\")}\n            />\n          </Label>\n          <HelperText valid={false}>{err.enc_password}</HelperText>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full mt-4\">\n              <span>Confirm password*</span>\n\n              <Input\n                className=\"mt-1\"\n                type=\"password\"\n                value={values.confpassword}\n                onChange={handleConfPassChange(\"confpassword\")}\n              />\n            </Label>\n\n            <HelperText valid={false}>{err.confpassword}</HelperText>\n          </div>\n        </div>\n        {/* ///////////////////////////////////////////////////////// */}\n        <Label className=\"font-bold mt-5 mb-2\">\n          <span>Additional Information</span>\n        </Label>\n        <hr />\n        {/* -------Row - 3 ---------------------- */}\n        <div className=\"flex-row flex space-x-3 mt-3 mb-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Sex</span>\n              <Select\n                className=\"mt-1\"\n                onChange={(e) => {\n                  setSex(e.target.value);\n                }}\n              >\n                <option value=\"Male\">Male</option>\n                <option value=\"Female\">Female</option>\n                <option value=\"Other\">Other</option>\n              </Select>\n            </Label>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Contact Number(Mobile)</span>\n              <Input\n                className=\"mt-1\"\n                value={values.contactNo}\n                onChange={handleChange(\"contactNo\")}\n              />\n            </Label>{\" \"}\n            {values.contactNo.length != 10 && values.contactNo != 0 ? (\n              <>\n                <HelperText valid={false}>\n                  Phone number shound be 10 digits\n                </HelperText>\n              </>\n            ) : null}\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Contact Number(Landline)</span>\n              <Input\n                className=\"mt-1\"\n                value={values.contactNoLand}\n                onChange={handleChange(\"contactNoLand\")}\n              />\n            </Label>{\" \"}\n            {/* {values.contactNoLand.length != 10 && values.contactNoLand != 0 ? (\n              <>\n                <HelperText valid={false}>\n                  Phone number shound be 10 digits\n                </HelperText>\n              </>\n            ) : null} */}\n          </div>\n          {/* <HelperText valid={false}>{digiterr.contactNo}</HelperText> */}\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Whatsapp Number</span>\n              <Input\n                className=\"mt-1\"\n                value={values.WhatsappNo}\n                onChange={handleChange(\"WhatsappNo\")}\n              />\n            </Label>\n            {values.WhatsappNo.length != 10 && values.WhatsappNo != 0 ? (\n              <>\n                <HelperText valid={false}>\n                  Phone number shound be 10 digits\n                </HelperText>\n              </>\n            ) : null}\n          </div>\n        </div>\n        {/* ---------------Row 4 ---------------- */}\n        <div className=\"flex-row flex space-x-3 mt-3 mb-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>DOB</span>\n              <Input\n                className=\"mt-1\"\n                type=\"date\"\n                name=\"brand\"\n                value={dob}\n                onChange={(e) => {\n                  setDob(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          \n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Father/Husband Name</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.contactPerson}\n                onChange={handleChange(\"contactPerson\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Father/Husband's Occupation</span>\n              <Input\n                className=\"mt-1\"\n                value={values.contactPersonOcc}\n                onChange={handleChange(\"contactPersonOcc\")}\n              />\n            </Label>{\" \"}\n          </div>\n          {/* <HelperText valid={false}>{digiterr.contactNo}</HelperText> */}\n        </div>\n        {/* -----------------------Row-5 ------------- */}\n        <Label className=\"my-2\">\n          <span>Address</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.address}\n            onChange={handleChange(\"address\")}\n          />\n        </Label>{\" \"}\n        {/* ---------------Row - 6 ---------------------- */}\n        <div className=\"flex-row flex space-x-3 my-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>District</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.district}\n                onChange={handleChange(\"district\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>State</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.state}\n                onChange={handleChange(\"state\")}\n              />\n            </Label>{\" \"}\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>PIN code</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.pincode}\n                onChange={handleChange(\"pincode\")}\n              />\n            </Label>{\" \"}\n            {values.pincode.length != 6 && values.pincode != 0 ? (\n              <>\n                <HelperText valid={false}>PIN shound be 6 digits</HelperText>\n              </>\n            ) : null}\n          </div>\n        </div>\n        {/* ///////////////////////////////////////////////////////// */}\n        <Button\n          onClick={submitCustomer}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4\"\n        >\n          Add Employee\n        </Button>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {/* <PageTitle>Add Customer</PageTitle> */}\n      {addForm()}\n\n      {/* {productPicker()} */}\n      {ReviewSubmit()}\n\n      {ReqFieldErrModal()}\n    </>\n  );\n}\n\nexport default CreateEmployee;\n","import Axios from \"axios\";\nimport { API } from \"../backendapi\";\nimport Emp from \"../helpers/auth/EmpProfile\";\n\nexport const unitCreate = (newunit) => {\n  return Axios.post(`${API}/unit/${Emp.getId()}/create`, newunit)\n    .then((unit) => {\n      console.log(\"h\", unit.data);\n      return unit.data;\n    })\n    .catch((error) => {\n      console.log(\"ERRRROs\");\n      if (error.response) {\n        console.log(error.response.data);\n        console.log(error.response.status);\n        throw error.response.data.errors;\n      }\n    });\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../backendapi\";\n\nexport default function AddUnitModal({\n  isModalOpen,\n  setIsModalOpen,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  useEffect(() => {\n    Axios.post(`${API}/customer/customers`, { search: \"\", role: 1 })\n      .then((users) => {\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        setCustomers(temp);\n      })\n      .catch((err) => {\n        console.log(\"axiosErr\", err);\n      });\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select {tabIndex == 0 ? <>Customer</> : <>Account</>}\n        </ModalHeader>\n        <ModalBody>\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n          </Tabs>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}