{"version":3,"sources":["components/Modal/AssetFilters/CustomerSelection.js","pages/LST/LSTHistory.js","../../src/FileSaver.js"],"names":["CustomerSelection","isModalOpen","setIsModalOpen","unit","setUnit","account","setAccount","customer","setCustomer","refresh","setRefresh","theunitdetails","setTheUnitDetails","useState","customers","setCustomers","accounts","setAccounts","units","setUnits","tabIndex","setTabIndex","search","setSearch","handleChange","e","target","value","handleSubmit","a","preventDefault","payload","role","axios","url","API","method","data","response","console","log","useEffect","pickCustomer","_id","customerName","name","accountName","unitName","Axios","post","customerId","accs","pickAccount","accountId","u","pickUnit","contactPerson","contactNo","isOpen","onClose","selectedIndex","onSelect","ind","onSubmit","className","placeholder","onChange","map","i","key","onClick","type","LSTHistory","activerowid","setActiveRowId","isDeleteModalOpen","setIsDeleteModalOpen","deleteId","setDeleteId","deleteNum","setDeleteNum","isDownloadModalOpen","setisDownloadModalOpen","downloadLST","setDownloadLST","downloadNum","setDownloadNum","useContext","TopBarContext","setTopHeading","topheading","page","setPage","CMRRItems","setData","status","setstatus","location","setLocation","ToLocation","setToLocation","condition","LSTtype","setLSTtype","selectedprod","searchquery","setSearchQuery","totalResults","setTotalResults","activeRowID","setActiveRowID","pages","limit","filters","from","to","Emp","getId","out","total","createAndDownloadPdf","id","LSTno","CourierNumber","DocketType","update","responseType","pdfBlob","Blob","saveAs","invs","invItems","item","temp","filter","x","class","LSTNo","disabled","selected","xmlns","viewBox","d","EmpProfile","getRole","user","vendorId","vendorName","moment","date","format","length","layout","aria-label","size","aria-hidden","items","Customer","sno","invnumber","InvTable","resultsPerPage","label","p","MouseEvent","document","window","self","global","test","navigator","HTMLAnchorElement","b","setTimeout","f","autoBom","open","module"],"mappings":"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","file":"static/js/29.8147bd49.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../../backendapi\";\n\nexport default function CustomerSelection({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n  refresh,\n  setRefresh,\n  theunitdetails,\n  setTheUnitDetails,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      //   setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      //   setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(\"-------------piking unit\");\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      contactPerson: unit.contactPerson,\n      contactNo: unit.contactNo,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody>\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              setRefresh(!refresh);\n              if (theunitdetails) {\n                setTheUnitDetails(unit);\n              }\n              setAccounts([]);\n              setUnits([]);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport { EditIcon, TrashIcon, DropdownIcon } from \"../../icons\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  Button,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport { API } from \"../../backendapi\";\nimport CustomerSelection from \"../../components/Modal/AssetFilters/CustomerSelection\";\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\nimport { Link } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport EmpProfile from \"../../helpers/auth/EmpProfile\";\n\n// import PrintLST from \"./PrintLST\";\n\nfunction LSTHistory() {\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [deleteId, setDeleteId] = useState(0);\n  const [deleteNum, setDeleteNum] = useState(-1);\n\n  const [isDownloadModalOpen, setisDownloadModalOpen] = useState(false)\n  const [downloadLST, setDownloadLST] = useState({});\n  const [downloadNum, setDownloadNum] = useState(0);\n\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const [floatbox, setFloatBox] = useState(false);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([{CMRRItems:[]}]);\n  // dropdown and modals\n\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [status, setstatus] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [ToLocation, setToLocation] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n  const [LSTtype, setLSTtype] = useState(\"Normal\");\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  const [activeRowID, setActiveRowID] = useState(-1);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"LST History\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          // type: type,\n          from: location,\n          to: ToLocation,\n          status: status,\n          LSTtype:LSTtype,\n          // searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/lst/${Emp.getId()}/getall`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, location, ToLocation, condition, status, refresh,LSTtype]);\n\n  console.log(selectedprod);\n  // DElete Modal\n\n  const DeleteModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isDeleteModalOpen}\n          onClose={() => setIsDeleteModalOpen(false)}\n        >\n          <ModalHeader>Are you sure you want to delete!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                let invs = data[deleteNum].invItems;\n                console.log(invs);\n                invs.map(async (item) => {\n                  const payload = {\n                    id: item._id,\n                    update: {\n                      location: data[deleteNum].from,\n                    },\n                  };\n                  console.log(\"PAYLOAD\", payload);\n                  try {\n                    await axios({\n                      url: `${API}/inventory/${Emp.getId()}/invupdate`,\n                      method: \"POST\",\n                      data: payload,\n                    });\n                    // setIsReviewModalOpen(true);\n                    console.log(\"Done\");\n                  } catch (error) {\n                    console.log(error);\n                    throw error;\n                  }\n                });\n                try {\n                  let response = await axios({\n                    url: `${API}/lst/${Emp.getId()}/delete`,\n                    method: \"POST\",\n                    data: { id: deleteId },\n                  });\n                  console.log(response.data);\n                  let temp = data.filter((x) => x._id != deleteId);\n                  setData(temp);\n                  setIsDeleteModalOpen(false);\n\n                  // setData(response.data);\n                } catch (error) {\n                  throw error;\n                }\n              }}\n            >\n              Confirm Delete\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const DownloadModal = () => {\n    console.log(downloadLST);\n    return (\n      <>\n        <Modal\n          isOpen={isDownloadModalOpen}\n          onClose={() => setisDownloadModalOpen(false)}\n        >\n          <ModalHeader>Download LST</ModalHeader>\n          <ModalBody>\n\n\n        {data[downloadNum]?(<>\n       <div className=\"flex flex-row\">\n        <div className=\" my-2 ml-5 mr-2 w-full\">Docket Type:</div>\n                <input\n                  value={data[downloadNum].DocketType}\n                  onChange={(e) =>{\n                    let temp = [...data];\n                    temp[downloadNum].DocketType=e.target.value\n                    // console.log( temp[downloadNum].DocketType)\n                    setData(temp);\n                  } }\n                  \n                  class=\"w-full mr-5 shadow-md z-20 appearance-none rounded border border-gray-400 border-b block py-1  bg-white text-sm  text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n            </div>\n\n            <div className=\"flex flex-row my-2\">\n        <div className=\"my-2 ml-5 mr-2 w-full\">Courier Number:</div>\n                <input\n                  value={data[downloadNum].CourierNumber}\n                  onChange={(e) =>{\n                    let temp = [...data];\n                    temp[downloadNum].CourierNumber=e.target.value\n                    // console.log( temp[downloadNum].CourierNumber)\n                    setData(temp);\n                  } }\n                  \n                  class=\"w-full mr-5  shadow-md z-20 appearance-none rounded border border-gray-400 border-b block py-1  bg-white text-sm  text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n            </div>\n            </>):null}\n\n\n\n\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                          createAndDownloadPdf(data[downloadNum]._id, data[downloadNum].LSTNo,data[downloadNum].CourierNumber,data[downloadNum].DocketType);\n                        }}\n            >\n              Download\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  // PDF Download Functions\n\n  const createAndDownloadPdf = async (id, LSTno,CourierNumber,DocketType) => {\n    let payload = {\n      id: id,\n      update: {\n        CourierNumber,\n        DocketType\n      }\n    };\n    let response = await axios({\n      url: `${API}/lst/${Emp.getId()}/downloadpdf`,\n      method: \"POST\",\n      data: payload,\n      responseType: \"blob\",\n    });\n\n    const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\n    setisDownloadModalOpen(false);\n    saveAs(pdfBlob, `LST_${LSTno}.pdf`);\n  };\n\n  const InvTable = (items,Customer, LSTtype, CMRRItems) => {\n    return (\n      <div className=\" bg-gray-200 dark:bg-gray-700 p-3\">\n     {(LSTtype == \"Customer\") ?(<div>Customer:{Customer}</div>):null}\n        <div className=\"mb- mt-4\">\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n          <TableContainer className=\"mt-4\">\n            <Table>\n              <TableHeader>\n                <tr>\n                  <TableCell>Type</TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Serial Number</TableCell>\n                  <TableCell>Location</TableCell>\n                  <TableCell>Inv Number</TableCell>\n                  <TableCell>Condition</TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {(LSTtype == \"Normal\"||LSTtype == \"Customer\") ? (\n                  <>\n                    {items.map((user, i) => (\n                      <TableRow\n                        className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                          activerowid == user._id\n                            ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                            : \"white\"\n                        } `}\n                        key={i}\n                        onClick={() => {\n                          setActiveRowId(user._id);\n                          // console.log(\"the id is \" + user._id);\n                          // setSelectedProd(user);\n                          // setAssetDetails(user);\n                          // console.log(user.product.keyboard[0].keyboardname);\n                        }}\n                      >\n                        <TableCell className=\"w-8\">\n                          <div className=\"flex items-center text-sm \">\n                            {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                            <div>\n                              <p className=\"font-semibold\">{user.type}</p>\n                              {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p> */}\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.name}</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">{user.sno}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.location}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.invnumber}</span>\n                        </TableCell>\n                        <TableCell>\n                          <Badge\n                            type={\n                              user.condition == \"Good\" ? \"primary\" : \"danger\"\n                            }\n                          >\n                            {user.condition}\n                          </Badge>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </>\n                ) : (\n                  <>\n                    {CMRRItems.map((user, i) => (\n                      <TableRow\n                        className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                          activerowid == user._id\n                            ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                            : \"white\"\n                        } `}\n                        key={i}\n                        onClick={() => {\n                          setActiveRowId(user._id);\n                          // console.log(\"the id is \" + user._id);\n                          // setSelectedProd(user);\n                          // setAssetDetails(user);\n                          // console.log(user.product.keyboard[0].keyboardname);\n                        }}\n                      >\n                        <TableCell className=\"w-8\">\n                          <div className=\"flex items-center text-sm \">\n                            {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                            <div>\n                              <p className=\"font-semibold\">{user.type}</p>\n                              {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p> */}\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.name}</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">{user.sno}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.location}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.invnumber}</span>\n                        </TableCell>\n                        <TableCell>\n                          <Badge\n                            type={\n                              user.condition == \"Good\" ? \"primary\" : \"danger\"\n                            }\n                          >\n                            {user.condition}\n                          </Badge>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n        </div>\n\n        {/* ------------------------------------Bottom Bar---------------------------------- */}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {DeleteModal()}{DownloadModal()}\n      <div className=\"mb-64 mt-4\">\n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-2 \">\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={status}\n                onChange={(e) => {\n                  setstatus(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Status\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"In Transit\">In Transit</option>\n                <option value=\"Received\">Received</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={LSTtype}\n                onChange={(e) => {\n                  setLSTtype(e.target.value);\n                }}\n              >\n                \n                <option value=\"\" selected>LST type</option>\n                <option value=\"Normal\" >Normal</option>\n                <option value=\"CMRR\">CMRR</option>\n                <option value=\"Customer\">Customer</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* -----------------------------------------Location ----------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={location}\n                onChange={(e) => {\n                  setLocation(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  From Location\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* -----------------------------------------Location ----------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={ToLocation}\n                onChange={(e) => {\n                  setToLocation(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  To Location\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n                <option value=\"Vendor\">Vendor</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* ---------------------------Condition Drop Down-------------------------------------- */}\n            {/* <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={condition}\n                onChange={(e) => {\n                  setCondition(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Condition\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Good\">Good</option>\n                <option value=\"Bad\">Bad</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div> */}\n\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search LST Number\"\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr className=\"flex flex-row justify-between\">\n                <TableCell>No</TableCell>\n                <TableCell>From</TableCell>\n                <TableCell>To</TableCell>\n                <TableCell>\n                  <span className=\"ml-10\">Date</span>{\" \"}\n                </TableCell>\n                <TableCell>\n                  <span className=\"ml-2 mr-2\">Num</span>{\" \"}\n                </TableCell>\n                {/* <TableCell>Status</TableCell> */}\n\n                <TableCell> Report</TableCell>\n                {EmpProfile.getRole()==0?\n                <TableCell> Delete</TableCell>\n                :null}\n                <TableCell>\n                  <span\n                    className=\"cursor-pointer\"\n                    onClick={() => setActiveRowID(-1)}\n                  >\n                    Items\n                  </span>\n                </TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <div className=\"flex flex-col justify-around\">\n                  <TableRow\n                    className={`hover:shadow-lg dark:hover:bg-gray-600 flex flex-row justify-between  ${\n                      activerowid == user._id\n                        ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                        : \"white\"\n                    } `}\n                    key={i}\n                    onClick={() => {\n                      setActiveRowId(i);\n                      // console.log(\"the id is \" + user._id);\n                      // setSelectedProd(user);\n                      // setAssetDetails(user);\n                      // console.log(user.product.keyboard[0].keyboardname);\n                    }}\n                  >\n                    <TableCell className=\"w-8\">\n                      <div className=\"flex items-center text-sm \">\n                        <div>\n                          <p className=\"font-semibold\">{user.LSTNo}</p>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell className=\"\">\n                      <span className=\" \">{user.from}</span>\n                    </TableCell>\n\n                    <TableCell className=\"  \">\n                      <span className=\"  \">\n                        {user.vendorId ? user.vendorName : user.to}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">\n                        {\" \"}\n                        {moment(user.date).format(\"DD/MM/YYYY\")}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{(user.LSTtype == \"Normal\"||user.LSTtype == \"Customer\")?user.invItems.length:user.CMRRItems.length}</span>\n                    </TableCell>\n                    {/* <TableCell>\n                      <span className=\"text-sm\">{user.docketNo}</span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.courierName}</span>\n                    </TableCell> */}\n                    {/* <TableCell>\n                    <Badge>\n                      condition\n                    </Badge>\n                  </TableCell> */}\n                    <TableCell className=\"text-center \">\n                      <Button\n                        layout=\"outline\"\n                        aria-label=\"DropDown\"\n                        onClick={() => {\n                          console.log(\"dwlod\");\n                          // createAndDownloadPdf(user._id, user.LSTNo);\n                          setDownloadLST(user);\n                          setisDownloadModalOpen(true);\n                          setDownloadNum(i);\n                        }}\n                        className=\"rounded-lg m-1\"\n                      >\n                        Download\n                      </Button>\n                    </TableCell>\n                    {EmpProfile.getRole()==0?\n                    <TableCell className=\"text-center \">\n                      <Button\n                        layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"Delete\"\n                        onClick={async () => {\n                          console.log(\"delete LST\");\n                          setIsDeleteModalOpen(true);\n                          setDeleteId(user._id);\n                          setDeleteNum(i);\n                        }}\n                      >\n                        <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                    </TableCell> :null}\n\n                    <TableCell className=\"text-center \">\n                      <Button\n                        // layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"DropDown\"\n                        onClick={() => {\n                          console.log(activerowid);\n                          // if(activerowid==i){\n\n                          // setActiveRowID(-1);\n                          // }\n                          // else\n                          setActiveRowID(i);\n                        }}\n                        className=\"rounded-lg m-1\"\n                      >\n                        <DropdownIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n\n                  {activeRowID == i\n                    ? InvTable(\n                        user.invItems,\n                       user.customerName,\n                        user.LSTtype,\n                        user.CMRRItems\n                      )\n                    : null}\n                </div>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n}\n\nexport default LSTHistory;\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"sourceRoot":""}