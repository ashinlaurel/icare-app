{"version":3,"sources":["components/Modal/CustomerCreateModal.js","pages/Customers/CreateCustomer.js","helpers/unitHelper.js","components/Modal/AddUnitModal.js"],"names":["CustomerCreatetModal","isModalOpen","setIsModalOpen","setCustomer","useState","values","setValues","useEffect","getCustomers","Axios","post","API","search","role","then","users","console","log","data","temp","map","user","push","catch","err","isOpen","onClose","i","key","className","onClick","_id","customerName","name","layout","CreateCustomer","useHistory","accType","setAccType","isReviewModalOpen","setIsReviewModalOpen","isErrModalOpen","setIsErrModalOpen","isReqFieldModal","setIsReqFieldModal","setTopHeading","useContext","TopBarContext","isUModalOpen","setIsUModalOpen","Ucustomer","setUCustomer","accountName","Uaccount","setUAccount","customer","username","email","password","confpassword","accountId","unitId","unitName","address","district","state","locationType","pincode","GSTnumber","contactPerson","contactNo","altContact","WhatsappNo","enc_password","setErr","handleChange","e","target","value","submitCustomer","a","newuser","childAccountIds","whatsappNo","show_password","signup","Emp","getId","sumbitAccount","parentCustomerId","parentCustomerName","submitUnit","payload","customerId","customerMame","unitCreate","setAccount","account","onChange","parseInt","type","valid","placeholder","length","aria-label","aria-haspopup","addForm","window","location","reload","newunit","unit","error","response","status","errors","AddUnitModal","customers","setCustomers","accounts","setAccounts","tabIndex","setTabIndex","pickCustomer","accs","pickAccount","selectedIndex","onSelect","ind"],"mappings":"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","file":"static/js/17.8a606405.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nexport default function CustomerCreatetModal({\n  isModalOpen,\n  setIsModalOpen,\n  setCustomer,\n}) {\n  const [values, setValues] = useState([]);\n  useEffect(() => {\n    getCustomers();\n  }, []);\n\n  const getCustomers = () => {\n    Axios.post(`${API}/customer/customers`, { search: \"\", role: 1 })\n      .then((users) => {\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        setValues(temp);\n      })\n      .catch((err) => {\n        console.log(\"axiosErr\", err);\n      });\n  };\n\n  const userTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {values.map((user, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-900 \"\n                onClick={() => {\n                  setCustomer({\n                    _id: user._id,\n                    customerName: user.name,\n                  });\n                  setIsModalOpen(false);\n                }}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                {/* <TableCell>\n                    <span className=\"text-sm\">$ {user.email}</span>\n                  </TableCell> */}\n                {/* <TableCell>\n                    <Badge type={user.status}>{user.status}</Badge>\n                  </TableCell> */}\n                {/* <TableCell>\n                  <span className=\"text-sm\">{user.infoId.unit}</span>\n                </TableCell> */}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          {/* <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            /> */}\n        </TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>Modal header</ModalHeader>\n        <ModalBody>{userTable()}</ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Cancel\n          </Button>\n          <Button className=\"w-full sm:w-auto\">Accept</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\n\nimport { signup, signin, authenticate } from \"../../helpers/auth\";\nimport CustomerCreateModal from \"../../components/Modal/CustomerCreateModal\";\nimport EmpProfile from \"../../helpers/auth/EmpProfile\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport { resetIdCounter } from \"react-tabs\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport { unitCreate } from \"../../helpers/unitHelper\";\nimport AddUnitModal from \"../../components/Modal/AddUnitModal\";\nimport { useHistory } from \"react-router-dom\";\n/////////////----------------->>>>>> bug <<<<<------------customerList refresh--------------------------\n\nfunction CreateCustomer() {\n  let history = useHistory();\n  const [accType, setAccType] = useState(0); /////// 0-Customer 1-Account 2-Unit\n\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [isErrModalOpen, setIsErrModalOpen] = useState(false);\n  const [isReqFieldModal, setIsReqFieldModal] = useState(false);\n  const { setTopHeading } = useContext(TopBarContext);\n\n  //modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  //States for unit\n  const [isUModalOpen, setIsUModalOpen] = useState(false);\n  const [Ucustomer, setUCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [Uaccount, setUAccount] = useState({ _id: \"\", accountName: \"\" });\n\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n\n  const [values, setValues] = useState({\n    //both\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confpassword: \"\",\n    //customer\n    customerName: \"\",\n    accountId: [],\n    //account\n    accountName: \"\",\n    unitId: [],\n    // //------> customerName from above\n    //unit\n    unitName: \"\",\n    address: \"\",\n    district: \"\",\n    state: \"\",\n    locationType: \"\",\n    pincode: \"\",\n    GSTnumber: \"\",\n    contactPerson: \"\",\n    contactNo: \"\",\n    altContact: \"\",\n    WhatsappNo: \"\",\n  });\n  const [err, setErr] = useState({\n    email: \"\",\n    name: \"\",\n    // accountName: \"\",\n    enc_password: \"\",\n    confpassword: \"\",\n  });\n\n  // ----------------------Heading Use Effect-------------\n\n  useEffect(() => {\n    setTopHeading(\"Add Customer\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const handleConfPassChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n    if (values.password !== e.target.value) {\n      setErr({ ...err, confpassword: \"Confirm password does not match\" });\n    } else setErr({ ...err, confpassword: \"\" });\n  };\n\n  const submitCustomer = async () => {\n    if (values.password !== values.confpassword) {\n      setErr({ ...err, confpassword: \"Confirm password does not match\" });\n      return;\n    }\n    if (\n      (values.customerName === \"\") |\n      (values.username === \"\") |\n      (values.email === \"\") |\n      (values.password === \"\") |\n      (values.confpassword === \"\")\n    ) {\n      setIsReqFieldModal(true);\n      return;\n    }\n    // e.preventDefault();\n    const newuser = {\n      username: values.username,\n      name: values.customerName,\n      email: values.email,\n      password: values.password,\n      role: 1,\n      childAccountIds: [],\n      address: values.address,\n      district: values.district,\n      state: values.state,\n      locationType: values.locationType,\n      pincode: values.pincode,\n      GSTnumber: values.GSTnumber,\n      contactPerson: values.contactPerson,\n      contactNo: values.contactNo,\n      altContact: values.altContact,\n      whatsappNo: values.WhatsappNo,\n      show_password:values.password\n    };\n    signup(newuser, `customer/${Emp.getId()}/signup`)\n      .then((data) => {\n        console.log(\"Signed Up\", data._id);\n        setIsReviewModalOpen(true);\n        setErr({\n          username: \"\",\n          email: \"\",\n          customerName: \"\",\n          enc_password: \"\",\n          confpassword: \"\",\n        });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        setErr({ ...err });\n      });\n  };\n\n  const sumbitAccount = async (e) => {\n    if (values.password !== values.confpassword) {\n      setErr({ ...err, confpassword: \"Confirm password does not match\" });\n      return;\n    }\n    if (\n      (values.accountName === \"\") |\n      (values.username === \"\") |\n      (values.email === \"\") |\n      (values.password === \"\") |\n      (values.confpassword === \"\")\n    ) {\n      setIsReqFieldModal(true);\n      return;\n    }\n    if (customer._id == \"\") {\n      setIsErrModalOpen(true);\n      return;\n    }\n    // e.preventDefault();\n    console.log(\"username\", values.username);\n    const newuser = {\n      username: values.username,\n      name: values.accountName,\n      email: values.email,\n      password: values.password,\n      parentCustomerId: customer._id,\n      parentCustomerName: customer.customerName,\n      role: 2,\n      address: values.address,\n      district: values.district,\n      state: values.state,\n      locationType: values.locationType,\n      pincode: values.pincode,\n      GSTnumber: values.GSTnumber,\n      contactPerson: values.contactPerson,\n      contactNo: values.contactNo,\n      altContact: values.altContact,\n      whatsappNo: values.WhatsappNo,\n      show_password:values.password  \n    };\n    signup(newuser, `customer/${Emp.getId()}/signup`)\n      .then((data) => {\n        setIsReviewModalOpen(true);\n        console.log(\"Signed Up\", data);\n        setErr({\n          username: \"\",\n          email: \"\",\n          accountName: \"\",\n          enc_password: \"\",\n          confpassword: \"\",\n        });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        setErr({ ...err });\n      });\n  };\n  const submitUnit = async (e) => {\n    if (Ucustomer._id == \"\" || Uaccount._id == \"\") {\n      setIsErrModalOpen(true);\n      return;\n    }\n    // e.preventDefault();\n    const payload = {\n      username: values.username,\n      email: values.email,\n      customerId: Ucustomer._id,\n      customerName: Ucustomer.customerMame,\n      accountId: Uaccount._id,\n      accountName: Uaccount.accountName,\n\n      unitName: values.unitName,\n      address: values.address,\n      district: values.district,\n      state: values.state,\n      locationType: values.locationType,\n      pincode: values.pincode,\n      GSTnumber: values.GSTnumber,\n      contactPerson: values.contactPerson,\n      contactNo: values.contactNo,\n      altContact: values.altContact,\n      whatsappNo: values.WhatsappNo,\n      show_password:values.password  \n    };\n    unitCreate(payload)\n      .then((data) => {\n        console.log(\"Signed Up\", data);\n        setIsReviewModalOpen(true);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        // setErr({ ...err });\n      });\n  };\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>\n            {accType === 0 ? <>Customer </> : null}\n            {accType === 1 ? <>Account </> : null}\n            {accType === 2 ? <>Unit </> : null}\n            Created Successfully!\n          </ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              // onClick={() => setIsReviewModalOpen(false)}\n              onClick={() => window.location.reload()}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const AccCustErr = () => {\n    return (\n      <>\n        <Modal isOpen={isErrModalOpen} onClose={() => setIsErrModalOpen(false)}>\n          <ModalHeader>Customer Not Selected!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsErrModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const ReqFieldErrModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReqFieldModal}\n          onClose={() => setIsReqFieldModal(false)}\n        >\n          <ModalHeader>Required fields are not filled!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReqFieldModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //ASSET\n  const addForm = () => {\n    return (\n      <div className=\"px-4 py-3 mt-4 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Add Customer</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n        {/* ------------------------Row 1-------------------------- */}\n        <div className=\"flex-row flex space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Select Account Type*</span>\n              <Select\n                className=\"mt-1\"\n                onChange={(e) => {\n                  setAccType(parseInt(e.target.value));\n                }}\n              >\n                <option value=\"0\">Customer</option>\n                <option value=\"1\">Account</option>\n                <option value=\"2\">Unit</option>\n              </Select>\n            </Label>\n          </div>\n          {accType === 0 ? (\n            <>\n              <div className=\"flex flex-col w-full\">\n                <Label className=\"w-full\">\n                  <span>Customer Name*</span>\n                  <Input\n                    className=\"mt-1\"\n                    type=\"text\"\n                    value={values.customerName}\n                    onChange={handleChange(\"customerName\")}\n                  />\n                </Label>\n                <HelperText valid={false}>{err.customerName}</HelperText>\n              </div>\n            </>\n          ) : null}\n          {accType === 1 ? (\n            <>\n              <div className=\"flex flex-col w-full\">\n                <Label className=\"w-full\">\n                  <span>Account Name*</span>\n                  <Input\n                    className=\"mt-1\"\n                    type=\"text\"\n                    value={values.accountName}\n                    onChange={handleChange(\"accountName\")}\n                  />\n                </Label>\n                <HelperText valid={false}>{err.accountName}</HelperText>\n              </div>\n            </>\n          ) : null}\n          {accType === 2 ? (\n            <>\n              <div className=\"flex flex-col w-full\">\n                <Label className=\"w-full\">\n                  <span>Unit Name*</span>\n                  <Input\n                    className=\"mt-1\"\n                    type=\"text\"\n                    value={values.unitName}\n                    onChange={handleChange(\"unitName\")}\n                  />\n                </Label>\n              </div>\n            </>\n          ) : null}\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>User Name*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.username}\n                onChange={handleChange(\"username\")}\n              />\n            </Label>\n            <HelperText valid={false}>{err.username}</HelperText>\n          </div>\n          <Label className=\"w-full\">\n            <span>Email*</span>\n            <Input\n              className=\"mt-1\"\n              type=\"email\"\n              placeholder=\"\"\n              value={values.email}\n              onChange={handleChange(\"email\")}\n            />\n          </Label>\n          <HelperText valid={false}>{err.email}</HelperText>\n        </div>\n        {/* ----------------------Row 2 ----------------------------- */}\n        <div className=\"flex-row flex space-x-3 \">\n          <Label className=\"w-full mt-4\">\n            <span>Password*</span>\n            <Input\n              className=\"mt-1\"\n              placeholder=\"\"\n              type=\"password\"\n              value={values.password}\n              onChange={handleChange(\"password\")}\n            />\n          </Label>\n          <HelperText valid={false}>{err.enc_password}</HelperText>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full mt-4\">\n              <span>Confirm password*</span>\n\n              <Input\n                className=\"mt-1\"\n                type=\"password\"\n                value={values.confpassword}\n                onChange={handleConfPassChange(\"confpassword\")}\n              />\n            </Label>\n\n            <HelperText valid={false}>{err.confpassword}</HelperText>\n          </div>\n        </div>\n        {/* ///////////////////////////////////////////////////////// */}\n        <Label className=\"font-bold mt-5 mb-2\">\n          <span>Additional Information</span>\n        </Label>\n        <hr />\n        {/* -------Row - 3 ---------------------- */}\n        <div className=\"flex-row flex space-x-3 mt-3 mb-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>GST Number</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.GSTnumber}\n                onChange={handleChange(\"GSTnumber\")}\n              />\n            </Label>{\" \"}\n            {values.GSTnumber.length != 15 && values.GSTnumber != 0 ? (\n              <>\n                <HelperText valid={false}>\n                  GST number shound be 15 digits\n                </HelperText>\n              </>\n            ) : null}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Contact Person</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.contactPerson}\n                onChange={handleChange(\"contactPerson\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Contact Number</span>\n              <Input\n                className=\"mt-1\"\n                type=\"number\"\n                value={values.contactNo}\n                onChange={handleChange(\"contactNo\")}\n              />\n            </Label>{\" \"}\n            {values.contactNo.length != 10 && values.contactNo != 0 ? (\n              <>\n                <HelperText valid={false}>\n                  Phone number shound be 10 digits\n                </HelperText>\n              </>\n            ) : null}\n          </div>\n          {/* <HelperText valid={false}>{digiterr.contactNo}</HelperText> */}\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Whatsapp Number</span>\n              <Input\n                className=\"mt-1\"\n                type=\"number\"\n                value={values.WhatsappNo}\n                onChange={handleChange(\"WhatsappNo\")}\n              />\n            </Label>\n            {values.WhatsappNo.length != 10 && values.WhatsappNo != 0 ? (\n              <>\n                <HelperText valid={false}>\n                  Phone number shound be 10 digits\n                </HelperText>\n              </>\n            ) : null}\n          </div>\n        </div>\n        <Label className=\"my-2\">\n          <span>Address</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.address}\n            onChange={handleChange(\"address\")}\n          />\n        </Label>{\" \"}\n        {/* -----------------------Row-4 */}\n        <div className=\"flex-row flex space-x-3 my-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>District</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.district}\n                onChange={handleChange(\"district\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>State</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.state}\n                onChange={handleChange(\"state\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Location Type</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.locationType}\n                onChange={handleChange(\"locationType\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>PIN code</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.pincode}\n                onChange={handleChange(\"pincode\")}\n              />\n            </Label>{\" \"}\n            {values.pincode.length != 6 && values.pincode != 0 ? (\n              <>\n                <HelperText valid={false}>PIN shound be 6 digits</HelperText>\n              </>\n            ) : null}\n          </div>\n        </div>\n        {/* ///////////////////////////////////////////////////////// */}\n        {accType === 1 ? (\n          <>\n            <Button\n              onClick={() => setIsModalOpen(true)}\n              aria-label=\"Notifications\"\n              aria-haspopup=\"true\"\n              className=\"mt-4 mr-2\"\n            >\n              {customer.customerName === \"\" ? (\n                <>Select Associations</>\n              ) : (\n                <>Customer: {customer.customerName}</>\n              )}\n            </Button>\n          </>\n        ) : null}\n        {accType === 2 ? (\n          <>\n            <Button\n              onClick={() => setIsUModalOpen(true)}\n              aria-label=\"Notifications\"\n              aria-haspopup=\"true\"\n              className=\"mt-4 mr-2\"\n            >\n              Select Associations\n            </Button>\n          </>\n        ) : null}\n        <Button\n          onClick={() => {\n            if (accType === 0) submitCustomer();\n            else if (accType === 1) sumbitAccount();\n            else submitUnit();\n          }}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4\"\n        >\n          {\" \"}\n          Create {}\n          {(accType === 0 && <> Customer </>) ||\n            (accType === 1 && <>Account</>) ||\n            (accType == 2 && <>Unit</>)}\n        </Button>\n        {/* <hr className=\"my-8\" />\n        <Label className=\"font-bold\">\n          <span>Additional Information</span>\n        </Label>\n      \n        <hr className=\"my-2\" />\n        // ////////////////////////// . INFO\n        <Label>\n          <span>Account</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.account}\n            onChange={handleChange(\"account\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Unit</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.unit}\n            onChange={handleChange(\"unit\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Address</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.address}\n            onChange={handleChange(\"address\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>District</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.district}\n            onChange={handleChange(\"district\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>state</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.state}\n            onChange={handleChange(\"state\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Location Type</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.locationType}\n            onChange={handleChange(\"locationType\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>PIN code</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.pincode}\n            onChange={handleChange(\"pincode\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>GST Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.GSTnumber}\n            onChange={handleChange(\"GSTnumber\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Person</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactPerson}\n            onChange={handleChange(\"contactPerson\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactNo}\n            onChange={handleChange(\"contactNi\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Whatsapp Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.WhatsappNo}\n            onChange={handleChange(\"WhatsappNo\")}\n          />\n        </Label>\n        <Button\n          //   tag={Link}\n          // to=\"/AdminSignUp\"\n          block\n          className=\"mt-4\"\n          onClick={handleSubmit}\n        >\n          Create account\n        </Button>\n        <hr className=\"my-8\" /> */}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <CustomerCreateModal\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setCustomer={setCustomer}\n      />\n      <AddUnitModal\n        isModalOpen={isUModalOpen}\n        setIsModalOpen={setIsUModalOpen}\n        setAccount={setUAccount}\n        account={Uaccount}\n        customer={Ucustomer}\n        setCustomer={setUCustomer}\n      />\n      {/* <PageTitle>Add Customer</PageTitle> */}\n      {addForm()}\n\n      {/* {productPicker()} */}\n      {ReviewSubmit()}\n      {AccCustErr()}\n      {ReqFieldErrModal()}\n    </>\n  );\n}\n\nexport default CreateCustomer;\n","import Axios from \"axios\";\nimport { API } from \"../backendapi\";\nimport Emp from \"../helpers/auth/EmpProfile\";\n\nexport const unitCreate = (newunit) => {\n  return Axios.post(`${API}/unit/${Emp.getId()}/create`, newunit)\n    .then((unit) => {\n      console.log(\"h\", unit.data);\n      return unit.data;\n    })\n    .catch((error) => {\n      console.log(\"ERRRROs\");\n      if (error.response) {\n        console.log(error.response.data);\n        console.log(error.response.status);\n        throw error.response.data.errors;\n      }\n    });\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../backendapi\";\n\nexport default function AddUnitModal({\n  isModalOpen,\n  setIsModalOpen,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  useEffect(() => {\n    Axios.post(`${API}/customer/customers`, { search: \"\", role: 1 })\n      .then((users) => {\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        setCustomers(temp);\n      })\n      .catch((err) => {\n        console.log(\"axiosErr\", err);\n      });\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select {tabIndex == 0 ? <>Customer</> : <>Account</>}\n        </ModalHeader>\n        <ModalBody>\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n          </Tabs>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}