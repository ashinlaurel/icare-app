{"version":3,"sources":["../node_modules/classnames/index.js","components/RoundIcon.js","pages/Customers/CustomerDetails.js","components/Cards/InfoCard.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","RoundIcon","Icon","icon","iconColorClass","bgColorClass","className","cls","CustomerDetails","history","useHistory","id","useParams","useState","isDeleteModalOpen","setIsDeleteModalOpen","PasswordModalOpen","setPasswordModalOpen","isReviewModalOpen","setIsReviewModalOpen","newpass","setNewpass","newpassconf","setNewpassconf","passerror","setPasserror","username","email","customerName","address","district","state","locationType","pincode","GSTnumber","contactPerson","contactNo","altContact","WhatsappNo","role","parentCustomerId","show_password","values","setValues","name","enc_password","confpassword","changePassword","a","data","pass","Axios","url","API","Emp","getId","method","user","console","log","getCustomerInfo","axios","res","useEffect","isOpen","onClose","type","value","onChange","e","target","placeholder","valid","onClick","to","InfoCard","title","children"],"mappings":";gIAAA,OAOC,WACA,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC5C,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,QAER,GAAgB,WAAZJ,EACV,IAAK,IAAIM,KAAOP,EACXP,EAAOe,KAAKR,EAAKO,IAAQP,EAAIO,IAChCX,EAAQM,KAAKK,IAMjB,OAAOX,EAAQa,KAAK,KAGgBC,EAAOC,SAC3ChB,EAAWiB,QAAUjB,EACrBe,EAAOC,QAAUhB,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aAtCP,I,iCCPD,sCAmBekB,IAhBf,YAKI,IAJIC,EAIL,EAJDC,KAIC,IAHDC,sBAGC,MAHgB,uCAGhB,MAFDC,oBAEC,MAFc,mCAEd,EADDC,EACC,EADDA,UAIMC,EAAMxB,IAFM,mBAEgBqB,EAAgBC,EAAcC,GAChE,OACE,yBAAKA,UAAWC,GACd,kBAACL,EAAD,CAAMI,UAAU,e,+NCSP,SAASE,IACtB,IAAIC,EAAUC,cACNC,EAAOC,cAAPD,GAFgC,EAGUE,oBAAS,GAHnB,mBAGjCC,EAHiC,KAGdC,EAHc,OAIUF,oBAAS,GAJnB,mBAIjCG,EAJiC,KAIdC,EAJc,OAKUJ,oBAAS,GALnB,mBAKjCK,EALiC,KAKdC,EALc,OAMVN,mBAAS,IANC,mBAMjCO,EANiC,KAMxBC,EANwB,OAOFR,mBAAS,IAPP,mBAOjCS,EAPiC,KAOpBC,EAPoB,OAQNV,mBAAS,IARH,mBAQjCW,EARiC,KAQtBC,EARsB,OAWZZ,mBAAS,CAEnCa,SAAU,GACVC,MAAO,GAIPC,aAAc,GAMdC,QAAS,GACTC,SAAU,GACVC,MAAO,GACPC,aAAc,GACdC,QAAS,GACTC,UAAW,GACXC,cAAe,GACfC,UAAW,GACXC,WAAY,GACZC,WAAY,GACZC,KAAM,EACNC,iBAAkB,GAClBC,cAAc,KApCwB,mBAWjCC,EAXiC,KAWzBC,EAXyB,OAsClB9B,mBAAS,CAC7Bc,MAAO,GACPiB,KAAM,GAENC,aAAc,GACdC,aAAc,KA3CwB,mBA8ClCC,GA9CkC,UA8CpB,uCAAG,gCAAAC,EAAA,6DACjBC,EAAO,CAAEtC,KAAIuC,KAAM9B,GADF,kBAGF+B,IAAM,CACrBC,IAAI,GAAD,OAAKC,IAAL,qBAAqBC,IAAIC,QAAzB,qBACHC,OAAQ,OACRP,KAAMA,IANW,OAGfQ,EAHe,OAQnBtC,GAAqB,GACrBF,GAAqB,GACrByC,QAAQC,IAAI,OAAQF,GAVD,sEAcjBA,EAAKf,GACJD,cAAcrB,EACnBuB,EAAUc,GAhBW,0DAAH,sDAoBdG,EAAe,uCAAG,8BAAAZ,EAAA,6DAClBC,EAAO,CAAEtC,GAAIA,GADK,kBAIJkD,IAAM,CACpBT,IAAI,GAAD,OAAKC,IAAL,qBAAqBC,IAAIC,QAAzB,oBACHC,OAAQ,OACRP,KAAMA,IAPY,OAIhBa,EAJgB,OAUpBnB,EAAU,CACRjB,SAAUoC,EAAIb,KAAK,GAAGvB,SACtBC,MAAOmC,EAAIb,KAAK,GAAGtB,MACnBiB,KAAMkB,EAAIb,KAAK,GAAGL,KAClBhB,aAAckC,EAAIb,KAAK,GAAGrB,aAC1BC,QAASiC,EAAIb,KAAK,GAAGpB,QACrBC,SAAUgC,EAAIb,KAAK,GAAGnB,SACtBC,MAAO+B,EAAIb,KAAK,GAAGlB,MACnBC,aAAc8B,EAAIb,KAAK,GAAGjB,aAC1BC,QAAS6B,EAAIb,KAAK,GAAGhB,QACrBC,UAAW4B,EAAIb,KAAK,GAAGf,UACvBC,cAAe2B,EAAIb,KAAK,GAAGd,cAC3BC,UAAW0B,EAAIb,KAAK,GAAGb,UACvBC,WAAYyB,EAAIb,KAAK,GAAGZ,WACxBE,KAAMuB,EAAIb,KAAK,GAAGV,KAClBC,iBAAkBsB,EAAIb,KAAK,GAAGT,iBAC9BC,cAAcqB,EAAIb,KAAK,GAAGR,gBAI5BiB,QAAQC,IAAI,OAAQG,EAAIb,KAAK,IA9BT,oHAAH,qDAoCrBc,qBAAU,WACRH,MACC,IAgIH,OACE,6BA7HE,oCACE,kBAAC,QAAD,CACEI,OAAQhD,EACRiD,QAAS,kBAAMhD,GAAqB,KAEpC,kBAAC,cAAD,4BAAkCyB,EAAOhB,SAAzC,KACA,kBAAC,YAAD,KACE,yBAAKpB,UAAU,iEACb,kBAAC,QAAD,KACE,8CACA,kBAAC,QAAD,CACEA,UAAU,OACV4D,KAAK,WACLC,MAAO/C,EACPgD,SAAU,SAACC,GAAD,OAAOhD,EAAWgD,EAAEC,OAAOH,QACrCI,YAAY,kBAEP,IACT,kBAAC,QAAD,KACE,kDACA,kBAAC,QAAD,CACEjE,UAAU,OACV4D,KAAK,WACLK,YAAY,mBACZJ,MAAO7C,EACP8C,SAAU,SAACC,GACT9C,EAAe8C,EAAEC,OAAOH,OACpBE,EAAEC,OAAOH,OAAS/C,EACpBK,EAAa,2BACVA,EAAa,QAIxB,kBAAC,aAAD,CAAY+C,OAAO,GAAQhD,KAG/B,kBAAC,cAAD,KACE,kBAAC,SAAD,CACElB,UAAU,mBACVmE,QAAS,kBAAM1B,MAFjB,sBAcN,oCACE,kBAAC,QAAD,CACEiB,OAAQ9C,EACR+C,QAAS,kBAAM9C,GAAqB,KAEpC,kBAAC,cAAD,uCACA,kBAAC,YAAD,MACA,kBAAC,cAAD,KACE,kBAAC,SAAD,CACEb,UAAU,mBACVmE,QAAS,kBAAMtD,GAAqB,KAFtC,YAcN,oCACE,kBAAC,QAAD,CACE6C,OAAQlD,EACRmD,QAAS,kBAAMlD,GAAqB,KAEpC,kBAAC,cAAD,yCACA,kBAAC,YAAD,YACsB,GAAf2B,EAAOH,KAAY,kDAAkB,qCAD5C,+BAGkB,GAAfG,EAAOH,KAAY,kDAAkB,iDAHxC,mBAImB,KAEnB,kBAAC,cAAD,KACE,kBAAC,SAAD,CACEjC,UAAU,mBACVmE,QAAO,sBAAE,sBAAAzB,EAAA,yDACPU,QAAQC,IAAI,OAAQjB,EAAOH,MADpB,SAGc,GAAfG,EAAOH,KAHN,uBAIHmB,QAAQC,IAAI,YAAajB,EAAOH,MAJ7B,SAKGsB,IAAM,CACVT,IAAI,GAAD,OAAKC,IAAL,qBAAqBC,IAAIC,QAAzB,eACHC,OAAQ,OACRP,KAAM,CAAEtC,GAAIA,KARX,OAUHF,EAAQnB,KAAR,iBAVG,wCAYG6D,IAAM,CACVC,IAAI,GAAD,OAAKC,IAAL,qBAAqBC,IAAIC,QAAzB,cACHC,OAAQ,OACRP,KAAM,CAAEtC,GAAIA,KAfX,QAiBHF,EAAQnB,KAAR,iCAC4BoD,EAAOF,mBAlBhC,QAsBLkB,QAAQC,IAAI,gBAtBP,wHAFX,qBA2CN,kBAAC,IAAD,KACGjB,EAAOE,KADV,SACqC,GAAfF,EAAOH,KAAY,gDAAgB,+CAAc,KAIvE,kBAAC,OAAD,CAAMjC,UAAU,kBACd,kBAAC,WAAD,KACE,yBAAKA,UAAU,2BACb,6BACE,uBAAGA,UAAU,iDACX,0BAAMA,UAAU,iBAAhB,cAAkD,IACjDoC,EAAOhB,UAEV,uBAAGpB,UAAU,iDACX,0BAAMA,UAAU,iBAAhB,WADF,IACkDoC,EAAOf,OAEzD,uBAAGrB,UAAU,iDACX,0BAAMA,UAAU,iBAAhB,cADF,IACqDoC,EAAOD,eAE5D,uBAAGnC,UAAU,iDACX,0BAAMA,UAAU,iBAAhB,UADF,IACiDoC,EAAOE,MAExD,uBAAGtC,UAAU,iDACX,0BAAMA,UAAU,iBAAhB,oBAAwD,IACvDoC,EAAOP,eAEV,uBAAG7B,UAAU,iDACX,0BAAMA,UAAU,iBAAhB,oBAAwD,IACvDoC,EAAON,WAEV,uBAAG9B,UAAU,iDACX,0BAAMA,UAAU,iBAAhB,uBAA2D,IAC1DoC,EAAOL,aAGZ,yBAAK/B,UAAU,yBACb,uBAAGA,UAAU,iDACX,0BAAMA,UAAU,iBAAhB,mBAAuD,IACtDoC,EAAOV,cAEV,uBAAG1B,UAAU,iDACX,0BAAMA,UAAU,iBAAhB,aAAiD,IAChDoC,EAAOb,SAEV,uBAAGvB,UAAU,iDACX,0BAAMA,UAAU,iBAAhB,cAAkD,IACjDoC,EAAOZ,UAEV,uBAAGxB,UAAU,iDACX,0BAAMA,UAAU,iBAAhB,WADF,IACkDoC,EAAOX,OAEzD,uBAAGzB,UAAU,iDACX,0BAAMA,UAAU,iBAAhB,aAAiD,IAChDoC,EAAOT,SAEV,uBAAG3B,UAAU,iDACX,0BAAMA,UAAU,iBAAhB,gBAAoD,IACnDoC,EAAOR,aAId,yBAAK5B,UAAU,SACb,kBAAC,IAAD,CAAMoE,GAAE,wBAAmB/D,EAAnB,YACN,kBAAC,SAAD,CAAQL,UAAU,QAAlB,gBAEF,kBAAC,SAAD,CAAQA,UAAU,OAAOmE,QAAS,kBAAMxD,GAAqB,KAA7D,kBAGA,kBAAC,SAAD,CAAQwD,QAAS,kBAAM1D,GAAqB,IAAOT,UAAU,QAA7D,UACyB,GAAfoC,EAAOH,KAAY,gDAAgB,sD,iCCzUzD,2BAiBeoC,IAdf,YAAqD,IAAjCC,EAAgC,EAAhCA,MAAOT,EAAyB,EAAzBA,MAAiBhE,EAAQ,EAAlB0E,SAChC,OACE,kBAAC,OAAD,KACE,kBAAC,WAAD,CAAUvE,UAAU,qBACjBH,EACD,6BACE,uBAAGG,UAAU,6DAA6DsE,GAC1E,uBAAGtE,UAAU,0DAA0D6D","file":"static/js/38.da3c09fe.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className,\n}) {\n  const baseStyle = 'rounded-full p-5'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className=\"w-6 h-6\" />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { API } from \"../../backendapi\";\nimport axios from \"axios\";\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport InfoCard from \"../../components/Cards/InfoCard\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\nimport { CartIcon, ChatIcon, MoneyIcon, PeopleIcon } from \"../../icons\";\nimport RoundIcon from \"../../components/RoundIcon\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport Axios from \"axios\";\n\nexport default function CustomerDetails() {\n  let history = useHistory();\n  const { id } = useParams();\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [PasswordModalOpen, setPasswordModalOpen] = useState(false);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [newpass, setNewpass] = useState(\"\");\n  const [newpassconf, setNewpassconf] = useState(\"\");\n  const [passerror, setPasserror] = useState(\"\");\n\n  // console.log(id);\n  const [values, setValues] = useState({\n    //both\n    username: \"\",\n    email: \"\",\n    // password: \"\",\n    // confpassword: \"\",\n    //customer\n    customerName: \"\",\n    // accountId: [],\n    //account\n    // accountName: \"\",\n    // unitId: [],\n    // //------> customerName from above\n    address: \"\",\n    district: \"\",\n    state: \"\",\n    locationType: \"\",\n    pincode: \"\",\n    GSTnumber: \"\",\n    contactPerson: \"\",\n    contactNo: \"\",\n    altContact: \"\",\n    WhatsappNo: \"\",\n    role: 0,\n    parentCustomerId: \"\",\n    show_password:\"\",\n  });\n  const [err, setErr] = useState({\n    email: \"\",\n    name: \"\",\n    // accountName: \"\",\n    enc_password: \"\",\n    confpassword: \"\",\n  });\n\n  const changePassword = async () => {\n    let data = { id, pass: newpass };\n    try {\n      let user = await Axios({\n        url: `${API}/customer/${Emp.getId()}/resetPassByAdmin`,\n        method: \"POST\",\n        data: data,\n      });\n      setIsReviewModalOpen(true);\n      setPasswordModalOpen(false);\n      console.log(\"Done\", user);\n    } catch (error) {\n      throw error;\n    }\n    let user=values;\n    user.show_password=newpass;\n    setValues(user);\n\n  };\n\n  const getCustomerInfo = async () => {\n    let data = { id: id };\n    // console.log(API);\n    try {\n      let res = await axios({\n        url: `${API}/customer/${Emp.getId()}/getCustomerById`,\n        method: \"POST\",\n        data: data,\n      });\n\n      setValues({\n        username: res.data[0].username,\n        email: res.data[0].email,\n        name: res.data[0].name,\n        customerName: res.data[0].customerName,\n        address: res.data[0].address,\n        district: res.data[0].district,\n        state: res.data[0].state,\n        locationType: res.data[0].locationType,\n        pincode: res.data[0].pincode,\n        GSTnumber: res.data[0].GSTnumber,\n        contactPerson: res.data[0].contactPerson,\n        contactNo: res.data[0].contactNo,\n        altContact: res.data[0].altContact,\n        role: res.data[0].role,\n        parentCustomerId: res.data[0].parentCustomerId,\n        show_password:res.data[0].show_password\n        // WhatsappNo:WhatsappNo ,\n      });\n\n      console.log(\"Done\", res.data[0]);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    getCustomerInfo();\n  }, []);\n\n  const ResetPassModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={PasswordModalOpen}\n          onClose={() => setPasswordModalOpen(false)}\n        >\n          <ModalHeader>Change Password for {values.username}!</ModalHeader>\n          <ModalBody>\n            <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n              <Label>\n                <span>New Password</span>\n                <Input\n                  className=\"mt-5\"\n                  type=\"password\"\n                  value={newpass}\n                  onChange={(e) => setNewpass(e.target.value)}\n                  placeholder=\"New Password\"\n                />\n              </Label>{\" \"}\n              <Label>\n                <span>Confirm Password</span>\n                <Input\n                  className=\"my-5\"\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={newpassconf}\n                  onChange={(e) => {\n                    setNewpassconf(e.target.value);\n                    if (e.target.value != newpass)\n                      setPasserror(\"Passwords do not match!\");\n                    else setPasserror(\"\");\n                  }}\n                />\n              </Label>\n              <HelperText valid={false}>{passerror}</HelperText>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => changePassword()}\n            >\n              Change Password\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const PassChangeModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>Password Updated Successfully!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReviewModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const DeleteModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isDeleteModalOpen}\n          onClose={() => setIsDeleteModalOpen(false)}\n        >\n          <ModalHeader>Are you sure you want to delete!</ModalHeader>\n          <ModalBody>\n            All {values.role == 1 ? <>accounts, </> : <></>} units and assets\n            under this\n            {values.role == 1 ? <> customer </> : <> account </>}\n            will get deleted{\" \"}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                console.log(\"role\", values.role);\n                try {\n                  if (values.role == 1) {\n                    console.log(\"Here role\", values.role);\n                    await axios({\n                      url: `${API}/customer/${Emp.getId()}/deletecust`,\n                      method: \"POST\",\n                      data: { id: id },\n                    });\n                    history.push(`/app/customer`);\n                  } else {\n                    await Axios({\n                      url: `${API}/customer/${Emp.getId()}/deleteacc`,\n                      method: \"POST\",\n                      data: { id: id },\n                    });\n                    history.push(\n                      `/app/customer/accounts/${values.parentCustomerId}`\n                    );\n                  }\n\n                  console.log(\"unit deleted\");\n                } catch (err) {\n                  throw err;\n                }\n              }}\n            >\n              Confirm Delete\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      {ResetPassModal()}\n      {PassChangeModal()}\n      {DeleteModal()}\n      <PageTitle>\n        {values.name} Type:{values.role == 1 ? <>Customer</> : <>Account</>}{\" \"}\n      </PageTitle>\n\n      {/* <SectionTitle> </SectionTitle> */}\n      <Card className=\"mb-8 shadow-md\">\n        <CardBody>\n          <div className=\"flex flex-row flex-wrap\">\n            <div>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Username:</span>{\" \"}\n                {values.username}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Email:</span> {values.email}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Password:</span> {values.show_password}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Name:</span> {values.name}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Contact Person:</span>{\" \"}\n                {values.contactPerson}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Contact Number:</span>{\" \"}\n                {values.contactNo}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Alternate Contact:</span>{\" \"}\n                {values.altContact}\n              </p>\n            </div>\n            <div className=\"ml-10 lg:mr-48  mx-20\">\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Location Type:</span>{\" \"}\n                {values.locationType}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Address:</span>{\" \"}\n                {values.address}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> District:</span>{\" \"}\n                {values.district}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> State:</span> {values.state}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Pincode:</span>{\" \"}\n                {values.pincode}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> GST Number:</span>{\" \"}\n                {values.GSTnumber}\n              </p>\n            </div>\n          </div>\n          <div className=\"my-10\">\n            <Link to={`/app/customer/${id}/update`}>\n              <Button className=\"mr-3\">Update Info</Button>\n            </Link>\n            <Button className=\"mx-3\" onClick={() => setPasswordModalOpen(true)}>\n              Reset Password\n            </Button>\n            <Button onClick={() => setIsDeleteModalOpen(true)} className=\"mx-3\">\n              Delete {values.role == 1 ? <>Customer</> : <>Account</>}\n            </Button>\n            {/* <Button className=\"mx-3\">Delete Customer</Button> */}\n          </div>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n","import React from 'react'\nimport { Card, CardBody } from '@windmill/react-ui'\n\nfunction InfoCard({ title, value, children: icon }) {\n  return (\n    <Card>\n      <CardBody className=\"flex items-center\">\n        {icon}\n        <div>\n          <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">{title}</p>\n          <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">{value}</p>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default InfoCard\n"],"sourceRoot":""}