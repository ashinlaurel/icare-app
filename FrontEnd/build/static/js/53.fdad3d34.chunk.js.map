{"version":3,"sources":["pages/Calls/UpdatCall.js"],"names":["UpdateCall","params","useParams","useContext","TopBarContext","setTopHeading","topheading","id","assetid","callid","useState","submitModal","setSubmitModal","_id","unitName","unit","setUnit","customerName","customer","setCustomer","accountName","account","setAccount","brand","setBrand","model","setModel","serialno","setSerialNo","os","setOs","cpuname","cpusno","cpu","setCpu","ramname","ramsno","ram","setram","hddname","hddsno","hdd","sethdd","smpsname","smpssno","smps","setsmps","fanname","fansno","fan","setfan","motherboardname","motherboardsno","motherboard","setmotherboard","opticaldrivename","opticaldrivesno","opticaldrive","setopticaldrive","kbdname","kbdsno","kbd","setkbd","mousename","mousesno","mouse","setmouse","monitorname","monitorsno","monitor","setmonitor","gcardname","gcardsno","gcard","setgcard","enetcardname","enetcardsno","enetcard","setenetcard","serialcardname","serialcardsno","serialcard","setserialcard","parallelcardname","parallelcardsno","parallelcard","setparallelcard","hbacardname","hbacardsno","sethbacard","raidcontrollername","raidcontrollersno","setraidcontroller","tapecontrollername","tapecontrollersno","settapecontroller","othersname","otherssno","others","setothers","Business","setBusiness","setPOnumber","setPOdate","setContractFrom","setContractTo","setBillingFrom","setBillingTo","setAMCRate","setGSTAMOUNT","setNetAmount","product","setProduct","activeRowID","setActiveRowID","secondactiveRowID","setSecondactiveRowID","itemtype","setItemtype","selectedItem","setSelectedItem","data","setData","inventdata","setInventData","name","sno","existswap","setExistswap","inventswap","setInventswap","useEffect","location","Date","page","searchtype","searchquery","a","console","log","payload","pages","limit","filters","type","toLowerCase","condition","axios","url","API","Emp","getId","method","response","out","temp","thetype","theitemandsystem","map","item","i","systype","thegetter","getAsset","post","res","asset","producttype","customerId","accountId","business","ponumber","amcrate","moment","podate","format","contractfrom","contractto","billingfrom","billingto","gstamount","netamount","length","keyboard","netcardname","hbacard","raidcontroller","tapecontroller","call","setCall","getCall","handleSwap","newswap","isOpen","setIsOpen","InvTable","items","className","user","key","onClick","layout","callNo","contactPerson","date","class","value","onChange","e","target","disabled","selected","xmlns","viewBox","d","aria-label","aria-haspopup","onClose","size","aria-hidden"],"mappings":"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","file":"static/js/53.fdad3d34.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { API } from \"../../backendapi\";\nimport AsyncSelect from \"react-select/async\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Input,\n  HelperText,\n  Label,\n  Select,\n  Textarea,\n  Button,\n  Dropdown,\n  DropdownItem,\n  Badge,\n} from \"@windmill/react-ui\";\n\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport { useParams } from \"react-router-dom\";\nimport { DropdownIcon } from \"../../icons\";\nimport { useMemo } from \"react\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n\nfunction UpdateCall() {\n  // floatbox\n\n  const params = useParams();\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const id = params.assetid;\n  const callid = params.callid;\n  // console.log(id);\n  //modal\n  const [submitModal, setSubmitModal] = useState(false);\n\n  //customer\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n\n  //prodcut\n  const [brand, setBrand] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [serialno, setSerialNo] = useState(\"\");\n  const [os, setOs] = useState(\"\");\n  const [cpu, setCpu] = useState([{ cpuname: \"\", cpusno: \"\" }]);\n  const [ram, setram] = useState([{ ramname: \"\", ramsno: \"\" }]);\n  const [hdd, sethdd] = useState([{ hddname: \"\", hddsno: \"\" }]);\n  const [smps, setsmps] = useState([{ smpsname: \"\", smpssno: \"\" }]);\n  const [fan, setfan] = useState([{ fanname: \"\", fansno: \"\" }]);\n  const [motherboard, setmotherboard] = useState([\n    { motherboardname: \"\", motherboardsno: \"\" },\n  ]);\n  const [opticaldrive, setopticaldrive] = useState([\n    { opticaldrivename: \"\", opticaldrivesno: \"\" },\n  ]);\n  const [kbd, setkbd] = useState([{ kbdname: \"\", kbdsno: \"\" }]);\n  const [mouse, setmouse] = useState([{ mousename: \"\", mousesno: \"\" }]);\n  const [monitor, setmonitor] = useState([{ monitorname: \"\", monitorsno: \"\" }]);\n  const [gcard, setgcard] = useState([{ gcardname: \"\", gcardsno: \"\" }]);\n  const [enetcard, setenetcard] = useState([\n    { enetcardname: \"\", enetcardsno: \"\" },\n  ]);\n  const [serialcard, setserialcard] = useState([\n    { serialcardname: \"\", serialcardsno: \"\" },\n  ]);\n  const [parallelcard, setparallelcard] = useState([\n    { parallelcardname: \"\", parallelcardsno: \"\" },\n  ]);\n  const [hbacard, sethbacard] = useState([{ hbacardname: \"\", hbacardsno: \"\" }]);\n  const [raidcontroller, setraidcontroller] = useState([\n    { raidcontrollername: \"\", raidcontrollersno: \"\" },\n  ]);\n  const [tapecontroller, settapecontroller] = useState([\n    { tapecontrollername: \"\", tapecontrollersno: \"\" },\n  ]);\n  const [others, setothers] = useState([{ othersname: \"\", otherssno: \"\" }]);\n  //asset\n\n  const [Business, setBusiness] = useState(\"\");\n  const [POnumber, setPOnumber] = useState(\"\");\n  const [POdate, setPOdate] = useState(\"\");\n  const [ContractFrom, setContractFrom] = useState(\"\");\n  const [ContractTo, setContractTo] = useState(\"\");\n  const [BillingFrom, setBillingFrom] = useState(\"\");\n  const [BillingTo, setBillingTo] = useState(\"\");\n  const [AMCRate, setAMCRate] = useState(\"\");\n  const [GST, setGST] = useState(\"\");\n  const [GSTAMOUNT, setGSTAMOUNT] = useState(\"\");\n  const [NetAmount, setNetAmount] = useState(\"\");\n\n  //////////////-------------------------------------------->Product name not in asset\n  const [product, setProduct] = useState(\"Server\");\n\n  ////////////---------------- INVENTORY state\n  const [inventory, setInventory] = useState([]);\n\n  //MODAL\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // table variable styles\n\n  const [activeRowID, setActiveRowID] = useState(-1);\n  const [secondactiveRowID, setSecondactiveRowID] = useState(-1);\n\n  // ---------------New States------------\n  const [itemtype, setItemtype] = useState(\"\"); //Full system vs item\n  const [selectedItem, setSelectedItem] = useState(\"\"); //the selected item category\n  const [data, setData] = useState([]); //for first table expansion\n  const [inventdata, setInventData] = useState([]); //for second table expansion\n  const [existswap, setExistswap] = useState([\n    {\n      name: \"Not Selected\",\n      sno: \"Not Selected\",\n    },\n  ]);\n  const [inventswap, setInventswap] = useState([\n    {\n      name: \"Not Selected\",\n      sno: \"Not Selected\",\n    },\n  ]);\n\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Update Call\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  // filterhooks\n  const [type, setType] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [toLocation, setToLocation] = useState(\"\");\n  const [LSTNo, setLSTNo] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [condition, setCondition] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // use effect to add fields to the item coming from asset\n  useEffect(() => {\n    let temp = data;\n    let thetype = selectedItem.toLowerCase();\n    let theitemandsystem = itemtype.toLowerCase();\n\n    temp.map((item, i) => {\n      item.name = item[`${thetype}name`];\n      item.sno = item[`${thetype}sno`];\n      item.type = thetype;\n      item.condition = \"Bad\";\n      item.systype = theitemandsystem;\n    });\n    console.log(temp);\n    setData(temp);\n    return () => {\n      \"Data Updation Done\";\n    };\n  }, [data]);\n\n  // -----use effect to pull new inventory list according to filters\n  useEffect(() => {\n    thegetter();\n  }, [selectedItem]);\n\n  async function thegetter() {\n    console.log(\"getter called\");\n    console.log(selectedItem);\n    let payload = {\n      pages: {\n        page: page,\n        limit: 1000000,\n      },\n      filters: {\n        type: selectedItem.toLowerCase(),\n        location: location,\n        condition: \"Good\",\n        searchtype: searchtype,\n        searchquery: searchquery,\n      },\n    };\n    // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n    try {\n      let response = await axios({\n        url: `${API}/inventory/${Emp.getId()}/getall`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data.out);\n      // setTotalResults(response.data.total);\n      // const { total, data } = response.data;\n      // console.log(data + \"Now\");\n\n      setInventData(response.data.out);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // -----getting inventory items\n\n  const getAsset = async () => {\n    try {\n      let res = await axios.post(`${API}/asset/${Emp.getId()}/getbyid`, {\n        id: id,\n      });\n      console.log(\"asset\", res.data);\n      let asset = res.data;\n      setProduct(asset.producttype);\n      setUnit({ _id: id, unitName: asset.unitName });\n      setCustomer({ _id: asset.customerId, customerName: asset.customerName });\n      setAccount({ _id: asset.accountId, accountName: asset.accountName });\n      ////------------------------>>>>>>>>\n      // setProduct(\"Server\");\n      ////////---------ASSET INFO\n      setBusiness(asset.business);\n      setPOnumber(asset.ponumber);\n      setAMCRate(asset.amcrate);\n      // Dates --------------------------\n      setPOdate(moment(asset.podate).format(\"YYYY-MM-DD\"));\n      setContractFrom(moment(asset.contractfrom).format(\"YYYY-MM-DD\"));\n      setContractTo(moment(asset.contractto).format(\"YYYY-MM-DD\"));\n      setBillingFrom(moment(asset.billingfrom).format(\"YYYY-MM-DD\"));\n      setBillingTo(moment(asset.billingto).format(\"YYYY-MM-DD\"));\n      ////////////------------>>>>>>>> misiing field GST(asset.gs)\n      setGSTAMOUNT(asset.gstamount);\n      setNetAmount(asset.netamount);\n      // setProduct(asset);\n      //////////////////////////////\n\n      setBrand(asset.product.brand);\n      setModel(asset.product.model);\n      setSerialNo(asset.product.serialno);\n      setOs(asset.product.os);\n      setCpu(asset.product.cpu);\n      setram(asset.product.ram);\n      if (asset.product.hdd.length == 0) sethdd([{ hddname: \"\", hddsno: \"\" }]);\n      else sethdd(asset.product.hdd);\n      if (asset.product.smps.length == 0)\n        setsmps([{ smpsname: \"\", smpssno: \"\" }]);\n      else setsmps(asset.product.smps);\n      if (asset.product.fan.length == 0) setfan([{ fanname: \"\", fansno: \"\" }]);\n      else setfan(asset.product.fan);\n      if (asset.product.motherboard.length == 0)\n        setmotherboard([{ motherboardname: \"\", motherboardsno: \"\" }]);\n      else setmotherboard(asset.product.motherboard);\n      if (asset.product.opticaldrive.length == 0)\n        setopticaldrive([{ opticaldrivename: \"\", opticaldrivesno: \"\" }]);\n      else setopticaldrive(asset.product.opticaldrive);\n      if (asset.product.keyboard.length == 0)\n        setkbd([{ kbdname: \"\", kbdsno: \"\" }]);\n      else setkbd(asset.product.keyboard);\n      if (asset.product.mouse.length == 0)\n        setmouse([{ mousename: \"\", mousesno: \"\" }]);\n      else setmouse(asset.product.mouse);\n      if (asset.product.monitor.length == 0)\n        setmonitor([{ monitorname: \"\", monitorsno: \"\" }]);\n      else setmonitor(asset.product.monitor);\n      if (asset.product.gcard.length == 0)\n        setgcard([{ gcardname: \"\", gcardsno: \"\" }]);\n      else setgcard(asset.product.gcard);\n      if (asset.product.enetcard.length == 0)\n        setenetcard([{ netcardname: \"\", enetcardsno: \"\" }]);\n      else setenetcard(asset.product.enetcard);\n      if (asset.product.serialcard.length == 0)\n        setserialcard([{ serialcardname: \"\", serialcardsno: \"\" }]);\n      else setserialcard(asset.product.serialcard);\n\n      if (asset.product.parallelcard.length == 0)\n        setparallelcard([{ parallelcardname: \"\", parallelcardsno: \"\" }]);\n      else setparallelcard(asset.product.parallelcard);\n\n      if (asset.product.hbacard.length == 0)\n        sethbacard([{ hbacardname: \"\", hbacardsno: \"\" }]);\n      else sethbacard(asset.product.hbacard);\n\n      if (asset.product.raidcontroller.length == 0)\n        setraidcontroller([{ raidcontrollername: \"\", raidcontrollersno: \"\" }]);\n      else setraidcontroller(asset.product.raidcontroller);\n\n      if (asset.product.tapecontroller.length == 0)\n        settapecontroller([{ tapecontrollername: \"\", tapecontrollersno: \"\" }]);\n      else settapecontroller(asset.product.tapecontroller);\n\n      if (asset.product.others.length == 0)\n        setothers([{ othersname: \"\", otherssno: \"\" }]);\n      else setothers(asset.product.others);\n    } catch (err) {\n      console.log(\"assetFind Error\", err);\n    }\n  };\n\n  ////// CALL\n\n  const [call, setCall] = useState({});\n\n  const getCall = async () => {\n    try {\n      let res = await axios.post(`${API}/call/${Emp.getId()}/getbyid`, {\n        id: callid,\n      });\n      console.log(\"call\", res.data);\n      setCall(res.data);\n    } catch (err) {\n      console.log(\"call Find Error\", err);\n    }\n  };\n\n  useEffect(() => {\n    getAsset();\n    getCall();\n  }, []);\n\n  const UpdatedModal = () => {\n    return (\n      <>\n        <Modal isOpen={submitModal} onClose={() => setSubmitModal(false)}>\n          <ModalHeader>Swap Successfull</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setSubmitModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const handleInventory = async () => {\n    let payload = { inventory, assetId: id, product: product };\n    console.log(payload);\n    try {\n      let update = await axios({\n        url: `${API}/inventory/${Emp.getId()}/assetupdate`,\n        method: \"POST\",\n        data: payload,\n      });\n      // setSubmitModal(true);\n      console.log(\"Done\");\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //functions\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // console.log(inventory);\n\n    let payload = {\n      business: Business,\n      producttype: product,\n      ponumber: POnumber,\n      podate: POdate,\n      contractfrom: ContractFrom,\n      contractto: ContractTo,\n      billingfrom: BillingFrom,\n      billingto: BillingTo,\n      amcrate: AMCRate,\n      gstperc: GST,\n      gstamount: GSTAMOUNT,\n      netamount: NetAmount,\n      ///------------------ cust info\n      // unitId: unit._id,\n      // unitName: unit.unitName,\n      // accountId: account._id,\n      // accountName: account.accountName,\n      // customerId: customer._id,\n      // customerName: customer.customerName,\n    };\n    if (payload.podate == \"Invalid date\") payload.podate = \"\";\n    if (payload.contractfrom == \"Invalid date\") payload.contractfrom = \"\";\n    if (payload.contractto == \"Invalid date\") payload.contractto = \"\";\n    if (payload.billingfrom == \"Invalid date\") payload.billingfrom = \"\";\n    if (payload.billingto == \"Invalid date\") payload.billingto = \"\";\n    let newproduct = {\n      brand: brand,\n      model: model,\n      serialno: serialno,\n      os: os,\n      cpu: cpu,\n      ram: ram,\n      hdd: hdd,\n      smps: smps,\n      fan: fan,\n      motherboard: motherboard,\n      opticaldrive: opticaldrive,\n      keyboard: kbd,\n      mouse: mouse,\n      monitor: monitor,\n      gcard: gcard,\n      enetcard: enetcard,\n      serialcard: serialcard,\n      parallelcard: parallelcard,\n      hbacard: hbacard,\n      raidcontroller: raidcontroller,\n      tapecontroller: tapecontroller,\n      others: others,\n    };\n    console.log(payload);\n\n    const data = { id: id, newasset: payload, newproduct: newproduct };\n    // console.log(API);\n    try {\n      let update = await axios({\n        url: `${API}/asset/${Emp.getId()}/update`,\n        method: \"POST\",\n        data: data,\n      });\n      handleInventory();\n      setSubmitModal(true);\n      console.log(\"Done\");\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const handleSwap = async () => {\n    let payload = {\n      existswap: existswap[0],\n      newswap: inventswap[0],\n      call: call,\n      type: selectedItem.toLowerCase(),\n    };\n\n    try {\n      let update = await axios({\n        url: `${API}/call/${Emp.getId()}/swapitems`,\n        method: \"POST\",\n        data: payload,\n      });\n\n      console.log(\"Done\");\n      setInventswap([\n        {\n          name: \"Not Selected\",\n          sno: \"Not Selected\",\n        },\n      ]);\n      setExistswap([\n        {\n          name: \"Not Selected\",\n          sno: \"Not Selected\",\n        },\n      ]);\n      getAsset();\n      setSubmitModal(true);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //DROPDOWN------------------------------------------------------------------------------------\n\n  const [isOpen, setIsOpen] = useState(false);\n  function toggleDropdown() {\n    setIsOpen(!isOpen);\n  }\n\n  const AssetBar = () => {\n    return (\n      <div className=\"dark:text-white my-4 \">\n        {/* Row 1  */}\n        {/* <div className=\"text-xl font-semibold\">Asset Information</div> */}\n        {/* Call Details */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-between lg:space-x-8 w-8/12\">\n          <div className=\"my-3 font-semibold\">\n            <span>Call Number :{call.callNo}</span>\n          </div>\n          <div className=\"my-3 font-semibold\">\n            <span>Contact Person:{call.contactPerson}</span>\n          </div>\n          <div className=\"my-3 font-semibold\">\n            <span>Date: {moment(call.date).format(\"DD-MM-YYYY\")}</span>\n          </div>\n        </div>\n        <div className=\"dark:text-gray-200 text-black flex flex-row  items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start lg:space-x-8  w-full \">\n          {/* Row - 1 */}\n          <div className=\"flex flex-col  text-sm my-1 w-full \">\n            <div>\n              <span className=\"font-semibold w-1/5\">Product Type :</span>{\" \"}\n              {product}\n            </div>\n            <div>\n              <span className=\"font-semibold w-1/5\">Customer : </span>{\" \"}\n              {customer.customerName}\n            </div>\n            <div>\n              <span className=\"font-semibold w-1/5\">Account :</span>{\" \"}\n              {account.accountName}\n            </div>\n            <div>\n              <span className=\"font-semibold w-1/5\">Unit : </span>{\" \"}\n              {unit.unitName}\n            </div>\n            <div>\n              <span className=\"font-semibold w-1/5\">Business : </span>{\" \"}\n              {Business}\n            </div>\n          </div>\n\n          {/*  Row 2 */}\n          <div className=\"flex flex-col  text-sm my-1 w-full \">\n            {kbd[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">KBD Model :</span>{\" \"}\n                {kbd[0].kbdname}\n              </div>\n            ) : null}\n\n            {kbd[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">KBD Serial: </span>{\" \"}\n                {kbd[0] ? kbd[0].kbdsno : \"\"}\n              </div>\n            ) : null}\n            {mouse[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Mouse Model :</span>{\" \"}\n                {mouse[0] ? mouse[0].mousename : \"\"}\n              </div>\n            ) : null}\n            {mouse[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Mouse Serial : </span>{\" \"}\n                {mouse[0] ? mouse[0].mousesno : \"\"}\n              </div>\n            ) : null}\n            {monitor[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Monitor : </span>{\" \"}\n                {monitor[0] ? monitor[0].monitorname : \"\"}\n              </div>\n            ) : null}\n          </div>\n          {/*  Row 3 */}\n          <div className=\" flex flex-col  text-sm my-1 w-full\">\n            {monitor[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">\n                  Monitor Serial :\n                </span>{\" \"}\n                {monitor[0] ? monitor[0].monitorsno : \"\"}\n              </div>\n            ) : null}\n\n            {smps[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">SMPS1 Model :</span>{\" \"}\n                {smps[0] ? smps[0].smpsname : \"\"}\n              </div>\n            ) : null}\n            {smps[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">\n                  SMPS1 Serial :{\" \"}\n                </span>{\" \"}\n                {smps[0] ? smps[0].smpssno : \"\"}\n              </div>\n            ) : null}\n            {motherboard[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">Motherboard: </span>{\" \"}\n                {motherboard[0] ? motherboard[0].motherboardname : \"\"}\n              </div>\n            ) : null}\n\n            {motherboard[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">MBD Serial : </span>\n                {motherboard[0] ? motherboard[0].motherboardsno : \"\"}\n              </div>\n            ) : null}\n          </div>\n          {/* Row 4 */}\n          <div className=\"flex flex-col  text-sm my-1 w-full \">\n            {hdd[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">HDD1 Model:</span>{\" \"}\n                {hdd[0] ? hdd[0].hddname : \"\"}\n              </div>\n            ) : null}\n            {hdd[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">HDD1 Serial :</span>{\" \"}\n                {hdd[0] ? hdd[0].hddsno : \"\"}\n              </div>\n            ) : null}\n\n            {hdd[1] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">HDD2 Model : </span>{\" \"}\n                {hdd[1] ? hdd[1].hddname : \"\"}\n              </div>\n            ) : null}\n\n            {hdd[1] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">HDD2 Serial: </span>{\" \"}\n                {hdd[1] ? hdd[1].hddsno : \"\"}\n              </div>\n            ) : null}\n            {\n              ram[\n                0 ? (\n                  <div>\n                    <span className=\"font-semibold w-1/5\">RAM1 Model : </span>{\" \"}\n                    {ram[0] ? ram[0].ramname : \"\"}\n                  </div>\n                ) : null\n              ]\n            }\n          </div>\n          {/* -----------Row 5---------- */}\n          <div className=\"flex flex-col  text-sm my-1 w-full \">\n            {ram[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">RAM1 Serial:</span>{\" \"}\n                {ram[0] ? ram[0].ramsno : \"\"}\n              </div>\n            ) : null}\n\n            {ram[1] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">RAM2 Model:</span>{\" \"}\n                {ram[1] ? ram[1].ramname : \"\"}\n              </div>\n            ) : null}\n\n            {ram[1] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">RAM2 Serial : </span>{\" \"}\n                {ram[1] ? ram[1].ramsno : \"\"}\n              </div>\n            ) : null}\n            {opticaldrive[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Optical Model: </span>{\" \"}\n                {opticaldrive[0] ? opticaldrive[0].opticaldrivename : \"\"}\n              </div>\n            ) : null}\n\n            {opticaldrive[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Optical Serial : </span>{\" \"}\n                {opticaldrive[0] ? opticaldrive[0].opticaldrivesno : \"\"}\n              </div>\n            ) : null}\n          </div>\n        </div>\n\n        {/* <hr className=\"my-4\" /> */}\n        <div className=\" text-sm\">\n          <div className=\"dark:text-gray-200 text-black flex flex-row flex-wrap items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start lg:space-x-8  w-full \">\n            {/* /////////////////////////////// . PRODUCT INFO  ///////////////////////////////////////////// */}\n            <div className=\"flex flex-col lg:flex-row items-center justify-between lg:space-x-8 w-8/12\">\n              <div className=\"my-3 font-semibold\">\n                <span>Brand :{brand}</span>\n              </div>\n              <div className=\"my-3 font-semibold\">\n                <span>Model:{model}</span>\n              </div>\n              <div className=\"my-3 font-semibold\">\n                <span>Serial Number: {serialno}</span>\n              </div>\n\n              {product == \"Laptop\" ||\n              product == \"Server\" ||\n              product == \"Desktop\" ? (\n                <>\n                  <div className=\"font-semibold\">\n                    <span>Operating System :{os}</span>\n                  </div>\n                </>\n              ) : null}\n            </div>\n            <br />\n          </div>\n        </div>\n        {/* //////////////////////////////////////////////////////////////////////////// */}\n      </div>\n    );\n  };\n\n  const InvTable = (items, activeRowID, setActiveRowID, setExistswap) => {\n    return (\n      <div className=\" bg-gray-200 dark:bg-gray-700 p-3\">\n        <div className=\"mb- mt-4\">\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n          <TableContainer className=\"mt-4\">\n            <Table>\n              <TableHeader>\n                <tr>\n                  <TableCell>Type</TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Serial Number</TableCell>\n                  <TableCell>Select</TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {items.map((user, i) => (\n                  <TableRow\n                    className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                      activeRowID == user._id\n                        ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                        : \"white\"\n                    } `}\n                    key={i}\n                    onClick={() => {\n                      // setActiveRowID(user._id);\n                      // console.log(\"the id is \" + user._id);\n                      // setSelectedProd(user);\n                      // setAssetDetails(user);\n                      // console.log(user.product.keyboard[0].kbdname);\n                    }}\n                  >\n                    <TableCell className=\"w-8\">\n                      <div className=\"flex items-center text-sm \">\n                        {/* <Avatar\n                          className=\"hidden ml-2 mr-3 md:block\"\n                          src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                          alt=\"User image\"\n                        /> */}\n                        <div>\n                          <p className=\"font-semibold\">{user.type}</p>\n                          {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                            {user.accountName}\n                          </p> */}\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.name}</span>\n                    </TableCell>\n\n                    <TableCell>\n                      <span className=\"text-sm\">{user.sno}</span>\n                    </TableCell>\n                    <TableCell>\n                      <Button\n                        layout=\"outline\"\n                        className=\"dark:border-green-700 border-green-400\"\n                        onClick={() => {\n                          setExistswap([user]);\n                          setActiveRowID(-1);\n                        }}\n                      >\n                        Select\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n        </div>\n\n        {/* ------------------------------------Bottom Bar---------------------------------- */}\n      </div>\n    );\n  };\n\n  const AssetItemPick = () => {\n    return (\n      <div>\n        {/* <div className=\"text-xl dark:text-white\">Swap Items</div> */}\n\n        {/* -----Type Selection---- */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-6 \">\n            <div class=\"relative  \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={itemtype}\n                onChange={(e) => {\n                  setItemtype(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Select Inventory Category\n                </option>\n\n                <option value=\"Full System\" disabled>\n                  Full System\n                </option>\n                <option value=\"Item\">Item</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* ---------------------------Product Drop Down-------------------------------------- */}\n            <div className=\"relative z-40 \">\n              <button\n                onClick={() => {\n                  if (itemtype != \"\") {\n                    setIsOpen(!isOpen);\n                  }\n                }}\n                className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                aria-label=\"Notifications\"\n                aria-haspopup=\"true\"\n              >\n                {selectedItem ? selectedItem : \"Pick Item\"}\n              </button>\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n              <Dropdown isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                {itemtype == \"Full\" ? (\n                  <>\n                    {\" \"}\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Console\");\n                      }}\n                    >\n                      <span>Console</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"DMP\");\n                      }}\n                    >\n                      <span>DMP</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Inkjet\");\n                      }}\n                    >\n                      <span>Inkjet</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"KVM\");\n                      }}\n                    >\n                      <span>KVM</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Laptop\");\n                      }}\n                    >\n                      <span>Laptop</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Laser\");\n                      }}\n                    >\n                      <span>Laser</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"LMP\");\n                      }}\n                    >\n                      <span>LMP</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Module\");\n                      }}\n                    >\n                      <span>Module</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Router\");\n                      }}\n                    >\n                      <span>Router</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Scanner\");\n                      }}\n                    >\n                      <span>Scanner</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Server\");\n                      }}\n                    >\n                      <span>Server</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Desktop\");\n                      }}\n                    >\n                      <span>Desktop</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Storage\");\n                      }}\n                    >\n                      <span>Storage</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Switch\");\n                      }}\n                    >\n                      <span>Switch</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"UPS\");\n                      }}\n                    >\n                      <span>UPS</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setSelectedItem(\"Others\");\n                      }}\n                    >\n                      <span>Others</span>\n                    </DropdownItem>\n                  </>\n                ) : (\n                  <>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Mouse\");\n                        // thegetter();\n                        setData(mouse);\n                      }}\n                    >\n                      <span>Mouse</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Kbd\");\n                        setData(kbd);\n                      }}\n                    >\n                      <span>Keyboard</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Monitor\");\n                        setData(monitor);\n                      }}\n                    >\n                      <span>Monitor</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Cpu\");\n                        setData(cpu);\n                      }}\n                    >\n                      <span>Cpu</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Ram\");\n                        setData(ram);\n                      }}\n                    >\n                      <span>Ram</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Fan\");\n                        setData(fan);\n                      }}\n                    >\n                      <span>Fan</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Motherboard\");\n                        setData(motherboard);\n                      }}\n                    >\n                      <span>Motherboard</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"SMPS\");\n                        setData(smps);\n                      }}\n                    >\n                      <span>SMPS</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"HDD\");\n                        setData(hdd);\n                      }}\n                    >\n                      <span>HDD</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Gcard\");\n                        setData(gcard);\n                      }}\n                    >\n                      <span>Gcard</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"EnetCard\");\n                        setData(enetcard);\n                      }}\n                    >\n                      <span>Enet Card</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"SerialCard\");\n                        setData(serialcard);\n                      }}\n                    >\n                      <span>Serial Card</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"ParalellCard\");\n                        setData(parallelcard);\n                      }}\n                    >\n                      <span>Paralell Card</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"OpticalDrive\");\n                        setData(opticaldrive);\n                      }}\n                    >\n                      <span>Optical Drive</span>\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={() => {\n                        setIsOpen(false);\n                        setActiveRowID(-1);\n                        setSelectedItem(\"Others\");\n                        setData(others);\n                      }}\n                    >\n                      <span>Others</span>\n                    </DropdownItem>\n                  </>\n                )}\n              </Dropdown>\n            </div>\n            <Button\n              layout=\"outline\"\n              className=\"dark:border-green-700 border-green-400\"\n              onClick={() => {\n                console.log(\"Swap\");\n                handleSwap();\n              }}\n            >\n              Swap\n            </Button>\n          </div>\n        </div>\n\n        {/* Selection Modules */}\n        <div className=\"flex flex-row items-start space-x-2\">\n          {/* -------Existing Item Table ----------*/}\n\n          <TableContainer className=\"mt-4\">\n            <Table>\n              <TableHeader>\n                <tr className=\"flex flex-row justify-between\">\n                  <TableCell>Type</TableCell>\n                  <TableCell>Model</TableCell>\n                  <TableCell>Serial Number</TableCell>\n\n                  <TableCell>\n                    <span\n                      className=\"cursor-pointer\"\n                      // onClick={() => setActiveRowID(-1)}\n                    >\n                      Items\n                    </span>\n                  </TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {existswap.map((user, i) => (\n                  <div className=\"flex flex-col justify-around\">\n                    <TableRow\n                      className={`hover:shadow-lg dark:hover:bg-gray-600 flex flex-row justify-between  ${\n                        activeRowID == user._id\n                          ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                          : \"white\"\n                      } `}\n                      key={i}\n                      onClick={() => {\n                        // setActiveRowID(i);\n                      }}\n                    >\n                      <TableCell className=\"w-8\">\n                        <div className=\"flex items-center text-sm \">\n                          <div>\n                            <p className=\"font-semibold\">{selectedItem}</p>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <span className=\"text-sm\">{user.name}</span>\n                      </TableCell>\n\n                      <TableCell>\n                        <span className=\"text-sm\">{user.sno}</span>\n                      </TableCell>\n\n                      <TableCell className=\"text-center \">\n                        <Button\n                          // layout=\"link\"\n                          size=\"icon\"\n                          aria-label=\"DropDown\"\n                          onClick={() => {\n                            console.log(activeRowID);\n                            if (activeRowID != -1) {\n                              setActiveRowID(-1);\n                            } else {\n                              setActiveRowID(i);\n                            }\n                            // setActiveRowID(-1);\n                          }}\n                          className=\"rounded-lg m-1\"\n                        >\n                          <DropdownIcon\n                            className=\"w-5 h-5\"\n                            aria-hidden=\"true\"\n                          />\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n\n                    {activeRowID == i\n                      ? InvTable(\n                          data,\n                          activeRowID,\n                          setActiveRowID,\n                          setExistswap\n                        )\n                      : null}\n                  </div>\n                ))}\n              </TableBody>\n            </Table>\n            {/* <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter> */}\n          </TableContainer>\n\n          {/*----------- Inventory Selection Table ----------- */}\n\n          <TableContainer className=\"mt-4\">\n            <Table>\n              <TableHeader>\n                <tr className=\"flex flex-row justify-between\">\n                  <TableCell>Type</TableCell>\n                  <TableCell>Model</TableCell>\n                  <TableCell>Serial Number</TableCell>\n\n                  <TableCell>\n                    <span\n                      className=\"cursor-pointer\"\n                      // onClick={() => setActiveRowID(-1)}\n                    >\n                      Items\n                    </span>\n                  </TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {inventswap.map((user, i) => (\n                  <div className=\"flex flex-col justify-around\">\n                    <TableRow\n                      className={`hover:shadow-lg dark:hover:bg-gray-600 flex flex-row justify-between  ${\n                        secondactiveRowID == user._id\n                          ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                          : \"white\"\n                      } `}\n                      key={i}\n                      onClick={() => {\n                        // setActiveRowID(i);\n                      }}\n                    >\n                      <TableCell className=\"w-8\">\n                        <div className=\"flex items-center text-sm \">\n                          <div>\n                            <p className=\"font-semibold\">{selectedItem}</p>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <span className=\"text-sm\">{user.name}</span>\n                      </TableCell>\n\n                      <TableCell>\n                        <span className=\"text-sm\">{user.sno}</span>\n                      </TableCell>\n\n                      <TableCell className=\"text-center \">\n                        <Button\n                          // layout=\"link\"\n                          size=\"icon\"\n                          aria-label=\"DropDown\"\n                          onClick={() => {\n                            if (secondactiveRowID != -1) {\n                              setSecondactiveRowID(-1);\n                            } else {\n                              setSecondactiveRowID(i);\n                            }\n                            // setActiveRowID(-1);\n                          }}\n                          className=\"rounded-lg m-1\"\n                        >\n                          <DropdownIcon\n                            className=\"w-5 h-5\"\n                            aria-hidden=\"true\"\n                          />\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n\n                    {secondactiveRowID == i\n                      ? InvTable(\n                          inventdata,\n                          secondactiveRowID,\n                          setSecondactiveRowID,\n                          setInventswap\n                        )\n                      : null}\n                  </div>\n                ))}\n              </TableBody>\n            </Table>\n            {/* <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter> */}\n          </TableContainer>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {AssetBar()}\n      {/* <div className=\" \">\n        <div className=\"text-xl dark:text-white\">Call</div>\n        <div className=\"dark:text-gray-200 text-black flex flex-row flex-wrap items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start lg:space-x-8  w-full \">\n          {/* /////////////////////////////// . PRODUCT INFO  ///////////////////////////////////////////// */}\n      {/* <div className=\"flex flex-col lg:flex-row items-center justify-between lg:space-x-8 w-8/12\">\n            <div className=\"my-3 font-semibold\">\n              <span>Call Number :{call.callNo}</span>\n            </div>\n            <div className=\"my-3 font-semibold\">\n              <span>Contact Person:{call.contactPerson}</span>\n            </div>\n            <div className=\"my-3 font-semibold\">\n              <span>Date: {call.date}</span>\n            </div>\n          </div> */}\n      {/* <br /> */}\n      {/* </div> */}\n      {/* </div> */}\n      {AssetItemPick()}\n      {UpdatedModal()}\n    </>\n  );\n}\n\nexport default UpdateCall;\n"],"sourceRoot":""}