{"version":3,"sources":["pages/Vendor/VendorUpdate.js","components/Modal/CustomerCreateModal.js","helpers/unitHelper.js","components/Modal/AddUnitModal.js"],"names":["VendorUpdate","id","useParams","useHistory","useState","isReviewModalOpen","setIsReviewModalOpen","isReqFieldModal","setIsReqFieldModal","setTopHeading","useContext","TopBarContext","name","aadharNo","PANNo","GSTNo","address","district","state","PIN","values","setValues","useEffect","thegetter","a","data","Axios","url","API","Emp","getId","method","res","console","log","handleChange","e","target","value","submitItem","payload","update","then","_id","catch","err","className","onChange","contactPerson","type","phno1","phno2","bankName","bankAcName","bankAcNo","branch","IFSCCode","creditDays","onClick","aria-label","aria-haspopup","isOpen","onClose","CustomerCreateModal","isModalOpen","setIsModalOpen","setCustomer","customer","customers","setCustomers","tabIndex","setTabIndex","search","setSearch","handleSubmit","preventDefault","role","axios","response","pickCustomer","customerName","selectedIndex","onSelect","ind","onSubmit","placeholder","map","i","key","unitCreate","newunit","post","unit","error","status","errors","AddUnitModal","account","setAccount","accounts","setAccounts","accountName","customerId","accs","pickAccount"],"mappings":"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","file":"static/js/43.a61b854a.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport Axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\n\nimport { signup, signin, authenticate } from \"../../helpers/auth\";\nimport CustomerCreateModal from \"../../components/Modal/CustomerCreateModal\";\nimport EmpProfile from \"../../helpers/auth/EmpProfile\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport { resetIdCounter } from \"react-tabs\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport { unitCreate } from \"../../helpers/unitHelper\";\nimport AddUnitModal from \"../../components/Modal/AddUnitModal\";\nimport { useHistory, useParams } from \"react-router-dom\";\n/////////////----------------->>>>>> bug <<<<<------------customerList refresh--------------------------\n\nfunction VendorUpdate() {\n  const { id } = useParams();\n  let history = useHistory();\n  // dropdown states\n  const [accType, setAccType] = useState(0); /////// 0-Customer 1-Account 2-Unit\n  const [sex, setSex] = useState(\"Male\");\n  const [dob, setDob] = useState(\"\");\n  const [location, setLocation] = useState(\"All\");\n\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [isErrModalOpen, setIsErrModalOpen] = useState(false);\n  const [isReqFieldModal, setIsReqFieldModal] = useState(false);\n  const { setTopHeading } = useContext(TopBarContext);\n\n  const [values, setValues] = useState({\n    //both\n\n    name:\"\",\n    aadharNo:\"\",\n    PANNo:\"\",\n    GSTNo:\"\",\n    address:\"\",\n    district:\"\",\n    state:\"\",\n    PIN:\"\",\n\n    // ---new ones\n  });\n\n\n  // ----------------------Heading Use Effect-------------\n\n  useEffect(() => {\n    setTopHeading(\"Update Vendor\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    thegetter();\n  }, [])\n\n  const thegetter = async () => {\n    let data = { id: id };\n    // console.log(API);\n    try {\n      let res = await Axios({\n        url: `${API}/vendor/${Emp.getId()}/getById`,\n        method: \"POST\",\n        data: data,\n      });\n\n      setValues(res.data);\n\n      console.log(\"Done\", res.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  \n\n  const submitItem = async () => {\n    if (values.name === \"\") {\n        setIsReqFieldModal(true);\n      console.log(\"missing inputs\");\n      return;\n    }\n    let payload={\n      id:id,\n      update:values\n    }\n  \n    await Axios({\n      url: `${API}/vendor/${Emp.getId()}/update`,\n      method: \"POST\",\n      data: payload,\n    })\n      .then((data) => {\n        console.log(\"Added\", data._id);\n        setIsReviewModalOpen(true);\n        })\n      .catch((err) => {\n        console.log(\"err\", err);\n        // setErr({ ...err });\n      });\n  };\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>\n            Vendor Updated Successfully!\n          </ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              // onClick={() => setIsReviewModalOpen(false)}\n              onClick={() => setIsReviewModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const ReqFieldErrModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReqFieldModal}\n          onClose={() => setIsReqFieldModal(false)}\n        >\n          <ModalHeader>Required fields are not filled!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReqFieldModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //ASSET\n  const addForm = () => {\n    return (\n      <div className=\"px-4 py-3 mt-4 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Add Vendor</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n  \n       {/* -------Row - 1 ---------------------- */}\n       <div className=\"flex-row flex space-x-3 mt-3 mb-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Name*</span>\n              <Input\n                className=\"mt-1\"\n                value={values.name}\n                onChange={handleChange(\"name\")}\n              />\n            </Label>{\" \"}\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Contact Person</span>\n              <Input\n                className=\"mt-1\"\n                value={values.contactPerson}\n                onChange={handleChange(\"contactPerson\")}\n              />\n            </Label>{\" \"}\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>GST Number</span>\n              <Input\n                className=\"mt-1\"\n                value={values.GSTNo}\n                onChange={handleChange(\"GSTNo\")}\n              />\n            </Label>\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>PAN Number</span>\n              <Input\n                className=\"mt-1\"\n                value={values.PANNo}\n                onChange={handleChange(\"PANNo\")}\n              />\n            </Label>{\" \"}\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Aadhar Number</span>\n              <Input\n                className=\"mt-1\"\n                value={values.aadharNo}\n                onChange={handleChange(\"aadharNo\")}\n              />\n            </Label>{\" \"}\n          </div>\n        </div>\n        {/* ---------------Row 4 ---------------- */}\n        <div className=\"flex-row flex space-x-3 mt-3 mb-2\">\n          <div className=\"flex flex-col w-full \">\n            <Label className=\"w-full\">\n              <span>Address</span>\n              <Input\n                className=\"mt-1\"\n                value={values.address}\n                onChange={handleChange(\"address\")}\n              />\n            </Label>{\" \"}\n          </div>\n\n          <div className=\"flex flex-col w-full \">\n            <Label className=\"w-full\">\n              <span>PIN Number</span>\n              <Input\n                className=\"mt-1\"\n                value={values.PIN}\n                onChange={handleChange(\"PIN\")}\n              />\n            </Label>{\" \"}\n          </div>\n          {/* <HelperText valid={false}>{digiterr.contactNo}</HelperText> */}\n        </div>\n\n        {/* ---------------Row 3 ---------------- */}\n        <div className=\"flex-row flex space-x-3 mt-3 mb-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>District</span>\n              <Input\n                className=\"mt-1\"\n                value={values.district}\n                onChange={handleChange(\"district\")}\n              />\n            </Label>\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>State</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.state}\n                onChange={handleChange(\"state\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Phone Number 1</span>\n              <Input\n                className=\"mt-1\"\n                value={values.phno1}\n                onChange={handleChange(\"phno1\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Phone Number 2</span>\n              <Input\n                className=\"mt-1\"\n                value={values.phno2}\n                onChange={handleChange(\"phno2\")}\n              />\n            </Label>\n          </div>\n\n          {/* <HelperText valid={false}>{digiterr.contactNo}</HelperText> */}\n        </div>\n\n           {/* ---------------Row 4 ---------------- */}\n           <div className=\"flex-row flex space-x-3 mt-3 mb-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Bank Name</span>\n              <Input\n                className=\"mt-1\"\n                value={values.bankName}\n                onChange={handleChange(\"bankName\")}\n              />\n            </Label>\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Acc Name</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.bankAcName}\n                onChange={handleChange(\"bankAcName\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Acc No.</span>\n              <Input\n                className=\"mt-1\"\n                value={values.bankAcNo}\n                onChange={handleChange(\"bankAcNo\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Branch</span>\n              <Input\n                className=\"mt-1\"\n                value={values.branch}\n                onChange={handleChange(\"branch\")}\n              />\n            </Label>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>IFSC Code</span>\n              <Input\n                className=\"mt-1\"\n                value={values.IFSCCode}\n                onChange={handleChange(\"IFSCCode\")}\n              />\n            </Label>\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Credit Days</span>\n              <Input\n                className=\"mt-1\"\n                value={values.creditDays}\n                onChange={handleChange(\"creditDays\")}\n              />\n            </Label>\n          </div>\n\n          {/* <HelperText valid={false}>{digiterr.contactNo}</HelperText> */}\n        </div>\n        \n      \n        {/* ///////////////////////////////////////////////////////// */}\n        <Button\n          onClick={submitItem}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4\"\n        >\n          Update Vendor\n        </Button>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {/* <PageTitle>Add Customer</PageTitle> */}\n      {addForm()}\n\n      {/* {productPicker()} */}\n      {ReviewSubmit()}\n\n      {ReqFieldErrModal()}\n    </>\n  );\n}\n\nexport default VendorUpdate;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport { API } from \"../../backendapi\";\n\nexport default function CustomerCreateModal({\n  isModalOpen,\n  setIsModalOpen,\n  customer,\n  setCustomer,\n}) {\n  const [customers, setCustomers] = useState([]);\n  // const [accounts, setAccounts] = useState([]);\n  // const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n  const [tempbadgeView, setTempBadgeView] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setIsModalOpen(false);\n    // setTempBadgeView(customer.customerName);\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>Select Customer</ModalHeader>\n        <ModalBody className=\"overflow-y-scroll h-64\">\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n          </Tabs>\n        </ModalBody>\n        <ModalFooter>\n          {/* <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {tempbadgeView}\n          </Badge> */}\n          {/* <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge> */}\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import Axios from \"axios\";\nimport { API } from \"../backendapi\";\nimport Emp from \"../helpers/auth/EmpProfile\";\n\nexport const unitCreate = (newunit) => {\n  return Axios.post(`${API}/unit/${Emp.getId()}/create`, newunit)\n    .then((unit) => {\n      console.log(\"h\", unit.data);\n      return unit.data;\n    })\n    .catch((error) => {\n      console.log(\"ERRRROs\");\n      if (error.response) {\n        console.log(error.response.data);\n        console.log(error.response.status);\n        throw error.response.data.errors;\n      }\n    });\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport { API } from \"../../backendapi\";\n\nexport default function AddUnitModal({\n  isModalOpen,\n  setIsModalOpen,\n\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  // const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select {tabIndex == 0 ? <>Customer</> : <>Account</>}\n        </ModalHeader>\n        <ModalBody className=\"overflow-y-scroll h-64\">\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n          </Tabs>\n        </ModalBody>\n        <ModalFooter>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              // setRefresh(!refresh);\n\n              setAccounts([]);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}