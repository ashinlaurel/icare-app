{"version":3,"sources":["pages/Inventory/Inventory.js","components/Modal/AssetFilters/CustomerSelection.js"],"names":["Inventory","useState","isDeleteModalOpen","setIsDeleteModalOpen","deleteId","setDeleteId","useContext","BottomBarContext","setBBarOpen","bbaropen","setAssetDetails","assetdetails","activerowid","setActiveRowId","TopBarContext","setTopHeading","topheading","page","setPage","data","setData","refresh","setRefresh","type","setType","location","setLocation","condition","setCondition","selectedprod","searchtype","searchquery","setSearchQuery","totalResults","setTotalResults","useEffect","a","console","log","payload","pages","limit","filters","axios","url","API","Emp","getId","method","response","out","total","isOpen","onClose","className","onClick","id","temp","filter","x","_id","class","value","onChange","e","target","disabled","selected","xmlns","viewBox","d","onSubmit","preventDefault","placeholder","map","user","i","key","name","sno","invnumber","layout","size","aria-label","to","aria-hidden","resultsPerPage","label","p","CustomerSelection","isModalOpen","setIsModalOpen","unit","setUnit","account","setAccount","customer","setCustomer","customers","setCustomers","accounts","setAccounts","units","setUnits","tabIndex","setTabIndex","search","setSearch","handleChange","handleSubmit","role","pickCustomer","customerName","accountName","unitName","Axios","post","customerId","accs","pickAccount","accountId","u","pickUnit","selectedIndex","onSelect","ind"],"mappings":"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","file":"static/js/42.4d485616.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport { EditIcon, TrashIcon } from \"../../icons\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  Button,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport { API } from \"../../backendapi\";\nimport CustomerSelection from \"../../components/Modal/AssetFilters/CustomerSelection\";\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\nimport { Link } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n\nfunction Inventory() {\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [deleteId, setDeleteId] = useState(0);\n\n  const { bbaropen, setBBarOpen, setAssetDetails, assetdetails } = useContext(\n    BottomBarContext\n  );\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const [floatbox, setFloatBox] = useState(false);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  // dropdown and modals\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenTwo, setIsOpenTwo] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [type, setType] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  const DeleteModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isDeleteModalOpen}\n          onClose={() => setIsDeleteModalOpen(false)}\n        >\n          <ModalHeader>Are you sure you want to delete!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                try {\n                  let response = await axios({\n                    url: `${API}/inventory/${Emp.getId()}/delete`,\n                    method: \"POST\",\n                    data: { id: deleteId },\n                  });\n                  console.log(response.data);\n                  let temp = data.filter((x) => x._id != deleteId);\n                  setData(temp);\n                  setIsDeleteModalOpen(false);\n\n                  // setData(response.data);\n                } catch (error) {\n                  throw error;\n                }\n              }}\n            >\n              Confirm Delete\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n  // -------Enabling Bottom Bar----\n  useEffect(() => {\n    setBBarOpen(1);\n    return () => {\n      setBBarOpen(0);\n      setAssetDetails({});\n    };\n  }, []);\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Inventory\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          type: type,\n          location: location,\n          condition: condition,\n          searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/inventory/${Emp.getId()}/getall`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, location, condition, type, refresh]);\n\n  console.log(selectedprod);\n\n  return (\n    <>\n      {DeleteModal()}\n\n      <div className=\"mb-64 mt-4\">\n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-2 \">\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={type}\n                onChange={(e) => {\n                  setType(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Item Type\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Mouse\">Mouse</option>\n                <option value=\"Keyboard\">Keyboard</option>\n                <option value=\"Monitor\">Monitor</option>\n                <option value=\"Cpu\">Cpu</option>\n                <option value=\"Ram\">Ram</option>\n                <option value=\"Fan\">Fan</option>\n                <option value=\"Motherboard\">Motherboard</option>\n                <option value=\"SMPS\">SMPS</option>\n                <option value=\"HDD\">HDD</option>\n                <option value=\"SMPS\">SMPS</option>\n                <option value=\"GCard\">Gcard</option>\n                <option value=\"EnetCard\">Enet Card</option>\n                <option value=\"SerialCard\">Serial Card</option>\n                <option value=\"ParalellCard\">Paralell Card</option>\n                <option value=\"OpticalDrive\">Optical Drive</option>\n                <option value=\"Others\">Others</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* -----------------------------------------Location ----------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={location}\n                onChange={(e) => {\n                  setLocation(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Location\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayum\">Kottayum</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* ---------------------------Condition Drop Down-------------------------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={condition}\n                onChange={(e) => {\n                  setCondition(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Condition\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Good\">Good</option>\n                <option value=\"Bad\">Bad</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search\"\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Type</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Serial Number</TableCell>\n                <TableCell>Location</TableCell>\n                <TableCell>Inv Number</TableCell>\n                <TableCell>Condition</TableCell>\n                <TableCell>Edit/Delete</TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <TableRow\n                  className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                    activerowid == user._id\n                      ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                      : \"white\"\n                  } `}\n                  key={i}\n                  onClick={() => {\n                    setActiveRowId(user._id);\n                    // console.log(\"the id is \" + user._id);\n                    // setSelectedProd(user);\n                    // setAssetDetails(user);\n                    // console.log(user.product.keyboard[0].kbdname);\n                  }}\n                >\n                  <TableCell className=\"w-8\">\n                    <div className=\"flex items-center text-sm \">\n                      {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                      <div>\n                        <p className=\"font-semibold\">{user.type}</p>\n                        {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p> */}\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.name}</span>\n                  </TableCell>\n\n                  <TableCell>\n                    <span className=\"text-sm\">{user.sno}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.location}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.invnumber}</span>\n                  </TableCell>\n                  <TableCell>\n                    <Badge\n                      type={user.condition == \"Good\" ? \"primary\" : \"danger\"}\n                    >\n                      {user.condition}\n                    </Badge>\n                  </TableCell>\n\n                  <TableCell>\n                    <div className=\"flex items-center space-x-4\">\n                      <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                        <Link\n                          key={user._id}\n                          to={`/app/unit/update/${user._id}`}\n                        >\n                          <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                        </Link>{\" \"}\n                      </Button>\n\n                      <Button\n                        layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"Delete\"\n                        onClick={async () => {\n                          console.log(\"delete Asset\");\n                          setIsDeleteModalOpen(true);\n                          setDeleteId(user._id);\n                        }}\n                      >\n                        <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n}\n\nexport default Inventory;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../../backendapi\";\n\nexport default function CustomerSelection({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n  refresh,\n  setRefresh,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      //   setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      //   setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody>\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              setRefresh(!refresh);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}