{"version":3,"sources":["components/Modal/SelectEmployeeModal.js","pages/Employee/PaySalary.js","components/Modal/EngineerListModal.js"],"names":["SelectEmployeeModal","isModalOpen","setIsModalOpen","setEmployee","useState","values","setValues","useEffect","console","log","Axios","post","API","Emp","getId","then","users","data","temp","map","user","push","catch","err","isOpen","onClose","i","key","className","onClick","employeeName","email","layout","PaySalary","selectEngModal","setSelectEngModal","submitmodal","setSubmitModal","useContext","TopBarContext","setTopHeading","topheading","clearvalues","queryID","employeeID","date","PFNo","ESINo","UANNo","Basic","DA","HRAperc","rent","AccountName","BankName","BankAcNo","IFSCCode","BranchName","Date","thedate","BplusDA","EligibleDays","PerformanceAllowance","Incentive","Bonus","GrossSalary","HRA","EmplPF","EmplESI","ExtraMobileUsage","LostDamage","OtherDeductions","Deduction","TakeHomeSalary","EmployerPF","EmployerESI","CTC","salvalues","setSalValues","daysInThisMonth","now","getFullYear","getMonth","getDate","parseFloat","parseInt","toFixed","useMemo","handleChange","name","e","target","value","handleSalChange","handleSubmit","a","newsalary","_id","url","method","aria-label","aria-haspopup","type","readOnly","onChange","placeholder","SalaryDetailsForm","EngineerListModal","setEngineer","nextModal","enggName"],"mappings":"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","file":"static/js/50.33f46ced.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { API } from \"../../backendapi\";\nimport Emp from \"../../helpers/auth/EmpProfile\";\n\nexport default function SelectEmployeeModal({\n  isModalOpen,\n  setIsModalOpen,\n  setEmployee,\n}) {\n  const [values, setValues] = useState([]);\n  useEffect(() => {\n    console.log(\"HERERRE\");\n    Axios.post(`${API}/admin/${Emp.getId()}/getAllEmpData`)\n      .then((users) => {\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        setValues(temp);\n      })\n      .catch((err) => {\n        console.log(\"axiosErr\", err);\n      });\n  }, []);\n\n  const userTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Name</TableCell>\n              <TableCell>Email</TableCell>\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {values.map((user, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-blue-300 dark:hover:bg-gray-100 bg-opacity-25 \"\n                onClick={() => {\n                  console.log(user);\n                  setEmployee(user);\n\n                  setIsModalOpen(false);\n                  //   nextModal(true)\n                }}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{user.employeeName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{user.email}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          {/* <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            /> */}\n        </TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>Select Employee</ModalHeader>\n        <ModalBody>{userTable()}</ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Cancel\n          </Button>\n          <Button className=\"w-full sm:w-auto\">Accept</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useContext, useEffect, useMemo } from \"react\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\n\nimport { Card, CardBody } from \"@windmill/react-ui\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport EngineerListModal from \"../../components/Modal/EngineerListModal\";\nimport SelectEmployeeModal from \"../../components/Modal/SelectEmployeeModal\";\nimport Axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nconst PaySalary = () => {\n  const [selectEngModal, setSelectEngModal] = useState(false);\n  const [submitmodal, setSubmitModal] = useState(false);\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n  //   const [employee, setEmployee] = useState([]);\n  const clearvalues = {\n    queryID: \"\",\n    employeeID: \"\",\n    employeeName: \"\",\n    date: \"\",\n    PFNo: \"\",\n    ESINo: \"\",\n    UANNo: \"\",\n    Basic: \"\",\n    DA: \"\",\n    // BplusDA: values.BplusDA,\n    HRAperc: \"\",\n    rent: \"\",\n    AccountName: \"\",\n    BankName: \"\",\n    BankAcNo: \"\",\n    IFSCCode: \"\",\n    BranchName: \"\",\n  };\n  const [values, setValues] = useState(clearvalues);\n  const [thedate, setThedate] = useState(new Date());\n  const [salvalues, setSalValues] = useState({\n    BplusDA: \"\",\n    EligibleDays: \"\",\n    PerformanceAllowance: \"0\",\n    Incentive: \"0\",\n    Bonus: \"0\",\n    GrossSalary: \"\",\n    HRA: \"\",\n    EmplPF: \"\",\n    EmplESI: \"\",\n    ExtraMobileUsage: \"0\",\n    LostDamage: \"0\",\n    OtherDeductions: \"0\",\n    Deduction: \"\",\n    TakeHomeSalary: \"\",\n    EmployerPF: \"\",\n    EmployerESI: \"\",\n    CTC: \"\",\n  });\n\n  // useEffect(() => {\n  //   let tempdays = daysInThisMonth();\n  //   setSalValues({ ...salvalues, EligibleDays: tempdays });\n  //   return () => {\n  //     console.log(\"done\");\n  //   };\n  // }, []);\n\n  // ------------Calculations ------------\n  useEffect(() => {\n    setSalValues({\n      ...salvalues,\n      BplusDA: parseFloat(\n        parseInt(values.Basic) *\n          (1 + parseInt(values.DA) / 100) *\n          (parseInt(salvalues.EligibleDays) / daysInThisMonth())\n      ).toFixed(2),\n      HRA: parseFloat(\n        parseInt(salvalues.BplusDA) * (parseInt(values.HRAperc) / 100)\n      ).toFixed(2),\n      GrossSalary: parseFloat(\n        parseInt(salvalues.PerformanceAllowance) +\n          parseInt(salvalues.Incentive) +\n          parseInt(salvalues.Bonus) +\n          parseInt(salvalues.BplusDA) +\n          parseInt(salvalues.HRA)\n      ).toFixed(2),\n      EmplPF: parseFloat(salvalues.BplusDA * 0.12).toFixed(2),\n      EmplESI: parseFloat(salvalues.GrossSalary * 0.0075).toFixed(2),\n\n      Deduction: parseFloat(\n        parseInt(salvalues.EmplPF) +\n          parseInt(salvalues.EmplESI) +\n          parseInt(salvalues.ExtraMobileUsage) +\n          parseInt(salvalues.OtherDeductions) +\n          parseInt(salvalues.LostDamage)\n      ).toFixed(2),\n      TakeHomeSalary: parseFloat(\n        parseInt(salvalues.GrossSalary) - parseInt(salvalues.Deduction)\n      ).toFixed(2),\n      EmployerPF: parseFloat(parseInt(salvalues.BplusDA) * 0.125).toFixed(2),\n      EmployerESI: parseFloat(parseInt(salvalues.GrossSalary) * 0.0325).toFixed(\n        2\n      ),\n      CTC: parseFloat(\n        parseInt(salvalues.GrossSalary) +\n          parseInt(salvalues.EmployerESI) +\n          parseInt(salvalues.EmployerPF) +\n          parseInt(values.rent)\n      ).toFixed(2),\n    });\n\n    return () => {\n      console.log(\"auto updated\");\n    };\n  }, [\n    values,\n    salvalues.BplusDA,\n    salvalues.PerformanceAllowance,\n    salvalues.Incentive,\n    salvalues.Bonus,\n    salvalues.EligibleDays,\n    salvalues.EmplPF,\n    salvalues.EmplESI,\n    salvalues.Deduction,\n    salvalues.EmployerESI,\n    salvalues.EmployerPF,\n    salvalues.ExtraMobileUsage,\n    salvalues.OtherDeductions,\n    salvalues.LostDamage,\n    salvalues.GrossSalary,\n  ]);\n\n  // Setting Cap Limits For Certain Values\n  useMemo(() => {\n    if (salvalues.EmplPF > 1800) {\n      setSalValues({ ...salvalues, EmplPF: 1800 });\n    }\n    if (salvalues.EmplESI > 157.5) {\n      setSalValues({ ...salvalues, EmplESI: 157.5 });\n    }\n    if (salvalues.EmployerESI > 682.5) {\n      setSalValues({ ...salvalues, EmployerESI: 682.5 });\n    }\n    if (salvalues.EmployerPF > 1875) {\n      setSalValues({ ...salvalues, EmployerPF: 1875 });\n    }\n  }, [\n    salvalues.EmplPF,\n    salvalues.EmplESI,\n    salvalues.EmployerESI,\n    salvalues.EmployerPF,\n  ]);\n\n  function daysInThisMonth() {\n    var now = new Date();\n    return new Date(now.getFullYear(), now.getMonth() + 1, 0).getDate();\n  }\n\n  const EmployeeSelector = () => {\n    return (\n      <Card className=\"mb-4 shadow-md mt-4\">\n        <CardBody>\n          <div className=\"flex flex-row flex-wrap items-center justify-between\">\n            <div className=\"dark:text-gray-200\">\n              Name: {values.employeeName}{\" \"}\n            </div>\n            <div className=\"dark:text-gray-200\">ID: {values.employeeID} </div>\n            <div className=\"dark:text-gray-200\"> CTC: {salvalues.CTC} </div>\n            <div>\n              <Button\n                aria-label=\"Notifications\"\n                onClick={() => {\n                  setSelectEngModal(true);\n                }}\n                aria-haspopup=\"true\"\n                layout=\"outline\"\n                className=\"mt-4 mx-2 \"\n              >\n                Select Employee{\" \"}\n              </Button>\n              <Button\n                aria-label=\"Notifications\"\n                aria-haspopup=\"true\"\n                layout=\"outline\"\n                onClick={handleSubmit}\n                className=\"mt-4 mx-2 \"\n              >\n                Pay Salary\n              </Button>\n            </div>\n          </div>\n        </CardBody>\n      </Card>\n    );\n  };\n\n  const SalaryDetailsForm = () => {\n    return (\n      <div className=\"px-4 py-3  mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Salary Details</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n\n        {/* ------------------------Row 1-------------------------- */}\n        <div className=\"flex-row flex  space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>PFNo</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.PFNo}\n                readOnly={true}\n                onChange={handleChange(\"PFNo\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.employeeName}</HelperText> */}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>ESINo</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.ESINo}\n                readOnly={true}\n                onChange={handleChange(\"ESINo\")}\n              />\n            </Label>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full \">\n              <span>UANNo</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                placeholder=\"\"\n                value={values.UANNo}\n                readOnly={true}\n                onChange={handleChange(\"UANNo\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.email}</HelperText> */}\n          </div>\n        </div>\n        {/* ------------------------Row 2-------------------------- */}\n\n        <div className=\"flex-row flex  space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Basic</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.Basic}\n                readOnly={true}\n                // onChange={handleChange(\"Basic\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.employeeName}</HelperText> */}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>DA %</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.DA}\n                readOnly={true}\n                // onChange={handleChange(\"DA\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.employeeName}</HelperText> */}\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full \">\n              <span>HRA %</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                placeholder=\"\"\n                value={values.HRAperc}\n                readOnly={true}\n                // onChange={handleChange(\"HRAperc\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.email}</HelperText> */}\n          </div>\n        </div>\n\n        {/* ----------------- Row 3 -------------------- */}\n        <div className=\"flex-row flex  space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Rent</span>\n              <Input\n                className=\"mt-1 \"\n                type=\"text\"\n                value={values.rent}\n                readOnly={true}\n                // onChange={handleChange(\"rent\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.employeeName}</HelperText> */}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Account Name</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.AccountName}\n                readOnly={true}\n                // onChange={handleChange(\"AccountName\")}\n              />\n            </Label>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full \">\n              <span>Bank Name</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                placeholder=\"\"\n                readOnly={true}\n                value={values.BankName}\n                // onChange={handleChange(\"BankName\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.email}</HelperText> */}\n          </div>\n        </div>\n\n        <div className=\"flex-row flex  space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Bank Account No</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                readOnly={true}\n                value={values.BankAcNo}\n                // onChange={handleChange(\"BankAcNo\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.employeeName}</HelperText> */}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>IFSC Code</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                readOnly={true}\n                value={values.IFSCCode}\n                // onChange={handleChange(\"IFSCCode\")}\n              />\n            </Label>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full \">\n              <span>Branch Name</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                placeholder=\"\"\n                value={values.BranchName}\n                readOnly={true}\n                // onChange={handleChange(\"BranchName\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.email}</HelperText> */}\n          </div>\n        </div>\n\n        <hr className=\"my-4\"></hr>\n\n        {/* -----------User Inputs----------- */}\n\n        {/* ------------------------Row 5-------------------------- */}\n\n        <div className=\"flex-row flex  space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full \">\n              <span>Eligible Days</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                placeholder=\"\"\n                value={salvalues.EligibleDays}\n                onChange={handleSalChange(\"EligibleDays\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.email}</HelperText> */}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Performance Allowance</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={salvalues.PerformanceAllowance}\n                onChange={handleSalChange(\"PerformanceAllowance\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.employeeName}</HelperText> */}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Incentive</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={salvalues.Incentive}\n                onChange={handleSalChange(\"Incentive\")}\n              />\n            </Label>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full \">\n              <span>Bonus</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                placeholder=\"\"\n                value={salvalues.Bonus}\n                onChange={handleSalChange(\"Bonus\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.email}</HelperText> */}\n          </div>\n        </div>\n\n        {/* --------------------Row ----------------------- */}\n\n        <div className=\"flex-row flex  space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Extra Mobile Usage</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={salvalues.ExtraMobileUsage}\n                onChange={handleSalChange(\"ExtraMobileUsage\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.employeeName}</HelperText> */}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Salary/Other Advances</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={salvalues.OtherDeductions}\n                onChange={handleSalChange(\"OtherDeductions\")}\n              />\n            </Label>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full \">\n              <span>Spare Lost/LostDamage</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                placeholder=\"\"\n                value={salvalues.LostDamage}\n                onChange={handleSalChange(\"LostDamage\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.email}</HelperText> */}\n          </div>\n        </div>\n\n        <hr className=\"my-4\"></hr>\n        {/* ------------------------Row 6-------------------------- */}\n\n        <div className=\"flex-row flex  space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>HRA</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                readOnly={true}\n                value={salvalues.HRA}\n                onChange={handleSalChange(\"HRA\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.employeeName}</HelperText> */}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>EmplPF</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                readOnly={true}\n                value={salvalues.EmplPF}\n                onChange={handleSalChange(\"EmplPF\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.employeeName}</HelperText> */}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>EmplESI</span>\n              <Input\n                className=\"mt-1\"\n                readOnly={true}\n                type=\"text\"\n                value={salvalues.EmplESI}\n                onChange={handleSalChange(\"EmplESI\")}\n              />\n            </Label>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full \">\n              <span>Deduction</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                readOnly={true}\n                placeholder=\"\"\n                value={salvalues.Deduction}\n                onChange={handleSalChange(\"Deduction\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.email}</HelperText> */}\n          </div>\n        </div>\n\n        {/* ------------------------Row 7-------------------------- */}\n\n        <div className=\"flex-row flex  space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>TakeHomeSalary</span>\n              <Input\n                className=\"mt-1\"\n                readOnly={true}\n                type=\"text\"\n                value={salvalues.TakeHomeSalary}\n                onChange={handleSalChange(\"TakeHomeSalary\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.employeeName}</HelperText> */}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>EmployerPF</span>\n              <Input\n                className=\"mt-1\"\n                readOnly={true}\n                type=\"text\"\n                value={salvalues.EmployerPF}\n                onChange={handleSalChange(\"EmployerPF\")}\n              />\n            </Label>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full \">\n              <span>EmployerESI</span>\n              <Input\n                className=\"mt-1\"\n                readOnly={true}\n                type=\"text\"\n                placeholder=\"\"\n                value={salvalues.EmployerESI}\n                onChange={handleSalChange(\"EmployerESI\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.email}</HelperText> */}\n          </div>\n        </div>\n\n        {/* ------------------------Row 8-------------------------- */}\n\n        <div className=\"flex-row flex  space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Payable Basic + DA </span>\n              <Input\n                className=\"mt-1\"\n                readOnly={true}\n                type=\"text\"\n                readOnly={true}\n                value={salvalues.BplusDA}\n                onChange={handleSalChange(\"BplusDA\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.employeeName}</HelperText> */}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full \">\n              <span>Gross Salary</span>\n              <Input\n                className=\"mt-1\"\n                readOnly={true}\n                type=\"text\"\n                placeholder=\"\"\n                value={salvalues.GrossSalary}\n                onChange={handleSalChange(\"GrossSalary\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.email}</HelperText> */}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>CTC</span>\n              <Input\n                className=\"mt-1\"\n                readOnly={true}\n                type=\"text\"\n                value={salvalues.CTC}\n                onChange={handleSalChange(\"CTC\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.employeeName}</HelperText> */}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const SubmissionModal = () => {\n    return (\n      <>\n        <Modal isOpen={submitmodal} onClose={() => setSubmitModal(false)}>\n          <ModalHeader>Payment Successful!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              // onClick={() => setIsReviewModalOpen(false)}\n              onClick={() => setSubmitModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n  const handleSalChange = (name) => (e) => {\n    setSalValues({ ...salvalues, [name]: e.target.value });\n  };\n\n  const handleSubmit = async () => {\n    // if (values.password !== values.confpassword) {\n    //   setErr({ ...err, confpassword: \"Confirm password does not match\" });\n    //   return;\n    // }\n    // if (\n    //   (values.employeeName === \"\") |\n    //   (values.email === \"\") |\n    //   (values.password === \"\") |\n    //   (values.confpassword === \"\")\n    // ) {\n    //   setIsReqFieldModal(true);\n    //   return;\n    // }\n    // e.preventDefault();\n    const newsalary = {\n      queryID: values._id,\n      employeeID: values.employeeID,\n      employeeName: values.employeeName,\n      date: thedate,\n      // email: values.email,\n      // password: values.password,\n      // role: accType,\n      // address: values.address,\n      // district: values.district,\n      // state: values.state,\n      // pincode: values.pincode,\n      // contactPerson: values.contactPerson,\n      // contactNo: values.contactNo,\n      // contactNoLand: values.contactNoLand,\n      // contactPersonOcc: values.contactPersonOcc,\n      // whatsappNo: values.WhatsappNo,\n      // sex: values.sex,\n      // age: values.age,\n      // dob: values.dob,\n\n      // Salary Details\n      PFNo: values.PFNo,\n      ESINo: values.ESINo,\n      UANNo: values.UANNo,\n      Basic: values.Basic,\n      DA: values.DA,\n      // BplusDA: values.BplusDA,\n      HRAperc: values.HRAperc,\n      rent: values.rent,\n      // ---from salvalues\n      BplusDA: salvalues.BplusDA,\n      EligibleDays: salvalues.EligibleDays,\n      HRA: salvalues.HRA,\n      PerformanceAllowance: salvalues.PerformanceAllowance,\n      Bonus: salvalues.Bonus,\n      Incentive: salvalues.Incentive,\n      GrossSalary: salvalues.GrossSalary,\n      EmplPF: salvalues.EmplPF,\n      EmplESI: salvalues.EmplESI,\n      ExtraMobileUsage: salvalues.ExtraMobileUsage,\n      OtherDeductions: salvalues.OtherDeductions,\n      LostDamage: salvalues.LostDamage,\n      Deduction: salvalues.Deduction,\n      TakeHomeSalary: salvalues.TakeHomeSalary,\n      EmployerPF: salvalues.EmployerPF,\n      EmployerESI: salvalues.EmployerESI,\n      CTC: salvalues.CTC,\n      // ------------------------------\n      AccountName: values.AccountName,\n      BankName: values.BankName,\n      BankAcNo: values.BankAcNo,\n      IFSCCode: values.IFSCCode,\n      BranchName: values.BranchName,\n      //Separation Details\n\n      // ResignDate: values.ResignDate,\n      // RelievedDate: values.RelievedDate,\n      // NoticePeriodServed: values.NoticePeriodServed,\n      // Live: values.Live,\n    };\n    console.log(newsalary);\n    setValues(clearvalues);\n\n    // const data = {\n    //   id: values._id,\n    //   update: newsalary,\n    // };\n    try {\n      await Axios({\n        url: `${API}/admin/${Emp.getId()}/createSalary`,\n        method: \"POST\",\n        data: newsalary,\n      });\n      setSubmitModal(true);\n      console.log(\"Done\");\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Pay Employee \");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n  return (\n    <>\n      {EmployeeSelector()}\n      {SalaryDetailsForm()}\n      {SubmissionModal()}\n      <SelectEmployeeModal\n        isModalOpen={selectEngModal}\n        setIsModalOpen={setSelectEngModal}\n        setEmployee={setValues}\n\n        // nextModal={setaddEnggModalOpen}\n      />\n    </>\n  );\n};\n\nexport default PaySalary;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { API } from \"../../backendapi\";\nimport Emp from \"../../helpers/auth/EmpProfile\";\n\nexport default function EngineerListModal({\n  isModalOpen,\n  setIsModalOpen,\n  setEngineer,\n  nextModal,\n}) {\n  const [values, setValues] = useState([]);\n  useEffect(() => {\n    console.log(\"HERERRE\");\n    Axios.post(`${API}/admin/${Emp.getId()}/getAll`)\n      .then((users) => {\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        setValues(temp);\n      })\n      .catch((err) => {\n        console.log(\"axiosErr\", err);\n      });\n  }, []);\n\n  const userTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Name</TableCell>\n              <TableCell>Email</TableCell>\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {values.map((user, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-blue-300 dark:hover:bg-gray-100 bg-opacity-25 \"\n                onClick={() => {\n                  setEngineer({\n                    _id: user._id,\n                    enggName: user.employeeName,\n                  });\n                  setIsModalOpen(false);\n                  nextModal(true);\n                }}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{user.employeeName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{user.email}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          {/* <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            /> */}\n        </TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>Assign Engineer</ModalHeader>\n        <ModalBody>{userTable()}</ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Cancel\n          </Button>\n          <Button className=\"w-full sm:w-auto\">Accept</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}