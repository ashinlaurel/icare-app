{"version":3,"sources":["pages/Assets/UpdateAsset.js"],"names":["UpdateAsset","useContext","TopBarContext","setTopHeading","topheading","useState","id","useParams","submitModal","setSubmitModal","_id","unitName","unit","setUnit","customerName","customer","setCustomer","accountName","account","setAccount","originalproduct","setOriginalProduct","brand","setBrand","model","setModel","serialno","setSerialNo","os","setOs","cpuname","cpusno","cpu","setCpu","ramname","ramsno","ram","setram","hddname","hddsno","hdd","sethdd","smpsname","smpssno","smps","setsmps","fanname","fansno","fan","setfan","motherboardname","motherboardsno","motherboard","setmotherboard","opticaldrivename","opticaldrivesno","opticaldrive","setopticaldrive","keyboardname","keyboardsno","kbd","setkbd","mousename","mousesno","mouse","setmouse","monitorname","monitorsno","monitor","setmonitor","gcardname","gcardsno","gcard","setgcard","enetcardname","enetcardsno","enetcard","setenetcard","serialcardname","serialcardsno","serialcard","setserialcard","parallelcardname","parallelcardsno","parallelcard","setparallelcard","hbacardname","hbacardsno","hbacard","sethbacard","raidcontrollername","raidcontrollersno","raidcontroller","setraidcontroller","tapecontrollername","tapecontrollersno","tapecontroller","settapecontroller","othersname","otherssno","others","setothers","Business","setBusiness","POnumber","setPOnumber","POdate","setPOdate","ContractFrom","setContractFrom","ContractTo","setContractTo","BillingFrom","setBillingFrom","BillingTo","setBillingTo","AMCRate","setAMCRate","GST","setGST","GSTAMOUNT","setGSTAMOUNT","NetAmount","setNetAmount","servicelocation","setServiceLocation","product","setProduct","isModalOpen","setIsModalOpen","refresh","setRefresh","useEffect","getAsset","a","axios","post","API","Emp","getId","res","console","log","data","asset","producttype","customerId","accountId","business","ponumber","amcrate","moment","podate","format","contractfrom","contractto","billingfrom","billingto","gstperc","gstamount","netamount","keyboard","useMemo","alert","payload","assetId","url","method","response","calls","call","length","callstring","map","callNo","slice","handleSubmit","e","preventDefault","unitId","finalpush","assethistory","assetpayload","edithistory","date","engineer","callAttendDate","startOfService","endOfService","note","actionTaken","ccfrImgUrl","history","$each","newproduct","$push","newasset","className","to","layout","onClick","onChange","target","value","selected","disabled","name","type","toFixed","parseInt","onSubmit","placeholder","newcpu","push","icon","Add","aria-label","pop","Remove","item","i","key","newlist","newram","newfan","newmotherboard","newhdd","newsmps","newkbd","newmouse","newmonitor","newgcard","newenetcard","newserialcard","newparallelcard","newhbacard","newraidcontroller","newtapecontroller","newopticaldrive","newothers","isOpen","onClose"],"mappings":"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","file":"static/js/56.43c426c8.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, useMemo } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Select,\n  Textarea,\n  Button,\n  Dropdown,\n  DropdownItem,\n  Badge,\n} from \"@windmill/react-ui\";\n\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport { Add, Remove, HeartIcon } from \"../../icons\";\nimport UnitListModal from \"../../components/Modal/UnitListModal\";\nimport CreateAssetFloat from \"../../components/FloatDetails/CreateAssetFloat\";\n\n// Migration\nimport { handleMigration } from \"../../migration/migration\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n\nfunction UpdateAsset() {\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n  // floatbox\n  const [floatbox, setFloatBox] = useState(false);\n  const { id } = useParams();\n  // console.log(id);\n  //modal\n  const [submitModal, setSubmitModal] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  //customer\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n  const [originalproduct, setOriginalProduct] = useState(\"Nil\");\n  //prodcut\n  const [brand, setBrand] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [serialno, setSerialNo] = useState(\"\");\n  const [os, setOs] = useState(\"\");\n  const [cpu, setCpu] = useState([{ cpuname: \"\", cpusno: \"\" }]);\n  const [ram, setram] = useState([{ ramname: \"\", ramsno: \"\" }]);\n  const [hdd, sethdd] = useState([{ hddname: \"\", hddsno: \"\" }]);\n  const [smps, setsmps] = useState([{ smpsname: \"\", smpssno: \"\" }]);\n  const [fan, setfan] = useState([{ fanname: \"\", fansno: \"\" }]);\n  const [motherboard, setmotherboard] = useState([\n    { motherboardname: \"\", motherboardsno: \"\" },\n  ]);\n  const [opticaldrive, setopticaldrive] = useState([\n    { opticaldrivename: \"\", opticaldrivesno: \"\" },\n  ]);\n  const [kbd, setkbd] = useState([{ keyboardname: \"\", keyboardsno: \"\" }]);\n  const [mouse, setmouse] = useState([{ mousename: \"\", mousesno: \"\" }]);\n  const [monitor, setmonitor] = useState([{ monitorname: \"\", monitorsno: \"\" }]);\n  const [gcard, setgcard] = useState([{ gcardname: \"\", gcardsno: \"\" }]);\n  const [enetcard, setenetcard] = useState([\n    { enetcardname: \"\", enetcardsno: \"\" },\n  ]);\n  const [serialcard, setserialcard] = useState([\n    { serialcardname: \"\", serialcardsno: \"\" },\n  ]);\n  const [parallelcard, setparallelcard] = useState([\n    { parallelcardname: \"\", parallelcardsno: \"\" },\n  ]);\n  const [hbacard, sethbacard] = useState([{ hbacardname: \"\", hbacardsno: \"\" }]);\n  const [raidcontroller, setraidcontroller] = useState([\n    { raidcontrollername: \"\", raidcontrollersno: \"\" },\n  ]);\n  const [tapecontroller, settapecontroller] = useState([\n    { tapecontrollername: \"\", tapecontrollersno: \"\" },\n  ]);\n  const [others, setothers] = useState([{ othersname: \"\", otherssno: \"\" }]);\n  //asset\n\n  const [Business, setBusiness] = useState(\"\");\n  const [POnumber, setPOnumber] = useState(\"\");\n  const [POdate, setPOdate] = useState(\"\");\n  const [ContractFrom, setContractFrom] = useState(\"\");\n  const [ContractTo, setContractTo] = useState(\"\");\n  const [BillingFrom, setBillingFrom] = useState(\"\");\n  const [BillingTo, setBillingTo] = useState(\"\");\n  const [AMCRate, setAMCRate] = useState(\"\");\n  const [GST, setGST] = useState(\"\");\n  const [GSTAMOUNT, setGSTAMOUNT] = useState(\"\");\n  const [NetAmount, setNetAmount] = useState(\"\");\n  const [servicelocation, setServiceLocation] = useState(\"\");\n\n  //////////////-------------------------------------------->Product name not in asset\n  const [product, setProduct] = useState(\"Server\");\n\n  //MODAL\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n\n  useEffect(() => {\n    setTopHeading(\"Update Asset\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n\n  const getAsset = async () => {\n    try {\n      let res = await axios.post(`${API}/asset/${Emp.getId()}/getbyid`, {\n        id: id,\n      });\n      console.log(\"asset\", res.data);\n      let asset = res.data;\n      setServiceLocation(asset.servicelocation);\n      setProduct(asset.producttype);\n      setUnit({ _id: id, unitName: asset.unitName });\n      setCustomer({ _id: asset.customerId, customerName: asset.customerName });\n      setAccount({ _id: asset.accountId, accountName: asset.accountName });\n      ////------------------------>>>>>>>>\n      // setProduct(\"Server\");\n      ////////---------ASSET INFO\n      setBusiness(asset.business);\n      setPOnumber(asset.ponumber);\n      setAMCRate(asset.amcrate);\n      // Dates --------------------------\n      setPOdate(moment(asset.podate).format(\"YYYY-MM-DD\"));\n      setContractFrom(moment(asset.contractfrom).format(\"YYYY-MM-DD\"));\n      setContractTo(moment(asset.contractto).format(\"YYYY-MM-DD\"));\n      setBillingFrom(moment(asset.billingfrom).format(\"YYYY-MM-DD\"));\n      setBillingTo(moment(asset.billingto).format(\"YYYY-MM-DD\"));\n      ////////////------------>>>>>>>> misiing field GST(asset.gs)\n      setGST(asset.gstperc);\n      setGSTAMOUNT(asset.gstamount);\n      setNetAmount(asset.netamount);\n      // setProduct(asset);\n      //////////////////////////////\n\n      setBrand(asset.product.brand);\n      setModel(asset.product.model);\n      setSerialNo(asset.product.serialno);\n      setOs(asset.product.os);\n      setCpu(asset.product.cpu);\n      setram(asset.product.ram);\n      sethdd(asset.product.hdd);\n      setsmps(asset.product.smps);\n      setfan(asset.product.fan);\n      setmotherboard(asset.product.motherboard);\n      setopticaldrive(asset.product.opticaldrive);\n      setkbd(asset.product.keyboard);\n      setmouse(asset.product.mouse);\n      setmonitor(asset.product.monitor);\n      setgcard(asset.product.gcard);\n      setenetcard(asset.product.enetcard);\n      setserialcard(asset.product.serialcard);\n      setparallelcard(asset.product.parallelcard);\n      sethbacard(asset.product.hbacard);\n      setraidcontroller(asset.product.raidcontroller);\n      settapecontroller(asset.product.tapecontroller);\n      setothers(asset.product.others);\n\n      if (asset.originalproduct) {\n        setOriginalProduct(asset.originalproduct);\n      }\n\n      // if (asset.product.hdd.length == 0) sethdd([{ hddname: \"\", hddsno: \"\" }]);\n      // else sethdd(asset.product.hdd);\n      // if (asset.product.smps.length == 0)\n      //   setsmps([{ smpsname: \"\", smpssno: \"\" }]);\n      // else setsmps(asset.product.smps);\n      // if (asset.product.fan.length == 0) setfan([{ fanname: \"\", fansno: \"\" }]);\n      // else setfan(asset.product.fan);\n      // if (asset.product.motherboard.length == 0)\n      //   setmotherboard([{ motherboardname: \"\", motherboardsno: \"\" }]);\n      // else setmotherboard(asset.product.motherboard);\n      // if (asset.product.opticaldrive.length == 0)\n      //   setopticaldrive([{ opticaldrivename: \"\", opticaldrivesno: \"\" }]);\n      // else setopticaldrive(asset.product.opticaldrive);\n      // if (asset.product.keyboard.length == 0)\n      //   setkbd([{ keyboardname: \"\", keyboardsno: \"\" }]);\n      // else setkbd(asset.product.keyboard);\n      // if (asset.product.mouse.length == 0)\n      //   setmouse([{ mousename: \"\", mousesno: \"\" }]);\n      // else setmouse(asset.product.mouse);\n      // if (asset.product.monitor.length == 0)\n      //   setmonitor([{ monitorname: \"\", monitorsno: \"\" }]);\n      // else setmonitor(asset.product.monitor);\n      // if (asset.product.gcard.length == 0)\n      //   setgcard([{ gcardname: \"\", gcardsno: \"\" }]);\n      // else setgcard(asset.product.gcard);\n      // if (asset.product.enetcard.length == 0)\n      //   setenetcard([{ netcardname: \"\", enetcardsno: \"\" }]);\n      // else setenetcard(asset.product.enetcard);\n      // if (asset.product.serialcard.length == 0)\n      //   setserialcard([{ serialcardname: \"\", serialcardsno: \"\" }]);\n      // else setserialcard(asset.product.serialcard);\n\n      // if (asset.product.parallelcard.length == 0)\n      //   setparallelcard([{ parallelcardname: \"\", parallelcardsno: \"\" }]);\n      // else setparallelcard(asset.product.parallelcard);\n      // if (asset.product.hbacard.length == 0)\n      //   sethbacard([{ hbacardname: \"\", hbacardsno: \"\" }]);\n      // else sethbacard(asset.product.hbacard);\n      // if (asset.product.raidcontroller.length == 0)\n      //   setraidcontroller([{ raidcontrollername: \"\", raidcontrollersno: \"\" }]);\n      // else setraidcontroller(asset.product.raidcontroller);\n      // if (asset.product.tapecontroller.length == 0)\n      //   settapecontroller([{ tapecontrollername: \"\", tapecontrollersno: \"\" }]);\n      // else settapecontroller(asset.product.tapecontroller);\n      // if (asset.product.others.length == 0)\n      //   setothers([{ othersname: \"\", otherssno: \"\" }]);\n      // else setothers(asset.product.others);\n      // //asset\n    } catch (err) {\n      console.log(\"assetFind Error\", err);\n    }\n  };\n\n  useEffect(() => {\n    getAsset();\n  }, []);\n\n  //useeffect to check if the customer change is viable\n  useMemo(async () => {\n    if (refresh) {\n      //making sure all three are selected\n      if (customer._id == \"\" || account._id == \"\" || unit._id == \"\") {\n        alert(\"Please select customer, account and unit\");\n        getAsset();\n        setRefresh(false);\n        return;\n      }\n      //making sure no activecall i s attached to this\n\n      let payload = {\n        assetId: id,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/call/${Emp.getId()}/checkassethascall`,\n          method: \"POST\",\n          data: payload,\n        });\n\n        // console.log(response.data);\n        const calls = response.data.call;\n        console.log(calls);\n\n        if (calls.length == 0) {\n          console.log(\"empty\");\n        } else {\n          let callstring = \"\";\n          calls.map((call) => {\n            callstring += call.callNo + \",\";\n          });\n          callstring = callstring.slice(0, -1);\n          alert(\n            \"You can't change the customer as this asset is already in the following active calls \" +\n              callstring\n          );\n          getAsset();\n          setRefresh(false);\n        }\n        // setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n      // getAsset();\n    }\n  }, [refresh]);\n\n  const UpdatedModal = () => {\n    return (\n      <>\n        <Modal isOpen={submitModal} onClose={() => setSubmitModal(false)}>\n          <ModalHeader>Asset Updated Successfully!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setSubmitModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //functions\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      customerName: customer.customerName,\n      accountName: account.accountName,\n      unitName: unit.unitName,\n      customerId: customer._id,\n      accountId: account._id,\n      unitId: unit._id,\n      business: Business,\n      producttype: product,\n      ponumber: POnumber,\n      podate: POdate,\n      contractfrom: ContractFrom,\n      contractto: ContractTo,\n      billingfrom: BillingFrom,\n      billingto: BillingTo,\n      amcrate: AMCRate,\n      gstperc: GST,\n      gstamount: GSTAMOUNT,\n      netamount: NetAmount,\n      servicelocation: servicelocation,\n      ///------------------ cust info\n      // unitId: unit._id,\n      // unitName: unit.unitName,\n      // accountId: account._id,\n      // accountName: account.accountName,\n      // customerId: customer._id,\n      // customerName: customer.customerName,\n    };\n    if (payload.podate == \"Invalid date\") payload.podate = \"\";\n    if (payload.contractfrom == \"Invalid date\") payload.contractfrom = \"\";\n    if (payload.contractto == \"Invalid date\") payload.contractto = \"\";\n    if (payload.billingfrom == \"Invalid date\") payload.billingfrom = \"\";\n    if (payload.billingto == \"Invalid date\") payload.billingto = \"\";\n\n    // history stuff\n    let finalpush = {};\n    let assethistory = {};\n    let assetpayload = {};\n    let edithistory = {\n      date: moment().format(),\n      // callStatus: \"\",\n      engineer: \"\",\n      callAttendDate: \"\",\n      startOfService: \"\",\n      endOfService: \"\",\n      note: `The Asset has been manually edited!`,\n      actionTaken: \"\",\n      ccfrImgUrl: \"\",\n    };\n    if (refresh) {\n      assethistory = {\n        date: moment().format(),\n        // callStatus: \"\",\n        engineer: \"\",\n        callAttendDate: \"\",\n        startOfService: \"\",\n        endOfService: \"\",\n        note: `Asset's Customer/Account/Unit has been edited`,\n        actionTaken: `Edited to Customer: ${customer.customerName}, Account: ${account.accountName}, Unit: ${unit.unitName}`,\n        ccfrImgUrl: \"\",\n        // existserial: existswap[0].sno,\n        // newserial: inventswap[0].sno,\n      };\n\n      finalpush = { history: { $each: [edithistory, assethistory] } };\n    } else {\n      finalpush = { history: edithistory };\n    }\n\n    let newproduct = {\n      brand: brand,\n      model: model,\n      serialno: serialno,\n      os: os,\n      cpu: cpu,\n      ram: ram,\n      hdd: hdd,\n      smps: smps,\n      fan: fan,\n      motherboard: motherboard,\n      opticaldrive: opticaldrive,\n      keyboard: kbd,\n      mouse: mouse,\n      monitor: monitor,\n      gcard: gcard,\n      enetcard: enetcard,\n      serialcard: serialcard,\n      parallelcard: parallelcard,\n      hbacard: hbacard,\n      raidcontroller: raidcontroller,\n      tapecontroller: tapecontroller,\n      others: others,\n      $push: finalpush,\n    };\n    console.log(payload, newproduct);\n\n    const data = { id: id, newasset: payload, newproduct: newproduct };\n    // console.log(API);\n    try {\n      let update = await axios({\n        url: `${API}/asset/${Emp.getId()}/update`,\n        method: \"POST\",\n        data: data,\n      });\n\n      let response = await axios({\n        url: `${API}/asset/${Emp.getId()}/updateProductWithID`,\n        method: \"POST\",\n        data: assetpayload,\n      });\n      setSubmitModal(true);\n      console.log(\"Done\");\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // useEffect(() => {\n  //   handleMigration();\n  // }, []);\n\n  //ASSET----------------------------------------------------\n  const assetPicker = () => {\n    return (\n      <div className=\"px-4 py-3 mt-4 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800\">\n        {/* {floatbox ? (\n          <UpdateAssetFloat Business={Business} POnumber={POnumber} />\n        ) : null} */}\n\n        <Label className=\"font-bold\">\n          <span>Asset Information</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n\n        <div className=\"flex flex-row mb-2 \">\n          <div className=\"flex flex-row space-x-4 w-3/4\">\n            <SectionTitle className=\"w-3/4\">\n              Customer: {customer.customerName}\n            </SectionTitle>\n            <SectionTitle>Account: {account.accountName} </SectionTitle>\n            <SectionTitle>Unit: {unit.unitName}</SectionTitle>\n          </div>\n\n          <div className=\"w-1/2 flex items-start space-x-1 justify-end\">\n            {originalproduct != \"Nil\" ? (\n              <Link to={`/app/unit/update/vieworiginal/${id}`}>\n                <Button layout=\"outline\" className=\"\">\n                  View Original Asset\n                </Button>\n              </Link>\n            ) : (\n              <div></div>\n            )}\n\n            <Button\n              layout=\"outline\"\n              onClick={() => {\n                setIsModalOpen(true);\n              }}\n            >\n              Change Customer\n            </Button>\n          </div>\n        </div>\n\n        <hr className=\"mb-5 mt-2\" />\n\n        {/* <Label className=\"font-bold\">\n          <span>Customer: {customer.customerName}</span>\n        </Label> */}\n        {/* ----------------------------Row - 1 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full \">\n            {/* <Label className=\"my-3\">\n              <span>Business</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={Business}\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n              />\n            </Label> */}\n            <Label className=\"my-3\">\n              <span>Business Type</span>\n              <Select\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n                className=\"mt-1\"\n                value={Business}\n              >\n                <option value=\"\" selected disabled>\n                  Select Business Type\n                </option>\n                <option value=\"AMC\">AMC</option>\n                <option value=\"Warranty\">Warranty</option>\n              </Select>\n            </Label>\n          </div>\n          <div className=\"w-full  \">\n            <Label className=\"my-3\">\n              <span>Purchase Order Number</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={POnumber}\n                onChange={(e) => {\n                  setPOnumber(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full \">\n            <Label className=\"my-3\">\n              <span>Service Location*</span>\n              <Select\n                value={servicelocation}\n                onChange={(e) => {\n                  setServiceLocation(e.target.value);\n                }}\n                className=\"mt-1\"\n              >\n                <option value=\"\" selected disabled>\n                  Select Service Location\n                </option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </Select>\n            </Label>\n          </div>\n        </div>\n        {/* ----------------------------Row - 2 --------------------------------------------------------------------- */}\n\n        <div className=\"flex flex-col lg:flex-row  items-center justify-start lg:space-x-8\">\n          <Label className=\"w-full my-3\">\n            <span>Purchase Order Date</span>\n            <Input\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={POdate}\n              onChange={(e) => {\n                setPOdate(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Contract From</span>\n            <Input\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={ContractFrom}\n              onChange={(e) => {\n                setContractFrom(e.target.value);\n              }}\n            />\n          </Label>\n\n          <Label className=\"w-full my-3\">\n            <span>Contract To</span>\n            <Input\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={ContractTo}\n              onChange={(e) => {\n                setContractTo(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing From</span>\n            <Input\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={BillingFrom}\n              onChange={(e) => {\n                setBillingFrom(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing To</span>\n            <Input\n              type=\"date\"\n              className=\"mt-1\"\n              name=\"brand\"\n              value={BillingTo}\n              onChange={(e) => {\n                setBillingTo(e.target.value);\n              }}\n            />\n          </Label>\n        </div>\n        {/* ----------------------------Row - 3 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>AMC Rate</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={AMCRate}\n                onChange={(e) => {\n                  setAMCRate(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>GST</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={GST}\n                onChange={(e) => {\n                  setGST(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div>\n        {/* ----------------------------Row - 4 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3 font-bold\">\n              <span>GST AMOUNT: </span>\n\n              <span> Rs {(AMCRate * (GST / 100)).toFixed(2)}</span>\n            </Label>\n          </div>\n          <div className=\"w-full font-bold\">\n            <Label className=\"my-3\">\n              <span>Net Amount: </span>\n              <span>\n                Rs{\" \"}\n                {(parseInt(AMCRate) + parseInt(AMCRate) * (GST / 100)).toFixed(\n                  2\n                )}\n              </span>\n            </Label>\n          </div>\n        </div>\n        {/* <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>GST AMOUNT</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={GSTAMOUNT}\n                onChange={(e) => {\n                  setGSTAMOUNT(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>Net Amount</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={NetAmount}\n                onChange={(e) => {\n                  setNetAmount(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div> */}\n      </div>\n    );\n  };\n\n  //PRODUCT\n\n  const productPicker = () => {\n    return (\n      <>\n        <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800\">\n          <form onSubmit={handleSubmit}>\n            <Label className=\"font-bold\">\n              <span>Essential Details</span>\n            </Label>\n            <hr className=\"mb-5 mt-2\" />\n            <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n              <Label className=\"my-3 w-full\">\n                <span>Brand</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Brand\"\n                  name=\"brand\"\n                  value={brand}\n                  onChange={(e) => {\n                    setBrand(e.target.value);\n                  }}\n                />\n              </Label>\n              <Label className=\"my-3 w-full\">\n                <span>Model</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Model\"\n                  name=\"model\"\n                  value={model}\n                  onChange={(e) => {\n                    setModel(e.target.value);\n                  }}\n                />\n              </Label>\n              <Label className=\"my-3 w-full\">\n                <span>Serial Number</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Serial Number\"\n                  name=\"serialno\"\n                  value={serialno}\n                  onChange={(e) => {\n                    setSerialNo(e.target.value);\n                  }}\n                />\n              </Label>\n            </div>\n            {/* ---------------------------OS--------------------------------- */}\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <Label className=\"font-bold\">\n                  <span>Operating System</span>\n                </Label>\n                <hr className=\"mb-5 mt-2\" />\n                <Label className=\"my-3\">\n                  <span>OS</span>\n                  <Input\n                    className=\"mt-1\"\n                    placeholder=\"OS\"\n                    name=\"os\"\n                    value={os}\n                    onChange={(e) => {\n                      setOs(e.target.value);\n                    }}\n                  />\n                </Label>\n              </>\n            ) : null}\n\n            {/* //////////// ARRAY /////////////// */}\n            {/* -------------------CPU and RAM-------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------CPU------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>CPU</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newcpu = [...cpu];\n                            let add = { cpuname: \"\", cpusno: \"\" };\n                            newcpu.push(add);\n                            setCpu(newcpu);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newcpu = [...cpu];\n                            if (newcpu[1]) {\n                              newcpu.pop();\n                              setCpu(newcpu);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {cpu.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"w-full my-3\">\n                              <span>CPU {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`CPU ${i + 1}`}\n                                name=\"cpuname\"\n                                value={item.cpuname}\n                                onChange={(e) => {\n                                  let newlist = [...cpu];\n                                  newlist[i].cpuname = e.target.value;\n                                  setCpu(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"w-full my-3\">\n                              <span>CPU {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`CPU ${i + 1}'s Serial Number `}\n                                name=\"cpusno\"\n                                value={item.cpusno}\n                                onChange={(e) => {\n                                  let newlist = [...cpu];\n                                  newlist[i].cpusno = e.target.value;\n                                  setCpu(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------CPU------------------------------- */}\n\n              {/* ----------------RAM------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>RAM</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newram = [...ram];\n                            let add = { ramname: \"\", ramsno: \"\" };\n                            newram.push(add);\n                            setram(newram);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newram = [...ram];\n                            if (newram[1]) {\n                              newram.pop();\n                              setram(newram);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {ram.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>RAM {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`RAM ${i + 1}`}\n                                name=\"ramname\"\n                                value={item.ramname}\n                                onChange={(e) => {\n                                  let newlist = [...ram];\n                                  newlist[i].ramname = e.target.value;\n                                  setram(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>RAM {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`RAM ${i + 1}'s Serial Number `}\n                                name=\"cpusno\"\n                                value={item.ramsno}\n                                onChange={(e) => {\n                                  let newlist = [...ram];\n                                  newlist[i].ramsno = e.target.value;\n                                  setram(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------RAM------------------------------- */}\n            </div>\n\n            {/* -----------------------fan and motherboard------------------------------ */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------fan------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>FAN</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newfan = [...fan];\n                            let add = { fanname: \"\", fansno: \"\" };\n                            newfan.push(add);\n                            setfan(newfan);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newfan = [...fan];\n                            if (newfan[1]) {\n                              newfan.pop();\n                              setfan(newfan);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {fan.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>FAN {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`FAN ${i + 1}`}\n                                name=\"fanname\"\n                                value={item.fanname}\n                                onChange={(e) => {\n                                  let newlist = [...fan];\n                                  newlist[i].fanname = e.target.value;\n                                  setfan(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>FAN {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`FAN ${i + 1}'s Serial Number `}\n                                name=\"fansno\"\n                                value={item.fansno}\n                                onChange={(e) => {\n                                  let newlist = [...fan];\n                                  newlist[i].fansno = e.target.value;\n                                  setfan(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------fan------------------------------- */}\n\n              {/* ----------------motherboard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Motherboard</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmotherboard = [...motherboard];\n                            let add = {\n                              motherboardname: \"\",\n                              motherboardsno: \"\",\n                            };\n                            newmotherboard.push(add);\n                            setmotherboard(newmotherboard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmotherboard = [...motherboard];\n                            if (newmotherboard[1]) {\n                              newmotherboard.pop();\n                              setmotherboard(newmotherboard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {motherboard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Motherboard {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Motherboard ${i + 1}`}\n                                name=\"motherboardname\"\n                                value={item.motherboardname}\n                                onChange={(e) => {\n                                  let newlist = [...motherboard];\n                                  newlist[i].motherboardname = e.target.value;\n                                  setmotherboard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Motherboard {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Motherboard ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"motherboardsno\"\n                                value={item.motherboardsno}\n                                onChange={(e) => {\n                                  let newlist = [...motherboard];\n                                  newlist[i].motherboardsno = e.target.value;\n                                  setmotherboard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------motherboard------------------------------- */}\n            </div>\n\n            {/* ------------------------HDD And SMPS */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------hdd------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>HDD</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhdd = [...hdd];\n                            let add = { hddname: \"\", hddsno: \"\" };\n                            newhdd.push(add);\n                            sethdd(newhdd);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhdd = [...hdd];\n                            if (newhdd[1]) {\n                              newhdd.pop();\n                              sethdd(newhdd);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {hdd.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>HDD {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HDD ${i + 1}`}\n                                name=\"hddname\"\n                                value={item.hddname}\n                                onChange={(e) => {\n                                  let newlist = [...hdd];\n                                  newlist[i].hddname = e.target.value;\n                                  sethdd(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>HDD {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HDD ${i + 1}'s Serial Number `}\n                                name=\"hddsno\"\n                                value={item.hddsno}\n                                onChange={(e) => {\n                                  let newlist = [...hdd];\n                                  newlist[i].hddsno = e.target.value;\n                                  sethdd(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------hdd------------------------------- */}\n\n              {/* ----------------smps------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>SMPS</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newsmps = [...smps];\n                            let add = { smpsname: \"\", smpssno: \"\" };\n                            newsmps.push(add);\n                            setsmps(newsmps);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newsmps = [...smps];\n                            if (newsmps[1]) {\n                              newsmps.pop();\n                              setsmps(newsmps);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {smps.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>SMPS {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`SMPS ${i + 1}`}\n                                name=\"smpsname\"\n                                value={item.smpsname}\n                                onChange={(e) => {\n                                  let newlist = [...smps];\n                                  newlist[i].smpsname = e.target.value;\n                                  setsmps(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>SMPS {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`SMPS ${i + 1}'s Serial Number `}\n                                name=\"smpssno\"\n                                value={item.smpssno}\n                                onChange={(e) => {\n                                  let newlist = [...smps];\n                                  newlist[i].smpssno = e.target.value;\n                                  setsmps(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------smps------------------------------- */}\n            </div>\n\n            {/* -----------------------Keyboard And Mouse ------------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------kbd------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Ncompute\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Keyboard</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newkbd = [...kbd];\n                            let add = { keyboardname: \"\", keyboardsno: \"\" };\n                            newkbd.push(add);\n                            setkbd(newkbd);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newkbd = [...kbd];\n                            if (newkbd[1]) {\n                              newkbd.pop();\n                              setkbd(newkbd);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {kbd.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Keyboard {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Keyboard ${i + 1}`}\n                                name=\"keyboardname\"\n                                value={item.keyboardname}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].keyboardname = e.target.value;\n                                  setkbd(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Keyboard {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Keyboard ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"keyboardsno\"\n                                value={item.keyboardsno}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].keyboardsno = e.target.value;\n                                  setkbd(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------kbd------------------------------- */}\n\n              {/* ----------------mouse------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Ncompute\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Mouse</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmouse = [...mouse];\n                            let add = { mousename: \"\", mousesno: \"\" };\n                            newmouse.push(add);\n                            setmouse(newmouse);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmouse = [...mouse];\n                            if (newmouse[1]) {\n                              newmouse.pop();\n                              setmouse(newmouse);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {mouse.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Mouse {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Mouse ${i + 1}`}\n                                name=\"mousename\"\n                                value={item.mousename}\n                                onChange={(e) => {\n                                  let newlist = [...mouse];\n                                  newlist[i].mousename = e.target.value;\n                                  setmouse(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Mouse {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Mouse ${i + 1}'s Serial Number `}\n                                name=\"mousesno\"\n                                value={item.mousesno}\n                                onChange={(e) => {\n                                  let newlist = [...mouse];\n                                  newlist[i].mousesno = e.target.value;\n                                  setmouse(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------mouse------------------------------- */}\n            </div>\n\n            {/* ---------------------------Monitor and GCard ------------------------*/}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------monitor------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Ncompute\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Monitor</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmonitor = [...monitor];\n                            let add = { monitorname: \"\", monitorsno: \"\" };\n                            newmonitor.push(add);\n                            setmonitor(newmonitor);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmonitor = [...monitor];\n                            if (newmonitor[1]) {\n                              newmonitor.pop();\n                              setmonitor(newmonitor);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {monitor.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Monitor {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Monitor ${i + 1}`}\n                                name=\"monitorname\"\n                                value={item.monitorname}\n                                onChange={(e) => {\n                                  let newlist = [...monitor];\n                                  newlist[i].monitorname = e.target.value;\n                                  setmonitor(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Monitor {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Monitor ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"monitorsno\"\n                                value={item.monitorsno}\n                                onChange={(e) => {\n                                  let newlist = [...monitor];\n                                  newlist[i].monitorsno = e.target.value;\n                                  setmonitor(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------monitor------------------------------- */}\n\n              {/* ----------------gcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Graphics Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newgcard = [...gcard];\n                            let add = { gcardname: \"\", gcardsno: \"\" };\n                            newgcard.push(add);\n                            setgcard(newgcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newgcard = [...gcard];\n                            if (newgcard[1]) {\n                              newgcard.pop();\n                              setgcard(newgcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {gcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Graphics Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Graphics Card ${i + 1}`}\n                                name=\"gcardname\"\n                                value={item.gcardname}\n                                onChange={(e) => {\n                                  let newlist = [...gcard];\n                                  newlist[i].gcardname = e.target.value;\n                                  setgcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Graphics Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Graphics Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"gcardsno\"\n                                value={item.gcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...gcard];\n                                  newlist[i].gcardsno = e.target.value;\n                                  setgcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------gcard------------------------------- */}\n            </div>\n\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------enetcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>E Net Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newenetcard = [...enetcard];\n                            let add = { enetcardname: \"\", enetcardsno: \"\" };\n                            newenetcard.push(add);\n                            setenetcard(newenetcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newenetcard = [...enetcard];\n                            if (newenetcard[1]) {\n                              newenetcard.pop();\n                              setenetcard(newenetcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {enetcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>E Net Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`E Net Card ${i + 1}`}\n                                name=\"enetcardname\"\n                                value={item.enetcardname}\n                                onChange={(e) => {\n                                  let newlist = [...enetcard];\n                                  newlist[i].enetcardname = e.target.value;\n                                  setenetcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>E Net Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`E Net Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"enetcardsno\"\n                                value={item.enetcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...enetcard];\n                                  newlist[i].enetcardsno = e.target.value;\n                                  setenetcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------enetcard------------------------------- */}\n\n              {/* ----------------serialcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Serial Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newserialcard = [...serialcard];\n                            let add = { serialcardname: \"\", serialcardsno: \"\" };\n                            newserialcard.push(add);\n                            setserialcard(newserialcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newserialcard = [...serialcard];\n                            if (newserialcard[1]) {\n                              newserialcard.pop();\n                              setserialcard(newserialcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {serialcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Serial Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Serial Card ${i + 1}`}\n                                name=\"serialcardname\"\n                                value={item.serialcardname}\n                                onChange={(e) => {\n                                  let newlist = [...serialcard];\n                                  newlist[i].serialcardname = e.target.value;\n                                  setserialcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Serial Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Serial Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"serialcardsno\"\n                                value={item.serialcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...serialcard];\n                                  newlist[i].serialcardsno = e.target.value;\n                                  setserialcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------serialcard------------------------------- */}\n            </div>\n\n            {/* --------------------Parallel And HBD Card ----------------------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------parallelcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Parallel Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newparallelcard = [...parallelcard];\n                            let add = {\n                              parallelcardname: \"\",\n                              parallelcardsno: \"\",\n                            };\n                            newparallelcard.push(add);\n                            setparallelcard(newparallelcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newparallelcard = [...parallelcard];\n                            if (newparallelcard[1]) {\n                              newparallelcard.pop();\n                              setparallelcard(newparallelcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {parallelcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Parallel Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Parallel Card ${i + 1}`}\n                                name=\"parallelcardname\"\n                                value={item.parallelcardname}\n                                onChange={(e) => {\n                                  let newlist = [...parallelcard];\n                                  newlist[i].parallelcardname = e.target.value;\n                                  setparallelcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Parallel Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Parallel Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"parallelcardsno\"\n                                value={item.parallelcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...parallelcard];\n                                  newlist[i].parallelcardsno = e.target.value;\n                                  setparallelcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------parallelcard------------------------------- */}\n\n              {/* ----------------hbacard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>HBA Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhbacard = [...hbacard];\n                            let add = { hbacardname: \"\", hbacardsno: \"\" };\n                            newhbacard.push(add);\n                            sethbacard(newhbacard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhbacard = [...hbacard];\n                            if (newhbacard[1]) {\n                              newhbacard.pop();\n                              sethbacard(newhbacard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {hbacard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>HBA Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HBA Card ${i + 1}`}\n                                name=\"hbacardname\"\n                                value={item.hbacardname}\n                                onChange={(e) => {\n                                  let newlist = [...hbacard];\n                                  newlist[i].hbacardname = e.target.value;\n                                  sethbacard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>HBA Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HBA Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"hbacardsno\"\n                                value={item.hbacardsno}\n                                onChange={(e) => {\n                                  let newlist = [...hbacard];\n                                  newlist[i].hbacardsno = e.target.value;\n                                  sethbacard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------hbacard------------------------------- */}\n            </div>\n            {/* --------------------Raid And Tape Controller------------------------------ */}\n\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------raidcontroller------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Raid Controller</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newraidcontroller = [...raidcontroller];\n                            let add = {\n                              raidcontrollername: \"\",\n                              raidcontrollersno: \"\",\n                            };\n                            newraidcontroller.push(add);\n                            setraidcontroller(newraidcontroller);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newraidcontroller = [...raidcontroller];\n                            if (newraidcontroller[1]) {\n                              newraidcontroller.pop();\n                              setraidcontroller(newraidcontroller);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {raidcontroller.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Raid Controller {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Raid Controller ${i + 1}`}\n                                name=\"raidcontrollername\"\n                                value={item.raidcontrollername}\n                                onChange={(e) => {\n                                  let newlist = [...raidcontroller];\n                                  newlist[i].raidcontrollername =\n                                    e.target.value;\n                                  setraidcontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>\n                                Raid Controller {i + 1}: Serial Number\n                              </span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Raid Controller ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"raidcontrollersno\"\n                                value={item.raidcontrollersno}\n                                onChange={(e) => {\n                                  let newlist = [...raidcontroller];\n                                  newlist[i].raidcontrollersno = e.target.value;\n                                  setraidcontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------raidcontroller------------------------------- */}\n\n              {/* ----------------tapecontroller------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Tape Controller</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newtapecontroller = [...tapecontroller];\n                            let add = {\n                              tapecontrollername: \"\",\n                              tapecontrollersno: \"\",\n                            };\n                            newtapecontroller.push(add);\n                            settapecontroller(newtapecontroller);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newtapecontroller = [...tapecontroller];\n                            if (newtapecontroller[1]) {\n                              newtapecontroller.pop();\n                              settapecontroller(newtapecontroller);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {tapecontroller.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Tape Controller {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Tape Controller ${i + 1}`}\n                                name=\"tapecontrollername\"\n                                value={item.tapecontrollername}\n                                onChange={(e) => {\n                                  let newlist = [...tapecontroller];\n                                  newlist[i].tapecontrollername =\n                                    e.target.value;\n                                  settapecontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>\n                                Tape Controller {i + 1}: Serial Number\n                              </span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Tape Controller ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"tapecontrollersno\"\n                                value={item.tapecontrollersno}\n                                onChange={(e) => {\n                                  let newlist = [...tapecontroller];\n                                  newlist[i].tapecontrollersno = e.target.value;\n                                  settapecontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------tapecontroller------------------------------- */}\n            </div>\n\n            {/* ----------------opticaldrive------------------------------- */}\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <div className=\"flex flex-row items-center\">\n                  <Label className=\"font-bold\">\n                    <span>Optical Drive</span>\n                  </Label>\n                  <div className=\"ml-3 \">\n                    <Button\n                      onClick={() => {\n                        let newopticaldrive = [...opticaldrive];\n                        let add = { opticaldrivename: \"\", opticaldrivesno: \"\" };\n                        newopticaldrive.push(add);\n                        setopticaldrive(newopticaldrive);\n                      }}\n                      icon={Add}\n                      layout=\"link\"\n                      aria-label=\"Like\"\n                    />\n                  </div>\n                  <div className=\"ml-3\">\n                    <Button\n                      onClick={() => {\n                        let newopticaldrive = [...opticaldrive];\n                        if (newopticaldrive[1]) {\n                          newopticaldrive.pop();\n                          setopticaldrive(newopticaldrive);\n                        }\n                      }}\n                      icon={Remove}\n                      layout=\"link\"\n                      aria-label=\"Like\"\n                    />\n                  </div>\n                </div>\n                <hr className=\"mb-5 mt-2\" />\n                {opticaldrive.map((item, i) => {\n                  return (\n                    <div key={i}>\n                      <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                        <Label className=\"my-3 w-full\">\n                          <span>Optical Drive {i + 1}</span>\n                          <Input\n                            className=\"mt-1\"\n                            placeholder={`Opticaldrive ${i + 1}`}\n                            name=\"opticaldrivename\"\n                            value={item.opticaldrivename}\n                            onChange={(e) => {\n                              let newlist = [...opticaldrive];\n                              newlist[i].opticaldrivename = e.target.value;\n                              setopticaldrive(newlist);\n                            }}\n                          />\n                        </Label>\n                        <Label className=\"my-3 w-full\">\n                          <span>Opticaldrive {i + 1}: Serial Number</span>\n                          <Input\n                            className=\"mt-1\"\n                            placeholder={`Optical Drive ${\n                              i + 1\n                            }'s Serial Number `}\n                            name=\"opticaldrivesno\"\n                            value={item.opticaldrivesno}\n                            onChange={(e) => {\n                              let newlist = [...opticaldrive];\n                              newlist[i].opticaldrivesno = e.target.value;\n                              setopticaldrive(newlist);\n                            }}\n                          />\n                        </Label>\n                      </div>\n                    </div>\n                  );\n                })}\n              </>\n            ) : null}\n            {/* ----------------opticaldrive------------------------------- */}\n\n            {/* ----------------others------------------------------- */}\n            <div className=\"flex flex-row items-center\">\n              <Label className=\"font-bold\">\n                <span>Others</span>\n              </Label>\n              <div className=\"ml-3\">\n                <Button\n                  onClick={() => {\n                    let newothers = [...others];\n                    let add = { othersname: \"\", otherssno: \"\" };\n                    newothers.push(add);\n                    setothers(newothers);\n                  }}\n                  icon={Add}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                />\n              </div>\n              <div className=\"ml-3\">\n                <Button\n                  onClick={() => {\n                    let newothers = [...others];\n                    if (newothers[1]) {\n                      newothers.pop();\n                      setothers(newothers);\n                    }\n                  }}\n                  icon={Remove}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                />\n              </div>\n            </div>\n            <hr className=\"mb-5 mt-2\" />\n            {others.map((item, i) => {\n              return (\n                <div key={i}>\n                  <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                    <Label className=\"my-3 w-full\">\n                      <span>Others {i + 1}</span>\n                      <Input\n                        className=\"mt-1\"\n                        placeholder={`Others ${i + 1}`}\n                        name=\"othersname\"\n                        value={item.othersname}\n                        onChange={(e) => {\n                          let newlist = [...others];\n                          newlist[i].othersname = e.target.value;\n                          setothers(newlist);\n                        }}\n                      />\n                    </Label>\n                    <Label className=\"my-3 w-full\">\n                      <span>Others {i + 1}: Serial Number</span>\n                      <Input\n                        className=\"mt-1\"\n                        placeholder={`Others ${i + 1}'s Serial Number `}\n                        name=\"otherssno\"\n                        value={item.otherssno}\n                        onChange={(e) => {\n                          let newlist = [...others];\n                          newlist[i].otherssno = e.target.value;\n                          setothers(newlist);\n                        }}\n                      />\n                    </Label>\n                  </div>\n                </div>\n              );\n            })}\n\n            {/* ----------------others------------------------------- */}\n\n            <div className=\"flex items-center justify-center my-10\">\n              <Button type=\"submit\">Submit</Button>\n            </div>\n\n            {/* <Label className=\"mt-4\">\n              <span>Disabled</span>\n              <Input disabled className=\"mt-1\" placeholder=\"Jane Doe\" />\n            </Label> */}\n          </form>\n        </div>\n      </>\n    );\n  };\n\n  //DROPDOWN------------------------------------------------------------------------------------\n\n  const [isOpen, setIsOpen] = useState(false);\n  function toggleDropdown() {\n    setIsOpen(!isOpen);\n  }\n\n  const test = () => {\n    console.log(test);\n  };\n\n  return (\n    <>\n      <UnitListModal\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setUnit={setUnit}\n        unit={unit}\n        customer={customer}\n        setCustomer={setCustomer}\n        account={account}\n        setAccount={setAccount}\n        setRefresh={setRefresh}\n      />\n      {/* Heading of page with float button */}\n\n      {assetPicker()}\n      {/* <SectionTitle>Pick Product</SectionTitle> */}\n      {/* {dropdown()} */}\n      {product != \"null\" ? (\n        <>\n          <SectionTitle>{product} </SectionTitle>\n          {productPicker()}\n        </>\n      ) : null}\n      {/* {productPicker()} */}\n      {/* /////---------------------------- FOOTER */}\n      {/* <div class=\" w-7/12 bottom-0  border-t border-grey p-4 fixed pin-b bg-gray-700 text-xs text-white\">\n        Asset Summary Asset Information:\n        <br />\n        Business: {Business} POnumber: {POnumber} ContractFrom: {ContractFrom}\n        ContractTo: {ContractTo} BillingFrom: {BillingFrom} BillingTo:{\" \"}\n        {BillingTo} AMCRate:\n        {AMCRate} GST:{GST} GSTAMOUNT:{GSTAMOUNT} NetAmount:{NetAmount}\n        <br />\n        Product: {product}\n        <br />\n        Brind: {brand} model: {model} serialno: {serialno} os: {os}\n        <br />\n        {cpu.map((p, i) => {\n          return (\n            <>\n              CPU:{p.cpuname}, {p.cpusno}\n            </>\n          );\n        })}\n      </div> */}\n      {UpdatedModal()}\n    </>\n  );\n}\n\nexport default UpdateAsset;\n"],"sourceRoot":""}