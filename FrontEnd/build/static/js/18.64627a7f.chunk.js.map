{"version":3,"sources":["components/Modal/CustomerCreateModal.js","helpers/unitHelper.js","pages/Customers/CreateUnit.js","components/Modal/AddUnitModal.js"],"names":["CustomerCreatetModal","isModalOpen","setIsModalOpen","setCustomer","useState","values","setValues","useEffect","getCustomers","Axios","post","API","search","role","then","users","console","log","data","temp","map","user","push","catch","err","isOpen","onClose","i","key","className","onClick","_id","customerName","name","layout","unitCreate","newunit","Emp","getId","unit","error","response","status","errors","CreateUnit","isReviewModalOpen","setIsReviewModalOpen","isErrModalOpen","setIsErrModalOpen","customer","accountName","account","setAccount","unitName","assetId","address","district","state","locationType","pincode","GSTnumber","contactPerson","contactNo","altContact","WhatsappNo","handleChange","e","target","value","submitUnit","a","payload","customerId","customerMame","accountId","whatsappNo","AddUnitModal","PageTitle","type","onChange","aria-label","aria-haspopup","customers","setCustomers","accounts","setAccounts","tabIndex","setTabIndex","pickCustomer","accs","pickAccount","selectedIndex","onSelect","ind"],"mappings":"wOAqBe,SAASA,EAAT,GAIX,IAHFC,EAGC,EAHDA,YACAC,EAEC,EAFDA,eACAC,EACC,EADDA,YACC,EAC2BC,mBAAS,IADpC,mBACMC,EADN,KACcC,EADd,KAEDC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAe,WACnBC,IAAMC,KAAN,UAAcC,IAAd,uBAAwC,CAAEC,OAAQ,GAAIC,KAAM,IACzDC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAMG,MAClB,IAAIC,EAAO,GACXJ,EAAMG,KAAKE,KAAI,SAACC,GACdF,EAAKG,KAAKD,MAEZf,EAAUa,MAEXI,OAAM,SAACC,GACNR,QAAQC,IAAI,WAAYO,OA6D9B,OACE,oCAIE,kBAAC,QAAD,CAAOC,OAAQxB,EAAayB,QAAS,kBAAMxB,GAAe,KACxD,kBAAC,cAAD,qBACA,kBAAC,YAAD,KA9DF,kBAAC,iBAAD,KACE,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,mBAMJ,kBAAC,YAAD,KACGG,EAAOe,KAAI,SAACC,EAAMM,GAAP,OACV,kBAAC,WAAD,CACEC,IAAKD,EACLE,UAAU,uBACVC,QAAS,WACP3B,EAAY,CACV4B,IAAKV,EAAKU,IACVC,aAAcX,EAAKY,OAErB/B,GAAe,KAGjB,kBAAC,YAAD,KACE,6BACE,6BACE,uBAAG2B,UAAU,iBAAiBR,EAAKY,eAiBjD,kBAAC,cAAD,QAoBA,kBAAC,cAAD,KACE,kBAAC,SAAD,CACEJ,UAAU,mBACVK,OAAO,UACPJ,QAAS,kBAAM5B,GAAe,KAHhC,UAOA,kBAAC,SAAD,CAAQ2B,UAAU,oBAAlB,e,iCCvHV,qEAIaM,EAAa,SAACC,GACzB,OAAO3B,IAAMC,KAAN,UAAcC,IAAd,iBAA0B0B,IAAIC,QAA9B,WAAgDF,GACpDtB,MAAK,SAACyB,GAEL,OADAvB,QAAQC,IAAI,IAAKsB,EAAKrB,MACfqB,EAAKrB,QAEbK,OAAM,SAACiB,GAEN,GADAxB,QAAQC,IAAI,WACRuB,EAAMC,SAGR,MAFAzB,QAAQC,IAAIuB,EAAMC,SAASvB,MAC3BF,QAAQC,IAAIuB,EAAMC,SAASC,QACrBF,EAAMC,SAASvB,KAAKyB,Y,qLC4PnBC,UArPf,WAAsB,MAEkBxC,oBAAS,GAF3B,mBAEbH,EAFa,KAEAC,EAFA,OAG8BE,oBAAS,GAHvC,mBAGbyC,EAHa,KAGMC,EAHN,OAIwB1C,oBAAS,GAJjC,mBAIb2C,EAJa,KAIGC,EAJH,OAMY5C,mBAAS,CAAE2B,IAAK,GAAIC,aAAc,KAN9C,mBAMbiB,EANa,KAMH9C,EANG,OAOUC,mBAAS,CAAE2B,IAAK,GAAImB,YAAa,KAP3C,mBAObC,EAPa,KAOJC,EAPI,OAQQhD,mBAAS,CACnCiD,SAAU,cACVC,QAAS,GACTC,QAAS,UACTC,SAAU,UACVC,MAAO,UACPC,aAAc,UACdC,QAAS,UACTC,UAAW,UACXC,cAAe,UACfC,UAAW,UACXC,WAAY,UACZC,WAAY,YApBM,mBAQb3D,EARa,KAQLC,EARK,KAuBd2D,EAAe,SAAChC,GAAD,OAAU,SAACiC,GAC9B5D,EAAU,2BAAKD,GAAN,kBAAe4B,EAAOiC,EAAEC,OAAOC,WAGpCC,EAAU,uCAAG,WAAOH,GAAP,eAAAI,EAAA,yDACG,IAAhBrB,EAASlB,KAA4B,IAAfoB,EAAQpB,IADjB,uBAEfiB,GAAkB,GAFH,0BAMXuB,EAAU,CACdC,WAAYvB,EAASlB,IACrBC,aAAciB,EAASwB,aACvBC,UAAWvB,EAAQpB,IACnBmB,YAAaC,EAAQD,YAErBG,SAAUhD,EAAOgD,SACjBE,QAASlD,EAAOkD,QAChBC,SAAUnD,EAAOmD,SACjBC,MAAOpD,EAAOoD,MACdC,aAAcrD,EAAOqD,aACrBC,QAAStD,EAAOsD,QAChBC,UAAWvD,EAAOuD,UAClBC,cAAexD,EAAOwD,cACtBC,UAAWzD,EAAOyD,UAClBC,WAAY1D,EAAO0D,WACnBY,WAAYtE,EAAO2D,YAErB7B,YAAWoC,GACRzD,MAAK,SAACI,GACLF,QAAQC,IAAI,YAAaC,GACzB4B,GAAqB,MAEtBvB,OAAM,SAACC,GACNR,QAAQC,IAAI,MAAOO,MA9BN,2CAAH,sDAsMhB,OACE,oCACE,kBAACoD,EAAA,EAAD,CACE3E,YAAaA,EACbC,eAAgBA,EAChBkD,WAAYA,EACZD,QAASA,EACTF,SAAUA,EACV9C,YAAaA,IAEf,kBAAC0E,EAAA,EAAD,iBA1KA,yBAAKhD,UAAU,iEACb,kBAAC,QAAD,CAAOA,UAAU,aACf,2CAEF,wBAAIA,UAAU,cACd,kBAAC,QAAD,KACE,2CACA,kBAAC,QAAD,CACEA,UAAU,OACViD,KAAK,OACLV,MAAO/D,EAAOgD,SACd0B,SAAUd,EAAa,eAElB,IACT,kBAAC,QAAD,KACE,yCACA,kBAAC,QAAD,CACEpC,UAAU,OACViD,KAAK,OACLV,MAAO/D,EAAOkD,QACdwB,SAAUd,EAAa,cAElB,IACT,kBAAC,QAAD,KACE,0CACA,kBAAC,QAAD,CACEpC,UAAU,OACViD,KAAK,OACLV,MAAO/D,EAAOmD,SACduB,SAAUd,EAAa,eAElB,IACT,kBAAC,QAAD,KACE,uCACA,kBAAC,QAAD,CACEpC,UAAU,OACViD,KAAK,OACLV,MAAO/D,EAAOoD,MACdsB,SAAUd,EAAa,YAElB,IACT,kBAAC,QAAD,KACE,+CACA,kBAAC,QAAD,CACEpC,UAAU,OACViD,KAAK,OACLV,MAAO/D,EAAOqD,aACdqB,SAAUd,EAAa,mBAElB,IACT,kBAAC,QAAD,KACE,0CACA,kBAAC,QAAD,CACEpC,UAAU,OACViD,KAAK,OACLV,MAAO/D,EAAOsD,QACdoB,SAAUd,EAAa,cAElB,IACT,kBAAC,QAAD,KACE,4CACA,kBAAC,QAAD,CACEpC,UAAU,OACViD,KAAK,OACLV,MAAO/D,EAAOuD,UACdmB,SAAUd,EAAa,gBAElB,IACT,kBAAC,QAAD,KACE,gDACA,kBAAC,QAAD,CACEpC,UAAU,OACViD,KAAK,OACLV,MAAO/D,EAAOwD,cACdkB,SAAUd,EAAa,oBAElB,IACT,kBAAC,QAAD,KACE,gDACA,kBAAC,QAAD,CACEpC,UAAU,OACViD,KAAK,OACLV,MAAO/D,EAAOyD,UACdiB,SAAUd,EAAa,gBAElB,IACT,kBAAC,QAAD,KACE,iDACA,kBAAC,QAAD,CACEpC,UAAU,OACViD,KAAK,OACLV,MAAO/D,EAAO2D,WACde,SAAUd,EAAa,iBAG3B,wBAAIpC,UAAU,SACd,kBAAC,SAAD,CACEC,QAAS,kBAAM5B,GAAe,IAC9B8E,aAAW,gBACXC,gBAAc,OACdpD,UAAU,aAJZ,mBAQA,wBAAIA,UAAU,SACd,kBAAC,SAAD,CACEC,QAASuC,EACTW,aAAW,gBACXC,gBAAc,OACdpD,UAAU,QAJZ,gBAcF,oCACE,kBAAC,QAAD,CACEJ,OAAQoB,EACRnB,QAAS,kBAAMoB,GAAqB,KAEpC,kBAAC,cAAD,mCACA,kBAAC,YAAD,MACA,kBAAC,cAAD,KACE,kBAAC,SAAD,CACEjB,UAAU,mBACVC,QAAS,kBAAMgB,GAAqB,KAFtC,YAcN,oCACE,kBAAC,QAAD,CAAOrB,OAAQsB,EAAgBrB,QAAS,kBAAMsB,GAAkB,KAC9D,kBAAC,cAAD,0CACA,kBAAC,YAAD,0EAGA,kBAAC,cAAD,KACE,kBAAC,SAAD,CACEnB,UAAU,mBACVC,QAAS,kBAAMkB,GAAkB,KAFnC,e,qKCnNG,SAAS4B,EAAT,GAOX,IANF3E,EAMC,EANDA,YACAC,EAKC,EALDA,eACAiD,EAIC,EAJDA,QACAC,EAGC,EAHDA,WACAH,EAEC,EAFDA,SACA9C,EACC,EADDA,YACC,EACiCC,mBAAS,IAD1C,mBACM8E,EADN,KACiBC,EADjB,OAE+B/E,mBAAS,IAFxC,mBAEMgF,EAFN,KAEgBC,EAFhB,OAGyBjF,mBAAS,IAHlC,gCAI+BA,mBAAS,IAJxC,mBAIMkF,EAJN,KAIgBC,EAJhB,KAKDhF,qBAAU,WACRE,IAAMC,KAAN,UAAcC,IAAd,uBAAwC,CAAEC,OAAQ,GAAIC,KAAM,IACzDC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAMG,MAClB,IAAIC,EAAO,GACXJ,EAAMG,KAAKE,KAAI,SAACC,GACdF,EAAKG,KAAKD,MAEZ8D,EAAahE,MAEdI,OAAM,SAACC,GACNR,QAAQC,IAAI,WAAYO,QAE3B,IAEH,IAAMgE,EAAY,uCAAG,WAAOvC,GAAP,eAAAqB,EAAA,6DAEnBnE,EAAY,CACV4B,IAAKkB,EAASlB,IACdC,aAAciB,EAAShB,OAJN,kBAOExB,IAAMC,KAAN,UAAcC,IAAd,sBAAuC,CACxD6D,WAAYvB,EAASlB,MARN,OAOX0D,EAPW,OAUjBzE,QAAQC,IAAIwE,EAAKvE,MAKjBmE,EAAYI,EAAKvE,MACjBqE,EAAY,GAhBK,kDAkBjBvE,QAAQC,IAAI,WAAZ,MAlBiB,0DAAH,sDAsBZyE,EAAW,uCAAG,WAAOvC,GAAP,SAAAmB,EAAA,sDAClBtD,QAAQC,IAAIkC,GACZC,EAAW,CACTrB,IAAKoB,EAAQpB,IACbmB,YAAaC,EAAQlB,OAJL,2CAAH,sDA8EjB,OACE,oCAIE,kBAAC,QAAD,CAAOR,OAAQxB,EAAayB,QAAS,kBAAMxB,GAAe,KACxD,kBAAC,cAAD,eACsB,GAAZoF,EAAgB,gDAAgB,gDAE1C,kBAAC,YAAD,KACE,kBAAC,IAAD,CAAMK,cAAeL,EAAUM,SAAU,SAACC,GAAD,OAASN,EAAYM,KAC5D,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACA,kBAAC,IAAD,iBAEF,kBAAC,IAAD,KAnFN,kBAAC,iBAAD,KACE,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,mBAMJ,kBAAC,YAAD,KACGX,EAAU9D,KAAI,SAAC6B,EAAUtB,GAAX,OACb,kBAAC,WAAD,CACEC,IAAKD,EACLE,UAAU,qCACVC,QAAS,kBAAM0D,EAAavC,KAE5B,kBAAC,YAAD,KACE,6BACE,6BACE,uBAAGpB,UAAU,iBAAiBoB,EAAShB,eAQrD,kBAAC,cAAD,QAwDI,kBAAC,IAAD,KAjDN,kBAAC,iBAAD,KACE,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,kBAMJ,kBAAC,YAAD,KACGmD,EAAShE,KAAI,SAAC+B,EAASxB,GAAV,OACZ,kBAAC,WAAD,CACEC,IAAKD,EACLE,UAAU,qCACVC,QAAS,kBAAM4D,EAAYvC,KAE3B,kBAAC,YAAD,KACE,6BACE,6BACE,uBAAGtB,UAAU,iBAAiBsB,EAAQlB,eAQpD,kBAAC,cAAD,SAuBE,kBAAC,QAAD,CAAOJ,UAAU,eAAeiD,KAAK,WAArC,aACa7B,EAASjB,cAEtB,kBAAC,QAAD,CAAOH,UAAU,eAAeiD,KAAK,WAArC,aACa3B,EAAQD,cAGvB,kBAAC,cAAD,KACE,kBAAC,SAAD,CACErB,UAAU,mBAEVC,QAAS,kBAAM5B,GAAe,KAHhC,e","file":"static/js/18.64627a7f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nexport default function CustomerCreatetModal({\n  isModalOpen,\n  setIsModalOpen,\n  setCustomer,\n}) {\n  const [values, setValues] = useState([]);\n  useEffect(() => {\n    getCustomers();\n  }, []);\n\n  const getCustomers = () => {\n    Axios.post(`${API}/customer/customers`, { search: \"\", role: 1 })\n      .then((users) => {\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        setValues(temp);\n      })\n      .catch((err) => {\n        console.log(\"axiosErr\", err);\n      });\n  };\n\n  const userTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {values.map((user, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-900 \"\n                onClick={() => {\n                  setCustomer({\n                    _id: user._id,\n                    customerName: user.name,\n                  });\n                  setIsModalOpen(false);\n                }}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                {/* <TableCell>\n                    <span className=\"text-sm\">$ {user.email}</span>\n                  </TableCell> */}\n                {/* <TableCell>\n                    <Badge type={user.status}>{user.status}</Badge>\n                  </TableCell> */}\n                {/* <TableCell>\n                  <span className=\"text-sm\">{user.infoId.unit}</span>\n                </TableCell> */}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          {/* <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            /> */}\n        </TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>Modal header</ModalHeader>\n        <ModalBody>{userTable()}</ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Cancel\n          </Button>\n          <Button className=\"w-full sm:w-auto\">Accept</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import Axios from \"axios\";\nimport { API } from \"../backendapi\";\nimport Emp from \"../helpers/auth/EmpProfile\";\n\nexport const unitCreate = (newunit) => {\n  return Axios.post(`${API}/unit/${Emp.getId()}/create`, newunit)\n    .then((unit) => {\n      console.log(\"h\", unit.data);\n      return unit.data;\n    })\n    .catch((error) => {\n      console.log(\"ERRRROs\");\n      if (error.response) {\n        console.log(error.response.data);\n        console.log(error.response.status);\n        throw error.response.data.errors;\n      }\n    });\n};\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\n\nimport { signup, signin, authenticate } from \"../../helpers/auth\";\nimport CustomerCreateModal from \"../../components/Modal/CustomerCreateModal\";\nimport { unitCreate } from \"../../helpers/unitHelper\";\nimport AccountListModal from \"../../components/Modal/AccountListModel\";\nimport AddUnitModal from \"../../components/Modal/AddUnitModal\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nfunction CreateUnit() {\n  //modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [isErrModalOpen, setIsErrModalOpen] = useState(false);\n\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n  const [values, setValues] = useState({\n    unitName: \"defaultUnit\",\n    assetId: [],\n    address: \"default\",\n    district: \"default\",\n    state: \"default\",\n    locationType: \"default\",\n    pincode: \"default\",\n    GSTnumber: \"default\",\n    contactPerson: \"default\",\n    contactNo: \"default\",\n    altContact: \"default\",\n    WhatsappNo: \"default\",\n  });\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const submitUnit = async (e) => {\n    if (customer._id == \"\" || account._id == \"\") {\n      setIsErrModalOpen(true);\n      return;\n    }\n    // e.preventDefault();\n    const payload = {\n      customerId: customer._id,\n      customerName: customer.customerMame,\n      accountId: account._id,\n      accountName: account.accountName,\n\n      unitName: values.unitName,\n      address: values.address,\n      district: values.district,\n      state: values.state,\n      locationType: values.locationType,\n      pincode: values.pincode,\n      GSTnumber: values.GSTnumber,\n      contactPerson: values.contactPerson,\n      contactNo: values.contactNo,\n      altContact: values.altContact,\n      whatsappNo: values.WhatsappNo,\n    };\n    unitCreate(payload)\n      .then((data) => {\n        console.log(\"Signed Up\", data);\n        setIsReviewModalOpen(true);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        // setErr({ ...err });\n      });\n  };\n\n  //ASSET\n  const addForm = () => {\n    return (\n      <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Add Unit</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n        <Label>\n          <span>Unit Name</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.unitName}\n            onChange={handleChange(\"unitName\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Address</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.address}\n            onChange={handleChange(\"address\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>District</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.district}\n            onChange={handleChange(\"district\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>state</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.state}\n            onChange={handleChange(\"state\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Location Type</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.locationType}\n            onChange={handleChange(\"locationType\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>PIN code</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.pincode}\n            onChange={handleChange(\"pincode\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>GST Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.GSTnumber}\n            onChange={handleChange(\"GSTnumber\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Person</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactPerson}\n            onChange={handleChange(\"contactPerson\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactNo}\n            onChange={handleChange(\"contactNo\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Whatsapp Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.WhatsappNo}\n            onChange={handleChange(\"WhatsappNo\")}\n          />\n        </Label>\n        <hr className=\"my-8\" />\n        <Button\n          onClick={() => setIsModalOpen(true)}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4 mx-3\"\n        >\n          Select Customer\n        </Button>\n        <hr className=\"my-8\" />\n        <Button\n          onClick={submitUnit}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4\"\n        >\n          Create Unit\n        </Button>\n      </div>\n    );\n  };\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>Unit Created Successfully!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReviewModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const AccCustErr = () => {\n    return (\n      <>\n        <Modal isOpen={isErrModalOpen} onClose={() => setIsErrModalOpen(false)}>\n          <ModalHeader>Customer or Account Not Selected!</ModalHeader>\n          <ModalBody>\n            If Customer does not have any accounts under it, make them first.\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsErrModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <AddUnitModal\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setAccount={setAccount}\n        account={account}\n        customer={customer}\n        setCustomer={setCustomer}\n      />\n      <PageTitle>Add Unit</PageTitle>\n      {addForm()}\n\n      {/* {productPicker()} */}\n      {ReviewSubmit()}\n      {AccCustErr()}\n    </>\n  );\n}\n\nexport default CreateUnit;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../backendapi\";\n\nexport default function AddUnitModal({\n  isModalOpen,\n  setIsModalOpen,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  useEffect(() => {\n    Axios.post(`${API}/customer/customers`, { search: \"\", role: 1 })\n      .then((users) => {\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        setCustomers(temp);\n      })\n      .catch((err) => {\n        console.log(\"axiosErr\", err);\n      });\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select {tabIndex == 0 ? <>Customer</> : <>Account</>}\n        </ModalHeader>\n        <ModalBody>\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n          </Tabs>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}