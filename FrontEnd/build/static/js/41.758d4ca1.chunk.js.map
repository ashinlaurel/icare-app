{"version":3,"sources":["pages/Calls/RegisterCall.js","components/Modal/AssetFilters/CustomerSelection.js"],"names":["RegisterCall","useHistory","useState","isReviewModalOpen","setIsReviewModalOpen","isReqFieldModal","setIsReqFieldModal","isAssetModal","setIsAssetModal","setTopHeading","useContext","TopBarContext","BottomBarContext","setBBarOpen","bbaropen","setAssetDetails","assetdetails","activerowid","setActiveRowId","page","setPage","data","setData","isOpen","setIsOpen","isOpenTwo","setIsOpenTwo","isModalOpen","setIsModalOpen","refresh","setRefresh","disabler","setDisabler","Business","setBusiness","product","setProduct","_id","unitName","unit","setUnit","customerName","customer","setCustomer","accountName","account","setAccount","selectedprod","setSelectedProd","searchtype","setSearchType","searchlabel","setSearchLabel","searchquery","setSearchQuery","totalResults","setTotalResults","onPageChange","p","useEffect","a","console","log","payload","pages","limit","filters","business","producttype","unitId","customerId","accountId","axios","url","API","Emp","getId","method","response","out","total","callNo","date","contactPerson","phone","callStatus","problem","values","setValues","handleChange","name","e","target","value","submitCall","JSON","stringify","newcall","assetId","className","type","onChange","placeholder","class","onClick","xmlns","viewBox","d","disabled","selected","aria-label","aria-haspopup","onClose","onSubmit","preventDefault","map","user","i","key","serialno","moment","contractfrom","format","contractto","ponumber","podate","resultsPerPage","label","CustomerSelection","customers","setCustomers","accounts","setAccounts","units","setUnits","tabIndex","setTabIndex","search","setSearch","handleSubmit","role","pickCustomer","Axios","post","accs","pickAccount","u","pickUnit","selectedIndex","onSelect","ind"],"mappings":"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","file":"static/js/41.758d4ca1.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../backendapi\";\nimport moment from \"moment\"\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\n\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport { signup, signin, authenticate } from \"../../helpers/auth\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n\nimport { useHistory } from \"react-router-dom\";\n\n\n// --------ASSET\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\nimport CustomerSelection from \"../../components/Modal/AssetFilters/CustomerSelection\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ChatIcon,\n  CartIcon,\n  MoneyIcon,\n  PeopleIcon,\n  ButtonsIcon,\n  HeartIcon,\n  EditIcon,\n  TrashIcon,\n} from \"../../icons\"\n/////////////----------------->>>>>> bug <<<<<------------customerList refresh-------------------------\n\nfunction RegisterCall() {\n  let history = useHistory();\n\n\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [isReqFieldModal, setIsReqFieldModal] = useState(false);\n  const [isAssetModal, setIsAssetModal] = useState(false);\n  const { setTopHeading } = useContext(TopBarContext);\n\n  //---------------------------------- ASSETS VIEW STATES\n  // *\n  // *\n  // *\n  // *\n  // *\n  // *\n  // *\n  // *\n\n// Bottom bar stuff\n\n  const { bbaropen, setBBarOpen, setAssetDetails, assetdetails } = useContext(\n    BottomBarContext\n  );\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n\n\n\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  // dropdown and modals\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenTwo, setIsOpenTwo] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [Business, setBusiness] = useState(\"\");\n  const [product, setProduct] = useState(\"\");\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n\n  // -------Enabling Bottom Bar----\n  useEffect(() => {\n    setBBarOpen(1);\n    return () => {\n      setBBarOpen(0);\n      setAssetDetails({});\n    };\n  }, []);\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Assets Management\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          business: Business,\n          producttype: product,\n          customer: customer,\n          account: account,\n          unitId: unit._id,\n          customerId: customer._id,\n          accountId: account._id,\n          searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/asset/${Emp.getId()}/getall`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, Business, product, refresh]);\n\n  // console.log(\"SELECTED PROD\",selectedprod,\"NOOOO\");\n\n const Asset=()=>{\n  return (\n    <>\n      {/* ---------------------Customer Selection Modal----------------------------------------- */}\n      <CustomerSelection\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setUnit={setUnit}\n        unit={unit}\n        customer={customer}\n        setCustomer={setCustomer}\n        account={account}\n        setAccount={setAccount}\n        refresh={refresh}\n        setRefresh={setRefresh}\n      />\n      {/* ---------------------Customer Selection Modal----------------------------------------- */}\n\n      {/* {floatbox ? <AssetFloat /> : null} */}\n      <div className=\"mb-64 mt-1\">\n        <div className=\"flex items-center font-bold my-2 text-xl\">\n          Pick Asset\n        </div>\n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-6 \">\n            <div class=\"relative  \">\n              <button\n                class=\" shadow-md appearance-none h-full rounded border block w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                onClick={() => {\n                  setIsModalOpen(!isModalOpen);\n                }}\n                // value={sortBy}\n                // onChange={onSortToggle}\n              >\n                Pick Customer\n              </button>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            <div class=\"relative mx-5 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={Business}\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Business Type\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"AMC\">AMC</option>\n                <option value=\"WTY\">Warranty</option>\n                <option value=\"NOS\">NOS</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* ---------------------------Product Drop Down-------------------------------------- */}\n            <div className=\"relative z-40 \">\n              <button\n                onClick={() => {\n                  setIsOpen(!isOpen);\n                }}\n                className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                aria-label=\"Notifications\"\n                aria-haspopup=\"true\"\n              >\n                {product ? product : \"Pick Product\"}\n              </button>\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n              <Dropdown isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"\");\n                  }}\n                >\n                  <span>All</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Console\");\n                  }}\n                >\n                  <span>Console</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"DMP\");\n                  }}\n                >\n                  <span>DMP</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Inkjet\");\n                  }}\n                >\n                  <span>Inkjet</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"KVM\");\n                  }}\n                >\n                  <span>KVM</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Laptop\");\n                  }}\n                >\n                  <span>Laptop</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Laser\");\n                  }}\n                >\n                  <span>Laser</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"LMP\");\n                  }}\n                >\n                  <span>LMP</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Module\");\n                  }}\n                >\n                  <span>Module</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Router\");\n                  }}\n                >\n                  <span>Router</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Scanner\");\n                  }}\n                >\n                  <span>Scanner</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Server\");\n                  }}\n                >\n                  <span>Server</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Desktop\");\n                  }}\n                >\n                  <span>Desktop</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Storage\");\n                  }}\n                >\n                  <span>Storage</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Switch\");\n                  }}\n                >\n                  <span>Switch</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"UPS\");\n                  }}\n                >\n                  <span>UPS</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Others\");\n                  }}\n                >\n                  <span>Others</span>\n                </DropdownItem>\n              </Dropdown>\n            </div>\n\n            {/* -------------------------------Search Type--------------------------------------- */}\n            <div className=\"relative \">\n              <button\n                onClick={() => {\n                  setIsOpenTwo(!isOpenTwo);\n                }}\n                className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                aria-label=\"Notifications\"\n                aria-haspopup=\"true\"\n              >\n                {searchtype ? searchlabel : \"Pick Search Type\"}\n              </button>\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n              <Dropdown isOpen={isOpenTwo} onClose={() => setIsOpenTwo(false)}>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"\");\n                    setSearchLabel(\"\");\n                    setDisabler(true);\n                    setSearchQuery(\"\");\n                    setRefresh(!refresh);\n                  }}\n                >\n                  <span>All</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"kbdsno\");\n                    setSearchLabel(\"Keyboard Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Keyboard Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"mousesno\");\n                    setSearchLabel(\"Mouse Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Mouse Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"motherboardsno\");\n                    setSearchLabel(\"Motherboard Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Motherboard Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"monitorsno\");\n                    setSearchLabel(\"Monitor Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Monitor Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"hddsno\");\n                    setSearchLabel(\"HDD Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>HDD Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"cpusno\");\n                    setSearchLabel(\"CPU Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>CPU Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"ramsno\");\n                    setSearchLabel(\"Ram Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>RAM Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"smpssno\");\n                    setSearchLabel(\"SMPS Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>SMPS Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"fansno\");\n                    setSearchLabel(\"Fan Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Fan Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"opticaldrivesno\");\n                    setSearchLabel(\"Optical Drive Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Optical Drive Serial</span>\n                </DropdownItem>\n              </Dropdown>\n            </div>\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search\"\n                  disabled={disabler}\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n          </div>\n          {/* ----------------------------------------Row 2 -------------------------------------------------------------------- */}\n          {/* <div className=\"my-4 flex \">\n            <div class=\"relative \">\n              <select\n                class=\" shadow-md appearance-none h-full rounded border block w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                // value={sortBy}\n                // onChange={onSortToggle}\n              >\n                <option value=\"TIME_ASC\">Time(Latest)</option>\n                <option value=\"TIME_DESC\">Time(Oldest)</option>\n                <option value=\"NAME_ASC\">Name(A-Z)</option>\n                <option value=\"NAME_DESC\">Name(Z-A)</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n          </div> */}\n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Customer</TableCell>\n                <TableCell>Unit</TableCell>\n                <TableCell>Business</TableCell>\n                <TableCell>Product</TableCell>\n                <TableCell>Product Serial</TableCell>\n                <TableCell>Contract From</TableCell>\n                <TableCell>Contract To</TableCell>\n                <TableCell>Purchase Number</TableCell>\n                <TableCell>Purchase Date</TableCell>\n                \n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <TableRow\n                  className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                    activerowid == user._id\n                      ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                      : \"white\"\n                  } `}\n                  key={i}\n                  onClick={() => {\n                    setActiveRowId(user._id);\n                    // console.log(\"the id is \" + user._id);\n                    setSelectedProd(user);\n                    setAssetDetails(user);\n                    // console.log(user.product.keyboard[0].kbdname);\n                  }}\n                >\n                  <TableCell className=\"w-8\">\n                    <div className=\"flex items-center text-sm \">\n                      {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                      <div>\n                        <p className=\"font-semibold\">{user.customerName}</p>\n                        <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p>\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.unitName}</span>\n                  </TableCell>\n                  <TableCell>\n                    <Badge\n                      type={user.business == \"AMC\" ? \"primary\" : \"success\"}\n                    >\n                      {user.business}\n                    </Badge>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.producttype}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.product.serialno}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.contractfrom).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.contractto).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.ponumber}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.podate).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  \n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n          <Button className=\"mx-5 mb-10\" onClick={submitCall}>\n            Register Call\n          </Button>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n }\n// *\n// *\n// *\n// *\n// *\n// *\n// *\n  //---------------------------------- ASSETS VIEW STATES\n\n\n  const [values, setValues] = useState({\n    //both\n    callNo:\"\",\n    date:\"\",\n    contactPerson:\"\",\n    phone:\"\",\n    callStatus:\"Pending for allocation\",\n    problem:\"\",\n  });\n  const [err, setErr] = useState({\n  });\n\n  // ----------------------Heading Use Effect-------------\n\n  useEffect(() => {\n    setTopHeading(\"Register Call\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n\n  const submitCall = async () => {\n    if (\n      (values.callNo === \"\") |\n      // (values.contactPerson === \"\") |\n      // (values.phone === \"\") |\n      (values.problem === \"\") \n    ) {\n      setIsReqFieldModal(true);\n      return;\n    }\n    if (\n      (JSON.stringify(selectedprod)== JSON.stringify({})) \n    ) {\n      setIsAssetModal(true);\n      return;\n    }\n    // e.preventDefault();\n    const newcall = {\n      callNo:values.callNo,\n      date:values.date,\n      contactPerson: values.contactPerson,\n      phone:values.phone,\n      problem:values.problem,\n      unitId:selectedprod.unitId,\n      unitName:selectedprod.unitName,\n      accountId:selectedprod.accountId,\n      accountName:selectedprod.accountName,\n      customerId:selectedprod.customerId,\n      customerName:selectedprod.customerName,\n      assetId:selectedprod._id,\n      callStatus:0,\n      // employeeId:\"\"\n\n    };\n    console.log(\"CALL->\",newcall)\n    try {\n      await axios({\n        url: `${API}/call/${Emp.getId()}/create`,\n        method: \"POST\",\n        data: newcall,\n      });\n      setIsReviewModalOpen(true);\n      console.log(\"Done\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>\n            Created Successfully!\n          </ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReviewModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n\n  const ReqFieldErrModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReqFieldModal}\n          onClose={() => setIsReqFieldModal(false)}\n        >\n          <ModalHeader>Required fields are not filled!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReqFieldModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const AssetSelectedModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isAssetModal}\n          onClose={() => setIsAssetModal(false)}\n        >\n          <ModalHeader>Asset is not selected!</ModalHeader>\n          <ModalBody>Please select asset before registering call.</ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsAssetModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n\n\n\n  const addForm = () => {\n    return (\n      <div className=\"px-4 py-3 mt-4 mb-2 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Call Information</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n        {/* ------------------------Row 1-------------------------- */}\n        <div className=\"flex-row flex space-x-3\">\n        <>\n              <div className=\"flex flex-col w-full\">\n                <Label className=\"w-full\">\n                  <span>Call Number*</span>\n                  <Input\n                    className=\"mt-1\"\n                    type=\"text\"\n                    value={values.callNo}\n                    onChange={handleChange(\"callNo\")}\n                  />\n                </Label>\n                {/* <HelperText valid={false}>{err.callNo}</HelperText> */}\n              </div>\n            </>\n         \n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Date*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"date\"\n                value={values.date}\n                onChange={handleChange(\"date\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.username}</HelperText> */}\n          </div>\n          <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Conact Person*</span>\n            <Input\n              className=\"mt-1\"\n              type=\"email\"\n              placeholder=\"\"\n              value={values.contactPerson}\n              onChange={handleChange(\"contactPerson\")}\n            />\n          </Label>\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Phone Number*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.phone}\n                onChange={handleChange(\"phone\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.username}</HelperText> */}\n          </div>\n        </div>\n        {/* ----------------------Row 2 ----------------------------- */}\n        <div className=\"flex-row flex space-x-3 \">\n          \n        <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Problem Description*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.problem}\n                onChange={handleChange(\"problem\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.username}</HelperText> */}\n          </div>\n        </div>\n        {/* ///////////////////////////////////////////////////////// */}\n        {/* <Label className=\"font-bold mt-2 mb-1\">\n        \n        </Label> */}\n        \n        {/* ///////////////////////////////////////////////////////// */}\n       \n          <>\n            {/* <Button\n              onClick={() => setIsModalOpen(true)}\n              aria-label=\"Notifications\"\n              aria-haspopup=\"true\"\n              className=\"mt-4 mr-2\"\n            >\n              {customer.customerName === \"\" ? (\n                <>Select Associations</>\n              ) : (\n                <>Customer: {customer.customerName}</>\n              )}\n            </Button> */}\n          </>\n      \n        \n        \n      </div>\n    );\n  };\n  \n  \n  return (\n    <>\n     \n      {/* <PageTitle>Add Customer</PageTitle> */}\n      {addForm()}\n      \n      {Asset()}\n      \n\n      {/* {productPicker()} */}\n      {ReviewSubmit()}\n      {ReqFieldErrModal()}\n      {AssetSelectedModal()}\n      \n      \n    </>\n  );\n}\n\nexport default RegisterCall;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../../backendapi\";\n\nexport default function CustomerSelection({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n  refresh,\n  setRefresh,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      //   setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      //   setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody>\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              setRefresh(!refresh);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}