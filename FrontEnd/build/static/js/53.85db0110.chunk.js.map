{"version":3,"sources":["pages/Assets/Assets.js"],"names":["Assets","useState","isDeleteModalOpen","setIsDeleteModalOpen","deleteId","setDeleteId","useContext","BottomBarContext","setBBarOpen","bbaropen","setAssetDetails","assetdetails","activerowid","setActiveRowId","TopBarContext","setTopHeading","topheading","page","setPage","data","setData","isOpenTwo","setIsOpenTwo","isModalOpen","setIsModalOpen","refresh","setRefresh","disabler","setDisabler","Business","setBusiness","product","setProduct","_id","unitName","unit","setUnit","customerName","customer","setCustomer","accountName","account","setAccount","selectedprod","setSelectedProd","searchtype","setSearchType","searchlabel","setSearchLabel","searchquery","setSearchQuery","assethistory","setAssetHistory","assethistoryModalOpen","setAssetHistoryModalOpen","totalResults","setTotalResults","isDwnldModalOpen","setIsDwnldModalOpen","downloadAssets","a","payload","pages","limit","filters","business","producttype","unitId","customerId","accountId","axios","url","API","Emp","getId","method","response","array","out","maxcpucount","maxramcount","maxhddcount","maxsmpscount","maxfancount","maxmotherboardcount","maxopticaldrivecount","maxkeybdcount","maxmousecount","maxmonitorcount","maxgcardcount","maxenetcount","maxserialcardcount","maxparalellcardcount","maxhbacardcount","maxraidcount","maxtapecount","maxotherscount","map","temp","i","cpu","Math","max","length","ram","hdd","smps","fan","motherboard","opticaldrive","keyboard","mouse","monitor","gcard","enetcard","serialcard","parallelcard","hbacard","raidcontroller","tapecontroller","others","csv","ttt","count","ponumber","moment","podate","format","contractfrom","contractto","billingfrom","billingto","brand","model","serialno","os","cpuname","cpusno","ramname","ramsno","hddname","hddsno","smpsname","smpssno","fanname","fansno","motherboardname","motherboardsno","opticaldrivename","opticaldrivesno","keyboardname","keyboardsno","mousename","mousesno","monitorname","monitorsno","gcardname","gcardsno","enetcardname","enetcardsno","serialcardname","serialcardsno","tstring","JSON","parse","stringify","undefined","parallelcardname","parallelcardsno","hbacardname","hbacardsno","raidcontrollername","raidcontrollersno","tapecontrollername","tapecontrollersno","othersname","otherssno","csvData","Blob","type","saveAs","downloadContractDetails","amcrate","gstamount","netamount","console","log","downloadMIFDetails","useEffect","useMemo","total","isOpen","onClose","className","entry","key","onClick","date","capitalize","engineer","callAttendDate","startOfService","endOfService","callStatus","note","actionTaken","id","filter","x","isDownloading","setIsDownloading","handleDownload","downloadFunction","layout","DwnldModal","class","xmlns","viewBox","d","value","onChange","e","target","disabled","selected","aria-label","aria-haspopup","onSubmit","preventDefault","placeholder","user","size","to","aria-hidden","getRole","history","resultsPerPage","label","p"],"mappings":"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","file":"static/js/53.85db0110.chunk.js","sourcesContent":["import {\n  Badge,\n  Button,\n  Dropdown,\n  DropdownItem,\n  Pagination,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHeader,\n  TableRow,\n} from \"@windmill/react-ui\";\nimport { EditIcon, MenuIcon, TrashIcon } from \"../../icons\";\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"@windmill/react-ui\";\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\n\nimport { API } from \"../../backendapi\";\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\nimport CustomerSelection from \"../../components/Modal/AssetFilters/CustomerSelection\";\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport { Link } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport axios from \"axios\";\nimport { capitalize } from \"../../helpers/toolfuctions/toolfunctions\";\nimport moment from \"moment\";\nimport { saveAs } from \"file-saver\";\n\nfunction Assets() {\n  // Bottom bar stuff\n  // const [bbaropen, setBBarOpen] = useContext(BottomBarContext);\n  // const [assetdetails, setAssetDetails] = useContext(BottomBarContext);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [deleteId, setDeleteId] = useState(0);\n\n  const { bbaropen, setBBarOpen, setAssetDetails, assetdetails } =\n    useContext(BottomBarContext);\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const [floatbox, setFloatBox] = useState(false);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  // dropdown and modals\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenTwo, setIsOpenTwo] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [Business, setBusiness] = useState(\"\");\n  const [product, setProduct] = useState(\"\");\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // asset history\n  const [assethistory, setAssetHistory] = useState([]);\n  const [assethistoryModalOpen, setAssetHistoryModalOpen] = useState(false);\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  //download\n  const [isDwnldModalOpen, setIsDwnldModalOpen] = useState(false);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n  const AssetHistoryModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={assethistoryModalOpen}\n          onClose={() => setAssetHistoryModalOpen(false)}\n          className=\"w-9/12 dark:bg-gray-800 p-10 my-6  bg-gray-50 text-gray-900 dark:text-white  rounded-lg overflow-y-auto\"\n        >\n          <ModalHeader className=\"flex flex-row justify-between text-xl\">\n            {/* <div>{item.name}</div> */}\n            {/* <div>\n                Asset Serial: <Badge>{}</Badge>{\" \"}\n              </div> */}\n          </ModalHeader>\n          <ModalBody>\n            <div className=\"font-semibold text-xl my-2\">Asset History</div>\n            {/* ------------------------- Table ------------------------------ */}\n            <TableContainer className=\"mt-4\">\n              <Table>\n                <TableHeader>\n                  <tr>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Engineer</TableCell>\n                    <TableCell>Attended Date</TableCell>\n                    <TableCell>Start Of Service</TableCell>\n                    <TableCell>End Of Service</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell>Notes</TableCell>\n                    <TableCell>Action Taken</TableCell>\n                    <TableCell>Images</TableCell>\n                  </tr>\n                </TableHeader>\n                <TableBody>\n                  {assethistory.map((entry, i) => (\n                    <TableRow\n                      className={`hover:shadow-lg dark:hover:bg-gray-600\n                       `}\n                      key={i}\n                      onClick={() => {\n                        // setActiveRowId(user._id);\n                        // console.log(\"the id is \" + user._id);\n                        // setSelectedProd(user);\n                        // setAssetDetails(user);\n                        // console.log(user.product.keyboard[0].keyboardname);\n                      }}\n                    >\n                      <TableCell className=\"w-8\">\n                        <div className=\"flex items-center text-sm \">\n                          <div>\n                            <p className=\"font-semibold\">\n                              {moment(entry.date).format(\"DD-MM-YYYY\")}\n                            </p>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <span className=\"text-sm\">\n                          {capitalize(entry.engineer)}\n                        </span>\n                      </TableCell>\n\n                      <TableCell>\n                        <span className=\"text-sm\">{entry.callAttendDate}</span>\n                      </TableCell>\n                      <TableCell>\n                        <span className=\"text-sm\">{entry.startOfService}</span>\n                      </TableCell>\n                      <TableCell>\n                        <span className=\"text-sm\">{entry.endOfService}</span>\n                      </TableCell>\n                      <TableCell>\n                        <span>\n                          {entry.callStatus == 0 ? (\n                            <Badge>Pending For Allocation</Badge>\n                          ) : null}\n                          {entry.callStatus == 1 ? (\n                            <Badge>Pending for Percall Approval</Badge>\n                          ) : null}\n                          {entry.callStatus == 2 ? (\n                            <Badge>Pending for Response</Badge>\n                          ) : null}\n                          {entry.callStatus == 3 ? (\n                            <Badge>Pending for OEM Response</Badge>\n                          ) : null}\n                          {entry.callStatus == 4 ? (\n                            <Badge>Pending for 2nd Response</Badge>\n                          ) : null}\n                          {entry.callStatus == 5 ? (\n                            <Badge>Pending for Customer</Badge>\n                          ) : null}\n                          {entry.callStatus == 6 ? (\n                            <Badge>Under Observation</Badge>\n                          ) : null}\n                          {entry.callStatus == 7 ? (\n                            <Badge>Pending for Others</Badge>\n                          ) : null}\n                          {entry.callStatus == 8 ? (\n                            <Badge>Pending for Spare</Badge>\n                          ) : null}\n                          {entry.callStatus == 9 ? (\n                            <Badge>Spare in Transit</Badge>\n                          ) : null}\n                          {entry.callStatus == 10 ? (\n                            <Badge>Cancelled Calls</Badge>\n                          ) : null}\n                          {entry.callStatus == 11 ? (\n                            <Badge>Closed Calls</Badge>\n                          ) : null}\n                          {entry.callStatus == 12 ? (\n                            <Badge>Spare Taken CMRR</Badge>\n                          ) : null}\n                          {entry.callStatus == 13 ? (\n                            <Badge>Pending For Spare Collection</Badge>\n                          ) : null}\n                          {entry.callStatus == 14 ? (\n                            <Badge>Standby Given</Badge>\n                          ) : null}\n                          {entry.callStatus == 15 ? (\n                            <Badge>Pending For Verification</Badge>\n                          ) : null}\n                        </span>\n                      </TableCell>\n                      <TableCell className=\"flex flex-row max-w-sm\">\n                        <span className=\"w-full overflow-auto\">\n                          {entry.note}\n                        </span>\n                      </TableCell>\n                      <TableCell className=\" max-w-sm overflow-auto\">\n                        <span className=\"w-full overflow-auto\">\n                          {entry.actionTaken}\n                        </span>\n                      </TableCell>\n                      {/* <TableCell>\n                        <span className=\"text-sm\">{entry.actionTaken}</span>\n                      </TableCell> */}\n                      <TableCell></TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n              {/* <TableFooter>\n                  <Pagination\n                    totalResults={totalResults}\n                    resultsPerPage={resultsPerPage}\n                    label=\"Table navigation\"\n                    onChange={onPageChange}\n                  />\n                </TableFooter> */}\n            </TableContainer>\n          </ModalBody>\n          <ModalFooter></ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const DeleteModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isDeleteModalOpen}\n          onClose={() => setIsDeleteModalOpen(false)}\n        >\n          <ModalHeader>Are you sure you want to delete!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                try {\n                  let response = await axios({\n                    url: `${API}/asset/${Emp.getId()}/delete`,\n                    method: \"POST\",\n                    data: { id: deleteId },\n                  });\n                  console.log(response.data);\n                  let temp = data.filter((x) => x._id != deleteId);\n                  setData(temp);\n                  setIsDeleteModalOpen(false);\n\n                  // setData(response.data);\n                } catch (error) {\n                  throw error;\n                }\n              }}\n            >\n              Confirm Delete\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const DwnldModal = () => {\n    const [isDownloading, setIsDownloading] = useState(false);\n\n    const handleDownload = async (downloadFunction) => {\n      setIsDownloading(true);\n      await downloadFunction();\n      setIsDownloading(false);\n    };\n\n    return (\n      <>\n        <Modal\n          isOpen={isDwnldModalOpen}\n          onClose={() => setIsDwnldModalOpen(false)}\n          className=\" dark:bg-gray-800 p-5 mx-10 bg-gray-50 text-gray-900 dark:text-white text-center rounded-lg \"\n        >\n          <ModalHeader className=\"\">\n            <div className=\"text-lg\">Select Type Of Export</div>\n          </ModalHeader>\n          <ModalBody>\n            <div className=\"flex flex-row items-center justify-between space-x-4\">\n              <Button\n                layout=\"outline\"\n                onClick={() => handleDownload(downloadAssets)}\n              >\n                Full Database\n              </Button>\n              <Button\n                layout=\"outline\"\n                onClick={() => handleDownload(downloadContractDetails)}\n              >\n                Contract Details\n              </Button>\n              <Button\n                layout=\"outline\"\n                onClick={() => handleDownload(downloadMIFDetails)}\n              >\n                Brief MIF\n              </Button>\n            </div>\n            {isDownloading && <div className=\"mt-8\">Downloading, please wait...</div>}\n          </ModalBody>\n        </Modal>\n      </>\n    );\n  };\n\n\n  const downloadAssets = async () => {\n    let array;\n    let payload = {\n      pages: {\n        page: page,\n        limit: 10000000,\n      },\n      filters: {\n        business: Business,\n        producttype: product,\n        customer: customer,\n        account: account,\n        unitId: unit._id,\n        customerId: customer._id,\n        accountId: account._id,\n        searchtype: searchtype,\n        searchquery: searchquery,\n      },\n    };\n    try {\n      let response = await axios({\n        url: `${API}/asset/${Emp.getId()}/getall`,\n        method: \"POST\",\n        data: payload,\n      });\n      // console.log(response.data.out);\n      array = response.data.out;\n      // return response.data;\n    } catch (error) {\n      throw error;\n    }\n    //counting how many headings are required in\n    let maxcpucount = 0;\n    let maxramcount = 0;\n    let maxhddcount = 0;\n    let maxsmpscount = 0;\n    let maxfancount = 0;\n    let maxmotherboardcount = 0;\n    let maxopticaldrivecount = 0;\n    let maxkeybdcount = 0;\n    let maxmousecount = 0;\n    let maxmonitorcount = 0;\n    let maxgcardcount = 0;\n    let maxenetcount = 0;\n    let maxserialcardcount = 0;\n    let maxparalellcardcount = 0;\n    let maxhbacardcount = 0;\n    let maxraidcount = 0;\n    let maxtapecount = 0;\n    let maxotherscount = 0;\n\n    array.map((temp, i) => {\n      if (temp.product?.cpu) {\n        maxcpucount = Math.max(maxcpucount, temp.product.cpu.length);\n      }\n      if (temp.product?.ram) {\n        maxramcount = Math.max(maxramcount, temp.product.ram.length);\n      }\n      if (temp.product?.hdd) {\n        maxhddcount = Math.max(maxhddcount, temp.product.hdd.length);\n      }\n      if (temp.product?.smps) {\n        maxsmpscount = Math.max(maxsmpscount, temp.product.smps.length);\n      }\n      if (temp.product?.fan) {\n        maxfancount = Math.max(maxfancount, temp.product.fan.length);\n      }\n      if (temp.product?.motherboard) {\n        maxmotherboardcount = Math.max(\n          maxmotherboardcount,\n          temp.product.motherboard.length\n        );\n      }\n      if (temp.product?.opticaldrive) {\n        maxopticaldrivecount = Math.max(\n          maxopticaldrivecount,\n          temp.product.opticaldrive.length\n        );\n      }\n      if (temp.product?.keyboard) {\n        maxkeybdcount = Math.max(maxkeybdcount, temp.product.keyboard.length);\n      }\n      if (temp.product?.mouse) {\n        maxmousecount = Math.max(maxmousecount, temp.product.mouse.length);\n      }\n      if (temp.product?.monitor) {\n        maxmonitorcount = Math.max(\n          maxmonitorcount,\n          temp.product.monitor.length\n        );\n      }\n      if (temp.product?.gcard) {\n        maxgcardcount = Math.max(maxgcardcount, temp.product.gcard.length);\n      }\n      if (temp.product?.enetcard) {\n        maxenetcount = Math.max(maxenetcount, temp.product.enetcard.length);\n      }\n      if (temp.product?.serialcard) {\n        maxserialcardcount = Math.max(\n          maxserialcardcount,\n          temp.product.serialcard.length\n        );\n      }\n      if (temp.product?.parallelcard) {\n        maxparalellcardcount = Math.max(\n          maxparalellcardcount,\n          temp.product.parallelcard.length\n        );\n      }\n      if (temp.product?.hbacard) {\n        maxhbacardcount = Math.max(\n          maxhbacardcount,\n          temp.product.hbacard.length\n        );\n      }\n      if (temp.product?.raidcontroller) {\n        maxraidcount = Math.max(\n          maxraidcount,\n          temp.product.raidcontroller.length\n        );\n      }\n      if (temp.product?.tapecontroller) {\n        maxtapecount = Math.max(\n          maxtapecount,\n          temp.product.tapecontroller.length\n        );\n      }\n      if (temp.product?.others) {\n        maxotherscount = Math.max(maxotherscount, temp.product.others.length);\n      }\n    });\n\n    // console.log(\"maxcpucount=\", maxcpucount);\n\n    let csv = `ProductType,Customer,Account,Unit,Business,PoNumber,PoDate,ContactFrom,ContractTo,BillingFrom,BillingTo,Brand,Model,SerialNumber,OperatingSystem,`;\n    //cpu headings\n    for (let ttt = 1; ttt <= maxcpucount; ttt++) {\n      csv += `CPU ${ttt},CPU ${ttt} SNo,`;\n    }\n    //ram headings\n    for (let ttt = 1; ttt <= maxramcount; ttt++) {\n      csv += `RAM ${ttt},RAM ${ttt} SNo,`;\n    }\n    // hdd headings\n    for (let ttt = 1; ttt <= maxhddcount; ttt++) {\n      csv += `HDD ${ttt},HDD ${ttt} SNo,`;\n    }\n    // smps headings\n    for (let ttt = 1; ttt <= maxsmpscount; ttt++) {\n      csv += `SMPS ${ttt},SMPS ${ttt} SNo,`;\n    }\n    // fan headings\n    for (let ttt = 1; ttt <= maxfancount; ttt++) {\n      csv += `Fan ${ttt},Fan ${ttt} SNo,`;\n    }\n    // motherboard headings\n    for (let ttt = 1; ttt <= maxmotherboardcount; ttt++) {\n      csv += `Motherboard ${ttt},Motherboard ${ttt} SNo,`;\n    }\n    // optical headings\n    for (let ttt = 1; ttt <= maxopticaldrivecount; ttt++) {\n      csv += `Optical Drive ${ttt},Optical Drive ${ttt} SNo,`;\n    }\n    // keyboard headings\n    for (let ttt = 1; ttt <= maxkeybdcount; ttt++) {\n      csv += `Keyboard ${ttt},Keyboard ${ttt} SNo,`;\n    }\n    // mouse headings\n    for (let ttt = 1; ttt <= maxmousecount; ttt++) {\n      csv += `Mouse ${ttt},Mouse ${ttt} SNo,`;\n    }\n    // monitor headings\n    for (let ttt = 1; ttt <= maxmonitorcount; ttt++) {\n      csv += `Monitor ${ttt},Monitor ${ttt} SNo,`;\n    }\n    // gcard headings\n    for (let ttt = 1; ttt <= maxgcardcount; ttt++) {\n      csv += `Graphics Card ${ttt},Graphics Card ${ttt} SNo,`;\n    }\n    // enet headings\n    for (let ttt = 1; ttt <= maxenetcount; ttt++) {\n      csv += `Enet Card ${ttt},Enet Card ${ttt} SNo,`;\n    }\n    // serial headings\n    for (let ttt = 1; ttt <= maxserialcardcount; ttt++) {\n      csv += `Serial Card ${ttt},Serial Card ${ttt} SNo,`;\n    }\n    // paralell headings\n    for (let ttt = 1; ttt <= maxparalellcardcount; ttt++) {\n      csv += `Parallel Card ${ttt},Parallel Card ${ttt} SNo,`;\n    }\n    // hba headings\n    for (let ttt = 1; ttt <= maxhbacardcount; ttt++) {\n      csv += `HBA Card ${ttt},HBA Card ${ttt} SNo,`;\n    }\n    // raid headings\n    for (let ttt = 1; ttt <= maxraidcount; ttt++) {\n      csv += `Raid Controller ${ttt},Raid Controller ${ttt} SNo,`;\n    }\n    // tape headings\n    for (let ttt = 1; ttt <= maxtapecount; ttt++) {\n      csv += `Tape Controller ${ttt},Tape Controller ${ttt} SNo,`;\n    }\n    // others headings\n    for (let ttt = 1; ttt <= maxotherscount; ttt++) {\n      csv += `Others ${ttt},Others ${ttt} SNo,`;\n    }\n\n    csv += `\\n`;\n    array.map((i, count) => {\n      csv =\n        csv +\n        `\"${i.producttype}\",\"${i.customerName}\",\"${i.accountName}\",\"${\n          i.unitName\n        }\",\"${i.business}\",\"${i.ponumber}\",\"${moment(i.podate).format(\n          \"DD/MM/YYYY\"\n        )}\",\"${moment(i.contractfrom).format(\"DD/MM/YYYY\")}\",\"${moment(\n          i.contractto\n        ).format(\"DD/MM/YYYY\")}\",\"${moment(i.billingfrom).format(\n          \"DD/MM/YYYY\"\n        )}\",\"${moment(i.billingto).format(\"DD/MM/YYYY\")}\",\"${\n          i.product?.brand\n        }\",\"${i.product?.model}\",\"${i.product?.serialno}\",\"${i.product?.os}\",`;\n      //cpu insert\n      for (let temp = 0; temp < maxcpucount; temp++) {\n        if (i.product?.cpu[temp]) {\n          csv += `\"${i.product.cpu[temp].cpuname}\",\"${i.product.cpu[temp].cpusno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //ram insert\n      for (let temp = 0; temp < maxramcount; temp++) {\n        if (i.product?.ram[temp]) {\n          csv += `\"${i.product.ram[temp].ramname}\",\"${i.product.ram[temp].ramsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //hdd insert\n      for (let temp = 0; temp < maxhddcount; temp++) {\n        if (i.product?.hdd[temp]) {\n          csv += `\"${i.product.hdd[temp].hddname}\",\"${i.product.hdd[temp].hddsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //smps insert\n      for (let temp = 0; temp < maxsmpscount; temp++) {\n        if (i.product?.smps[temp]) {\n          csv += `\"${i.product.smps[temp].smpsname}\",\"${i.product.smps[temp].smpssno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //fan insert\n      for (let temp = 0; temp < maxfancount; temp++) {\n        if (i.product?.fan[temp]) {\n          csv += `\"${i.product.fan[temp].fanname}\",\"${i.product.fan[temp].fansno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //motherboard insert\n      for (let temp = 0; temp < maxmotherboardcount; temp++) {\n        if (i.product?.motherboard[temp]) {\n          csv += `\"${i.product.motherboard[temp].motherboardname}\",\"${i.product.motherboard[temp].motherboardsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //optical insert\n      for (let temp = 0; temp < maxopticaldrivecount; temp++) {\n        if (i.product?.opticaldrive[temp]) {\n          csv += `\"${i.product.opticaldrive[temp].opticaldrivename}\",\"${i.product.opticaldrive[temp].opticaldrivesno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //keyboard insert\n      for (let temp = 0; temp < maxkeybdcount; temp++) {\n        if (i.product?.keyboard[temp]) {\n          csv += `\"${i.product.keyboard[temp].keyboardname}\",\"${i.product.keyboard[temp].keyboardsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //mouse insert\n      for (let temp = 0; temp < maxmousecount; temp++) {\n        if (i.product?.mouse[temp]) {\n          csv += `\"${i.product.mouse[temp].mousename}\",\"${i.product.mouse[temp].mousesno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //monitor insert\n      for (let temp = 0; temp < maxmonitorcount; temp++) {\n        if (i.product?.monitor[temp]) {\n          csv += `\"${i.product.monitor[temp].monitorname}\",\"${i.product.monitor[temp].monitorsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //gcard insert\n      for (let temp = 0; temp < maxgcardcount; temp++) {\n        if (i.product?.gcard[temp]) {\n          csv += `\"${i.product.gcard[temp].gcardname}\",\"${i.product.gcard[temp].gcardsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //enet insert\n      for (let temp = 0; temp < maxenetcount; temp++) {\n        if (i.product?.enetcard[temp]) {\n          csv += `\"${i.product.enetcard[temp].enetcardname}\",\"${i.product.enetcard[temp].enetcardsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //serial insert\n      for (let temp = 0; temp < maxserialcardcount; temp++) {\n        if (i.product?.serialcard[temp]) {\n          csv += `\"${i.product.serialcard[temp].serialcardname}\",\"${i.product.serialcard[temp].serialcardsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //parallel insert\n      for (let temp = 0; temp < maxparalellcardcount; temp++) {\n        if (i.product?.parallelcard[temp]) {\n          let tstring = JSON.parse(\n            JSON.stringify(i.product.parallelcard[temp])\n          );\n          if (\n            tstring.parallelcardname !== undefined &&\n            tstring.parallelcard != \"\"\n          ) {\n            csv += `\"${i.product.parallelcard[temp].parallelcardname}\",\"${i.product.parallelcard[temp].parallelcardsno}\",`;\n          } else {\n            csv += `\"\",\"\",`;\n          }\n        }\n      }\n\n      //hba insert\n      for (let temp = 0; temp < maxhbacardcount; temp++) {\n        if (i.product?.hbacard[temp]) {\n          csv += `\"${i.product.hbacard[temp].hbacardname}\",\"${i.product.hbacard[temp].hbacardsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //raid controller insert\n      for (let temp = 0; temp < maxraidcount; temp++) {\n        if (i.product?.raidcontroller[temp]) {\n          csv += `\"${i.product.raidcontroller[temp].raidcontrollername}\",\"${i.product.raidcontroller[temp].raidcontrollersno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //tape controller insert\n      for (let temp = 0; temp < maxtapecount; temp++) {\n        if (i.product?.tapecontroller[temp]) {\n          csv += `\"${i.product.tapecontroller[temp].tapecontrollername}\",\"${i.product.tapecontroller[temp].tapecontrollersno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //others controller insert\n      for (let temp = 0; temp < maxotherscount; temp++) {\n        if (i.product?.others[temp]) {\n          csv += `\"${i.product.others[temp].othersname}\",\"${i.product.others[temp].otherssno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      csv += `\\n`;\n    });\n    // console.log(csv); //product.\n    const csvData = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    saveAs(csvData, \"Assets.csv\");\n  };\n\n  const downloadContractDetails = async () => {\n    let csv = `SLNo,Customer,Account,Unit,Business,PoNumber,PoDate,ContactFrom,ContractTo,BillingFrom,BillingTo,Rate,Gst,Amount,ExpiryMonth,Product,SerialNo,\\n`;\n\n    let array;\n    let payload = {\n      pages: {\n        page: page,\n        limit: 10000000,\n      },\n      filters: {\n        business: Business,\n        producttype: product,\n        customer: customer,\n        account: account,\n        unitId: unit._id,\n        customerId: customer._id,\n        accountId: account._id,\n        searchtype: searchtype,\n        searchquery: searchquery,\n      },\n    };\n    try {\n      let response = await axios({\n        url: `${API}/asset/${Emp.getId()}/getall`,\n        method: \"POST\",\n        data: payload,\n      });\n      // console.log(response.data.out);\n      array = response.data.out;\n      // return response.data;\n    } catch (error) {\n      throw error;\n    }\n\n    // let csv = `SLNo,Customer,Account,Unit,Business,PoNumber,PoDate,ContactFrom,ContractTo,BillingFrom,BillingTo,Rate,Gst,Amount,Expiry Month,Product,SerialNo,\\n`;\n    array.map((i, count) => {\n      csv =\n        csv +\n        `\"${count + 1}\",\"${i.customerName}\",\"${i.accountName}\",\"${\n          i.unitName\n        }\",\"${i.business}\",\"${i.ponumber}\",\"${moment(i.podate).format(\n          \"DD/MM/YYYY\"\n        )}\",\"${moment(i.contractfrom).format(\"DD/MM/YYYY\")}\",\"${moment(\n          i.contractto\n        ).format(\"DD/MM/YYYY\")}\",\"${moment(i.billingfrom).format(\n          \"DD/MM/YYYY\"\n        )}\",\"${moment(i.billingto).format(\"DD/MM/YYYY\")}\",\"${i.amcrate}\",\"${\n          i.gstamount\n        }\",\"${i.netamount}\",\"${moment(i.contractto).format(\"MMMM\")}\",\"${\n          i.producttype\n        }\",\"${i.product?.serialno}\",\\n`;\n    });\n    console.log(csv); //product.\n    const csvData = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    saveAs(csvData, \"Assets.csv\");\n  };\n  const downloadMIFDetails = async () => {\n    let csv = `SLNo,Customer,Account,Unit,PoNumber,PoDate,ContactFrom,ContractTo,BillingFrom,BillingTo,Rate,Gst,Amount,ExpiryMonth,Product,SerialNo,Keyboard,KbdSerialNo,Mouse,MouseSerialNo,Monitor,MonitorSerialNo,\\n`;\n\n    let array;\n    let payload = {\n      pages: {\n        page: page,\n        limit: 10000000,\n      },\n      filters: {\n        business: Business,\n        producttype: product,\n        customer: customer,\n        account: account,\n        unitId: unit._id,\n        customerId: customer._id,\n        accountId: account._id,\n        searchtype: searchtype,\n        searchquery: searchquery,\n      },\n    };\n    try {\n      let response = await axios({\n        url: `${API}/asset/${Emp.getId()}/getall`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data.out);\n      array = response.data.out;\n      // return response.data;\n    } catch (error) {\n      throw error;\n    }\n\n    array.map((i, count) => {\n      csv =\n        csv +\n        `\"${count + 1}\",\"${i.customerName}\",\"${i.accountName}\",\"${\n          i.unitName\n        }\",\"${i.ponumber}\",\"${moment(i.podate).format(\"DD/MM/YYYY\")}\",\"${moment(\n          i.contractfrom\n        ).format(\"DD/MM/YYYY\")}\",\"${moment(i.contractto).format(\n          \"DD/MM/YYYY\"\n        )}\",\"${moment(i.billingfrom).format(\"DD/MM/YYYY\")}\",\"${moment(\n          i.billingto\n        ).format(\"DD/MM/YYYY\")}\",\"${i.amcrate}\",\"${i.gstamount}\",\"${\n          i.netamount\n        }\",\"${moment(i.contractto).format(\"MMMM\")}\",\"${i.producttype}\",\"${\n          i.product?.serialno\n        }\",\"${\n          i.product?.keyboard.length != 0\n            ? i.product?.keyboard[0].keyboardname\n            : \"\"\n        }\",\"${\n          i.product?.keyboard.length != 0\n            ? i.product?.keyboard[0].keyboardsno\n            : \"\"\n        }\",\"${\n          i.product?.mouse.length != 0 ? i.product?.mouse[0].mousename : \"\"\n        }\",\"${\n          i.product?.mouse.length != 0 ? i.product?.mouse[0].mousesno : \"\"\n        }\",\"${\n          i.product?.monitor.length != 0 ? i.product?.monitor[0].monitorname : \"\"\n        }\",\"${\n          i.product?.monitor.length != 0 ? i.product?.monitor[0].monitorsno : \"\"\n        }\",\\n`;\n    });\n    console.log(csv); //product.\n    const csvData = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    saveAs(csvData, \"Assets.csv\");\n  };\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n  // -------Enabling Bottom Bar----\n  useEffect(() => {\n    // setBBarOpen(1);\n    return () => {\n      setBBarOpen(0);\n      setAssetDetails({});\n    };\n  }, []);\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Assets Management\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useMemo(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          business: Business,\n          producttype: product,\n          customer: customer,\n          account: account,\n          unitId: unit._id,\n          customerId: customer._id,\n          accountId: account._id,\n          searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/asset/${Emp.getId()}/getall`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        await setTotalResults(response.data.total);\n\n        console.log(\"response total\", response.data.total);\n\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n        // if (searchquery != \"\") {\n        //   setPage(1);\n        // }\n      } catch (error) {\n        throw error;\n      }\n\n      console.log(\"totalResults\", totalResults);\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, Business, product, refresh]);\n\n  console.log(selectedprod);\n\n  return (\n    <>\n      {/* ---------------------Modals----------------------------------------- */}\n      <CustomerSelection\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setUnit={setUnit}\n        unit={unit}\n        customer={customer}\n        setCustomer={setCustomer}\n        account={account}\n        setAccount={setAccount}\n        refresh={refresh}\n        setRefresh={setRefresh}\n      />\n      {AssetHistoryModal()}\n      {DeleteModal()}\n      {DwnldModal()}\n      {/* ---------------------Customer Selection Modal----------------------------------------- */}\n\n      {/* {floatbox ? <AssetFloat /> : null} */}\n      <div className=\"mb-64 mt-4\">\n        {/* <div className=\"flex items-center\">\n          <PageTitle>Assets Management</PageTitle>\n          <div>\n            <Button\n              className=\"mx-3\"\n              onClick={() => {\n                setFloatBox(!floatbox);\n              }}\n              icon={HeartIcon}\n              layout=\"link\"\n              aria-label=\"Like\"\n            />\n          </div>\n        </div> */}\n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-6 \">\n            <div class=\"relative  \">\n              <button\n                class=\" shadow-md appearance-none h-full rounded border block w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                onClick={() => {\n                  setIsModalOpen(!isModalOpen);\n                }}\n              >\n                Pick Customer\n              </button>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            <div class=\"relative mx-5 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={Business}\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Business Type\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"AMC\">AMC</option>\n                <option value=\"WTY\">Warranty</option>\n                <option value=\"NOS\">NOS</option>\n                <option value=\"DEAD\">DEAD</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/*------------ new product dropdown----------- */}\n            <div class=\"relative mx-5 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={product}\n                onChange={(e) => {\n                  setProduct(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Pick Product\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Console\">Console</option>\n                <option value=\"DMP\">DMP</option>\n                <option value=\"Inkjet\">Inkjet</option>\n                <option value=\"KVM\">KVM</option>\n                <option value=\"Laptop\">Laptop</option>\n                <option value=\"Laser\">Laser</option>\n                <option value=\"LMP\">LMP</option>\n                <option value=\"Module\">Module</option>\n                <option value=\"Router\">Router</option>\n                <option value=\"Scanner\">Scanner</option>\n                <option value=\"Server\">Server</option>\n                <option value=\"Desktop\">Desktop</option>\n                <option value=\"Storage\">Storage</option>\n                <option value=\"Switch\">Switch</option>\n                <option value=\"UPS\">UPS</option>\n                <option value=\"Ncompute\">Ncompute</option>\n                <option value=\"Others\">Others</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* -------------------------------Search Type--------------------------------------- */}\n            <div className=\"relative \">\n              <button\n                onClick={() => {\n                  setIsOpenTwo(true);\n                }}\n                className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                aria-label=\"Notifications\"\n                aria-haspopup=\"true\"\n              >\n                {searchtype ? searchlabel : \"Pick Search Type\"}\n              </button>\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n              <Dropdown\n                isOpen={isOpenTwo}\n                onClose={() => setIsOpenTwo(!isOpenTwo)}\n              >\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"\");\n                    setSearchLabel(\"\");\n                    setDisabler(true);\n                    setSearchQuery(\"\");\n                    setRefresh(!refresh);\n                  }}\n                >\n                  <span>All</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"prodserial\");\n                    setSearchLabel(\"Product Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Product Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"keyboardsno\");\n                    setSearchLabel(\"Keyboard Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Keyboard Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"mousesno\");\n                    setSearchLabel(\"Mouse Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Mouse Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"motherboardsno\");\n                    setSearchLabel(\"Motherboard Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Motherboard Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"monitorsno\");\n                    setSearchLabel(\"Monitor Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Monitor Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"hddsno\");\n                    setSearchLabel(\"HDD Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>HDD Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"cpusno\");\n                    setSearchLabel(\"CPU Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>CPU Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"ramsno\");\n                    setSearchLabel(\"Ram Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>RAM Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"smpssno\");\n                    setSearchLabel(\"SMPS Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>SMPS Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"fansno\");\n                    setSearchLabel(\"Fan Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Fan Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"opticaldrivesno\");\n                    setSearchLabel(\"Optical Drive Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Optical Drive Serial</span>\n                </DropdownItem>\n              </Dropdown>\n            </div>\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  // setPage(1);\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search\"\n                  disabled={disabler}\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n\n            <div class=\"block relative xl:ml-64\">\n              <Button\n                layout=\"outline\"\n                onClick={() => {\n                  setIsDwnldModalOpen(true);\n                }}\n              >\n                Export Data\n              </Button>\n            </div>\n          </div>\n          {/* ----------------------------------------Row 2 -------------------------------------------------------------------- */}\n          {/* <div className=\"my-4 flex \">\n            <div class=\"relative \">\n              <select\n                class=\" shadow-md appearance-none h-full rounded border block w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                // value={sortBy}\n                // onChange={onSortToggle}\n              >\n                <option value=\"TIME_ASC\">Time(Latest)</option>\n                <option value=\"TIME_DESC\">Time(Oldest)</option>\n                <option value=\"NAME_ASC\">Name(A-Z)</option>\n                <option value=\"NAME_DESC\">Name(Z-A)</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n          </div> */}\n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Customer</TableCell>\n                <TableCell>Unit</TableCell>\n                <TableCell>Business</TableCell>\n                <TableCell>Product</TableCell>\n                <TableCell>Product Serial</TableCell>\n                <TableCell>Contract From</TableCell>\n                <TableCell>Contract To</TableCell>\n                <TableCell>Purchase Number</TableCell>\n                <TableCell>Purchase Date</TableCell>\n                <TableCell>Edit/Delete</TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <TableRow\n                  className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                    user.business == \"NOS\"\n                      ? \"bg-red-200 dark:bg-red-900 bg-transparent border-white\"\n                      : \"\"\n                  } ${\n                    activerowid == user._id\n                      ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                      : \"white\"\n                  } `}\n                  key={i}\n                  onClick={() => {\n                    setBBarOpen(1);\n                    setActiveRowId(user._id);\n                    // console.log(\"the id is \" + user._id);\n                    setSelectedProd(user);\n                    setAssetDetails(user);\n                    // console.log(user.product.keyboard[0].keyboardname);\n                  }}\n                >\n                  <TableCell className=\"w-8\">\n                    <div className=\"flex items-center text-sm \">\n                      {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                      <div>\n                        <p className=\"font-semibold\">{user.customerName}</p>\n                        <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p>\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.unitName}</span>\n                  </TableCell>\n                  <TableCell>\n                    <Badge\n                      type={user.business == \"AMC\" ? \"primary\" : \"success\"}\n                    >\n                      {user.business}\n                    </Badge>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.producttype}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.product.serialno}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.contractfrom).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.contractto).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.ponumber}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.podate).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex items-center space-x-4\">\n                      <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                        <Link\n                          key={user._id}\n                          to={`/app/unit/update/${user._id}`}\n                        >\n                          <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                        </Link>{\" \"}\n                      </Button>\n\n                      {Emp.getRole() == 14 ? null : (\n                        <Button\n                          layout=\"link\"\n                          size=\"icon\"\n                          aria-label=\"Delete\"\n                          onClick={async () => {\n                            console.log(\"delete Asset\");\n                            setIsDeleteModalOpen(true);\n                            setDeleteId(user._id);\n                          }}\n                        >\n                          <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                        </Button>\n                      )}\n                      <Button\n                        onClick={() => {\n                          console.log(\"hellloo\", data[i].product.history);\n                          setAssetHistory(data[i].product.history);\n                          setAssetHistoryModalOpen(true);\n                        }}\n                        layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"Edit\"\n                      >\n                        <MenuIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                      {/* <div>\n            <Button className=\"mx-3 mt02\">\n              {\" \"}\n              <Link\n                key={selectedprod._id}\n                to={`/app/unit/update/${selectedprod._id}`}\n              >\n                Edit\n              </Link>{\" \"}\n            </Button>\n            <Button\n              className=\"mx-3 mt02\"\n              onClick={async () => {\n                console.log(\"delete Asset\");\n                try {\n                  let response = await axios({\n                    url: `${API}/asset/${Emp.getId()}/delete`,\n                    method: \"POST\",\n                    data: { id: selectedprod._id },\n                  });\n                  console.log(response.data);\n                  // let temp = data.filter((x) => x._id != selectedprod._id);\n                  // setData(temp);\n\n                  // setData(response.data);\n                } catch (error) {\n                  throw error;\n                }\n              }}\n            >\n              Delete\n            </Button>\n          </div> */}\n                    </div>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n}\n\nexport default Assets;\n"],"sourceRoot":""}