{"version":3,"sources":["pages/Notifications/Notifications.js","components/Modal/AssetFilters/CustomerSelection.js","../../src/FileSaver.js"],"names":["Notifications","useState","activerowid","setActiveRowId","useContext","TopBarContext","setTopHeading","topheading","page","setPage","data","setData","refresh","setRefresh","status","location","setLocation","ToLocation","setToLocation","condition","setCondition","LSTtype","setLSTtype","selectedprod","searchquery","setSearchQuery","totalResults","setTotalResults","activeRowID","setActiveRowID","messageModal","setMessageModal","modalMessage","setModalMessage","isDownloadModalOpen","setisDownloadModalOpen","downloadLST","setDownloadLST","downloadNum","setDownloadNum","useEffect","loc","EmpProfile","getLocation","a","console","log","payload","pages","limit","filters","from","to","axios","url","API","Emp","getId","method","response","out","total","createAndDownloadPdf","id","LSTno","CourierNumber","DocketType","update","responseType","pdfBlob","Blob","type","saveAs","updateInventory","i","j","items","lstItem","invItem","invItems","todaydate","moment","format","newhistory","histtype","date","callId","assetId","note","vendorName","_id","sno","$push","history","flag","map","item","name","updatelst","updateCMRRInventory","CMRRItem","CMRRItems","className","class","value","onChange","e","target","disabled","selected","xmlns","viewBox","d","onSubmit","preventDefault","placeholder","onClick","user","key","LSTNo","length","layout","aria-label","size","aria-hidden","num","tempdata","temp","filter","x","invnumber","InvTable","resultsPerPage","label","p","isOpen","onClose","CustomerSelection","isModalOpen","setIsModalOpen","unit","setUnit","account","setAccount","customer","setCustomer","theunitdetails","setTheUnitDetails","customers","setCustomers","accounts","setAccounts","units","setUnits","tabIndex","setTabIndex","search","setSearch","handleChange","handleSubmit","role","pickCustomer","customerName","accountName","unitName","Axios","post","customerId","accs","pickAccount","accountId","u","pickUnit","contactPerson","contactNo","selectedIndex","onSelect","ind","MouseEvent","document","window","self","global","test","navigator","HTMLAnchorElement","b","setTimeout","f","autoBom","open","module"],"mappings":"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","file":"static/js/31.70f81a13.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\n// import { Page, Text, View, Document, StyleSheet,PDFDownloadLink } from '@react-pdf/renderer';\n// import ReactPDF from '@react-pdf/renderer';\n// import { PDFViewer } from '@react-pdf/renderer';\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport { EditIcon, TrashIcon, DropdownIcon } from \"../../icons\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  Button,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n  Select,\n} from \"@windmill/react-ui\";\n\nimport { API } from \"../../backendapi\";\nimport CustomerSelection from \"../../components/Modal/AssetFilters/CustomerSelection\";\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\nimport { Link } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport EmpProfile from \"../../helpers/auth/EmpProfile\";\n// import PrintLST from \"./PrintLST\";\n\nfunction Notifications() {\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const [floatbox, setFloatBox] = useState(false);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  // dropdown and modals\n\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [status, setstatus] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [ToLocation, setToLocation] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n  const [LSTtype, setLSTtype] = useState(\"Normal\");\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  const [activeRowID, setActiveRowID] = useState(-1);\n\n  //modal\n  const [messageModal, setMessageModal] = useState(false);\n  const [modalMessage, setModalMessage] = useState(\"\");\n\n  // ----------------download states------------------------------\n  const [isDownloadModalOpen, setisDownloadModalOpen] = useState(false);\n  const [downloadLST, setDownloadLST] = useState({});\n  const [downloadNum, setDownloadNum] = useState(0);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Notifications\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    let loc = EmpProfile.getLocation();\n    // console.log(\"Location\",loc);\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          // type: type,\n          from: location,\n          to: ToLocation,\n          status: \"In Transit\",\n          LSTtype: LSTtype,\n          // searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      if (loc != \"All\") payload.filters.to = loc;\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/lst/${Emp.getId()}/getall`,\n          method: \"POST\",\n          data: payload,\n        });\n\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, location, ToLocation, condition, status, refresh, LSTtype]);\n\n  console.log(selectedprod);\n\n  // ----------------------------------Download Functions -------------------------------\n  const DownloadModal = () => {\n    console.log(downloadLST);\n    return (\n      <>\n        <Modal\n          isOpen={isDownloadModalOpen}\n          onClose={() => setisDownloadModalOpen(false)}\n        >\n          <ModalHeader>Download LST</ModalHeader>\n          <ModalBody>\n            {data[downloadNum] ? (\n              <>\n                <div className=\"flex flex-row\">\n                  <div className=\" my-2 ml-5 mr-2 w-full\">Docket Type:</div>\n                  <input\n                    value={data[downloadNum].DocketType}\n                    onChange={(e) => {\n                      let temp = [...data];\n                      temp[downloadNum].DocketType = e.target.value;\n                      // console.log( temp[downloadNum].DocketType)\n                      setData(temp);\n                    }}\n                    class=\"w-full mr-5 shadow-md z-20 appearance-none rounded border border-gray-400 border-b block py-1  bg-white text-sm  text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                  />\n                </div>\n\n                <div className=\"flex flex-row my-2\">\n                  <div className=\"my-2 ml-5 mr-2 w-full\">Courier Number:</div>\n                  <input\n                    value={data[downloadNum].CourierNumber}\n                    onChange={(e) => {\n                      let temp = [...data];\n                      temp[downloadNum].CourierNumber = e.target.value;\n                      // console.log( temp[downloadNum].CourierNumber)\n                      setData(temp);\n                    }}\n                    class=\"w-full mr-5  shadow-md z-20 appearance-none rounded border border-gray-400 border-b block py-1  bg-white text-sm  text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                  />\n                </div>\n              </>\n            ) : null}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                createAndDownloadPdf(\n                  data[downloadNum]._id,\n                  data[downloadNum].LSTNo,\n                  data[downloadNum].CourierNumber,\n                  data[downloadNum].DocketType\n                );\n              }}\n            >\n              Download\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  // PDF Download Functions\n\n  const createAndDownloadPdf = async (id, LSTno, CourierNumber, DocketType) => {\n    let payload = {\n      id: id,\n      update: {\n        CourierNumber,\n        DocketType,\n      },\n    };\n    let response = await axios({\n      url: `${API}/lst/${Emp.getId()}/downloadpdf`,\n      method: \"POST\",\n      data: payload,\n      responseType: \"blob\",\n    });\n\n    const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\n    setisDownloadModalOpen(false);\n    saveAs(pdfBlob, `LST_${LSTno}.pdf`);\n  };\n\n  // ---------------------------------------------------------------------------------------------------------\n\n  const updateInventory = async (i, j) => {\n    let items = data;\n    let lstItem = data[i];\n    let invItem = lstItem.invItems[j];\n    console.log(lstItem, invItem);\n\n    let todaydate = moment().format();\n\n    // ----history ---\n    let newhistory = {\n      histtype: \"lst\",\n      date: todaydate,\n      location: lstItem.to,\n      callId: \"Nil\",\n      assetId: \"Nil\",\n      status: invItem.condition,\n      note: `Item received at ${lstItem.to}`,\n    };\n    let update = {};\n    if (lstItem.to == \"Vendor\") {\n      newhistory.note = `Item received from ${lstItem.vendorName} back to ${lstItem.from}`;\n      update = {\n        id: invItem._id,\n        update: {\n          location: lstItem.from,\n          sno: invItem.sno,\n          condition: invItem.condition,\n          $push: { history: newhistory },\n        },\n      };\n    } else {\n      update = {\n        id: invItem._id,\n        update: {\n          location: lstItem.to,\n          status: invItem.condition,\n          $push: { history: newhistory },\n        },\n      };\n    }\n    console.log(\"PAYLOAD\", update);\n    try {\n      await axios({\n        url: `${API}/inventory/${Emp.getId()}/invupdate`,\n        method: \"POST\",\n        data: update,\n      });\n      items[i].invItems[j].location = lstItem.to;\n      setData(items);\n      setActiveRowID(-1);\n      setActiveRowID(i);\n      // setIsReviewModalOpen(true);\n      console.log(\"Done\");\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n    let flag = false;\n    items[i].invItems.map((item) => {\n      if (item.location == \"In Transit\") flag = true;\n    });\n\n    if (flag == true) {\n      setModalMessage(`${invItem.name} Recieved`);\n      setMessageModal(true);\n      return;\n    }\n    const updatelst = {\n      id: lstItem._id,\n      update: {\n        status: \"Received\",\n      },\n    };\n    try {\n      await axios({\n        url: `${API}/lst/${Emp.getId()}/update`,\n        method: \"POST\",\n        data: updatelst,\n      });\n      // items[i].invItems[j].location=lstItem.to;\n      // setData(items);\n      // setActiveRowID(-1);\n      // setActiveRowID(i);\n      // setIsReviewModalOpen(true);\n      setModalMessage(\n        `${invItem.name} Recieved.\\n All Items Received from LST`\n      );\n      setMessageModal(true);\n      console.log(\"Done\");\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n\n  const updateCMRRInventory = async (i, j) => {\n    let items = data;\n    let lstItem = data[i];\n    let CMRRItem = lstItem.CMRRItems[j];\n    console.log(lstItem, CMRRItem);\n\n    items[i].CMRRItems[j].location = lstItem.to;\n    setData(items);\n\n    // setIsReviewModalOpen(true);\n    console.log(\"Done\", items);\n\n    let flag = false;\n    items[i].CMRRItems.map((item) => {\n      if (item.location == \"In Transit\") flag = true;\n    });\n    const updatelst = {\n      id: lstItem._id,\n      update: {\n        CMRRItems: items[i].CMRRItems,\n      },\n    };\n    if (flag == false) {\n      updatelst.update.status = \"Received\";\n    }\n\n    try {\n      await axios({\n        url: `${API}/lst/${Emp.getId()}/update`,\n        method: \"POST\",\n        data: updatelst,\n      });\n      if (flag == true) {\n        setModalMessage(`${CMRRItem.name} Recieved`);\n        setMessageModal(true);\n        // return;\n      } else {\n        setModalMessage(\n          `${CMRRItem.name} Recieved.\\n All Items Received from LST`\n        );\n        setMessageModal(true);\n      }\n\n      console.log(\"Done\");\n      return;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n\n  const InvTable = (num, to) => {\n    let items = data[num].invItems;\n    let LSTtype = data[num].LSTtype;\n    let CMRRItems = data[num].CMRRItems;\n    console.log(\"TO\", items.to);\n    return (\n      <div className=\" bg-gray-200 dark:bg-gray-700 p-3\">\n        <div className=\"mb- mt-4\">\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n          <TableContainer className=\"mt-4\">\n            <Table>\n              <TableHeader>\n                <tr>\n                  <TableCell>Category</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Serial Number</TableCell>\n                  <TableCell>Location</TableCell>\n                  <TableCell>Inv Number</TableCell>\n                  <TableCell>Condition</TableCell>\n                  <TableCell>Receive</TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {LSTtype == \"Normal\" || LSTtype == \"Customer\" ? (\n                  <>\n                    {data[num].invItems.map((user, i) => (\n                      <TableRow\n                        className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                          activerowid == user._id\n                            ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                            : \"white\"\n                        } `}\n                        key={i}\n                        onClick={() => {\n                          setActiveRowId(user._id);\n                          // console.log(\"the id is \" + user._id);\n                          // setSelectedProd(user);\n                          // setAssetDetails(user);\n                          // console.log(user.product.keyboard[0].keyboardname);\n                        }}\n                      >\n                        <TableCell className=\"w-8\">\n                          <div className=\"flex items-center text-sm \">\n                            <div>\n                              <p className=\"font-semibold\">{user.type}</p>\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.name}</span>\n                        </TableCell>\n\n                        <TableCell>\n                          {data[num].to == \"Vendor\" &&\n                          user.location == \"In Transit\" ? (\n                            <span className=\"text-sm\">\n                              <input\n                                value={user.sno}\n                                onChange={(e) => {\n                                  let tempdata = data;\n                                  let temp = data[num].invItems;\n                                  temp = temp.filter((x) => {\n                                    if (x._id != user._id) return x;\n                                    else {\n                                      console.log(\n                                        \"here\",\n                                        e.target.value,\n                                        x.name\n                                      );\n                                      x.sno = e.target.value;\n                                      return x;\n                                    }\n                                  });\n                                  // tempnum.invItems=temp;\n                                  tempdata[num].invItems = temp;\n                                  console.log(tempdata);\n                                  // tempdata[num].from=\"TETS\"\n                                  setData([...tempdata]);\n                                }}\n                                placeholder=\"Cse Id.\"\n                                class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-1 pr-1 py-1 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                              />\n                            </span>\n                          ) : (\n                            user.sno\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.location}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.invnumber}</span>\n                        </TableCell>\n                        <TableCell>\n                          {data[num].to == \"Vendor\" &&\n                          user.location == \"In Transit\" ? (\n                            <Select\n                              value={user.condition}\n                              className=\"mt-1\"\n                              onChange={(e) => {\n                                let tempdata = data;\n                                let temp = data[num].invItems;\n                                temp = temp.filter((x) => {\n                                  if (x._id != user._id) return x;\n                                  else {\n                                    console.log(\"here\", e.target.value, x.name);\n                                    x.condition = e.target.value;\n                                    return x;\n                                  }\n                                });\n                                // tempnum.invItems=temp;\n                                tempdata[num].invItems = temp;\n                                console.log(tempdata);\n                                // tempdata[num].from=\"TETS\"\n                                setData([...tempdata]);\n                              }}\n                            >\n                              <option value=\"Good\"> Good</option>\n                              <option value=\"Defective\">Defective</option>\n                              <option value=\"DOA\">DOA</option>z\n                              <option value=\"Damaged\">Damaged</option>\n                            </Select>\n                          ) : (\n                            <Badge\n                              type={\n                                user.condition == \"Good\" ? \"primary\" : \"danger\"\n                              }\n                            >\n                              {user.condition}\n                            </Badge>\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          <Button\n                            layout=\"outline\"\n                            className=\"dark:border-green-700 border-green-400\"\n                            onClick={() => {\n                              if (user.location == \"In Transit\")\n                                updateInventory(num, i);\n                              else {\n                                setModalMessage(\"Already Received\");\n                                setMessageModal(true);\n                              }\n                            }}\n                          >\n                            {user.location == \"In Transit\" ? (\n                              <>Receive</>\n                            ) : (\n                              <>Received</>\n                            )}\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </>\n                ) : (\n                  <>\n                    {data[num].CMRRItems.map((user, i) => (\n                      <TableRow\n                        // className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                        //   activerowid == user._id\n                        //     ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                        //     : \"white\"\n                        // } `}\n                        key={i}\n                        onClick={() => {\n                          // setActiveRowId(user._id);\n                          // console.log(\"the id is \" + user._id);\n                          // setSelectedProd(user);\n                          // setAssetDetails(user);\n                          // console.log(user.product.keyboard[0].keyboardname);\n                        }}\n                      >\n                        <TableCell className=\"w-8\">\n                          <div className=\"flex items-center text-sm \">\n                            <div>\n                              <p className=\"font-semibold\">{user.type}</p>\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.name}</span>\n                        </TableCell>\n\n                        <TableCell>{user.sno}</TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.location}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.invnumber}</span>\n                        </TableCell>\n                        <TableCell>\n                          <Badge\n                            type={\n                              user.condition == \"Good\" ? \"primary\" : \"danger\"\n                            }\n                          >\n                            {user.condition}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>\n                          <Button\n                            layout=\"outline\"\n                            className=\"dark:border-green-700 border-green-400\"\n                            onClick={() => {\n                              if (user.location == \"In Transit\")\n                                updateCMRRInventory(num, i);\n                              else {\n                                setModalMessage(\"Already Received\");\n                                setMessageModal(true);\n                              }\n                            }}\n                          >\n                            {user.location == \"In Transit\" ? (\n                              <>Receive</>\n                            ) : (\n                              <>Received</>\n                            )}\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n        </div>\n\n        {/* ------------------------------------Bottom Bar---------------------------------- */}\n      </div>\n    );\n  };\n\n  const messageModalComponent = () => {\n    return (\n      <>\n        <Modal isOpen={messageModal} onClose={() => setMessageModal(false)}>\n          <ModalHeader>{modalMessage}</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setMessageModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"mb-64 mt-4\">\n        <div className=\" font-bold text-xl mt-10 dark:text-white\">\n          LSTs In Transit\n        </div>\n\n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-2 \">\n            {/* -----------------------------------------Location ----------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={location}\n                onChange={(e) => {\n                  setLocation(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  From Location\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* -----------------------------------------Location ----------------------- */}\n            {EmpProfile.getLocation == \"All\" ? (\n              <>\n                <div class=\"relative mx-1 \">\n                  <select\n                    class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                    value={ToLocation}\n                    onChange={(e) => {\n                      setToLocation(e.target.value);\n                    }}\n                  >\n                    <option value=\"\" disabled selected>\n                      To Location\n                    </option>\n                    <option value=\"\">All</option>\n                    <option value=\"Trivandrum\">Trivandrum</option>\n                    <option value=\"Kottayam\">Kottayam</option>\n                    <option value=\"Kozhikode\">Kozhikode</option>\n                  </select>\n\n                  <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                    <svg\n                      class=\"fill-current h-4 w-4\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 20 20\"\n                    >\n                      <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                    </svg>\n                  </div>\n                </div>\n              </>\n            ) : null}\n\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={LSTtype}\n                onChange={(e) => {\n                  setLSTtype(e.target.value);\n                }}\n              >\n                <option value=\"\" selected>\n                  All\n                </option>\n                <option value=\"Normal\">Normal</option>\n                <option value=\"CMRR\">CMRR</option>\n                <option value=\"Customer\">Customer</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* ---------------------------Condition Drop Down-------------------------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={condition}\n                onChange={(e) => {\n                  setCondition(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Condition\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Good\">Good</option>\n                <option value=\"Bad\">Bad</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search LST Number\"\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr className=\"flex flex-row justify-between\">\n                <TableCell>LST.No</TableCell>\n                <TableCell>From</TableCell>\n                <TableCell>To</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>No.</TableCell>\n                {/* <TableCell>Status</TableCell> */}\n                <TableCell> Report</TableCell>\n                <TableCell>\n                  <span\n                    className=\"cursor-pointer\"\n                    onClick={() => setActiveRowID(-1)}\n                  >\n                    Items\n                  </span>\n                </TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <div className=\"flex flex-col justify-around\">\n                  <TableRow\n                    className={`hover:shadow-lg dark:hover:bg-gray-600 flex flex-row justify-between  ${\n                      activerowid == user._id\n                        ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                        : \"white\"\n                    } `}\n                    key={i}\n                    onClick={() => {\n                      setActiveRowId(i);\n                      // console.log(\"the id is \" + user._id);\n                      // setSelectedProd(user);\n                      // setAssetDetails(user);\n                      // console.log(user.product.keyboard[0].keyboardname);\n                    }}\n                  >\n                    <TableCell className=\"w-8\">\n                      <div className=\"flex items-center text-sm \">\n                        <div>\n                          <p className=\"font-semibold\">{user.LSTNo}</p>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.from}</span>\n                    </TableCell>\n\n                    <TableCell>\n                      <span className=\"text-sm\">\n                        {user.to == \"Vendor\" ? user.vendorName : user.to}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">\n                        {\" \"}\n                        {moment(user.date).format(\"DD/MM/YYYY\")}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">\n                        {user.LSTtype == \"Normal\" || user.LSTtype == \"Customer\"\n                          ? user.invItems.length\n                          : user.CMRRItems.length}\n                      </span>\n                    </TableCell>\n                    {/* <TableCell>\n                    <Badge>\n                      condition\n                    </Badge>\n                  </TableCell> */}\n                    <TableCell className=\"text-center \">\n                      <Button\n                        layout=\"outline\"\n                        aria-label=\"DropDown\"\n                        onClick={() => {\n                          console.log(\"dwlod\");\n                          // createAndDownloadPdf(user._id, user.LSTNo);\n                          setDownloadLST(user);\n                          setisDownloadModalOpen(true);\n                          setDownloadNum(i);\n                        }}\n                        className=\"rounded-lg m-1\"\n                      >\n                        Download\n                      </Button>\n                    </TableCell>\n                    <TableCell className=\"text-center \">\n                      <Button\n                        // layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"DropDown\"\n                        onClick={() => {\n                          console.log(activerowid);\n                          // if(activerowid==i){\n\n                          // setActiveRowID(-1);\n                          // }\n                          // else\n                          setActiveRowID(i);\n                        }}\n                        className=\"rounded-lg m-1\"\n                      >\n                        <DropdownIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n\n                  {activeRowID == i ? InvTable(i, user.to) : null}\n                </div>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {DownloadModal()}\n      {messageModalComponent()}\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n}\n\nexport default Notifications;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../../backendapi\";\n\nexport default function CustomerSelection({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n  refresh,\n  setRefresh,\n  theunitdetails,\n  setTheUnitDetails,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      //   setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      //   setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(\"-------------piking unit\");\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      contactPerson: unit.contactPerson,\n      contactNo: unit.contactNo,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody className=\"overflow-y-scroll h-64\"  >\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n          \n        </ModalBody>\n        <ModalFooter>\n        <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              setRefresh(!refresh);\n              if (theunitdetails) {\n                setTheUnitDetails(unit);\n              }\n              setAccounts([]);\n              setUnits([]);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"sourceRoot":""}