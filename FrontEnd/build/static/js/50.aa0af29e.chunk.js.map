{"version":3,"sources":["helpers/toolfuctions/toolfunctions.js","pages/Calls/UpdatCall.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["exports","capitalize","s","charAt","toUpperCase","slice","UpdateCall","movehistory","useHistory","params","useParams","useContext","TopBarContext","setTopHeading","topheading","id","assetid","callid","useState","submitModal","setSubmitModal","sparemodal","setSpareModal","historyModalOpen","setHistoryModalOpen","assethistoryModalOpen","setAssetHistoryModalOpen","notswapModalOpen","setNotSwapModalOpen","spareStatus","setSpareStatus","ccfrStatus","setCcfrStatus","_id","unitName","unit","setUnit","customerName","customer","setCustomer","accountName","account","setAccount","productID","setProductID","brand","setBrand","model","setModel","serialno","setSerialNo","os","setOs","cpuname","cpusno","cpu","setCpu","ramname","ramsno","ram","setram","hddname","hddsno","hdd","sethdd","smpsname","smpssno","smps","setsmps","fanname","fansno","fan","setfan","motherboardname","motherboardsno","motherboard","setmotherboard","opticaldrivename","opticaldrivesno","opticaldrive","setopticaldrive","keyboardname","keyboardsno","kbd","setkbd","mousename","mousesno","mouse","setmouse","monitorname","monitorsno","monitor","setmonitor","gcardname","gcardsno","gcard","setgcard","enetcardname","enetcardsno","enetcard","setenetcard","serialcardname","serialcardsno","serialcard","setserialcard","parallelcardname","parallelcardsno","parallelcard","setparallelcard","hbacardname","hbacardsno","sethbacard","raidcontrollername","raidcontrollersno","setraidcontroller","tapecontrollername","tapecontrollersno","settapecontroller","othersname","otherssno","others","setothers","Business","setBusiness","servicelocation","setServiceLocation","POnumber","setPOnumber","setPOdate","setContractFrom","setContractTo","setBillingFrom","setBillingTo","setAMCRate","setGSTAMOUNT","setNetAmount","assethistory","setAssetHistory","product","setProduct","activeRowID","setActiveRowID","secondactiveRowID","setSecondactiveRowID","selectedItem","setSelectedItem","data","setData","inventdata","setInventData","name","sno","existswap","setExistswap","inventswap","setInventswap","isImgUploadModal","setIsImgUploadModal","imageUploadMessage","setImageUploadMessage","isImgUploadMenuModal","setIsImgUploadMenuModal","imgFile","setImgFile","imageUploadMenuMessage","setImageUploadMenuMessage","imageIndex","setimageIndex","goodSpareImgUrl","setGoodSpareImgUrl","defectiveImgUrl","setDefectiveImgUrl","setImgUrl","ccfrImgUrl","setCcfrImgUrl","isHistoryImgViewModal","setIsHistoryImgViewModal","goodSpareHistoryImg","setGoodSpareHistoryImg","defectiveHistoryImg","setDefectiveHistoryImg","ccfrHistoryImg","setCcfrHistoryImg","item","assetpickerarray","setAssetpickerarray","photoUpload","photo","cb","console","log","FormData","append","axios","post","API","headers","accept","_boundary","then","response","status","error","code","fileName","location","catch","useEffect","Date","page","searchtype","searchquery","callAttendDate","setCallAttendDate","startOfService","setStartOfService","endOfService","setEndOfService","actionTaken","setActionTaken","dataSetter","obj","number","temp","thetype","toLowerCase","map","i","type","condition","systype","tempdata","a","payload","pages","limit","filters","url","Emp","getId","method","out","tempinvent","getAsset","res","asset","history","producttype","customerId","accountId","business","ponumber","amcrate","moment","podate","format","contractfrom","contractto","billingfrom","billingto","gstamount","netamount","length","keyboard","netcardname","hbacard","raidcontroller","tapecontroller","call","setCall","getCall","handleUpdate","alert","tempcallstatus","callStatus","handleSwap","newcallhistory","date","engineer","employeeName","note","update","$push","assetpayload","newswap","assetserial","hello","existUrl","newUrl","existserial","newserial","payloadtwo","InvTable","items","className","user","key","onClick","layout","tempexist","AssetItemPick","onChange","e","target","value","thevalue","thegetter","selected","disabled","push","tempassetpicker","tempactiveid","tempsecondactiveid","tempd","tempinvdata","texist","tinvent","tempgoodspare","tempdefective","icon","Add","aria-label","size","pop","Remove","aria-hidden","isOpen","onClose","callNo","entry","HistoryModal","AssetHistoryModal","src","width","height","callback","files","photoUploadHandler","message","contactPerson","state","pincode","locationType","district","problem","assignedDate","assignedETA","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/50.aa0af29e.chunk.js","sourcesContent":["exports.capitalize = (s) => {\n  if (typeof s !== \"string\") return \"\";\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { API } from \"../../backendapi\";\nimport AsyncSelect from \"react-select/async\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Input,\n  HelperText,\n  Label,\n  Select,\n  Textarea,\n  Button,\n  Dropdown,\n  DropdownItem,\n  Badge,\n} from \"@windmill/react-ui\";\n\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport { Add, DropdownIcon, Remove } from \"../../icons\";\nimport { useMemo } from \"react\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport { capitalize } from \"../../helpers/toolfuctions/toolfunctions\";\n\nfunction UpdateCall() {\n  // floatbox\n  let movehistory = useHistory();\n  const params = useParams();\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const id = params.assetid;\n  const callid = params.callid;\n  // console.log(id);\n  //modal\n  const [submitModal, setSubmitModal] = useState(false);\n  const [sparemodal, setSpareModal] = useState(false);\n  const [historyModalOpen, setHistoryModalOpen] = useState(false);\n  const [assethistoryModalOpen, setAssetHistoryModalOpen] = useState(false);\n  const [notswapModalOpen, setNotSwapModalOpen] = useState(false);\n  const [spareStatus, setSpareStatus] = useState(\"\");\n  const [ccfrStatus, setCcfrStatus] = useState(\"\");\n\n  //customer\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n\n  //prodcut\n  const [productID, setProductID] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [serialno, setSerialNo] = useState(\"\");\n  const [os, setOs] = useState(\"\");\n  const [cpu, setCpu] = useState([{ cpuname: \"\", cpusno: \"\" }]);\n  const [ram, setram] = useState([{ ramname: \"\", ramsno: \"\" }]);\n  const [hdd, sethdd] = useState([{ hddname: \"\", hddsno: \"\" }]);\n  const [smps, setsmps] = useState([{ smpsname: \"\", smpssno: \"\" }]);\n  const [fan, setfan] = useState([{ fanname: \"\", fansno: \"\" }]);\n  const [motherboard, setmotherboard] = useState([\n    { motherboardname: \"\", motherboardsno: \"\" },\n  ]);\n  const [opticaldrive, setopticaldrive] = useState([\n    { opticaldrivename: \"\", opticaldrivesno: \"\" },\n  ]);\n  const [kbd, setkbd] = useState([{ keyboardname: \"\", keyboardsno: \"\" }]);\n  const [mouse, setmouse] = useState([{ mousename: \"\", mousesno: \"\" }]);\n  const [monitor, setmonitor] = useState([{ monitorname: \"\", monitorsno: \"\" }]);\n  const [gcard, setgcard] = useState([{ gcardname: \"\", gcardsno: \"\" }]);\n  const [enetcard, setenetcard] = useState([\n    { enetcardname: \"\", enetcardsno: \"\" },\n  ]);\n  const [serialcard, setserialcard] = useState([\n    { serialcardname: \"\", serialcardsno: \"\" },\n  ]);\n  const [parallelcard, setparallelcard] = useState([\n    { parallelcardname: \"\", parallelcardsno: \"\" },\n  ]);\n  const [hbacard, sethbacard] = useState([{ hbacardname: \"\", hbacardsno: \"\" }]);\n  const [raidcontroller, setraidcontroller] = useState([\n    { raidcontrollername: \"\", raidcontrollersno: \"\" },\n  ]);\n  const [tapecontroller, settapecontroller] = useState([\n    { tapecontrollername: \"\", tapecontrollersno: \"\" },\n  ]);\n  const [others, setothers] = useState([{ othersname: \"\", otherssno: \"\" }]);\n  //asset\n\n  const [Business, setBusiness] = useState(\"\");\n  const [servicelocation, setServiceLocation] = useState(\"\");\n  const [POnumber, setPOnumber] = useState(\"\");\n  const [POdate, setPOdate] = useState(\"\");\n  const [ContractFrom, setContractFrom] = useState(\"\");\n  const [ContractTo, setContractTo] = useState(\"\");\n  const [BillingFrom, setBillingFrom] = useState(\"\");\n  const [BillingTo, setBillingTo] = useState(\"\");\n  const [AMCRate, setAMCRate] = useState(\"\");\n  const [GST, setGST] = useState(\"\");\n  const [GSTAMOUNT, setGSTAMOUNT] = useState(\"\");\n  const [NetAmount, setNetAmount] = useState(\"\");\n  const [assethistory, setAssetHistory] = useState([]);\n\n  //////////////-------------------------------------------->Product name not in asset\n  const [product, setProduct] = useState(\"Server\");\n\n  ////////////---------------- INVENTORY state\n  const [inventory, setInventory] = useState([]);\n\n  //MODAL\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // table variable styles\n\n  const [activeRowID, setActiveRowID] = useState([-1]);\n  const [secondactiveRowID, setSecondactiveRowID] = useState([-1]);\n\n  // ---------------New States------------\n  // const [itemtype, setItemtype] = useState(\"\"); //Full system vs item\n  const [selectedItem, setSelectedItem] = useState([\"\"]); //the selected item category\n  const [data, setData] = useState([{}]); //for first table expansion\n  const [inventdata, setInventData] = useState([{}]); //for second table expansion\n  const [existswap, setExistswap] = useState([\n    {\n      name: \"Not Selected\",\n      sno: \"Not Selected\",\n    },\n  ]);\n  const [inventswap, setInventswap] = useState([\n    {\n      name: \"Not Selected\",\n      sno: \"Not Selected\",\n    },\n  ]);\n\n  // Image states -----------------------------------------------------------------\n  const [isImgUploadModal, setIsImgUploadModal] = useState(false);\n  const [imageUploadMessage, setImageUploadMessage] = useState(\"\");\n  const [isImgUploadMenuModal, setIsImgUploadMenuModal] = useState(false);\n\n  const [imgFile, setImgFile] = useState(null);\n  const [imageUploadMenuMessage, setImageUploadMenuMessage] = useState(\"\");\n  const [imageIndex, setimageIndex] = useState(\"\");\n\n  const [goodSpareImgUrl, setGoodSpareImgUrl] = useState([\"\"]);\n  const [defectiveImgUrl, setDefectiveImgUrl] = useState([\"\"]);\n  const [imgUrl, setImgUrl] = useState([\"\"]);\n  const [ccfrImgUrl, setCcfrImgUrl] = useState(\"\");\n\n  const [isHistoryImgViewModal, setIsHistoryImgViewModal] = useState(false);\n  const [goodSpareHistoryImg, setGoodSpareHistoryImg] = useState(\"\");\n  const [defectiveHistoryImg, setDefectiveHistoryImg] = useState(\"\");\n  const [ccfrHistoryImg, setCcfrHistoryImg] = useState(\"\");\n\n  // ----------- Multi update states ---------------\n  const [assetpickerarray, setAssetpickerarray] = useState([{ item: \"test\" }]);\n\n  const photoUploadHandler = (e, callback) => {\n    callback(e.target.files[0]);\n  };\n\n  const photoUpload = (photo, cb) => {\n    console.log(photo);\n    if (photo == null) {\n      setImageUploadMessage(\"Image not selected\");\n      setIsImgUploadModal(true);\n      return;\n    }\n    setImageUploadMessage(\"Loading...\");\n    setIsImgUploadModal(true);\n\n    const data = new FormData(); // If file selected\n    data.append(\"imageUpload\", photo, photo.name);\n    // console.log(data);\n\n    axios\n      .post(`${API}/upload/img-upload`, data, {\n        headers: {\n          accept: \"application/json\",\n          \"Accept-Language\": \"en-US,en;q=0.8\",\n          \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\n        },\n      })\n      .then((response) => {\n        if (200 === response.status) {\n          // If file size is larger than expected.\n          if (response.data.error) {\n            if (\"LIMIT_FILE_SIZE\" === response.data.error.code) {\n              console.log(\"Max size: 2MB\", \"red\");\n              setImageUploadMessage(\"Maximum size is 2MB\");\n              setIsImgUploadModal(true);\n            } else {\n              console.log(response.data); // If not the given file type\n              // console.log( response.data.error, 'red' );\n              setImageUploadMessage(\"Given format not supported\");\n            }\n          } else {\n            // Success\n            let fileName = response.data;\n            console.log(\"fileName\", fileName.location);\n            console.log(\"File Uploaded\");\n            setImageUploadMessage(\"Image Uploaded\");\n            setIsImgUploadModal(true);\n            cb(response.data.location);\n          }\n        }\n      })\n      .catch((error) => {\n        // If another error\n        setImageUploadMessage(\"Error Occured\");\n        setIsImgUploadModal(true);\n        console.log(error);\n      });\n    // } else {\n    //  // if file not selected throw error\n    //  this.ocShowAlert( 'Please upload file', 'red' );\n    // }\n  };\n\n  const ImgUploadModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isImgUploadModal}\n          onClose={() => setIsImgUploadModal(false)}\n        >\n          <ModalHeader>{imageUploadMessage}</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsImgUploadModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const handleImgUpload = (message) => {\n    if (message == \"defective\") {\n      photoUpload(imgFile, (url) => {\n        console.log(\"PHOTO URL\", url, imageIndex);\n        // setImgUrl(url);\n        let temp = defectiveImgUrl;\n        temp[imageIndex] = url;\n        setDefectiveImgUrl(temp);\n      });\n    } else if (message == \"good\") {\n      photoUpload(imgFile, (url) => {\n        let temp = goodSpareImgUrl;\n        temp[imageIndex] = url;\n        console.log(\"PHOTO URL\", url, imageIndex);\n        // setImgUrl(url);\n        setGoodSpareImgUrl(temp);\n      });\n    } else if (message == \"ccfr\") {\n      photoUpload(imgFile, (url) => {\n        console.log(\"PHOTO URL\", url);\n        // setImgUrl(url);\n        setCcfrImgUrl(url);\n      });\n    }\n  };\n  const ImgUploadMenuModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isImgUploadMenuModal}\n          onClose={() => {\n            setImgUrl(\"\");\n            setImgFile(null);\n            setIsImgUploadMenuModal(false);\n          }}\n        >\n          <ModalHeader>{imageUploadMenuMessage}</ModalHeader>\n          <ModalBody>\n            <>\n              {imageUploadMenuMessage == \"defective\" ? (\n                <img\n                  src={defectiveImgUrl[imageIndex]}\n                  className=\"my-2\"\n                  width=\"100\"\n                  height=\"100\"\n                />\n              ) : imageUploadMenuMessage == \"good\" ? (\n                <img\n                  src={goodSpareImgUrl[imageIndex]}\n                  className=\"my-2\"\n                  width=\"100\"\n                  height=\"100\"\n                />\n              ) : imageUploadMenuMessage == \"defective\" ? (\n                <img\n                  src={ccfrImgUrl}\n                  className=\"my-2\"\n                  width=\"100\"\n                  height=\"100\"\n                />\n              ) : null}\n\n              <div className=\"flex-row flex  space-x-3 mt-3 \">\n                <div className=\"flex flex-col \">\n                  <Label className=\"\">\n                    <span>Image upload</span>\n                    <Input\n                      className=\"mt-1\"\n                      type=\"file\"\n                      // value={photo}\n                      onChange={(e) => photoUploadHandler(e, setImgFile)}\n                    />\n                  </Label>\n\n                  {/* <HelperText valid={false}>{err.employeeName}</HelperText> */}\n                </div>\n                <Button\n                  onClick={() => {\n                    handleImgUpload(imageUploadMenuMessage);\n                  }}\n                  layout=\"outline\"\n                  className=\"my-6    \"\n                >\n                  Upload Image\n                </Button>\n              </div>\n            </>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => {\n                setImgUrl(\"\");\n                setImgFile(null);\n                setIsImgUploadMenuModal(false);\n              }}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const HistoryImgViewModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isHistoryImgViewModal}\n          onClose={() => {\n            setDefectiveHistoryImg(\"\");\n            setGoodSpareHistoryImg(\"\");\n            setCcfrHistoryImg(\"\");\n            setIsHistoryImgViewModal(false);\n          }}\n          className=\"w-8/12 dark:bg-gray-800 p-10 my-12 h-screen  bg-gray-50 text-gray-900 dark:text-white  rounded-lg overflow-y-scroll\"\n          // className=\"w-6/12 h-8/12 dark:bg-gray-800 p-10 my-6  bg-gray-50 text-gray-900 dark:text-white  rounded-lg overflow-y-scroll text-cente items-center justify-center\"\n        >\n          <ModalHeader>Images</ModalHeader>\n          <ModalBody>\n            <div className=\"flex flex-col justify-center \">\n              <hr></hr>\n              {defectiveHistoryImg != \"\" ? (\n                <>\n                  <div className=\"text-lg font-semibold my-2 w-full\">\n                    {\" \"}\n                    Replaced Item\n                  </div>\n                  <img\n                    src={defectiveHistoryImg}\n                    className=\"my-4 border-4\"\n                    width=\"500\"\n                    height=\"500\"\n                  />\n                </>\n              ) : null}\n              {goodSpareHistoryImg != \"\" ? (\n                <>\n                  <div className=\"text-lg font-semibold my-2 w-full\">\n                    {\" \"}\n                    Replaced by\n                  </div>\n                  <img\n                    src={goodSpareHistoryImg}\n                    className=\"my-4 border-4\"\n                    width=\"500\"\n                    height=\"500\"\n                  />\n                </>\n              ) : null}\n              {ccfrHistoryImg != \"\" ? (\n                <>\n                  <div className=\"text-lg font-semibold my-2 w-full\"> CCFR</div>\n                  <img\n                    src={ccfrHistoryImg}\n                    className=\"my-4 border-4\"\n                    width=\"500\"\n                    height=\"500\"\n                  />\n                </>\n              ) : null}\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => {\n                setDefectiveHistoryImg(\"\");\n                setGoodSpareHistoryImg(\"\");\n                setCcfrHistoryImg(\"\");\n                setIsHistoryImgViewModal(false);\n              }}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //-----------------------------------------------------------------\n\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Update Call\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  // filterhooks\n  const [type, setType] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [toLocation, setToLocation] = useState(\"\");\n  const [LSTNo, setLSTNo] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [condition, setCondition] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // imp states\n  const [callAttendDate, setCallAttendDate] = useState(\"\");\n  const [startOfService, setStartOfService] = useState(\"\");\n  const [endOfService, setEndOfService] = useState(\"\");\n  const [actionTaken, setActionTaken] = useState(\"\");\n\n  const dataSetter = (obj, number) => {\n    let temp = [...obj];\n    let thetype = selectedItem[number].toLowerCase();\n    let theitemandsystem = \"item\";\n\n    obj.map((item, i) => {\n      item.name = item[`${thetype}name`];\n      item.sno = item[`${thetype}sno`];\n      item.type = thetype;\n      item.condition = \"Bad\";\n      item.systype = theitemandsystem;\n    });\n\n    console.log(temp);\n\n    let tempdata = [...data];\n    tempdata[number] = obj;\n    setData(tempdata);\n  };\n\n  // -----use effect to pull new inventory list according to filters\n  // useEffect(() => {\n  //   thegetter();\n  // }, [selectedItem]);\n\n  async function thegetter(number) {\n    console.log(\"getter called\");\n    console.log(selectedItem);\n    let payload = {\n      pages: {\n        page: page,\n        limit: 1000000,\n      },\n      filters: {\n        type: selectedItem[number].toLowerCase(),\n        location: location,\n        condition: \"Good\",\n        searchtype: searchtype,\n        searchquery: searchquery,\n      },\n    };\n    // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n    try {\n      let response = await axios({\n        url: `${API}/inventory/${Emp.getId()}/getall`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data.out);\n      // setTotalResults(response.data.total);\n      // const { total, data } = response.data;\n      // console.log(data + \"Now\");\n\n      let tempinvent = inventdata;\n      tempinvent[number] = response.data.out;\n      setInventData(tempinvent);\n\n      // setInventData(response.data.out);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // History Modal\n  const HistoryModal = () => {\n    if (call.history) {\n      let data = call.history;\n      // console.log(data);\n\n      return (\n        <>\n          <Modal\n            isOpen={historyModalOpen}\n            onClose={() => setHistoryModalOpen(false)}\n            className=\"w-9/12 overflow-y-scroll h-screen dark:bg-gray-800 p-10 my-6  bg-gray-50 text-gray-900 dark:text-white  rounded-lg \"\n          >\n            <ModalHeader className=\"flex flex-row justify-between text-xl\">\n              {/* <div>{item.name}</div> */}\n              <div>\n                Call No: <Badge>{call.callNo}</Badge>{\" \"}\n              </div>\n            </ModalHeader>\n            <ModalBody>\n              <div className=\"font-semibold text-xl my-2\">Call History</div>\n              {/* ------------------------- Table ------------------------------ */}\n              <TableContainer className=\"mt-4\">\n                <Table>\n                  <TableHeader>\n                    <tr>\n                      <TableCell>Date</TableCell>\n                      <TableCell>Engineer</TableCell>\n                      <TableCell>Attended Date</TableCell>\n                      <TableCell>Start Of Service</TableCell>\n                      <TableCell>End Of Service</TableCell>\n                      <TableCell>Status</TableCell>\n                      <TableCell>Notes</TableCell>\n                      <TableCell>Action Taken</TableCell>\n                      <TableCell>Images</TableCell>\n                    </tr>\n                  </TableHeader>\n                  <TableBody>\n                    {data.map((entry, i) => (\n                      <TableRow\n                        className={`hover:shadow-lg dark:hover:bg-gray-600 \n                       `}\n                        key={i}\n                        onClick={() => {\n                          // setActiveRowId(user._id);\n                          // console.log(\"the id is \" );\n                          // setSelectedProd(user);\n                          // setAssetDetails(user);\n                          // console.log(user.product.keyboard[0].keyboardname);\n                        }}\n                      >\n                        <TableCell className=\"w-8\">\n                          <div className=\"flex items-center text-sm \">\n                            <div>\n                              <p className=\"font-semibold\">\n                                {moment(entry.date).format(\"DD-MM-YYYY\")}\n                              </p>\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {capitalize(entry.engineer)}\n                          </span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {entry.callAttendDate}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {entry.startOfService}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{entry.endOfService}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span>\n                            {call.callStatus == 0 ? (\n                              <Badge>Not Allocated</Badge>\n                            ) : null}\n                            {call.callStatus == 1 ? (\n                              <Badge>Pending for Percall Approval</Badge>\n                            ) : null}\n                            {call.callStatus == 2 ? (\n                              <Badge>Pending for Response</Badge>\n                            ) : null}\n                            {call.callStatus == 3 ? (\n                              <Badge>Pending for OEM Response</Badge>\n                            ) : null}\n                            {call.callStatus == 4 ? (\n                              <Badge>Pending for 2nd Response</Badge>\n                            ) : null}\n                            {call.callStatus == 5 ? (\n                              <Badge>Pending for Customer</Badge>\n                            ) : null}\n                            {call.callStatus == 6 ? (\n                              <Badge>Under Observation</Badge>\n                            ) : null}\n                            {call.callStatus == 7 ? (\n                              <Badge>Pending for Others</Badge>\n                            ) : null}\n                            {call.callStatus == 8 ? (\n                              <Badge>Pending for Spare</Badge>\n                            ) : null}\n                            {call.callStatus == 9 ? (\n                              <Badge>Spare in Transit</Badge>\n                            ) : null}\n                            {call.callStatus == 10 ? (\n                              <Badge>Cancelled Calls</Badge>\n                            ) : null}\n                            {call.callStatus == 11 ? (\n                              <Badge>Closed Calls</Badge>\n                            ) : null}\n                          </span>\n                        </TableCell>\n                        <TableCell className=\"flex flex-row max-w-sm\">\n                          <span className=\"w-full overflow-auto\">\n                            {entry.note}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{entry.actionTaken}</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <Button\n                            layout=\"outline\"\n                            onClick={() => {\n                              if (entry.newUrl)\n                                setGoodSpareHistoryImg(entry.newUrl);\n                              if (entry.existUrl)\n                                setDefectiveHistoryImg(entry.existUrl);\n                              if (entry.ccfrImgUrl)\n                                setCcfrHistoryImg(entry.ccfrImgUrl);\n                              setIsHistoryImgViewModal(true);\n                            }}\n                          >\n                            Show\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n                {/* <TableFooter>\n                  <Pagination\n                    totalResults={totalResults}\n                    resultsPerPage={resultsPerPage}\n                    label=\"Table navigation\"\n                    onChange={onPageChange}\n                  />\n                </TableFooter> */}\n              </TableContainer>\n            </ModalBody>\n            <ModalFooter></ModalFooter>\n          </Modal>\n        </>\n      );\n    }\n  };\n\n  // Asset History Modal\n  const AssetHistoryModal = () => {\n    if (assethistory[0]) {\n      // let data = call.history;\n      // console.log(data);\n\n      return (\n        <>\n          <Modal\n            isOpen={assethistoryModalOpen}\n            onClose={() => setAssetHistoryModalOpen(false)}\n            className=\"w-9/12 dark:bg-gray-800 p-10 my-6  bg-gray-50 text-gray-900 dark:text-white  rounded-lg overflow-y-scroll h-screen\"\n          >\n            <ModalHeader className=\"flex flex-row justify-between text-xl\">\n              {/* <div>{item.name}</div> */}\n              <div>\n                Asset Serial: <Badge>{call.callNo}</Badge>{\" \"}\n              </div>\n            </ModalHeader>\n            <ModalBody>\n              <div className=\"font-semibold text-xl my-2\">Asset History</div>\n              {/* ------------------------- Table ------------------------------ */}\n              <TableContainer className=\"mt-4\">\n                <Table>\n                  <TableHeader>\n                    <tr>\n                      <TableCell>Date</TableCell>\n                      <TableCell>Engineer</TableCell>\n                      <TableCell>Attended Date</TableCell>\n                      <TableCell>Start Of Service</TableCell>\n                      <TableCell>End Of Service</TableCell>\n                      <TableCell>Status</TableCell>\n                      <TableCell>Notes</TableCell>\n                      <TableCell>Action Taken</TableCell>\n                      <TableCell>Images</TableCell>\n                    </tr>\n                  </TableHeader>\n                  <TableBody>\n                    {assethistory.map((entry, i) => (\n                      <TableRow\n                        className={`hover:shadow-lg dark:hover:bg-gray-600 \n                       `}\n                        key={i}\n                        onClick={() => {\n                          // setActiveRowId(user._id);\n                          // console.log(\"the id is \" + user._id);\n                          // setSelectedProd(user);\n                          // setAssetDetails(user);\n                          // console.log(user.product.keyboard[0].keyboardname);\n                        }}\n                      >\n                        <TableCell className=\"w-8\">\n                          <div className=\"flex items-center text-sm \">\n                            <div>\n                              <p className=\"font-semibold\">\n                                {moment(entry.date).format(\"DD-MM-YYYY\")}\n                              </p>\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {capitalize(entry.engineer)}\n                          </span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {entry.callAttendDate}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {entry.startOfService}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{entry.endOfService}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span>\n                            {call.callStatus == 0 ? (\n                              <Badge>Not Allocated</Badge>\n                            ) : null}\n                            {call.callStatus == 1 ? (\n                              <Badge>Pending for Percall Approval</Badge>\n                            ) : null}\n                            {call.callStatus == 2 ? (\n                              <Badge>Pending for Response</Badge>\n                            ) : null}\n                            {call.callStatus == 3 ? (\n                              <Badge>Pending for OEM Response</Badge>\n                            ) : null}\n                            {call.callStatus == 4 ? (\n                              <Badge>Pending for 2nd Response</Badge>\n                            ) : null}\n                            {call.callStatus == 5 ? (\n                              <Badge>Pending for Customer</Badge>\n                            ) : null}\n                            {call.callStatus == 6 ? (\n                              <Badge>Under Observation</Badge>\n                            ) : null}\n                            {call.callStatus == 7 ? (\n                              <Badge>Pending for Others</Badge>\n                            ) : null}\n                            {call.callStatus == 8 ? (\n                              <Badge>Pending for Spare</Badge>\n                            ) : null}\n                            {call.callStatus == 9 ? (\n                              <Badge>Spare in Transit</Badge>\n                            ) : null}\n                            {call.callStatus == 10 ? (\n                              <Badge>Cancelled Calls</Badge>\n                            ) : null}\n                            {call.callStatus == 11 ? (\n                              <Badge>Closed Calls</Badge>\n                            ) : null}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm  w-1/2\">{entry.note}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{entry.actionTaken}</span>\n                        </TableCell>\n                        <TableCell>\n                          <Button\n                            layout=\"outline\"\n                            onClick={() => {\n                              if (entry.newUrl)\n                                setGoodSpareHistoryImg(entry.newUrl);\n                              if (entry.existUrl)\n                                setDefectiveHistoryImg(entry.existUrl);\n                              if (entry.ccfrImgUrl)\n                                setCcfrHistoryImg(entry.ccfrImgUrl);\n                              setIsHistoryImgViewModal(true);\n                            }}\n                          >\n                            Show\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n                {/* <TableFooter>\n                  <Pagination\n                    totalResults={totalResults}\n                    resultsPerPage={resultsPerPage}\n                    label=\"Table navigation\"\n                    onChange={onPageChange}\n                  />\n                </TableFooter> */}\n              </TableContainer>\n            </ModalBody>\n            <ModalFooter></ModalFooter>\n          </Modal>\n        </>\n      );\n    }\n  };\n\n  // -----getting inventory items\n\n  const getAsset = async () => {\n    try {\n      let res = await axios.post(`${API}/asset/${Emp.getId()}/getbyid`, {\n        id: id,\n      });\n      console.log(\"asset\", res.data);\n      let asset = res.data;\n      setProductID(asset.product._id);\n      setAssetHistory(asset.product.history);\n\n      setServiceLocation(asset.servicelocation);\n      setProduct(asset.producttype);\n      setUnit({ _id: id, unitName: asset.unitName });\n      setCustomer({ _id: asset.customerId, customerName: asset.customerName });\n      setAccount({ _id: asset.accountId, accountName: asset.accountName });\n\n      ////------------------------>>>>>>>>\n      // setProduct(\"Server\");\n      ////////---------ASSET INFO\n      setBusiness(asset.business);\n      setPOnumber(asset.ponumber);\n      setAMCRate(asset.amcrate);\n      // Dates --------------------------\n      setPOdate(moment(asset.podate).format(\"YYYY-MM-DD\"));\n      setContractFrom(moment(asset.contractfrom).format(\"YYYY-MM-DD\"));\n      setContractTo(moment(asset.contractto).format(\"YYYY-MM-DD\"));\n      setBillingFrom(moment(asset.billingfrom).format(\"YYYY-MM-DD\"));\n      setBillingTo(moment(asset.billingto).format(\"YYYY-MM-DD\"));\n      ////////////------------>>>>>>>> misiing field GST(asset.gs)\n      setGSTAMOUNT(asset.gstamount);\n      setNetAmount(asset.netamount);\n      // setProduct(asset);\n      //////////////////////////////\n\n      setBrand(asset.product.brand);\n      setModel(asset.product.model);\n      setSerialNo(asset.product.serialno);\n      setOs(asset.product.os);\n      setCpu(asset.product.cpu);\n      setram(asset.product.ram);\n      if (asset.product.hdd.length == 0) sethdd([{ hddname: \"\", hddsno: \"\" }]);\n      else sethdd(asset.product.hdd);\n      if (asset.product.smps.length == 0)\n        setsmps([{ smpsname: \"\", smpssno: \"\" }]);\n      else setsmps(asset.product.smps);\n      if (asset.product.fan.length == 0) setfan([{ fanname: \"\", fansno: \"\" }]);\n      else setfan(asset.product.fan);\n      if (asset.product.motherboard.length == 0)\n        setmotherboard([{ motherboardname: \"\", motherboardsno: \"\" }]);\n      else setmotherboard(asset.product.motherboard);\n      if (asset.product.opticaldrive.length == 0)\n        setopticaldrive([{ opticaldrivename: \"\", opticaldrivesno: \"\" }]);\n      else setopticaldrive(asset.product.opticaldrive);\n      if (asset.product.keyboard.length == 0)\n        setkbd([{ keyboardname: \"\", keyboardsno: \"\" }]);\n      else setkbd(asset.product.keyboard);\n      if (asset.product.mouse.length == 0)\n        setmouse([{ mousename: \"\", mousesno: \"\" }]);\n      else setmouse(asset.product.mouse);\n      if (asset.product.monitor.length == 0)\n        setmonitor([{ monitorname: \"\", monitorsno: \"\" }]);\n      else setmonitor(asset.product.monitor);\n      if (asset.product.gcard.length == 0)\n        setgcard([{ gcardname: \"\", gcardsno: \"\" }]);\n      else setgcard(asset.product.gcard);\n      if (asset.product.enetcard.length == 0)\n        setenetcard([{ netcardname: \"\", enetcardsno: \"\" }]);\n      else setenetcard(asset.product.enetcard);\n      if (asset.product.serialcard.length == 0)\n        setserialcard([{ serialcardname: \"\", serialcardsno: \"\" }]);\n      else setserialcard(asset.product.serialcard);\n\n      if (asset.product.parallelcard.length == 0)\n        setparallelcard([{ parallelcardname: \"\", parallelcardsno: \"\" }]);\n      else setparallelcard(asset.product.parallelcard);\n\n      if (asset.product.hbacard.length == 0)\n        sethbacard([{ hbacardname: \"\", hbacardsno: \"\" }]);\n      else sethbacard(asset.product.hbacard);\n\n      if (asset.product.raidcontroller.length == 0)\n        setraidcontroller([{ raidcontrollername: \"\", raidcontrollersno: \"\" }]);\n      else setraidcontroller(asset.product.raidcontroller);\n\n      if (asset.product.tapecontroller.length == 0)\n        settapecontroller([{ tapecontrollername: \"\", tapecontrollersno: \"\" }]);\n      else settapecontroller(asset.product.tapecontroller);\n\n      if (asset.product.others.length == 0)\n        setothers([{ othersname: \"\", otherssno: \"\" }]);\n      else setothers(asset.product.others);\n    } catch (err) {\n      console.log(\"assetFind Error\", err);\n    }\n  };\n\n  ////// CALL\n\n  const [call, setCall] = useState({});\n\n  const getCall = async () => {\n    try {\n      let res = await axios.post(`${API}/call/${Emp.getId()}/getbyid`, {\n        id: callid,\n      });\n      console.log(\"call\", res.data);\n      setCall(res.data);\n    } catch (err) {\n      console.log(\"call Find Error\", err);\n    }\n  };\n\n  useEffect(() => {\n    getAsset();\n    getCall();\n  }, []);\n\n  // ------Modals------\n\n  const UpdatedModal = () => {\n    return (\n      <>\n        <Modal isOpen={submitModal} onClose={() => setSubmitModal(false)}>\n          <ModalHeader>Call Update Successfull</ModalHeader>\n          <ModalBody>Your Call Was Successfully Updated</ModalBody>\n          <ModalFooter>\n            {/* <Link to={`/app/viewcalls`}> */}\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => movehistory.push(\"/app/viewcalls\")}\n            >\n              Okay!\n            </Button>\n            {/* </Link> */}\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const NotSwapModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={notswapModalOpen}\n          onClose={() => setNotSwapModalOpen(false)}\n        >\n          <ModalHeader>Inventory Process Pending</ModalHeader>\n          <ModalBody>\n            Please finish add/remove/swap of items before updating call.\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setNotSwapModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const SpareRequiredModal = () => {\n    return (\n      <>\n        <Modal isOpen={sparemodal}>\n          <ModalHeader>Spare Usage</ModalHeader>\n          <ModalBody> Was any spare used in this call ?</ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => {\n                // setCall({ ...call, spareUsed: \"Yes\" });\n                setSpareStatus(\"Yes\");\n                setSpareModal(false);\n              }}\n            >\n              Yes\n            </Button>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => {\n                // setCall({ ...call, spareUsed: \"No\" });\n                setSpareStatus(\"No\");\n                setSpareModal(false);\n              }}\n            >\n              No\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  // --------------------  Functions ---------------------------\n\n  const handleUpdate = async () => {\n    if (callAttendDate == \"\" || startOfService == \"\" || actionTaken == \"\") {\n      // setNotSwapModalOpen(true);\n      alert(\"Please enter the compulsory fields\");\n      return;\n    }\n    if (ccfrStatus == \"\") {\n      alert(\"Select CCFR Status\");\n      return;\n    }\n\n    // ------ Image Checker ---\n\n    if (ccfrStatus == \"Yes\" && ccfrImgUrl == \"\") {\n      alert(\"Please Upload CCFR Image\");\n      return;\n    }\n\n    for (let i = 0; i < existswap.length; i++) {\n      if (existswap[i]._id && defectiveImgUrl[i] == \"\") {\n        alert(`Upload Image for the ${i + 1}th Defective Spare`);\n        return;\n      }\n      if (inventswap[i]._id && goodSpareImgUrl[i] == \"\") {\n        alert(`Upload Image for the ${i + 1}th Good Spare`);\n        return;\n      }\n    }\n\n    let tempcallstatus = \"\";\n\n    if (call.callStatus == 0) {\n      tempcallstatus = \"Not Allocated\";\n    }\n    if (call.callStatus == 1) {\n      tempcallstatus = \"Pending for Percall Approval\";\n    }\n    if (call.callStatus == 2) {\n      tempcallstatus = \"Pending for Response\";\n    }\n    if (call.callStatus == 3) {\n      tempcallstatus = \"Pending for OEM Response\";\n    }\n    if (call.callStatus == 4) {\n      tempcallstatus = \"Pending for 2nd Response\";\n    }\n    if (call.callStatus == 5) {\n      tempcallstatus = \"Pending for Customer\";\n    }\n    if (call.callStatus == 5) {\n      tempcallstatus = \"Under Observation\";\n    }\n    if (call.callStatus == 6) {\n      tempcallstatus = \"Pending for Others\";\n    }\n    if (call.callStatus == 7) {\n      tempcallstatus = \"Pending for Spare\";\n    }\n    if (call.callStatus == 8) {\n      tempcallstatus = \"Pending for Spare\";\n    }\n    if (call.callStatus == 9) {\n      tempcallstatus = \"Spare in Transit\";\n    }\n    if (call.callStatus == 10) {\n      tempcallstatus = \"Cancelled Calls\";\n    }\n    if (call.callStatus == 11) {\n      tempcallstatus = \"Closed Calls\";\n    }\n\n    // ------- Handling the swaps -----------\n\n    for (let i = 0; i < existswap.length; i++) {\n      await handleSwap(i);\n    }\n\n    // ----- history --------\n\n    let newcallhistory = {\n      date: moment().format(),\n      callStatus: call.callStatus,\n      engineer: call.employeeName,\n      callAttendDate: callAttendDate,\n      startOfService: startOfService,\n      endOfService: endOfService,\n      note: `Call Status Updated to ${tempcallstatus}`,\n      actionTaken: actionTaken,\n      ccfrImgUrl: ccfrImgUrl,\n      // existserial: existswap[0].sno,\n      // newserial: inventswap[0].sno,\n    };\n    let payload = {\n      id: call._id,\n      update: {\n        callStatus: call.callStatus,\n        // callAttendDate: call.callAttendDate,\n        // startOfService: call.startOfService,\n        // endOfService: call.endOfService,\n        // spareUsed: call.spareUsed,\n        $push: { history: newcallhistory },\n      },\n    };\n    console.log(payload);\n\n    try {\n      let response = await axios({\n        url: `${API}/call/${Emp.getId()}/assignEngg`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(\"updated\");\n      // setIsReviewModalOpen(true);\n    } catch (error) {\n      throw error;\n    }\n\n    // ----- asset history update -----\n\n    let assetpayload = {\n      id: productID,\n      update: {\n        $push: { history: newcallhistory },\n      },\n    };\n\n    try {\n      let response = await axios({\n        url: `${API}/asset/${Emp.getId()}/updateProductWithID`,\n        method: \"POST\",\n        data: assetpayload,\n      });\n      console.log(\"updated\");\n      console.log(\"Done\");\n      await setAssetpickerarray([{ item: \"test\" }]);\n      setInventswap([\n        {\n          name: \"Not Selected\",\n          sno: \"Not Selected\",\n        },\n      ]);\n      setExistswap([\n        {\n          name: \"Not Selected\",\n          sno: \"Not Selected\",\n        },\n      ]);\n\n      // await getAsset();\n      // setSubmitModal(true);\n      // setIsReviewModalOpen(true);\n    } catch (error) {\n      throw error;\n    }\n    setSubmitModal(true);\n  };\n\n  // -------handle swap --------\n\n  const handleSwap = async (i) => {\n    let payload = {\n      existswap: existswap[i],\n      newswap: inventswap[i],\n      call: call,\n      type: selectedItem[i].toLowerCase(),\n      servicelocation: servicelocation,\n      assetserial: POnumber,\n    };\n\n    try {\n      let update = await axios({\n        url: `${API}/call/${Emp.getId()}/swapitems`,\n        method: \"POST\",\n        data: payload,\n      });\n      if (update.data.hello == \"empty\") {\n        console.log(\"empty swap return\");\n        return;\n      }\n    } catch (error) {\n      throw error;\n    }\n\n    // ----- call history update --------\n    // ----- call history ---\n    let newcallhistory = {\n      date: moment().format(),\n      callStatus: call.callStatus,\n      engineer: call.employeeName,\n      callAttendDate: callAttendDate,\n      startOfService: startOfService,\n      endOfService: endOfService,\n      note: `Items Swapped/Added/Removed`,\n      actionTaken: actionTaken,\n      existUrl: defectiveImgUrl[i],\n      newUrl: goodSpareImgUrl[i],\n      existserial: existswap[i].sno,\n      newserial: inventswap[i].sno,\n    };\n    let payloadtwo = {\n      id: call._id,\n      update: {\n        callStatus: call.callStatus,\n        $push: { history: newcallhistory },\n      },\n    };\n\n    console.log(payloadtwo);\n    try {\n      let response = await axios({\n        url: `${API}/call/${Emp.getId()}/assignEngg`,\n        method: \"POST\",\n        data: payloadtwo,\n      });\n\n      // setIsReviewModalOpen(true);\n    } catch (error) {\n      throw error;\n    }\n\n    let assetpayload = {\n      id: productID,\n      update: {\n        $push: { history: newcallhistory },\n      },\n    };\n\n    try {\n      let response = await axios({\n        url: `${API}/asset/${Emp.getId()}/updateProductWithID`,\n        method: \"POST\",\n        data: assetpayload,\n      });\n      // console.log(\"updated\");\n      // console.log(\"Done\");\n\n      // await getAsset();\n      // setSubmitModal(true);\n      // setIsReviewModalOpen(true);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //DROPDOWN------------------------------------------------------------------------------------\n\n  function toggleDropdown() {\n    // setIsOpen(!isOpen);\n  }\n\n  const AssetBar = () => {\n    return (\n      <div className=\"dark:text-white my-4 \">\n        {/* Row 1  */}\n        {/* <div className=\"text-xl font-semibold\">Asset Information</div> */}\n        {/* Row 1*/}\n        <div className=\"flex space-x-1\">\n          <div className=\"dark:text-gray-200 text-black text-sm flex space-x-2 items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start  w-full my-2 \">\n            <div className=\" \">\n              <span>Call Number: {call.callNo}</span>\n            </div>\n            <div className=\" \">\n              <span>Contact Person: {call.contactPerson}</span>\n            </div>\n            <div className=\" \">\n              <span>Date: {moment(call.date).format(\"DD-MM-YYYY\")}</span>\n            </div>\n          </div>\n\n          <div className=\"dark:text-gray-200 text-black text-sm space-x-1  flex flex-row items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start   w-1/4 my-2 \">\n            <div className=\" font-semibold \">\n              <span>Call Status: </span>\n            </div>\n            <span>\n              {call.callStatus == 0 ? <Badge>Not Allocated</Badge> : null}\n              {call.callStatus == 1 ? (\n                <Badge>Pending for Percall Approval</Badge>\n              ) : null}\n              {call.callStatus == 2 ? (\n                <Badge>Pending for Response</Badge>\n              ) : null}\n              {call.callStatus == 3 ? (\n                <Badge>Pending for OEM Response</Badge>\n              ) : null}\n              {call.callStatus == 4 ? (\n                <Badge>Pending for 2nd Response</Badge>\n              ) : null}\n              {call.callStatus == 5 ? (\n                <Badge>Pending for Customer</Badge>\n              ) : null}\n              {call.callStatus == 6 ? <Badge>Under Observation</Badge> : null}\n              {call.callStatus == 7 ? <Badge>Pending for Others</Badge> : null}\n              {call.callStatus == 8 ? <Badge>Pending for Spare</Badge> : null}\n              {call.callStatus == 9 ? <Badge>Spare in Transit</Badge> : null}\n              {call.callStatus == 10 ? <Badge>Cancelled Calls</Badge> : null}\n              {call.callStatus == 11 ? <Badge>Closed Calls</Badge> : null}\n            </span>\n          </div>\n        </div>\n\n        {/*  Row 2*/}\n\n        <div className=\"flex space-x-1\">\n          <div className=\"dark:text-gray-200 text-black text-sm space-x-2  flex items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start w-full my-2\">\n            <div className=\" \">\n              <span>Brand :{brand}</span>\n            </div>\n            <div className=\" \">\n              <span>Model:{model}</span>\n            </div>\n            <div className=\" \">\n              <span>Serial Number: {serialno}</span>\n            </div>\n\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <div className=\"\">\n                  <span>Operating System :{os}</span>\n                </div>\n              </>\n            ) : null}\n          </div>\n\n          <div className=\"dark:text-gray-200 text-black text-sm  bg-gray-100 dark:bg-gray-800 p-2 rounded-md  my-2 w-1/2 flex items-center justify-end space-x-1\">\n            {/* /////////////////////////////// . History  ///////////////////////////////////////////// */}\n            <Button\n              onClick={() => {\n                setAssetHistoryModalOpen(true);\n              }}\n              layout=\"outline\"\n            >\n              View Asset History\n            </Button>\n\n            <Button\n              onClick={() => {\n                setHistoryModalOpen(true);\n              }}\n              layout=\"outline\"\n            >\n              View Call History\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"dark:text-gray-200 text-black flex flex-row  items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start lg:space-x-8  w-full \">\n          {/* Row - 1 */}\n          <div className=\"flex flex-col  text-sm my-1 w-full \">\n            <div>\n              <span className=\"font-semibold w-1/5\">Product Type :</span>{\" \"}\n              {product}\n            </div>\n            {unit.customerId ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">State : </span>{\" \"}\n                {unit.customerId.state}\n              </div>\n            ) : null}\n            <div>\n              <span className=\"font-semibold w-1/5\">Account :</span>{\" \"}\n              {account.accountName}\n            </div>\n            {/* ---------------------------------------------------------------------------------------------------------------- */}\n\n            {mouse[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Mouse Model :</span>{\" \"}\n                {mouse[0] ? mouse[0].mousename : \"\"}\n              </div>\n            ) : null}\n            {mouse[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Mouse Serial : </span>{\" \"}\n                {mouse[0] ? mouse[0].mousesno : \"\"}\n              </div>\n            ) : null}\n          </div>\n\n          {/*  Row 2 */}\n\n          <div className=\"flex flex-col  text-sm my-1 w-full \">\n            <div>\n              <span className=\"font-semibold w-1/5\">Customer : </span>{\" \"}\n              {customer.customerName}\n            </div>\n            <div>\n              <span className=\"font-semibold w-1/5\">Unit : </span>{\" \"}\n              {unit.unitName}\n            </div>\n            {unit.customerId ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">PIN Code : </span>{\" \"}\n                {unit.customerId.pincode}\n              </div>\n            ) : null}\n            {/* ---------------------------------------------------------------------------------------------------------------- */}\n            {kbd[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">KBD Model :</span>{\" \"}\n                {kbd[0].keyboardname}\n              </div>\n            ) : null}\n\n            {kbd[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">KBD Serial: </span>{\" \"}\n                {kbd[0] ? kbd[0].keyboardsno : \"\"}\n              </div>\n            ) : null}\n          </div>\n          {/*  Row 3 */}\n\n          <div className=\" flex flex-col  text-sm my-1 w-full\">\n            {unit.customerId ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">\n                  Location type :{\" \"}\n                </span>{\" \"}\n                {unit.customerId.locationType}\n              </div>\n            ) : null}\n            {/* ---------------------------------------------------------------------------------------------------------------- */}\n            {monitor[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">Monitor : </span>{\" \"}\n                {monitor[0] ? monitor[0].monitorname : \"\"}\n              </div>\n            ) : null}\n            {monitor[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">\n                  Monitor Serial :\n                </span>{\" \"}\n                {monitor[0] ? monitor[0].monitorsno : \"\"}\n              </div>\n            ) : null}\n\n            {smps[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">SMPS1 Model :</span>{\" \"}\n                {smps[0] ? smps[0].smpsname : \"\"}\n              </div>\n            ) : null}\n            {smps[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">\n                  SMPS1 Serial :{\" \"}\n                </span>{\" \"}\n                {smps[0] ? smps[0].smpssno : \"\"}\n              </div>\n            ) : null}\n          </div>\n          {/* Row 4 */}\n\n          <div className=\"flex flex-col  text-sm my-1 w-full \">\n            {/* ---------------------------------------------------------------------------------------------------------------- */}\n            {hdd[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">HDD1 Model:</span>{\" \"}\n                {hdd[0] ? hdd[0].hddname : \"\"}\n              </div>\n            ) : null}\n            {hdd[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">HDD1 Serial :</span>{\" \"}\n                {hdd[0] ? hdd[0].hddsno : \"\"}\n              </div>\n            ) : null}\n\n            {hdd[1] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">HDD2 Model : </span>{\" \"}\n                {hdd[1] ? hdd[1].hddname : \"\"}\n              </div>\n            ) : null}\n\n            {hdd[1] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">HDD2 Serial: </span>{\" \"}\n                {hdd[1] ? hdd[1].hddsno : \"\"}\n              </div>\n            ) : null}\n            {motherboard[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">Motherboard: </span>{\" \"}\n                {motherboard[0] ? motherboard[0].motherboardname : \"\"}\n              </div>\n            ) : null}\n\n            {motherboard[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5 ml-2\">MBD Serial : </span>\n                {motherboard[0] ? motherboard[0].motherboardsno : \"\"}\n              </div>\n            ) : null}\n          </div>\n          {/* -----------Row 5---------- */}\n          <div className=\"flex flex-col  text-sm my-1 w-full \">\n            <div>\n              <span className=\"font-semibold w-1/5\">Business : </span>{\" \"}\n              {Business}\n            </div>\n            {unit.customerId ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">District : </span>{\" \"}\n                {unit.customerId.district}\n              </div>\n            ) : null}\n            {/* ---------------------------------------------------------------------------------------------------------------- */}\n\n            {ram[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">RAM1 Modell:</span>{\" \"}\n                {ram[0] ? ram[0].ramname : \"\"}\n              </div>\n            ) : null}\n            {ram[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">RAM1 Serial:</span>{\" \"}\n                {ram[0] ? ram[0].ramsno : \"\"}\n              </div>\n            ) : null}\n\n            {ram[1] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">RAM2 Model:</span>{\" \"}\n                {ram[1] ? ram[1].ramname : \"\"}\n              </div>\n            ) : null}\n\n            {ram[1] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">RAM2 Serial : </span>{\" \"}\n                {ram[1] ? ram[1].ramsno : \"\"}\n              </div>\n            ) : null}\n            {/* {opticaldrive[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Optical Model: </span>{\" \"}\n                {opticaldrive[0] ? opticaldrive[0].opticaldrivename : \"\"}\n              </div>\n            ) : null}\n\n            {opticaldrive[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Optical Serial : </span>{\" \"}\n                {opticaldrive[0] ? opticaldrive[0].opticaldrivesno : \"\"}\n              </div>\n            ) : null} */}\n          </div>\n        </div>\n\n        {/* <hr className=\"my-4\" /> */}\n\n        <div className=\"flex space-x-1\">\n          <div className=\"dark:text-gray-200 text-black text-sm flex  flex-wrap items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start  w-full my-2 \">\n            {/* /////////////////////////////// . Engineer INFO  ///////////////////////////////////////////// */}\n            <div className=\" font-semibold\">\n              <span>\n                Engineer:{\" \"}\n                <span className=\"font-normal\">{call.employeeName}</span>\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"dark:text-gray-200 text-black text-sm flex flex-col flex-wrap items-start bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start  w-full  \">\n          {/* /////////////////////////////// . Problem Description  ///////////////////////////////////////////// */}\n          <div className=\" font-semibold\">\n            <span>\n              Problem Description:{\" \"}\n              <span className=\"font-normal\"> {call.problem}</span>\n            </span>\n          </div>\n        </div>\n        <div className=\"dark:text-gray-200 text-black text-sm flex  space-x-2 items-start bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start  w-full my-2 \">\n          {/* /////////////////////////////// . Update  ///////////////////////////////////////////// */}\n          <div className=\"flex flex-col w-3/4\">\n            <Label className=\"w-full\">\n              <span>Status Update</span>\n              <Select\n                className=\"inline\"\n                onChange={(e) => {\n                  setCall({ ...call, callStatus: e.target.value });\n                  console.log(call);\n                  if (e.target.value == \"11\") {\n                    setSpareModal(true);\n                  }\n                }}\n                value={call.callStatus}\n              >\n                <option value=\"0\">Not Allocated</option>\n                <option value=\"1\">Pending for Percall Approval</option>\n                <option value=\"2\"> Pending for Response</option>\n                <option value=\"3\"> Pending for OEM Response</option>\n                <option value=\"4\"> Pending for 2nd Response</option>\n                <option value=\"5\"> Pending for Customer</option>\n                <option value=\"6\"> Under Observation</option>\n                <option value=\"7\"> Pending for Others</option>\n                <option value=\"8\"> Pending for Spare</option>\n                <option value=\"9\"> Spare in Transit</option>\n                <option value=\"10\"> Cancelled Calls</option>\n                <option value=\"11\"> Closed Calls</option>\n              </Select>\n            </Label>\n          </div>\n          <div className=\"flex flex-col w-1/4\">\n            <Label className=\"w-full\">\n              <span>Spare Update</span>\n              <Select\n                className=\"inline w-1/2\"\n                onChange={(e) => {\n                  // setCall({ ...call, spareUsed: e.target.value });\n                  setSpareStatus(e.target.value);\n                  console.log(call);\n                }}\n                value={spareStatus}\n              >\n                <option value=\"\" disabled>\n                  Select Spare Status\n                </option>\n                <option value=\"Yes\">Yes</option>\n                <option value=\"No\">No</option>\n              </Select>\n            </Label>\n          </div>\n        </div>\n\n        {/* //////////////////////////////////////////////////////////////////////////// */}\n      </div>\n    );\n  };\n\n  const InvTable = (\n    number,\n    items,\n    activeRowID,\n    setActiveRowID,\n    existswap,\n    setExistswap\n  ) => {\n    return (\n      <div className=\" bg-gray-200 dark:bg-gray-700 p-3\">\n        <div className=\"mb- mt-4\">\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n          <TableContainer className=\"mt-4\">\n            <Table>\n              <TableHeader>\n                <tr>\n                  <TableCell>Type</TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Serial Number</TableCell>\n                  <TableCell>Select</TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {items.map((user, i) => (\n                  <TableRow\n                    className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                      activeRowID[number] == user._id\n                        ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                        : \"white\"\n                    } `}\n                    key={i}\n                    onClick={() => {\n                      // setActiveRowID(user._id);\n                      // console.log(\"the id is \" + user._id);\n                      // setSelectedProd(user);\n                      // setAssetDetails(user);\n                      // console.log(user.product.keyboard[0].keyboardname);\n                    }}\n                  >\n                    <TableCell className=\"w-8\">\n                      <div className=\"flex items-center text-sm \">\n                        {/* <Avatar\n                          className=\"hidden ml-2 mr-3 md:block\"\n                          src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                          alt=\"User image\"\n                        /> */}\n                        <div>\n                          <p className=\"font-semibold\">{user.type}</p>\n                          {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                            {user.accountName}\n                          </p> */}\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.name}</span>\n                    </TableCell>\n\n                    <TableCell>\n                      <span className=\"text-sm\">{user.sno}</span>\n                    </TableCell>\n                    <TableCell>\n                      {user.sno != \"\" ? (\n                        <Button\n                          layout=\"outline\"\n                          className=\"dark:border-green-700 border-green-400\"\n                          onClick={() => {\n                            let tempexist = [...existswap];\n                            tempexist[number] = user;\n                            setExistswap(tempexist);\n\n                            // -----------row id\n                            let temp = [...activeRowID];\n                            temp[number] = -1;\n                            setActiveRowID(temp);\n                          }}\n                        >\n                          Select\n                        </Button>\n                      ) : null}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n        </div>\n\n        {/* ------------------------------------Bottom Bar---------------------------------- */}\n      </div>\n    );\n  };\n\n  const AssetItemPick = (number) => {\n    return (\n      <div className=\"my-2\">\n        <div className=\"text-sm font-bold dark:text-white \">\n          Inventory Movement: {number + 1}\n        </div>\n        {/* -----Type Selection---- */}\n        <div className=\"flex flex-row items-center\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div className=\"mt-1 flex flex-row items-center justify-start w-full \">\n            {/* ---------------------------Product Drop Down-------------------------------------- */}\n\n            <div className=\"w-1/4\">\n              <Select\n                onChange={(e) => {\n                  // setBusiness(e.target.value);\n                  let temp = selectedItem;\n                  selectedItem[number] = e.target.value;\n                  setSelectedItem(temp);\n\n                  let thevalue = e.target.value;\n\n                  // -------setting the data for the tables -----\n                  if (thevalue == \"Mouse\") {\n                    dataSetter(mouse, number);\n                  } else if (thevalue == \"Keyboard\") {\n                    dataSetter(kbd, number);\n                  } else if (thevalue == \"Monitor\") {\n                    dataSetter(monitor, number);\n                  } else if (thevalue == \"Cpu\") {\n                    dataSetter(cpu, number);\n                  } else if (thevalue == \"Ram\") {\n                    dataSetter(ram, number);\n                  } else if (thevalue == \"Fan\") {\n                    dataSetter(fan, number);\n                  } else if (thevalue == \"Motherboard\") {\n                    dataSetter(motherboard, number);\n                  } else if (thevalue == \"SMPS\") {\n                    dataSetter(smps, number);\n                  } else if (thevalue == \"HDD\") {\n                    dataSetter(hdd, number);\n                  } else if (thevalue == \"Gcard\") {\n                    dataSetter(gcard, number);\n                  } else if (thevalue == \"EnetCard\") {\n                    dataSetter(enetcard, number);\n                  } else if (thevalue == \"SerialCard\") {\n                    dataSetter(serialcard, number);\n                  } else if (thevalue == \"ParalellCard\") {\n                    dataSetter(parallelcard, number);\n                  } else if (thevalue == \"OpticalDrive\") {\n                    dataSetter(opticaldrive, number);\n                  } else if (thevalue == \"Others\") {\n                    dataSetter(others, number);\n                  }\n                  // ----------getting inventory\n                  thegetter(number);\n                  // ----clearing that existswap and inventswap\n                  let tempexist = [...existswap];\n                  tempexist[number] = {\n                    name: \"Not Selected\",\n                    sno: \"Not Selected\",\n                  };\n                  setExistswap(tempexist);\n                  let tempinvent = [...inventswap];\n                  tempinvent[number] = {\n                    name: \"Not Selected\",\n                    sno: \"Not Selected\",\n                  };\n                  setInventswap(tempinvent);\n                }}\n                className=\"mt-1 \"\n              >\n                <option value=\"\" selected disabled>\n                  Pick Item\n                </option>\n                <option value=\"Mouse\">Mouse</option>\n                <option value=\"Keyboard\">Keyboard</option>\n                <option value=\"Monitor\">Monitor</option>\n                <option value=\"Cpu\">Cpu</option>\n                <option value=\"Ram\">Ram</option>\n                <option value=\"Fan\">Fan</option>\n                <option value=\"Motherboard\">Motherboard</option>\n                <option value=\"SMPS\">SMPS</option>\n                <option value=\"HDD\">HDD</option>\n                <option value=\"Gcard\">Gcard</option>\n                <option value=\"EnetCard\">EnetCard</option>\n                <option value=\"SerialCard\">SerialCard</option>\n                <option value=\"ParalellCard\">ParalellCard</option>\n                <option value=\"OpticalDrive\">OpticalDrive</option>\n                <option value=\"Others\">Others</option>\n              </Select>\n            </div>\n\n            {/* <Button\n              layout=\"outline\"\n              className=\"dark:border-green-700 border-green-400\"\n              onClick={() => {\n                console.log(\"Swap\");\n                handleSwap();\n              }}\n            >\n              Swap\n            </Button> */}\n\n            {/* <Button\n              layout=\"outline\"\n              className=\"dark:border-green-700 border-green-400\"\n              onClick={() => {\n                console.log(\"Swap\");\n                handleSwap();\n              }}\n            >\n              Swap\n            </Button> */}\n            {existswap[number]._id ? (\n              <Button\n                layout=\"outline\"\n                className=\"dark:border-green-700 border-green-400 ml-2\"\n                onClick={() => {\n                  setImageUploadMenuMessage(\"defective\");\n                  setimageIndex(number);\n                  setIsImgUploadMenuModal(true);\n                }}\n              >\n                Upload Defective Spare\n              </Button>\n            ) : null}\n            {inventswap[number]._id ? (\n              <Button\n                layout=\"outline\"\n                className=\"dark:border-green-700 border-green-400 ml-2\"\n                onClick={() => {\n                  setImageUploadMenuMessage(\"good\");\n                  setimageIndex(number);\n                  setIsImgUploadMenuModal(true);\n                }}\n              >\n                Upload Good Spare\n              </Button>\n            ) : null}\n          </div>\n          {/* + and - buttons */}\n          <div className=\"flex flex-row items-center justify-center  \">\n            <div\n              className=\"ml-3 bg-gray-100 dark:bg-gray-400 dark:hover:bg-gray-200 rounded-full\n            \"\n            >\n              {number == assetpickerarray.length - 1 ? (\n                <Button\n                  onClick={() => {\n                    selectedItem.push(\"\");\n                    // -----new module-----\n                    let tempassetpicker = [...assetpickerarray];\n                    let temp = { item: \"test\" };\n                    tempassetpicker.push(temp);\n                    setAssetpickerarray(tempassetpicker);\n\n                    // ------- new active row ids\n                    let tempactiveid = [...activeRowID];\n                    tempactiveid.push(-1);\n                    setActiveRowID(tempactiveid);\n                    let tempsecondactiveid = [...secondactiveRowID];\n                    tempsecondactiveid.push(-1);\n                    setSecondactiveRowID(tempsecondactiveid);\n\n                    // -----data and invent data\n                    let tempd = [...data];\n                    tempd.push({});\n                    setData(tempd);\n                    let tempinvdata = [...inventdata];\n                    tempinvdata.push({});\n                    setInventData(tempinvdata);\n                    // ---exists swap and inventswap  ----\n                    let texist = [...existswap];\n                    texist.push({\n                      name: \"Not Selected\",\n                      sno: \"Not Selected\",\n                    });\n                    setExistswap(texist);\n                    let tinvent = [...inventswap];\n                    tinvent.push({\n                      name: \"Not Selected\",\n                      sno: \"Not Selected\",\n                    });\n                    setInventswap(tinvent);\n                    //image push\n\n                    let tempgoodspare = [...goodSpareImgUrl];\n                    tempgoodspare.push(\"\");\n                    setGoodSpareImgUrl(tempgoodspare);\n\n                    let tempdefective = [...defectiveImgUrl];\n                    tempdefective.push(\"\");\n                    setDefectiveImgUrl(tempdefective);\n                  }}\n                  icon={Add}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                  size=\"small\"\n                />\n              ) : null}\n            </div>\n            {number == 0 || number != assetpickerarray.length - 1 ? null : (\n              <div className=\"ml-1 bg-gray-100 dark:bg-gray-400 dark:hover:bg-gray-200 rounded-full\">\n                <Button\n                  onClick={() => {\n                    selectedItem.pop();\n                    let tempassetpicker = [...assetpickerarray];\n                    tempassetpicker.pop();\n                    setAssetpickerarray(tempassetpicker);\n\n                    // ------- new active row ids\n                    let tempactiveid = [...activeRowID];\n                    tempactiveid.pop();\n                    setActiveRowID(tempactiveid);\n                    let tempsecondactiveid = [...secondactiveRowID];\n                    tempsecondactiveid.pop();\n                    setSecondactiveRowID(tempsecondactiveid);\n\n                    // ---exists swap and inventswap  ----\n                    let texist = [...existswap];\n                    texist.pop();\n                    setExistswap(texist);\n                    let tinvent = [...inventswap];\n                    tinvent.pop();\n                    setInventswap(tinvent);\n\n                    //image\n                    let tempgoodspare = [...goodSpareImgUrl];\n                    tempgoodspare.pop();\n                    setGoodSpareImgUrl(tempgoodspare);\n\n                    let tempdefective = [...defectiveImgUrl];\n                    tempdefective.pop();\n                    setDefectiveImgUrl(tempdefective);\n                  }}\n                  icon={Remove}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                  size=\"small\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n        {/* Selection Modules */}\n        <div className=\"flex flex-row items-start space-x-2\">\n          {/* -------Existing Item Table ----------*/}\n\n          <TableContainer className=\"mt-4\">\n            <div className=\"dark:text-gray-200 text-black text-sm flex space-x-2 items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start  w-full my-2 font-bold\">\n              Items In Asset\n            </div>\n            <Table>\n              <TableHeader>\n                <tr className=\"flex flex-row justify-between\">\n                  <TableCell>Type</TableCell>\n                  <TableCell>Model</TableCell>\n                  <TableCell>Serial Number</TableCell>\n\n                  <TableCell>\n                    <span\n                      className=\"cursor-pointer\"\n                      // onClick={() => setActiveRowID(-1)}\n                    >\n                      Items\n                    </span>\n                  </TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                <div className=\"flex flex-col justify-around\">\n                  <TableRow\n                    className={`hover:shadow-lg dark:hover:bg-gray-600 flex flex-row justify-between  ${\n                      activeRowID[number] == existswap[number]._id\n                        ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                        : \"white\"\n                    } `}\n                    key={number}\n                    onClick={() => {\n                      // setActiveRowID(i);\n                    }}\n                  >\n                    <TableCell className=\"w-8\">\n                      <div className=\"flex items-center text-sm \">\n                        <div>\n                          <p className=\"font-semibold\">\n                            {selectedItem[number]}\n                          </p>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{existswap[number].name}</span>\n                    </TableCell>\n\n                    <TableCell>\n                      <span className=\"text-sm\">{existswap[number].sno}</span>\n                    </TableCell>\n\n                    <TableCell className=\"text-center \">\n                      {selectedItem[number] == \"\" ? null : (\n                        <Button\n                          // layout=\"link\"\n                          size=\"icon\"\n                          aria-label=\"DropDown\"\n                          onClick={() => {\n                            console.log(activeRowID[number]);\n                            if (activeRowID[number] != -1) {\n                              let temp = [...activeRowID];\n                              temp[number] = -1;\n                              setActiveRowID(temp);\n                            } else {\n                              let temp = [...activeRowID];\n                              temp[number] = number;\n                              setActiveRowID(temp);\n                            }\n                            // setActiveRowID(-1);\n                          }}\n                          className=\"rounded-lg m-1\"\n                        >\n                          <DropdownIcon\n                            className=\"w-5 h-5\"\n                            aria-hidden=\"true\"\n                          />\n                        </Button>\n                      )}\n                    </TableCell>\n                  </TableRow>\n\n                  {activeRowID[number] == number\n                    ? InvTable(\n                        number,\n                        data[number],\n                        activeRowID,\n                        setActiveRowID,\n                        existswap,\n                        setExistswap\n                      )\n                    : null}\n                </div>\n\n                {/* {existswap.map((user, i) => (\n                  \n                ))} */}\n              </TableBody>\n            </Table>\n            {/* <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter> */}\n          </TableContainer>\n\n          {/*----------- Inventory Selection Table ----------- */}\n\n          <TableContainer className=\"mt-4\">\n            <div className=\"dark:text-gray-200 text-black text-sm flex space-x-2 items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start  w-full my-2 font-bold\">\n              Items In Inventory\n            </div>\n            <Table>\n              <TableHeader>\n                <tr className=\"flex flex-row justify-between\">\n                  <TableCell>Type</TableCell>\n                  <TableCell>Model</TableCell>\n                  <TableCell>Serial Number</TableCell>\n\n                  <TableCell>\n                    <span\n                      className=\"cursor-pointer\"\n                      // onClick={() => setActiveRowID(-1)}\n                    >\n                      Items\n                    </span>\n                  </TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                <div className=\"flex flex-col justify-around\">\n                  <TableRow\n                    className={`hover:shadow-lg dark:hover:bg-gray-600 flex flex-row justify-between  ${\n                      secondactiveRowID[number] == inventswap[number]._id\n                        ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                        : \"white\"\n                    } `}\n                    key={number}\n                    onClick={() => {\n                      // setActiveRowID(i);\n                    }}\n                  >\n                    <TableCell className=\"w-8\">\n                      <div className=\"flex items-center text-sm \">\n                        <div>\n                          <p className=\"font-semibold\">\n                            {selectedItem[number]}\n                          </p>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{inventswap[number].name}</span>\n                    </TableCell>\n\n                    <TableCell>\n                      <span className=\"text-sm\">{inventswap[number].sno}</span>\n                    </TableCell>\n\n                    <TableCell className=\"text-center \">\n                      {selectedItem[number] == \"\" ? null : (\n                        <Button\n                          // layout=\"link\"\n                          size=\"icon\"\n                          aria-label=\"DropDown\"\n                          onClick={() => {\n                            if (secondactiveRowID[number] != -1) {\n                              let temp = [...secondactiveRowID];\n                              temp[number] = -1;\n                              setSecondactiveRowID(temp);\n                            } else {\n                              let temp = [...secondactiveRowID];\n                              temp[number] = number;\n                              setSecondactiveRowID(temp);\n                            }\n                            // setActiveRowID(-1);\n                          }}\n                          className=\"rounded-lg m-1\"\n                        >\n                          <DropdownIcon\n                            className=\"w-5 h-5\"\n                            aria-hidden=\"true\"\n                          />\n                        </Button>\n                      )}\n                    </TableCell>\n                  </TableRow>\n\n                  {secondactiveRowID[number] == number\n                    ? InvTable(\n                        number,\n                        inventdata[number],\n                        secondactiveRowID,\n                        setSecondactiveRowID,\n                        inventswap,\n                        setInventswap\n                      )\n                    : null}\n                </div>\n              </TableBody>\n            </Table>\n            {/* <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter> */}\n          </TableContainer>\n        </div>{\" \"}\n      </div>\n    );\n  };\n\n  const CallUpdater = () => {\n    return (\n      <div className=\"border-b pb-3\">\n        <div className=\"flex-row flex  space-x-3 mb-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Assigned Date</span>\n              <Input\n                className=\"\"\n                type=\"date\"\n                value={moment(call.assignedDate).format(\"YYYY-MM-DD\")}\n                onChange={(e) => {\n                  setCall({ ...call, callAttendDate: e.target.value });\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Call Attended ETA</span>\n              <Input\n                className=\"\"\n                type=\"time\"\n                value={call.assignedETA}\n                onChange={(e) => {\n                  setCall({ ...call, callAttendDate: e.target.value });\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Call Attended Date*</span>\n              <Input\n                className=\"\"\n                type=\"date\"\n                value={callAttendDate}\n                onChange={(e) => {\n                  setCallAttendDate(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Start Of Service*</span>\n              <Input\n                className=\"\"\n                type=\"time\"\n                value={startOfService}\n                onChange={(e) => {\n                  setStartOfService(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>End Of Service*</span>\n              <Input\n                className=\"\"\n                type=\"time\"\n                value={endOfService}\n                onChange={(e) => {\n                  setEndOfService(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Action Taken*</span>\n            <Input\n              className=\"\"\n              type=\"text\"\n              value={actionTaken}\n              onChange={(e) => {\n                setActionTaken(e.target.value);\n              }}\n            />\n          </Label>\n        </div>\n      </div>\n    );\n  };\n\n  const CallEnder = () => {\n    return (\n      <div className=\"dark:text-gray-200 text-black text-sm flex   space-x-2 items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start  w-full my-2 \">\n        {/* /////////////////////////////// . Update  ///////////////////////////////////////////// */}\n\n        <div className=\"flex flex-col w-1/4\">\n          <Label className=\"w-full\">\n            <span>CCFR Signed</span>\n            <Select\n              className=\"inline w-1/2\"\n              onChange={(e) => {\n                // setCall({ ...call, spareUsed: e.target.value });\n                setCcfrStatus(e.target.value);\n                // console.log(call);\n              }}\n              value={ccfrStatus}\n            >\n              <option value=\"\" disabled>\n                Select CCFR Status\n              </option>\n              <option value=\"Yes\">Yes</option>\n              <option value=\"No\">No</option>\n            </Select>\n          </Label>\n        </div>\n\n        <div className=\"flex flex-col w-1/4 mt-5\">\n          {ccfrStatus == \"Yes\" ? (\n            <Button\n              layout=\"outline\"\n              className=\"\"\n              onClick={() => {\n                setImageUploadMenuMessage(\"ccfr\");\n                setIsImgUploadMenuModal(true);\n              }}\n            >\n              Upload CCFR\n            </Button>\n          ) : null}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {HistoryModal()}\n      {AssetHistoryModal()}\n      {ImgUploadModal()}\n      {ImgUploadMenuModal()}\n      {HistoryImgViewModal()}\n      {AssetBar()}\n      {CallUpdater()}\n      {/* {spareStatus == \"Yes\" ? AssetItemPick() : null} */}\n      {assetpickerarray.map((obj, i) => {\n        return AssetItemPick(i);\n      })}\n\n      {UpdatedModal()}\n      {NotSwapModal()}\n      {SpareRequiredModal()}\n      {CallEnder()}\n      <div>\n        <div className=\"flex flex-col items-center w-full mt-5 mb-5\">\n          {/* <Link to={`/app/viewcalls`}> */}\n          <Button\n            onClick={() => {\n              handleUpdate();\n            }}\n            layout=\"outline\"\n          >\n            Update Call\n          </Button>\n          {/* <Button\n            onClick={() => {\n              // console.log(selectedItem);\n              // console.log(activeRowID);\n              // console.log(secondactiveRowID);\n              // console.log(data);\n              console.log(existswap);\n              console.log(inventswap);\n              // console.log(imageIndex);\n              // console.log(goodSpareImgUrl);\n              // console.log(defectiveImgUrl);\n\n              // console.log(selectedItem);\n              // console.log(existswap.length);\n            }}\n            layout=\"outline\"\n          >\n            Test\n          </Button> */}\n          {/* </Link> */}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default UpdateCall;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}