{"version":3,"sources":["pages/LST/LSTHistory.js","../../src/FileSaver.js","components/Modal/AssetFilters/CustomerSelection.js"],"names":["LSTHistory","useState","activerowid","setActiveRowId","isDeleteModalOpen","setIsDeleteModalOpen","deleteId","setDeleteId","deleteNum","setDeleteNum","useContext","TopBarContext","setTopHeading","topheading","page","setPage","data","setData","refresh","setRefresh","status","setstatus","location","setLocation","ToLocation","setToLocation","condition","selectedprod","searchquery","setSearchQuery","totalResults","setTotalResults","activeRowID","setActiveRowID","useEffect","a","console","log","payload","pages","limit","filters","from","to","axios","url","API","Emp","getId","method","response","out","total","createAndDownloadPdf","id","responseType","pdfBlob","Blob","type","saveAs","isOpen","onClose","className","onClick","invs","invItems","map","item","_id","update","temp","filter","x","class","value","onChange","e","target","disabled","selected","xmlns","viewBox","d","onSubmit","preventDefault","placeholder","user","i","key","LSTNo","vendorId","vendorName","moment","date","format","length","layout","aria-label","size","aria-hidden","items","name","sno","invnumber","resultsPerPage","label","p","MouseEvent","document","window","self","global","test","navigator","HTMLAnchorElement","b","setTimeout","f","autoBom","open","module","CustomerSelection","isModalOpen","setIsModalOpen","unit","setUnit","account","setAccount","customer","setCustomer","customers","setCustomers","accounts","setAccounts","units","setUnits","tabIndex","setTabIndex","search","setSearch","handleChange","handleSubmit","role","pickCustomer","customerName","accountName","unitName","Axios","post","customerId","accs","pickAccount","accountId","u","pickUnit","selectedIndex","onSelect","ind"],"mappings":"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","file":"static/js/29.4b023caa.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport { EditIcon, TrashIcon, DropdownIcon } from \"../../icons\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  Button,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport { API } from \"../../backendapi\";\nimport CustomerSelection from \"../../components/Modal/AssetFilters/CustomerSelection\";\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\nimport { Link } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n// import PrintLST from \"./PrintLST\";\n\nfunction LSTHistory() {\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [deleteId, setDeleteId] = useState(0);\n  const [deleteNum, setDeleteNum] = useState(-1);\n\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const [floatbox, setFloatBox] = useState(false);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  // dropdown and modals\n\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [status, setstatus] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [ToLocation, setToLocation] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  const [activeRowID, setActiveRowID] = useState(-1);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"LST History\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          // type: type,\n          from: location,\n          to: ToLocation,\n          status: status,\n          // searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/lst/${Emp.getId()}/getall`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, location, ToLocation, condition, status, refresh]);\n\n  console.log(selectedprod);\n  // DElete Modal\n\n  const DeleteModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isDeleteModalOpen}\n          onClose={() => setIsDeleteModalOpen(false)}\n        >\n          <ModalHeader>Are you sure you want to delete!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                let invs = data[deleteNum].invItems;\n                console.log(invs);\n                invs.map(async (item) => {\n                  const payload = {\n                    id: item._id,\n                    update: {\n                      location: data[deleteNum].from,\n                    },\n                  };\n                  console.log(\"PAYLOAD\", payload);\n                  try {\n                    await axios({\n                      url: `${API}/inventory/${Emp.getId()}/invupdate`,\n                      method: \"POST\",\n                      data: payload,\n                    });\n                    // setIsReviewModalOpen(true);\n                    console.log(\"Done\");\n                  } catch (error) {\n                    console.log(error);\n                    throw error;\n                  }\n                });\n                try {\n                  let response = await axios({\n                    url: `${API}/lst/${Emp.getId()}/delete`,\n                    method: \"POST\",\n                    data: { id: deleteId },\n                  });\n                  console.log(response.data);\n                  let temp = data.filter((x) => x._id != deleteId);\n                  setData(temp);\n                  setIsDeleteModalOpen(false);\n\n                  // setData(response.data);\n                } catch (error) {\n                  throw error;\n                }\n              }}\n            >\n              Confirm Delete\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  // PDF Download Functions\n\n  const createAndDownloadPdf = async (id) => {\n    let payload = {\n      id: id,\n    };\n    let response = await axios({\n      url: `${API}/lst/${Emp.getId()}/downloadpdf`,\n      method: \"POST\",\n      data: payload,\n      responseType: \"blob\",\n    });\n\n    const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\n\n    saveAs(pdfBlob, \"LST.pdf\");\n  };\n\n  const InvTable = (items) => {\n    return (\n      <div className=\" bg-gray-200 dark:bg-gray-700 p-3\">\n        <div className=\"mb- mt-4\">\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n          <TableContainer className=\"mt-4\">\n            <Table>\n              <TableHeader>\n                <tr>\n                  <TableCell>Type</TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Serial Number</TableCell>\n                  <TableCell>Location</TableCell>\n                  <TableCell>Inv Number</TableCell>\n                  <TableCell>Condition</TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {items.map((user, i) => (\n                  <TableRow\n                    className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                      activerowid == user._id\n                        ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                        : \"white\"\n                    } `}\n                    key={i}\n                    onClick={() => {\n                      setActiveRowId(user._id);\n                      // console.log(\"the id is \" + user._id);\n                      // setSelectedProd(user);\n                      // setAssetDetails(user);\n                      // console.log(user.product.keyboard[0].keyboardname);\n                    }}\n                  >\n                    <TableCell className=\"w-8\">\n                      <div className=\"flex items-center text-sm \">\n                        {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                        <div>\n                          <p className=\"font-semibold\">{user.type}</p>\n                          {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p> */}\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.name}</span>\n                    </TableCell>\n\n                    <TableCell>\n                      <span className=\"text-sm\">{user.sno}</span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.location}</span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.invnumber}</span>\n                    </TableCell>\n                    <TableCell>\n                      <Badge\n                        type={user.condition == \"Good\" ? \"primary\" : \"danger\"}\n                      >\n                        {user.condition}\n                      </Badge>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n        </div>\n\n        {/* ------------------------------------Bottom Bar---------------------------------- */}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {DeleteModal()}\n      <div className=\"mb-64 mt-4\">\n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-2 \">\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={status}\n                onChange={(e) => {\n                  setstatus(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Type\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"In Transit\">In Transit</option>\n                <option value=\"Received\">Received</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* -----------------------------------------Location ----------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={location}\n                onChange={(e) => {\n                  setLocation(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  From Location\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* -----------------------------------------Location ----------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={ToLocation}\n                onChange={(e) => {\n                  setToLocation(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  To Location\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n                <option value=\"Vendor\">Vendor</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* ---------------------------Condition Drop Down-------------------------------------- */}\n            {/* <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={condition}\n                onChange={(e) => {\n                  setCondition(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Condition\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Good\">Good</option>\n                <option value=\"Bad\">Bad</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div> */}\n\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search LST Number\"\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr className=\"flex flex-row justify-between\">\n                <TableCell>No</TableCell>\n                <TableCell>From</TableCell>\n                <TableCell>To</TableCell>\n                <TableCell>\n                  <span className=\"ml-10\">Date</span>{\" \"}\n                </TableCell>\n                <TableCell>\n                  <span className=\"ml-2 mr-2\">Num</span>{\" \"}\n                </TableCell>\n                {/* <TableCell>Status</TableCell> */}\n                <TableCell> Report</TableCell>\n                <TableCell> Delete</TableCell>\n                <TableCell>\n                  <span\n                    className=\"cursor-pointer\"\n                    onClick={() => setActiveRowID(-1)}\n                  >\n                    Items\n                  </span>\n                </TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <div className=\"flex flex-col justify-around\">\n                  <TableRow\n                    className={`hover:shadow-lg dark:hover:bg-gray-600 flex flex-row justify-between  ${\n                      activerowid == user._id\n                        ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                        : \"white\"\n                    } `}\n                    key={i}\n                    onClick={() => {\n                      setActiveRowId(i);\n                      // console.log(\"the id is \" + user._id);\n                      // setSelectedProd(user);\n                      // setAssetDetails(user);\n                      // console.log(user.product.keyboard[0].keyboardname);\n                    }}\n                  >\n                    <TableCell className=\"w-8\">\n                      <div className=\"flex items-center text-sm \">\n                        <div>\n                          <p className=\"font-semibold\">{user.LSTNo}</p>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell className=\"\">\n                      <span className=\" \">{user.from}</span>\n                    </TableCell>\n\n                    <TableCell className=\"  \">\n                      <span className=\"  \">\n                        {user.vendorId ? user.vendorName : user.to}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">\n                        {\" \"}\n                        {moment(user.date).format(\"DD/MM/YYYY\")}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.invItems.length}</span>\n                    </TableCell>\n                    {/* <TableCell>\n                    <Badge>\n                      condition\n                    </Badge>\n                  </TableCell> */}\n                    <TableCell className=\"text-center \">\n                      <Button\n                        layout=\"outline\"\n                        aria-label=\"DropDown\"\n                        onClick={() => {\n                          console.log(\"dwlod\");\n                          createAndDownloadPdf(user._id);\n                        }}\n                        className=\"rounded-lg m-1\"\n                      >\n                        Download\n                      </Button>\n                    </TableCell>\n\n                    <TableCell className=\"text-center \">\n                      <Button\n                        layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"Delete\"\n                        onClick={async () => {\n                          console.log(\"delete LST\");\n                          setIsDeleteModalOpen(true);\n                          setDeleteId(user._id);\n                          setDeleteNum(i);\n                        }}\n                      >\n                        <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                    </TableCell>\n\n                    <TableCell className=\"text-center \">\n                      <Button\n                        // layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"DropDown\"\n                        onClick={() => {\n                          console.log(activerowid);\n                          // if(activerowid==i){\n\n                          // setActiveRowID(-1);\n                          // }\n                          // else\n                          setActiveRowID(i);\n                        }}\n                        className=\"rounded-lg m-1\"\n                      >\n                        <DropdownIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n\n                  {activeRowID == i ? InvTable(user.invItems) : null}\n                </div>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n}\n\nexport default LSTHistory;\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../../backendapi\";\n\nexport default function CustomerSelection({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n  refresh,\n  setRefresh,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      //   setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      //   setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody>\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              setRefresh(!refresh);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}