{"version":3,"sources":["pages/Inventory/PurchaseHistory.js","components/Modal/AssetFilters/CustomerSelection.js","../../src/FileSaver.js"],"names":["PurchaseHistory","useContext","TopBarContext","setTopHeading","topheading","useState","page","setPage","data","setData","refresh","setRefresh","type","setType","stocktype","location","setLocation","ToLocation","condition","selectedprod","searchquery","setSearchQuery","vendorsearchquery","setVendorSearchQuery","totalResults","setTotalResults","activeRowID","setActiveRowID","useEffect","a","console","log","payload","pages","limit","filters","systype","axios","url","API","Emp","getId","method","response","out","total","className","class","value","onChange","e","target","disabled","selected","xmlns","viewBox","d","onSubmit","preventDefault","placeholder","onClick","map","user","i","_id","key","purchtype","vendor","invnumber","moment","invdate","format","invItems","length","size","aria-label","aria-hidden","items","name","sno","expirydate","resultsPerPage","label","p","CustomerSelection","isModalOpen","setIsModalOpen","unit","setUnit","account","setAccount","customer","setCustomer","theunitdetails","setTheUnitDetails","customers","setCustomers","accounts","setAccounts","units","setUnits","tabIndex","setTabIndex","search","setSearch","handleChange","handleSubmit","role","pickCustomer","customerName","accountName","unitName","Axios","post","customerId","accs","pickAccount","accountId","u","pickUnit","contactPerson","contactNo","isOpen","onClose","selectedIndex","onSelect","ind","status","MouseEvent","document","window","self","global","test","navigator","HTMLAnchorElement","b","setTimeout","f","autoBom","Blob","open","saveAs","module"],"mappings":"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","file":"static/js/47.48b5632f.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport { EditIcon, TrashIcon, DropdownIcon } from \"../../icons\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  Button,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport { API } from \"../../backendapi\";\nimport CustomerSelection from \"../../components/Modal/AssetFilters/CustomerSelection\";\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\nimport { Link } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n// import PrintLST from \"./PrintLST\";\n\nfunction PurchaseHistory() {\n  // table variable styles\n  // const [activerowid, setActiveRowId] = useState(0);\n\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const [floatbox, setFloatBox] = useState(false);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  // dropdown and modals\n\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [type, setType] = useState(\"\");\n  const [stocktype, setStocktype] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [ToLocation, setToLocation] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n  const [vendorsearchquery, setVendorSearchQuery] = useState(\"\");\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  const [activeRowID, setActiveRowID] = useState(-1);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Purchase History\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          systype: type,\n          location: location,\n          ////////////////\n          searchquery: searchquery,\n          vendorsearchquery: vendorsearchquery,\n          stocktype: stocktype,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/inventory/${Emp.getId()}/getallhistory`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, location, ToLocation, condition, type, refresh, stocktype]);\n\n  console.log(selectedprod);\n\n  // PDF Download Functions\n\n  const createAndDownloadPdf = async (id) => {\n    let payload = {\n      id: id,\n    };\n    let response = await axios({\n      url: `${API}/lst/${Emp.getId()}/downloadpdf`,\n      method: \"POST\",\n      data: payload,\n      responseType: \"blob\",\n    });\n\n    const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\n\n    saveAs(pdfBlob, \"LST.pdf\");\n  };\n\n  const InvTable = (items) => {\n    return (\n      <div className=\" bg-gray-200 dark:bg-gray-700 p-3 \">\n        <div className=\"mb- mt-4\">\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n          <TableContainer className=\"mt-4\">\n            <Table>\n              <TableHeader>\n                <tr>\n                  <TableCell>Category</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Serial Number</TableCell>\n                  <TableCell>Location</TableCell>\n                  <TableCell>Invoice Number</TableCell>\n                  <TableCell>Inv Date</TableCell>\n                  <TableCell>Wty Expiry</TableCell>\n                  <TableCell>Status</TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {items.map((user, i) => (\n                  <TableRow\n                    className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                      activeRowID == user._id\n                        ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                        : \"white\"\n                    } `}\n                    key={i}\n                    onClick={() => {\n                      setActiveRowID(user._id);\n                      // console.log(\"the id is \" + user._id);\n                      // setSelectedProd(user);\n                      // setAssetDetails(user);\n                      // console.log(user.product.keyboard[0].keyboardname);\n                    }}\n                  >\n                    <TableCell className=\"w-8\">\n                      <div className=\"flex items-center text-sm \">\n                        {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                        <div>\n                          <p className=\"font-semibold\">{user.type}</p>\n                          {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p> */}\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.name}</span>\n                    </TableCell>\n\n                    <TableCell>\n                      <span className=\"text-sm\">{user.sno}</span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.location}</span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.invnumber}</span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">\n                        {moment(user.invdate).format(\"DD/MM/YY\")}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      {/* <span className=\"text-sm\">{moment(user.expirydate).format(\"DD/MM/YY\")}</span> */}\n                      <span className=\"text-sm\">{user.expirydate}</span>\n                    </TableCell>\n\n                    <TableCell>\n                      <Badge\n                        type={user.condition == \"Good\" ? \"primary\" : \"danger\"}\n                      >\n                        {user.condition}\n                      </Badge>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n        </div>\n\n        {/* ------------------------------------Bottom Bar---------------------------------- */}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"mb-64 mt-4\">\n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-2 \">\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={type}\n                onChange={(e) => {\n                  setType(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Type\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"item\">Item</option>\n                <option value=\"full system\">Full System</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* -----------------------------------------Location ----------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={location}\n                onChange={(e) => {\n                  setLocation(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Location\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search Invoice Number\"\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={vendorsearchquery}\n                  onChange={(e) => setVendorSearchQuery(e.target.value)}\n                  placeholder=\"Search Vendor\"\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr className=\"flex flex-row justify-between\">\n                <TableCell> Type</TableCell>\n                <TableCell>Vendor</TableCell>\n                <TableCell>Inventory No.</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Location</TableCell>\n                <TableCell>No.Items</TableCell>\n\n                <TableCell>\n                  <span\n                    className=\"cursor-pointer\"\n                    onClick={() => setActiveRowID(-1)}\n                  >\n                    Items\n                  </span>\n                </TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <div className=\"flex flex-col justify-around\">\n                  <TableRow\n                    className={`hover:shadow-lg dark:hover:bg-gray-600 flex flex-row justify-between  ${\n                      activeRowID == user._id\n                        ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                        : \"white\"\n                    } `}\n                    key={i}\n                    onClick={() => {\n                      setActiveRowID(i);\n                      // console.log(\"the id is \" + user._id);\n                      // setSelectedProd(user);\n                      // setAssetDetails(user);\n                      // console.log(user.product.keyboard[0].keyboardname);\n                    }}\n                  >\n                    <TableCell className=\"w-8\">\n                      <div className=\"flex items-center text-sm \">\n                        <div>\n                          <p className=\"font-semibold\">{user.purchtype}</p>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.vendor}</span>\n                    </TableCell>\n\n                    <TableCell>\n                      <span className=\"text-sm\">{user.invnumber}</span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">\n                        {\" \"}\n                        {moment(user.invdate).format(\"DD/MM/YYYY\")}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.location}</span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.invItems.length}</span>\n                    </TableCell>\n                    {/* <TableCell>\n                    <Badge>\n                      condition\n                    </Badge>\n                  </TableCell> */}\n\n                    <TableCell className=\"text-center \">\n                      <Button\n                        // layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"DropDown\"\n                        onClick={\n                          () => {\n                            console.log(activeRowID);\n                            if (activeRowID == i) {\n                              setActiveRowID(-1);\n                            } else setActiveRowID(i);\n                          }\n                          // console.log(ac)\n                        }\n                        className=\"rounded-lg m-1\"\n                      >\n                        <DropdownIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n\n                  {activeRowID == i ? InvTable(user.invItems) : null}\n                </div>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n}\n\nexport default PurchaseHistory;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../../backendapi\";\n\nexport default function CustomerSelection({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n  refresh,\n  setRefresh,\n  theunitdetails,\n  setTheUnitDetails,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      //   setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      //   setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(\"-------------piking unit\");\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      contactPerson: unit.contactPerson,\n      contactNo: unit.contactNo,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody className=\"overflow-y-scroll h-64\"  >\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n          \n        </ModalBody>\n        <ModalFooter>\n        <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              setRefresh(!refresh);\n              if (theunitdetails) {\n                setTheUnitDetails(unit);\n              }\n              setAccounts([]);\n              setUnits([]);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"sourceRoot":""}