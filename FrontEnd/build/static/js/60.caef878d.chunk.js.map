{"version":3,"sources":["pages/Attendance/ViewAttendance.js"],"names":["ViewAttendance","useHistory","setTopHeading","useContext","TopBarContext","useState","moment","format","themonth","setThemonth","theyear","setTheyear","data","setData","setTotalResults","isModalOpen","setIsModalOpen","today","attendDetails","setAttendDetails","showDate","setShowDate","tempstatus","setTempStatus","useEffect","a","console","log","payload","pages","page","limit","filters","month","year","axios","url","API","Emp","getId","method","response","out","total","updateAttend","map","user","employee","days","day","parseInt","dayNo","isPresent","closeModal","isOpen","onClose","className","date","class","value","onChange","e","target","disabled","selected","xmlns","viewBox","d","layout","onClick","block","size","clearIcon","maxDetail","icon","TickIcon","aria-label","employeeName","tempattend","PresentSquare","AbsentSquare","LeaveSquare"],"mappings":"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","file":"static/js/60.caef878d.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../backendapi\";\nimport DatePicker from \"react-date-picker\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\n\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from \"@windmill/react-ui\";\n\nimport { TopBarContext } from \"../../context/TopBarContext\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport moment from \"moment\";\nimport { TickIcon } from \"../../icons\";\n\nfunction ViewAttendance() {\n  let history = useHistory();\n  const { setTopHeading } = useContext(TopBarContext);\n  // const [emparray, setEmparray] = useState([]);\n  const [themonth, setThemonth] = useState(moment().format(\"MMMM\"));\n  const [theyear, setTheyear] = useState(moment().format(\"YYYY\"));\n  const [data, setData] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [attendDetails, setAttendDetails] = useState({ today: {} });\n\n  // ---------------imp states --------------\n  const [showDate, setShowDate] = useState(false);\n  const [tempstatus, setTempStatus] = useState(\"\");\n\n  // ----------------------Heading Use Effect-------------\n\n  useEffect(() => {\n    setTopHeading(\"View Attendance\");\n    // let tempcnt = 1;\n    // for (let i = 0; i < 20; i++) {\n    //   tempcnt++;\n    //   let temp = { isPresent: true, date: tempcnt };\n    //   emparray.push(temp);\n    // }\n    // for (let i = 0; i < 10; i++) {\n    //   let temp = { isPresent: false };\n    //   emparray.push(temp);\n    // }\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  //  data pull useeffect\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: 1,\n          limit: 20,\n        },\n        filters: {\n          month: themonth,\n          year: theyear,\n        },\n      };\n      try {\n        let response = await axios({\n          url: `${API}/attendance/${Emp.getId()}/viewAttendance`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(response.data.out);\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [themonth, theyear]);\n\n  const updateAttend = async () => {\n    console.log(attendDetails);\n    console.log(tempstatus);\n    console.log(data);\n\n    // Local Change\n    data.map(async (user) => {\n      if (user.employee == attendDetails.employee) {\n        await user.days.map((day) => {\n          if (parseInt(day.dayNo) == parseInt(attendDetails.today.dayNo)) {\n            day.isPresent = tempstatus;\n            // break;-----need a break here;\n          }\n        });\n        // -------updating the cloud--------\n        try {\n          let response = await axios({\n            url: `${API}/attendance/${Emp.getId()}/updateAttendance`,\n            method: \"POST\",\n            data: user,\n          });\n          console.log(response.data);\n          // setTotalResults(response.data.total);\n          // const { total, data } = response.data;\n          // console.log(response.data.out);\n\n          // setData(response.data.out);\n        } catch (error) {\n          throw error;\n        }\n      }\n    });\n  };\n  // Modal Functions\n\n  function openModal() {\n    setIsModalOpen(true);\n  }\n\n  function closeModal() {\n    setIsModalOpen(false);\n  }\n\n  // ------------------------------\n\n  const TheModal = () => {\n    return (\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\n        <ModalHeader className=\"flex flex-row justify-between \">\n          <div className=\"text-xl\">Attendance Details</div>\n          <div className=\"text-base\">\n            Date:{\" \"}\n            <Badge>\n              {moment(attendDetails.today.date).format(\"DD-MM-YYYY\")}\n            </Badge>{\" \"}\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          <hr></hr>\n          <div className=\"flex flex-row items-center justify-start w-full space-x-2\">\n            <div className=\"mt-4 text-base font-semibold\">Edit Status: </div>\n            <div class=\"relative  mt-2 w-3/4 \">\n              <select\n                class=\" shadow-md rounded-md text-sm border block appearance-none w-full bg-white border-gray-400 text-gray-700 pl-1 leading-tight focus:outline-none py-2   focus:bg-white focus:border-gray-500\"\n                value={tempstatus}\n                onChange={(e) => {\n                  setTempStatus(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Not Marked Yet\n                </option>\n                <option value=\"Present\">Present</option>\n                <option value=\"Absent\">Absent</option>\n                <option value=\"Leave\">Leave</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>{\" \"}\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <div className=\"hidden sm:block\">\n            <Button layout=\"outline\" onClick={closeModal}>\n              Cancel\n            </Button>\n          </div>\n          <div className=\"hidden sm:block\">\n            <Button\n              onClick={async () => {\n                await updateAttend();\n                closeModal();\n              }}\n            >\n              Accept\n            </Button>\n          </div>\n          <div className=\"block w-full sm:hidden\">\n            <Button block size=\"large\" layout=\"outline\" onClick={closeModal}>\n              Cancel\n            </Button>\n          </div>\n          <div className=\"block w-full sm:hidden\">\n            <Button block size=\"large\">\n              Accept\n            </Button>\n          </div>\n        </ModalFooter>\n      </Modal>\n    );\n  };\n\n  const PresentSquare = (dayNo) => {\n    return (\n      <>\n        <div className=\" relative w-5 h-5 bg-green-400 border-gray-600 border hover:border-black hover:bg-green-500 rounded-sm text-xs text-white flex justify-center items-center\">\n          {showDate ? <div>{dayNo}</div> : null}\n        </div>\n      </>\n    );\n  };\n  const AbsentSquare = (dayNo) => {\n    return (\n      <>\n        <div className=\"w-5 h-5 bg-red-500 border-gray-600 border hover:border-black hover:bg-red-800 rounded-sm text-xs text-white flex justify-center items-center\">\n          {showDate ? <div>{dayNo}</div> : null}\n        </div>\n      </>\n    );\n  };\n  const LeaveSquare = (dayNo) => {\n    return (\n      <>\n        <div className=\"w-5 h-5 bg-blue-500 border-blue-600 border hover:border-black hover:bg-red-800 rounded-sm text-xs text-white flex justify-center items-center\">\n          {showDate ? <div>{dayNo}</div> : null}\n        </div>\n      </>\n    );\n  };\n  const GraySquare = (dayNo) => {\n    return (\n      <>\n        <div className=\"w-5 h-5 bg-gray-200 border-gray-600 border hover:border-black hover:bg-red-800 rounded-sm text-xs text-black flex justify-center items-center\">\n          {showDate ? <div>{dayNo}</div> : null}\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <>\n      {TheModal()}\n\n      <Card className=\"mt-4 shadow-md  overflow-x-auto\">\n        <CardBody>\n          <div className=\" \">\n            {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n            <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-2 relative \">\n              <div class=\"relative mx-1 \">\n                <select\n                  class=\" text-sm border block appearance-none w-full bg-white border-gray-400 text-gray-700 pl-1 leading-tight focus:outline-none py-1   focus:bg-white focus:border-gray-500\"\n                  value={themonth}\n                  onChange={(e) => {\n                    setThemonth(e.target.value);\n                  }}\n                >\n                  <option value=\"\" disabled selected>\n                    Select the Month\n                  </option>\n                  <option value=\"January\">January</option>\n                  <option value=\"February\">February</option>\n                  <option value=\"March\">March</option>\n                  <option value=\"April\">March</option>\n                  <option value=\"May\">May</option>\n                  <option value=\"June\">June</option>\n                  <option value=\"July\">July</option>\n                  <option value=\"August\">August</option>\n                  <option value=\"September\">September</option>\n                  <option value=\"October\">October</option>\n                  <option value=\"November\">November</option>\n                  <option value=\"December\">December</option>\n                </select>\n\n                <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                  <svg\n                    class=\"fill-current h-4 w-4\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 20 20\"\n                  >\n                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                  </svg>\n                </div>\n              </div>\n              <DatePicker\n                className=\"bg-white z-20\"\n                clearIcon={null}\n                onChange={(date) => {\n                  console.log(moment(date).format(\"YYYY\"));\n                  setTheyear(moment(date).format(\"YYYY\"));\n                  // console.log(date);\n                }}\n                value={theyear}\n                format=\"y\"\n                maxDetail=\"decade\"\n              />\n              <div className=\"flex flex-row items-center justify-center space-x-2 absolute right-0 \">\n                <div className=\"text-sm\">Show Dates:</div>\n                <Button\n                  className={\n                    showDate == true\n                      ? `bg-yellow-300 rounded-full w-2 h-2`\n                      : `bg-white w-2 h-2 rounded-full`\n                  }\n                  icon={TickIcon}\n                  onClick={() => {\n                    setShowDate(!showDate);\n                  }}\n                  layout=\"outline\"\n                  aria-label=\"Like\"\n                />\n              </div>\n            </div>\n          </div>\n        </CardBody>\n      </Card>\n      <Card className=\"my-4 shadow-md  overflow-x-auto\">\n        <CardBody>\n          {data.map((user) => {\n            return (\n              <div className=\"flex flex-row justify-left items-center\">\n                <div className=\"mx-4 dark:text-white\">{user.employeeName}:</div>\n                <div className=\"flex flex-row items-center justify-center\">\n                  {\" \"}\n                  {user.days.map((day) => {\n                    if (\n                      parseInt(day.dayNo) > moment().format(\"DD\") &&\n                      day.isPresent == \"Absent\"\n                    ) {\n                      return (\n                        <div\n                          onClick={() => {\n                            console.log(day, moment().format(\"DD\"));\n                            setIsModalOpen(true);\n                            let tempattend = {\n                              employee: user.employee,\n                              month: user.month,\n                              employeeName: user.employeeName,\n                              year: user.year,\n                              today: day,\n                            };\n                            setAttendDetails(tempattend);\n                            setTempStatus(\"\");\n                          }}\n                          className=\"m-2\"\n                        >\n                          {GraySquare(day.dayNo)}\n                        </div>\n                      );\n                    } else if (day.isPresent == \"Present\") {\n                      return (\n                        <div\n                          onClick={() => {\n                            setIsModalOpen(true);\n\n                            let tempattend = {\n                              employee: user.employee,\n                              month: user.month,\n                              employeeName: user.employeeName,\n                              year: user.year,\n                              today: day,\n                            };\n\n                            setAttendDetails(tempattend);\n                            setTempStatus(\"Present\");\n                            console.log(attendDetails);\n                          }}\n                          className=\"m-2\"\n                        >\n                          {PresentSquare(day.dayNo)}\n                        </div>\n                      );\n                    } else if (day.isPresent == \"Absent\") {\n                      return (\n                        <div\n                          onClick={() => {\n                            setIsModalOpen(true);\n                            let tempattend = {\n                              employee: user.employee,\n                              month: user.month,\n                              employeeName: user.employeeName,\n                              year: user.year,\n                              today: day,\n                            };\n                            setAttendDetails(tempattend);\n                            setTempStatus(\"Absent\");\n                          }}\n                          className=\"m-2\"\n                        >\n                          {AbsentSquare(day.dayNo)}\n                        </div>\n                      );\n                    } else if (day.isPresent == \"Leave\") {\n                      return (\n                        <div\n                          onClick={() => {\n                            setIsModalOpen(true);\n                            let tempattend = {\n                              employee: user.employee,\n                              month: user.month,\n                              employeeName: user.employeeName,\n                              year: user.year,\n                              today: day,\n                            };\n                            setAttendDetails(tempattend);\n                            setTempStatus(\"Leave\");\n                          }}\n                          className=\"m-2\"\n                        >\n                          {LeaveSquare(day.dayNo)}\n                        </div>\n                      );\n                    }\n                  })}\n                </div>\n              </div>\n            );\n          })}\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default ViewAttendance;\n"],"sourceRoot":""}