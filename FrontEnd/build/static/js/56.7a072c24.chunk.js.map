{"version":3,"sources":["pages/LST/LSTHistory.js","../../src/FileSaver.js"],"names":["LSTHistory","useState","isDeleteModalOpen","setIsDeleteModalOpen","deleteId","setDeleteId","deleteNum","setDeleteNum","isDownloadModalOpen","setisDownloadModalOpen","downloadLST","setDownloadLST","downloadNum","setDownloadNum","useContext","TopBarContext","setTopHeading","topheading","page","setPage","CMRRItems","data","setData","refresh","setRefresh","status","setstatus","location","setLocation","ToLocation","setToLocation","condition","LSTtype","setLSTtype","selectedprod","searchquery","setSearchQuery","totalResults","setTotalResults","activeRowID","setActiveRowID","useEffect","a","console","log","payload","pages","limit","filters","from","to","isDeleted","axios","url","API","Emp","getId","method","response","out","total","createAndDownloadPdf","id","LSTno","CourierNumber","DocketType","update","despatchedBy","getName","responseType","pdfBlob","Blob","type","saveAs","isOpen","onClose","className","onClick","invs","invItems","map","item","_id","temp","filter","x","value","onChange","e","target","class","LSTNo","disabled","selected","xmlns","viewBox","d","onSubmit","preventDefault","placeholder","EmpProfile","getRole","user","i","key","vendorId","vendorName","moment","date","format","length","layout","aria-label","size","aria-hidden","items","Customer","capitalize","name","sno","invnumber","InvTable","customerName","resultsPerPage","label","p","MouseEvent","document","window","self","global","test","navigator","HTMLAnchorElement","b","setTimeout","f","autoBom","open","module"],"mappings":"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","file":"static/js/56.7a072c24.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport { TrashIcon, DropdownIcon, EditIcon } from \"../../icons\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  Button,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\n\nimport { API } from \"../../backendapi\";\n\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport EmpProfile from \"../../helpers/auth/EmpProfile\";\nimport { capitalize } from \"../../helpers/toolfuctions/toolfunctions\";\nimport { Link } from \"react-router-dom\";\n\n// import PrintLST from \"./PrintLST\";\n\nfunction LSTHistory() {\n  // table variable styles\n  // const [activerowid, setActiveRowId] = useState(0);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [deleteId, setDeleteId] = useState(0);\n  const [deleteNum, setDeleteNum] = useState(-1);\n\n  const [isDownloadModalOpen, setisDownloadModalOpen] = useState(false);\n  const [downloadLST, setDownloadLST] = useState({});\n  const [downloadNum, setDownloadNum] = useState(0);\n\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const [floatbox, setFloatBox] = useState(false);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([{ CMRRItems: [] }]);\n  // dropdown and modals\n\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [status, setstatus] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [ToLocation, setToLocation] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n  const [LSTtype, setLSTtype] = useState(\"Normal\");\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  const [activeRowID, setActiveRowID] = useState(-1);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"LST History\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          // type: type,\n          from: location,\n          to: ToLocation,\n          status: status,\n          LSTtype: LSTtype,\n          isDeleted: \"false\",\n          // searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      if (status == \"Deleted\") {\n        payload.filters.status = \"\";\n        payload.filters.isDeleted = \"true\";\n      }\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/lst/${Emp.getId()}/getall`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, location, ToLocation, condition, status, refresh, LSTtype]);\n\n  console.log(selectedprod);\n  // DElete Modal\n\n  const DeleteModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isDeleteModalOpen}\n          onClose={() => setIsDeleteModalOpen(false)}\n        >\n          <ModalHeader>Are you sure you want to delete!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                let invs = data[deleteNum].invItems;\n                console.log(invs);\n                invs.map(async (item) => {\n                  const payload = {\n                    id: item._id,\n                    update: {\n                      location: data[deleteNum].from,\n                    },\n                  };\n                  console.log(\"PAYLOAD\", payload);\n                  try {\n                    await axios({\n                      url: `${API}/inventory/${Emp.getId()}/invupdate`,\n                      method: \"POST\",\n                      data: payload,\n                    });\n                    // setIsReviewModalOpen(true);\n                    console.log(\"Done\");\n                  } catch (error) {\n                    console.log(error);\n                    throw error;\n                  }\n                });\n                try {\n                  let response = await axios({\n                    url: `${API}/lst/${Emp.getId()}/delete`,\n                    method: \"POST\",\n                    data: { id: deleteId },\n                  });\n                  console.log(response.data);\n                  let temp = data.filter((x) => x._id != deleteId);\n                  setData(temp);\n                  setIsDeleteModalOpen(false);\n\n                  // setData(response.data);\n                } catch (error) {\n                  throw error;\n                }\n              }}\n            >\n              Confirm Delete\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const DownloadModal = () => {\n    console.log(downloadLST);\n    return (\n      <>\n        <Modal\n          isOpen={isDownloadModalOpen}\n          onClose={() => setisDownloadModalOpen(false)}\n        >\n          <ModalHeader>Download LST</ModalHeader>\n          <ModalBody>\n            {data[downloadNum] ? (\n              <>\n                <div className=\"flex flex-row\">\n                  <div className=\" my-2 ml-5 mr-2 w-full\">Docket Type:</div>\n                  <input\n                    value={data[downloadNum].DocketType}\n                    onChange={(e) => {\n                      let temp = [...data];\n                      temp[downloadNum].DocketType = e.target.value;\n                      // console.log( temp[downloadNum].DocketType)\n                      setData(temp);\n                    }}\n                    class=\"w-full mr-5 shadow-md z-20 appearance-none rounded border border-gray-400 border-b block py-1  bg-white text-sm  text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                  />\n                </div>\n\n                <div className=\"flex flex-row my-2\">\n                  <div className=\"my-2 ml-5 mr-2 w-full\">Courier Number:</div>\n                  <input\n                    value={data[downloadNum].CourierNumber}\n                    onChange={(e) => {\n                      let temp = [...data];\n                      temp[downloadNum].CourierNumber = e.target.value;\n                      // console.log( temp[downloadNum].CourierNumber)\n                      setData(temp);\n                    }}\n                    class=\"w-full mr-5  shadow-md z-20 appearance-none rounded border border-gray-400 border-b block py-1  bg-white text-sm  text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                  />\n                </div>\n              </>\n            ) : null}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                createAndDownloadPdf(\n                  data[downloadNum]._id,\n                  data[downloadNum].LSTNo,\n                  data[downloadNum].CourierNumber,\n                  data[downloadNum].DocketType\n                );\n              }}\n            >\n              Download\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  // PDF Download Functions\n\n  const createAndDownloadPdf = async (id, LSTno, CourierNumber, DocketType) => {\n    let payload = {\n      id: id,\n      update: {\n        CourierNumber,\n        DocketType,\n      },\n      despatchedBy: Emp.getName(),\n    };\n    let response = await axios({\n      url: `${API}/lst/${Emp.getId()}/downloadpdf`,\n      method: \"POST\",\n      data: payload,\n      responseType: \"blob\",\n    });\n\n    const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\n    setisDownloadModalOpen(false);\n    saveAs(pdfBlob, `LST_${LSTno}.pdf`);\n  };\n\n  const InvTable = (items, Customer, LSTtype, CMRRItems) => {\n    return (\n      <div className=\" bg-gray-200 dark:bg-gray-700 p-3\">\n        {LSTtype == \"Customer\" ? <div>Customer:{Customer}</div> : null}\n        <div className=\"mb- mt-4\">\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n          <TableContainer className=\"mt-4\">\n            <Table>\n              <TableHeader>\n                <tr>\n                  <TableCell>Type</TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Serial Number</TableCell>\n                  <TableCell>Location</TableCell>\n                  <TableCell>Inv Number</TableCell>\n                  <TableCell>Condition</TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {LSTtype == \"Normal\" || LSTtype == \"Customer\" ? (\n                  <>\n                    {items.map((user, i) => (\n                      <TableRow\n                        className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                          activeRowID == user._id\n                            ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                            : \"white\"\n                        } `}\n                        key={i}\n                        onClick={() => {\n                          setActiveRowID(user._id);\n                          // console.log(\"the id is \" + user._id);\n                          // setSelectedProd(user);\n                          // setAssetDetails(user);\n                          // console.log(user.product.keyboard[0].keyboardname);\n                        }}\n                      >\n                        <TableCell className=\"w-8\">\n                          <div className=\"flex items-center text-sm \">\n                            {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                            <div>\n                              <p className=\"font-semibold\">\n                                {capitalize(user.type)}\n                              </p>\n                              {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p> */}\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.name}</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">{user.sno}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.location}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.invnumber}</span>\n                        </TableCell>\n                        <TableCell>\n                          <Badge\n                            type={\n                              user.condition == \"Good\" ? \"primary\" : \"danger\"\n                            }\n                          >\n                            {user.condition}\n                          </Badge>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </>\n                ) : (\n                  <>\n                    {CMRRItems.map((user, i) => (\n                      <TableRow\n                        className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                          activeRowID == user._id\n                            ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                            : \"white\"\n                        } `}\n                        key={i}\n                        onClick={() => {\n                          setActiveRowID(user._id);\n                          // console.log(\"the id is \" + user._id);\n                          // setSelectedProd(user);\n                          // setAssetDetails(user);\n                          // console.log(user.product.keyboard[0].keyboardname);\n                        }}\n                      >\n                        <TableCell className=\"w-8\">\n                          <div className=\"flex items-center text-sm \">\n                            {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                            <div>\n                              <p className=\"font-semibold\">\n                                {capitalize(user.type)}\n                              </p>\n                              {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p> */}\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.name}</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">{user.sno}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.location}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.invnumber}</span>\n                        </TableCell>\n                        <TableCell>\n                          <Badge\n                            type={\n                              user.condition == \"Good\" ? \"primary\" : \"danger\"\n                            }\n                          >\n                            {user.condition}\n                          </Badge>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n        </div>\n\n        {/* ------------------------------------Bottom Bar---------------------------------- */}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {DeleteModal()}\n      {DownloadModal()}\n      <div className=\"mb-64 mt-4\">\n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-2 \">\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={status}\n                onChange={(e) => {\n                  setstatus(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Status\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"In Transit\">In Transit</option>\n                <option value=\"Received\">Received</option>\n                <option value=\"Deleted\">Deleted</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={LSTtype}\n                onChange={(e) => {\n                  setLSTtype(e.target.value);\n                }}\n              >\n                <option value=\"\" selected>\n                  LST type\n                </option>\n                <option value=\"Normal\">Normal</option>\n                <option value=\"CMRR\">CMRR</option>\n                <option value=\"Customer\">Customer</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* -----------------------------------------Location ----------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={location}\n                onChange={(e) => {\n                  setLocation(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  From Location\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* -----------------------------------------Location ----------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={ToLocation}\n                onChange={(e) => {\n                  setToLocation(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  To Location\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n                <option value=\"Vendor\">Vendor</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* ---------------------------Condition Drop Down-------------------------------------- */}\n            {/* <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={condition}\n                onChange={(e) => {\n                  setCondition(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Condition\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Good\">Good</option>\n                <option value=\"Bad\">Bad</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div> */}\n\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search LST Number\"\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr className=\"\">\n                <TableCell>No</TableCell>\n                <TableCell>From</TableCell>\n                <TableCell>To</TableCell>\n                <TableCell>\n                  <span className=\"\">Date</span>{\" \"}\n                </TableCell>\n                <TableCell>\n                  <span className=\"\">Num</span>{\" \"}\n                </TableCell>\n                {/* <TableCell>Status</TableCell> */}\n\n                <TableCell> Report</TableCell>\n                {EmpProfile.getRole() == 0 ? (\n                  <TableCell> Delete</TableCell>\n                ) : null}\n                <TableCell>\n                  <span\n                    className=\"cursor-pointer\"\n                    onClick={() => setActiveRowID(-1)}\n                  >\n                    Items\n                  </span>\n                </TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <>\n                  {/* <div className=\"flex flex-col justify-around\"> */}\n                  <TableRow\n                    className={`hover:shadow-lg dark:hover:bg-gray-600   ${\n                      activeRowID == user._id\n                        ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                        : \"white\"\n                    } `}\n                    key={i}\n                    onClick={() => {\n                      // setActiveRowID(i);\n                      // console.log(\"the id is \" + user._id);\n                      // setSelectedProd(user);\n                      // setAssetDetails(user);\n                      // console.log(user.product.keyboard[0].keyboardname);\n                    }}\n                  >\n                    <TableCell className=\"w-8\">\n                      <div className=\"flex items-center text-sm \">\n                        <div>\n                          <p className=\"font-semibold\">{user.LSTNo}</p>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell className=\"\">\n                      <span className=\" \">{user.from}</span>\n                    </TableCell>\n\n                    <TableCell className=\"  \">\n                      <span className=\"  \">\n                        {user.vendorId ? user.vendorName : user.to}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">\n                        {\" \"}\n                        {moment(user.date).format(\"DD/MM/YYYY\")}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">\n                        {user.LSTtype == \"Normal\" || user.LSTtype == \"Customer\"\n                          ? user.invItems.length\n                          : user.CMRRItems.length}\n                      </span>\n                    </TableCell>\n\n                    <TableCell className=\" \">\n                      <Button\n                        layout=\"outline\"\n                        aria-label=\"DropDown\"\n                        onClick={() => {\n                          console.log(\"dwlod\");\n                          // createAndDownloadPdf(user._id, user.LSTNo);\n                          setDownloadLST(user);\n                          setisDownloadModalOpen(true);\n                          setDownloadNum(i);\n                        }}\n                        className=\"rounded-lg m-1\"\n                      >\n                        Download\n                      </Button>\n                    </TableCell>\n                    {EmpProfile.getRole() == 0 || EmpProfile.getRole() == 15 ? (\n                      <TableCell className=\" \">\n                        <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                          <Link\n                            key={user._id}\n                            to={`/app/lst/update/${user._id}`}\n                          >\n                            <EditIcon\n                              className=\"w-5 h-5 mx-2\"\n                              aria-hidden=\"true\"\n                            />\n                          </Link>{\" \"}\n                        </Button>\n                        <Button\n                          layout=\"link\"\n                          size=\"icon\"\n                          aria-label=\"Delete\"\n                          onClick={async () => {\n                            console.log(\"delete LST\");\n                            setIsDeleteModalOpen(true);\n                            setDeleteId(user._id);\n                            setDeleteNum(i);\n                          }}\n                        >\n                          <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                        </Button>\n                      </TableCell>\n                    ) : null}\n\n                    <TableCell className=\" \">\n                      <Button\n                        // layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"DropDown\"\n                        onClick={() => {\n                          console.log(activeRowID);\n                          if (activeRowID != -1) {\n                            setActiveRowID(-1);\n                          } else setActiveRowID(i);\n                        }}\n                        className=\"rounded-lg m-1\"\n                      >\n                        <DropdownIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n\n                  <TableRow\n                    className={`hover:shadow-lg dark:hover:bg-gray-600 relative   ${\n                      activeRowID == user._id\n                        ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                        : \"white\"\n                    } `}\n                    key={i}\n                    onClick={() => {\n                      // setActiveRowID(i);\n                      // console.log(\"the id is \" + user._id);\n                      // setSelectedProd(user);\n                      // setAssetDetails(user);\n                      // console.log(user.product.keyboard[0].keyboardname);\n                    }}\n                  >\n                    <TableCell className=\"absolute w-full m-0\">\n                      {activeRowID == i\n                        ? InvTable(\n                            user.invItems,\n                            user.customerName,\n                            user.LSTtype,\n                            user.CMRRItems\n                          )\n                        : null}\n                    </TableCell>\n                  </TableRow>\n                  {/* </div> */}\n                </>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n}\n\nexport default LSTHistory;\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"sourceRoot":""}