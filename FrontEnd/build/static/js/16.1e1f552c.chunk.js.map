{"version":3,"sources":["pages/Assets/CreateAsset.js"],"names":["CreateAsset","useContext","BottomBarContext","setBBarOpen","bbaropen","setCreateAssetDetails","createAssetDetails","TopBarContext","setTopHeading","topheading","useState","isReviewModalOpen","setIsReviewModalOpen","isErrModalOpen","setIsErrModalOpen","reqFieldErrModal","setReqFieldErrModal","_id","unitName","unit","setUnit","customerName","customer","setCustomer","accountName","account","setAccount","brand","setBrand","model","setModel","serialno","setSerialNo","os","setOs","cpuname","cpusno","cpu","setCpu","ramname","ramsno","ram","setram","hddname","hddsno","hdd","sethdd","smpsname","smpssno","smps","setsmps","fanname","fansno","fan","setfan","motherboardname","motherboardsno","motherboard","setmotherboard","opticaldrivename","opticaldrivesno","opticaldrive","setopticaldrive","keyboardname","keyboardsno","kbd","setkbd","mousename","mousesno","mouse","setmouse","monitorname","monitorsno","monitor","setmonitor","gcardname","gcardsno","gcard","setgcard","enetcardname","enetcardsno","enetcard","setenetcard","serialcardname","serialcardsno","serialcard","setserialcard","parallelcardname","parallelcardsno","parallelcard","setparallelcard","hbacardname","hbacardsno","hbacard","sethbacard","raidcontrollername","raidcontrollersno","raidcontroller","setraidcontroller","tapecontrollername","tapecontrollersno","tapecontroller","settapecontroller","othersname","otherssno","others","setothers","Business","setBusiness","POnumber","setPOnumber","POdate","setPOdate","ContractFrom","setContractFrom","ContractTo","setContractTo","BillingFrom","setBillingFrom","BillingTo","setBillingTo","AMCRate","setAMCRate","GST","setGST","GSTAMOUNT","setGSTAMOUNT","NetAmount","setNetAmount","servicelocation","setServiceLocation","product","setProduct","isModalOpen","setIsModalOpen","useEffect","handleSubmit","a","payload","asset","business","producttype","ponumber","podate","contractfrom","contractto","billingfrom","billingto","amcrate","gstperc","gstamount","netamount","unitId","accountId","customerId","keyboard","console","log","axios","url","API","Emp","getId","method","data","total","parseInt","isOpen","setIsOpen","toggleDropdown","dropdown","className","onClick","aria-label","aria-haspopup","onClose","clearState","clearAssetState","onChange","e","target","value","selected","disabled","name","type","toFixed","onSubmit","preventDefault","placeholder","newcpu","push","icon","Add","layout","pop","Remove","map","item","i","key","newlist","newram","newfan","newmotherboard","newhdd","newsmps","newkbd","newmouse","newmonitor","newgcard","newenetcard","newserialcard","newparallelcard","newhbacard","newraidcontroller","newtapecontroller","newopticaldrive","newothers"],"mappings":"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","file":"static/js/16.1e1f552c.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, useMemo } from \"react\";\nimport axios from \"axios\";\nimport AsyncSelect from \"react-select/async\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Select,\n  Textarea,\n  Button,\n  Dropdown,\n  DropdownItem,\n  Badge,\n} from \"@windmill/react-ui\";\n\nimport { MailIcon, Add, Remove, HeartIcon } from \"../../icons\";\nimport Axios from \"axios\";\nimport { data } from \"autoprefixer\";\nimport UnitListModal from \"../../components/Modal/UnitListModal\";\nimport CreateAssetFloat from \"../../components/FloatDetails/CreateAssetFloat\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\n// Migration\nimport { handleMigration } from \"../../migration/migration\";\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n\nfunction CreateAsset() {\n  /////BOTOM BAT STUFFF\n  const {\n    bbaropen,\n    setBBarOpen,\n    setCreateAssetDetails,\n    createAssetDetails,\n  } = useContext(BottomBarContext);\n  // TopBar Stuff\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  // floatbox\n  const [floatbox, setFloatBox] = useState(false);\n  //ReviewModal\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [isErrModalOpen, setIsErrModalOpen] = useState(false);\n  const [reqFieldErrModal, setReqFieldErrModal] = useState(false);\n\n  //customer\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n  //prodcut\n  const [brand, setBrand] = useState(\"Lenovo\");\n  const [model, setModel] = useState(\"123\");\n  const [serialno, setSerialNo] = useState(\"213132\");\n  const [os, setOs] = useState(\"\");\n  const [cpu, setCpu] = useState([{ cpuname: \"\", cpusno: \"\" }]);\n  const [ram, setram] = useState([{ ramname: \"\", ramsno: \"\" }]);\n  const [hdd, sethdd] = useState([{ hddname: \"\", hddsno: \"\" }]);\n  const [smps, setsmps] = useState([{ smpsname: \"\", smpssno: \"\" }]);\n  const [fan, setfan] = useState([{ fanname: \"\", fansno: \"\" }]);\n  const [motherboard, setmotherboard] = useState([\n    { motherboardname: \"\", motherboardsno: \"\" },\n  ]);\n  const [opticaldrive, setopticaldrive] = useState([\n    { opticaldrivename: \"\", opticaldrivesno: \"\" },\n  ]);\n  const [kbd, setkbd] = useState([{ keyboardname: \"\", keyboardsno: \"\" }]);\n  const [mouse, setmouse] = useState([{ mousename: \"\", mousesno: \"\" }]);\n  const [monitor, setmonitor] = useState([{ monitorname: \"\", monitorsno: \"\" }]);\n  const [gcard, setgcard] = useState([{ gcardname: \"\", gcardsno: \"\" }]);\n  const [enetcard, setenetcard] = useState([\n    { enetcardname: \"\", enetcardsno: \"\" },\n  ]);\n  const [serialcard, setserialcard] = useState([\n    { serialcardname: \"\", serialcardsno: \"\" },\n  ]);\n  const [parallelcard, setparallelcard] = useState([\n    { parallelcardname: \"\", parallelcardsno: \"\" },\n  ]);\n  const [hbacard, sethbacard] = useState([{ hbacardname: \"\", hbacardsno: \"\" }]);\n  const [raidcontroller, setraidcontroller] = useState([\n    { raidcontrollername: \"\", raidcontrollersno: \"\" },\n  ]);\n  const [tapecontroller, settapecontroller] = useState([\n    { tapecontrollername: \"\", tapecontrollersno: \"\" },\n  ]);\n  const [others, setothers] = useState([{ othersname: \"\", otherssno: \"\" }]);\n  //asset\n\n  const [Business, setBusiness] = useState(\"\");\n  const [POnumber, setPOnumber] = useState(\"\");\n  const [POdate, setPOdate] = useState(\"\");\n  const [ContractFrom, setContractFrom] = useState(\"\");\n  const [ContractTo, setContractTo] = useState(\"\");\n  const [BillingFrom, setBillingFrom] = useState(\"\");\n  const [BillingTo, setBillingTo] = useState(\"\");\n  const [AMCRate, setAMCRate] = useState(\"\");\n  const [GST, setGST] = useState(\"\");\n  const [GSTAMOUNT, setGSTAMOUNT] = useState(\"\");\n  const [NetAmount, setNetAmount] = useState(\"\");\n  const [servicelocation, setServiceLocation] = useState(\"\");\n\n  //\n  const [product, setProduct] = useState(\"null\");\n\n  //MODAL\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // -------Enabling Bottom Bar----\n  useEffect(() => {\n    // setBBarOpen(1);\n    return () => {\n      setBBarOpen(0);\n      setCreateAssetDetails({});\n    };\n  }, []);\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n\n  useEffect(() => {\n    setTopHeading(\"Create Assets\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  // Bottom bar edit\n\n  useEffect(() => {\n    setCreateAssetDetails({\n      brand,\n      model,\n      serialno,\n      os,\n      cpu,\n      ram,\n      hdd,\n      smps,\n      fan,\n      motherboard,\n      opticaldrive,\n      kbd,\n      mouse,\n      monitor,\n      gcard,\n      enetcard,\n      serialcard,\n      parallelcard,\n      hbacard,\n      raidcontroller,\n      tapecontroller,\n      others,\n      Business,\n      POnumber,\n      POdate,\n      ContractFrom,\n      ContractTo,\n      BillingFrom,\n      BillingTo,\n      AMCRate,\n      GST,\n      GSTAMOUNT,\n      NetAmount,\n      unit,\n      customer,\n      account,\n      product,\n    });\n  }, [\n    brand,\n    model,\n    serialno,\n    os,\n    cpu,\n    ram,\n    hdd,\n    smps,\n    fan,\n    motherboard,\n    opticaldrive,\n    kbd,\n    mouse,\n    monitor,\n    gcard,\n    enetcard,\n    serialcard,\n    parallelcard,\n    hbacard,\n    raidcontroller,\n    tapecontroller,\n    others,\n    Business,\n    POnumber,\n    POdate,\n    ContractFrom,\n    ContractTo,\n    BillingFrom,\n    BillingTo,\n    AMCRate,\n    GST,\n    GSTAMOUNT,\n    NetAmount,\n    unit,\n    customer,\n    account,\n    product,\n  ]);\n\n  // -------------------------------\n\n  //functions\n  const handleSubmit = async () => {\n    if (Business == \"\" || POnumber == \"\") {\n      setIsReviewModalOpen(true);\n      return;\n    }\n    if (customer._id == \"\" || account._id == \"\" || unit._id == \"\") {\n      setReqFieldErrModal(true);\n      return;\n    }\n\n    let payload = {\n      asset: {\n        business: Business,\n        producttype: product,\n        ponumber: POnumber,\n        podate: POdate,\n        contractfrom: ContractFrom,\n        contractto: ContractTo,\n        billingfrom: BillingFrom,\n        billingto: BillingTo,\n        amcrate: AMCRate,\n        gstperc: GST,\n        gstamount: GSTAMOUNT,\n        netamount: NetAmount,\n        /////------------------ cust info\n        unitId: unit._id,\n        unitName: unit.unitName,\n        accountId: account._id,\n        accountName: account.accountName,\n        customerId: customer._id,\n        customerName: customer.customerName,\n        servicelocation: servicelocation,\n      },\n      product: {\n        brand: brand,\n        model: model,\n        serialno: serialno,\n        os: os,\n        cpu: cpu[0].cpuname == \"\" ? [] : cpu,\n        ram: ram[0].ramname == \"\" ? [] : ram,\n        hdd: hdd[0].hddname == \"\" ? [] : hdd,\n        smps: smps[0].smpsname == \"\" ? [] : smps,\n        fan: fan[0].fanname == \"\" ? [] : fan,\n        motherboard: motherboard[0].motherboardname == \"\" ? [] : motherboard,\n        opticaldrive:\n          opticaldrive[0].opticaldrivename == \"\" ? [] : opticaldrive,\n        keyboard: kbd[0].keyboardname == \"\" ? [] : kbd,\n        mouse: mouse[0].mousename == \"\" ? [] : mouse,\n        monitor: monitor[0].monitorname == \"\" ? [] : monitor,\n        gcard: gcard[0].gcardname == \"\" ? [] : gcard,\n        enetcard: enetcard[0].enetcardname == \"\" ? [] : enetcard,\n        serialcard: serialcard[0].serialcardname == \"\" ? [] : serialcard,\n        parallelcard:\n          parallelcard[0].parallelcardname == \"\" ? [] : parallelcard,\n        hbacard: hbacard[0].hbacardname == \"\" ? [] : hbacard,\n        raidcontroller:\n          raidcontroller[0].raidcontrollername == \"\" ? [] : raidcontroller,\n        tapecontroller:\n          tapecontroller[0].tapecontrollername == \"\" ? [] : tapecontroller,\n        others: others[0].othersname == \"\" ? [] : others,\n      },\n    };\n    console.log(\"PL:\", payload);\n    // return;\n    // console.log(API);\n    try {\n      await axios({\n        url: `${API}/asset/${Emp.getId()}/create`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(\"Done\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //--------- Loading Functions --------\n\n  const loadKbd = async (inputText, callback) => {\n    console.log(inputText);\n    let temp = [];\n    let payload = { input: inputText };\n    try {\n      let response = await axios({\n        url: `${API}/inventory/${Emp.getId()}/getkbd`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      temp = response.data;\n    } catch (error) {\n      throw error;\n    }\n    let out = [];\n    temp.map((item, i) => {\n      out[i] = {\n        id: item._id,\n        name: item.name,\n        value: item.sno,\n        label: item.sno,\n        color: \"#00B8D9\",\n      };\n    });\n    // let test = [\n    //   { value: \"ocean\", label: \"Ocean\", color: \"#00B8D9\", isFixed: true },\n    //   { value: \"blue\", label: \"Blue\", color: \"#0052CC\", isDisabled: true },\n    //   { value: \"purple\", label: \"Purple\", color: \"#5243AA\" },\n    //   { value: \"red\", label: \"Red\", color: \"#FF5630\", isFixed: true },\n    //   { value: \"orange\", label: \"Orange\", color: \"#FF8B00\" },\n    //   { value: \"yellow\", label: \"Yellow\", color: \"#FFC400\" },\n    //   { value: \"green\", label: \"Green\", color: \"#36B37E\" },\n    //   { value: \"forest\", label: \"Forest\", color: \"#00875A\" },\n    //   { value: \"slate\", label: \"Slate\", color: \"#253858\" },\n    //   { value: \"silver\", label: \"Silver\", color: \"#666666\" },\n    // ];\n    callback(out);\n  };\n  // -------Migration Route ----------------------\n\n  // useEffect(() => {\n  //   handleMigration();\n  // }, []);\n\n  // Setting Amount\n  useEffect(() => {\n    setGSTAMOUNT(AMCRate * (GST / 100));\n    let total = parseInt(AMCRate) + parseInt(AMCRate) * (GST / 100);\n    setNetAmount(total);\n  }, [AMCRate, GST]);\n\n  //ASSET----------------------------------------------------\n  const assetPicker = () => {\n    return (\n      <div className=\"px-4 py-3 mt-4 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800\">\n        {/* {floatbox ? (\n          <CreateAssetFloat Business={Business} POnumber={POnumber} />\n        ) : null} */}\n\n        <Label className=\"font-bold\">\n          <span>Asset Information</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n        <div className=\"flex items-center  space-x-3 my-3\">\n          {dropdown()}\n\n          <Button\n            onClick={() => setIsModalOpen(true)}\n            aria-label=\"Notifications\"\n            aria-haspopup=\"true\"\n          >\n            Pick Customer\n          </Button>\n          {/* <Button\n            onClick={() => handleMigration()}\n            aria-label=\"Notifications\"\n            aria-haspopup=\"true\"\n          >\n            Migrate\n          </Button> */}\n        </div>\n        <SectionTitle className=\"\">\n          Customer: {customer.customerName} Account: {account.accountName} Unit:{\" \"}\n          {unit.unitName}\n        </SectionTitle>\n\n        {/* <Label className=\"font-bold\">\n          <span>Customer: {customer.customerName}</span>\n        </Label> */}\n        {/* ----------------------------Row - 1 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full \">\n            <Label className=\"my-3\">\n              <span>Business Type*</span>\n              <Select\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n                className=\"mt-1\"\n              >\n                <option value=\"\" selected disabled>\n                  Select Business Type\n                </option>\n                <option value=\"AMC\">AMC</option>\n                <option value=\"WTY\">Warranty</option>\n                <option value=\"NOS\">Not Under Service (NOS) </option>\n              </Select>\n            </Label>\n          </div>\n          <div className=\"w-full  \">\n            <Label className=\"my-3\">\n              <span>Purchase Order Number*</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={POnumber}\n                onChange={(e) => {\n                  setPOnumber(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full \">\n            <Label className=\"my-3\">\n              <span>Service Location*</span>\n              <Select\n                onChange={(e) => {\n                  setServiceLocation(e.target.value);\n                }}\n                className=\"mt-1\"\n              >\n                <option value=\"\" selected disabled>\n                  Select Service Location\n                </option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </Select>\n            </Label>\n          </div>\n        </div>\n        {/* ----------------------------Row - 2 --------------------------------------------------------------------- */}\n\n        <div className=\"flex flex-col lg:flex-row  items-center justify-start lg:space-x-8\">\n          <Label className=\"w-full my-3\">\n            <span>Purchase Order Date</span>\n            <Input\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={POdate}\n              onChange={(e) => {\n                setPOdate(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Contract From</span>\n            <Input\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={ContractFrom}\n              onChange={(e) => {\n                setContractFrom(e.target.value);\n              }}\n            />\n          </Label>\n\n          <Label className=\"w-full my-3\">\n            <span>Contract To</span>\n            <Input\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={ContractTo}\n              onChange={(e) => {\n                setContractTo(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing From</span>\n            <Input\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={BillingFrom}\n              onChange={(e) => {\n                setBillingFrom(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing To</span>\n            <Input\n              type=\"date\"\n              className=\"mt-1\"\n              name=\"brand\"\n              value={BillingTo}\n              onChange={(e) => {\n                setBillingTo(e.target.value);\n              }}\n            />\n          </Label>\n        </div>\n        {/* ----------------------------Row - 3 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>AMC Rate</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={AMCRate}\n                onChange={(e) => {\n                  setAMCRate(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>GST %</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={GST}\n                onChange={(e) => {\n                  setGST(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div>\n        {/* ----------------------------Row - 4 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3 font-bold\">\n              <span>GST AMOUNT: </span>\n\n              <span> Rs {(AMCRate * (GST / 100)).toFixed(2)}</span>\n            </Label>\n          </div>\n          <div className=\"w-full font-bold\">\n            <Label className=\"my-3\">\n              <span>Net Amount: </span>\n              <span>\n                Rs{\" \"}\n                {(parseInt(AMCRate) + parseInt(AMCRate) * (GST / 100)).toFixed(\n                  2\n                )}\n              </span>\n            </Label>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const productPicker = () => {\n    return (\n      <>\n        <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800 \">\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              if (customer._id == \"\" || account._id == \"\" || unit._id == \"\") {\n                setIsErrModalOpen(true);\n                return;\n              }\n              if (\n                Business == \"\" ||\n                POnumber == \"\" ||\n                brand == \"\" ||\n                model == \"\" ||\n                serialno == \"\"\n              ) {\n                setReqFieldErrModal(true);\n                return;\n              }\n              setIsReviewModalOpen(true);\n            }}\n          >\n            <Label className=\"font-bold\">\n              <span>Essential Details</span>\n            </Label>\n            <hr className=\"mb-5 mt-2\" />\n            <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n              <Label className=\"my-3 w-full\">\n                <span>Brand*</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Brand\"\n                  name=\"brand\"\n                  value={brand}\n                  onChange={(e) => {\n                    setBrand(e.target.value);\n                  }}\n                />\n              </Label>\n              <Label className=\"my-3 w-full\">\n                <span>Model*</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Model\"\n                  name=\"model\"\n                  value={model}\n                  onChange={(e) => {\n                    setModel(e.target.value);\n                  }}\n                />\n              </Label>\n              <Label className=\"my-3 w-full\">\n                <span>Serial Number*</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Serial Number\"\n                  name=\"serialno\"\n                  value={serialno}\n                  onChange={(e) => {\n                    setSerialNo(e.target.value);\n                  }}\n                />\n              </Label>\n            </div>\n            {/* ---------------------------OS--------------------------------- */}\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <Label className=\"font-bold\">\n                  <span>Operating System</span>\n                </Label>\n                <hr className=\"mb-5 mt-2\" />\n                <Label className=\"my-3\">\n                  <span>OS</span>\n                  <Input\n                    className=\"mt-1\"\n                    placeholder=\"OS\"\n                    name=\"os\"\n                    value={os}\n                    onChange={(e) => {\n                      setOs(e.target.value);\n                    }}\n                  />\n                </Label>\n              </>\n            ) : null}\n\n            {/* //////////// ARRAY /////////////// */}\n            {/* -------------------CPU and RAM-------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------CPU------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>CPU</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newcpu = [...cpu];\n                            let add = { cpuname: \"\", cpusno: \"\" };\n                            newcpu.push(add);\n                            setCpu(newcpu);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newcpu = [...cpu];\n                            if (newcpu[1]) {\n                              newcpu.pop();\n                              setCpu(newcpu);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {cpu.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"w-full my-3\">\n                              <span>CPU {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`CPU ${i + 1}`}\n                                name=\"cpuname\"\n                                value={item.cpuname}\n                                onChange={(e) => {\n                                  let newlist = [...cpu];\n                                  newlist[i].cpuname = e.target.value;\n                                  setCpu(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"w-full my-3\">\n                              <span>CPU {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`CPU ${i + 1}'s Serial Number `}\n                                name=\"cpusno\"\n                                value={item.cpusno}\n                                onChange={(e) => {\n                                  let newlist = [...cpu];\n                                  newlist[i].cpusno = e.target.value;\n                                  setCpu(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------CPU------------------------------- */}\n\n              {/* ----------------RAM------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>RAM</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newram = [...ram];\n                            let add = { ramname: \"\", ramsno: \"\" };\n                            newram.push(add);\n                            setram(newram);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newram = [...ram];\n                            if (newram[1]) {\n                              newram.pop();\n                              setram(newram);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {ram.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>RAM {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`RAM ${i + 1}`}\n                                name=\"ramname\"\n                                value={item.ramname}\n                                onChange={(e) => {\n                                  let newlist = [...ram];\n                                  newlist[i].ramname = e.target.value;\n                                  setram(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>RAM {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`RAM ${i + 1}'s Serial Number `}\n                                name=\"cpusno\"\n                                value={item.ramsno}\n                                onChange={(e) => {\n                                  let newlist = [...ram];\n                                  newlist[i].ramsno = e.target.value;\n                                  setram(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------RAM------------------------------- */}\n            </div>\n\n            {/* -----------------------fan and motherboard------------------------------ */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------fan------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>FAN</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newfan = [...fan];\n                            let add = { fanname: \"\", fansno: \"\" };\n                            newfan.push(add);\n                            setfan(newfan);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newfan = [...fan];\n                            if (newfan[1]) {\n                              newfan.pop();\n                              setfan(newfan);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {fan.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>FAN {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`FAN ${i + 1}`}\n                                name=\"fanname\"\n                                value={item.fanname}\n                                onChange={(e) => {\n                                  let newlist = [...fan];\n                                  newlist[i].fanname = e.target.value;\n                                  setfan(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>FAN {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`FAN ${i + 1}'s Serial Number `}\n                                name=\"fansno\"\n                                value={item.fansno}\n                                onChange={(e) => {\n                                  let newlist = [...fan];\n                                  newlist[i].fansno = e.target.value;\n                                  setfan(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------fan------------------------------- */}\n\n              {/* ----------------motherboard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Motherboard</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmotherboard = [...motherboard];\n                            let add = {\n                              motherboardname: \"\",\n                              motherboardsno: \"\",\n                            };\n                            newmotherboard.push(add);\n                            setmotherboard(newmotherboard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmotherboard = [...motherboard];\n                            if (newmotherboard[1]) {\n                              newmotherboard.pop();\n                              setmotherboard(newmotherboard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {motherboard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Motherboard {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Motherboard ${i + 1}`}\n                                name=\"motherboardname\"\n                                value={item.motherboardname}\n                                onChange={(e) => {\n                                  let newlist = [...motherboard];\n                                  newlist[i].motherboardname = e.target.value;\n                                  setmotherboard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Motherboard {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Motherboard ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"motherboardsno\"\n                                value={item.motherboardsno}\n                                onChange={(e) => {\n                                  let newlist = [...motherboard];\n                                  newlist[i].motherboardsno = e.target.value;\n                                  setmotherboard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------motherboard------------------------------- */}\n            </div>\n\n            {/* ------------------------HDD And SMPS */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------hdd------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>HDD</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhdd = [...hdd];\n                            let add = { hddname: \"\", hddsno: \"\" };\n                            newhdd.push(add);\n                            sethdd(newhdd);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhdd = [...hdd];\n                            if (newhdd[1]) {\n                              newhdd.pop();\n                              sethdd(newhdd);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {hdd.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>HDD {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HDD ${i + 1}`}\n                                name=\"hddname\"\n                                value={item.hddname}\n                                onChange={(e) => {\n                                  let newlist = [...hdd];\n                                  newlist[i].hddname = e.target.value;\n                                  sethdd(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>HDD {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HDD ${i + 1}'s Serial Number `}\n                                name=\"hddsno\"\n                                value={item.hddsno}\n                                onChange={(e) => {\n                                  let newlist = [...hdd];\n                                  newlist[i].hddsno = e.target.value;\n                                  sethdd(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------hdd------------------------------- */}\n\n              {/* ----------------smps------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>SMPS</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newsmps = [...smps];\n                            let add = { smpsname: \"\", smpssno: \"\" };\n                            newsmps.push(add);\n                            setsmps(newsmps);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newsmps = [...smps];\n                            if (newsmps[1]) {\n                              newsmps.pop();\n                              setsmps(newsmps);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {smps.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>SMPS {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`SMPS ${i + 1}`}\n                                name=\"smpsname\"\n                                value={item.smpsname}\n                                onChange={(e) => {\n                                  let newlist = [...smps];\n                                  newlist[i].smpsname = e.target.value;\n                                  setsmps(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>SMPS {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`SMPS ${i + 1}'s Serial Number `}\n                                name=\"smpssno\"\n                                value={item.smpssno}\n                                onChange={(e) => {\n                                  let newlist = [...smps];\n                                  newlist[i].smpssno = e.target.value;\n                                  setsmps(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------smps------------------------------- */}\n            </div>\n\n            {/* -----------------------Keyboard And Mouse ------------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------kbd------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Keyboard</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newkbd = [...kbd];\n                            let add = { keyboardname: \"\", keyboardsno: \"\" };\n                            newkbd.push(add);\n                            setkbd(newkbd);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newkbd = [...kbd];\n                            if (newkbd[1]) {\n                              newkbd.pop();\n                              setkbd(newkbd);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {kbd.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Keyboard {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Keyboard ${i + 1}`}\n                                name=\"keyboardname\"\n                                value={item.keyboardname}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].keyboardname = e.target.value;\n                                  setkbd(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Keyboard {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Keyboard ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"keyboardsno\"\n                                value={item.keyboardsno}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].keyboardsno = e.target.value;\n                                  setkbd(newlist);\n                                }}\n                              />\n                              {/* <AsyncSelect\n                                loadOptions={loadKbd}\n                                placeholder={`Keyboard ${i + 1}`}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].keyboardsno = e.value;\n                                  newlist[i].keyboardname = e.name;\n                                  setkbd(newlist);\n                                  console.log(e);\n                                }}\n                                defaultOptions={false}\n                              /> */}\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------kbd------------------------------- */}\n\n              {/* ----------------mouse------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Mouse</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmouse = [...mouse];\n                            let add = { mousename: \"\", mousesno: \"\" };\n                            newmouse.push(add);\n                            setmouse(newmouse);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmouse = [...mouse];\n                            if (newmouse[1]) {\n                              newmouse.pop();\n                              setmouse(newmouse);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {mouse.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Mouse {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Mouse ${i + 1}`}\n                                name=\"mousename\"\n                                value={item.mousename}\n                                onChange={(e) => {\n                                  let newlist = [...mouse];\n                                  newlist[i].mousename = e.target.value;\n                                  setmouse(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Mouse {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Mouse ${i + 1}'s Serial Number `}\n                                name=\"mousesno\"\n                                value={item.mousesno}\n                                onChange={(e) => {\n                                  let newlist = [...mouse];\n                                  newlist[i].mousesno = e.target.value;\n                                  setmouse(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------mouse------------------------------- */}\n            </div>\n\n            {/* ---------------------------Monitor and GCard ------------------------*/}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------monitor------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Monitor</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmonitor = [...monitor];\n                            let add = { monitorname: \"\", monitorsno: \"\" };\n                            newmonitor.push(add);\n                            setmonitor(newmonitor);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmonitor = [...monitor];\n                            if (newmonitor[1]) {\n                              newmonitor.pop();\n                              setmonitor(newmonitor);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {monitor.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Monitor {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Monitor ${i + 1}`}\n                                name=\"monitorname\"\n                                value={item.monitorname}\n                                onChange={(e) => {\n                                  let newlist = [...monitor];\n                                  newlist[i].monitorname = e.target.value;\n                                  setmonitor(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Monitor {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Monitor ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"monitorsno\"\n                                value={item.monitorsno}\n                                onChange={(e) => {\n                                  let newlist = [...monitor];\n                                  newlist[i].monitorsno = e.target.value;\n                                  setmonitor(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------monitor------------------------------- */}\n\n              {/* ----------------gcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Graphics Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newgcard = [...gcard];\n                            let add = { gcardname: \"\", gcardsno: \"\" };\n                            newgcard.push(add);\n                            setgcard(newgcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newgcard = [...gcard];\n                            if (newgcard[1]) {\n                              newgcard.pop();\n                              setgcard(newgcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {gcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Graphics Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Graphics Card ${i + 1}`}\n                                name=\"gcardname\"\n                                value={item.gcardname}\n                                onChange={(e) => {\n                                  let newlist = [...gcard];\n                                  newlist[i].gcardname = e.target.value;\n                                  setgcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Graphics Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Graphics Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"gcardsno\"\n                                value={item.gcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...gcard];\n                                  newlist[i].gcardsno = e.target.value;\n                                  setgcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------gcard------------------------------- */}\n            </div>\n\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------enetcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>E Net Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newenetcard = [...enetcard];\n                            let add = { enetcardname: \"\", enetcardsno: \"\" };\n                            newenetcard.push(add);\n                            setenetcard(newenetcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newenetcard = [...enetcard];\n                            if (newenetcard[1]) {\n                              newenetcard.pop();\n                              setenetcard(newenetcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {enetcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>E Net Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`E Net Card ${i + 1}`}\n                                name=\"enetcardname\"\n                                value={item.enetcardname}\n                                onChange={(e) => {\n                                  let newlist = [...enetcard];\n                                  newlist[i].enetcardname = e.target.value;\n                                  setenetcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>E Net Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`E Net Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"enetcardsno\"\n                                value={item.enetcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...enetcard];\n                                  newlist[i].enetcardsno = e.target.value;\n                                  setenetcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------enetcard------------------------------- */}\n\n              {/* ----------------serialcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Serial Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newserialcard = [...serialcard];\n                            let add = { serialcardname: \"\", serialcardsno: \"\" };\n                            newserialcard.push(add);\n                            setserialcard(newserialcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newserialcard = [...serialcard];\n                            if (newserialcard[1]) {\n                              newserialcard.pop();\n                              setserialcard(newserialcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {serialcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Serial Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Serial Card ${i + 1}`}\n                                name=\"serialcardname\"\n                                value={item.serialcardname}\n                                onChange={(e) => {\n                                  let newlist = [...serialcard];\n                                  newlist[i].serialcardname = e.target.value;\n                                  setserialcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Serial Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Serial Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"serialcardsno\"\n                                value={item.serialcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...serialcard];\n                                  newlist[i].serialcardsno = e.target.value;\n                                  setserialcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------serialcard------------------------------- */}\n            </div>\n\n            {/* --------------------Parallel And HBD Card ----------------------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------parallelcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Parallel Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newparallelcard = [...parallelcard];\n                            let add = {\n                              parallelcardname: \"\",\n                              parallelcardsno: \"\",\n                            };\n                            newparallelcard.push(add);\n                            setparallelcard(newparallelcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newparallelcard = [...parallelcard];\n                            if (newparallelcard[1]) {\n                              newparallelcard.pop();\n                              setparallelcard(newparallelcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {parallelcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Parallel Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Parallel Card ${i + 1}`}\n                                name=\"parallelcardname\"\n                                value={item.parallelcardname}\n                                onChange={(e) => {\n                                  let newlist = [...parallelcard];\n                                  newlist[i].parallelcardname = e.target.value;\n                                  setparallelcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Parallel Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Parallel Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"parallelcardsno\"\n                                value={item.parallelcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...parallelcard];\n                                  newlist[i].parallelcardsno = e.target.value;\n                                  setparallelcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------parallelcard------------------------------- */}\n\n              {/* ----------------hbacard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>HBA Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhbacard = [...hbacard];\n                            let add = { hbacardname: \"\", hbacardsno: \"\" };\n                            newhbacard.push(add);\n                            sethbacard(newhbacard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhbacard = [...hbacard];\n                            if (newhbacard[1]) {\n                              newhbacard.pop();\n                              sethbacard(newhbacard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {hbacard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>HBA Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HBA Card ${i + 1}`}\n                                name=\"hbacardname\"\n                                value={item.hbacardname}\n                                onChange={(e) => {\n                                  let newlist = [...hbacard];\n                                  newlist[i].hbacardname = e.target.value;\n                                  sethbacard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>HBA Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HBA Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"hbacardsno\"\n                                value={item.hbacardsno}\n                                onChange={(e) => {\n                                  let newlist = [...hbacard];\n                                  newlist[i].hbacardsno = e.target.value;\n                                  sethbacard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------hbacard------------------------------- */}\n            </div>\n            {/* --------------------Raid And Tape Controller------------------------------ */}\n\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------raidcontroller------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Raid Controller</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newraidcontroller = [...raidcontroller];\n                            let add = {\n                              raidcontrollername: \"\",\n                              raidcontrollersno: \"\",\n                            };\n                            newraidcontroller.push(add);\n                            setraidcontroller(newraidcontroller);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newraidcontroller = [...raidcontroller];\n                            if (newraidcontroller[1]) {\n                              newraidcontroller.pop();\n                              setraidcontroller(newraidcontroller);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {raidcontroller.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Raid Controller {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Raid Controller ${i + 1}`}\n                                name=\"raidcontrollername\"\n                                value={item.raidcontrollername}\n                                onChange={(e) => {\n                                  let newlist = [...raidcontroller];\n                                  newlist[i].raidcontrollername =\n                                    e.target.value;\n                                  setraidcontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>\n                                Raid Controller {i + 1}: Serial Number\n                              </span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Raid Controller ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"raidcontrollersno\"\n                                value={item.raidcontrollersno}\n                                onChange={(e) => {\n                                  let newlist = [...raidcontroller];\n                                  newlist[i].raidcontrollersno = e.target.value;\n                                  setraidcontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------raidcontroller------------------------------- */}\n\n              {/* ----------------tapecontroller------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Tape Drive</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newtapecontroller = [...tapecontroller];\n                            let add = {\n                              tapecontrollername: \"\",\n                              tapecontrollersno: \"\",\n                            };\n                            newtapecontroller.push(add);\n                            settapecontroller(newtapecontroller);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newtapecontroller = [...tapecontroller];\n                            if (newtapecontroller[1]) {\n                              newtapecontroller.pop();\n                              settapecontroller(newtapecontroller);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {tapecontroller.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Tape Drive {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Tape Drive ${i + 1}`}\n                                name=\"tapecontrollername\"\n                                value={item.tapecontrollername}\n                                onChange={(e) => {\n                                  let newlist = [...tapecontroller];\n                                  newlist[i].tapecontrollername =\n                                    e.target.value;\n                                  settapecontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Tape Drive {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Tape Drive ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"tapecontrollersno\"\n                                value={item.tapecontrollersno}\n                                onChange={(e) => {\n                                  let newlist = [...tapecontroller];\n                                  newlist[i].tapecontrollersno = e.target.value;\n                                  settapecontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------tapecontroller------------------------------- */}\n            </div>\n\n            {/* ----------------opticaldrive------------------------------- */}\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <div className=\"flex flex-row items-center\">\n                  <Label className=\"font-bold\">\n                    <span>Optical Drive</span>\n                  </Label>\n                  <div className=\"ml-3 \">\n                    <Button\n                      onClick={() => {\n                        let newopticaldrive = [...opticaldrive];\n                        let add = { opticaldrivename: \"\", opticaldrivesno: \"\" };\n                        newopticaldrive.push(add);\n                        setopticaldrive(newopticaldrive);\n                      }}\n                      icon={Add}\n                      layout=\"link\"\n                      aria-label=\"Like\"\n                    />\n                  </div>\n                  <div className=\"ml-3\">\n                    <Button\n                      onClick={() => {\n                        let newopticaldrive = [...opticaldrive];\n                        if (newopticaldrive[1]) {\n                          newopticaldrive.pop();\n                          setopticaldrive(newopticaldrive);\n                        }\n                      }}\n                      icon={Remove}\n                      layout=\"link\"\n                      aria-label=\"Like\"\n                    />\n                  </div>\n                </div>\n                <hr className=\"mb-5 mt-2\" />\n                {opticaldrive.map((item, i) => {\n                  return (\n                    <div key={i}>\n                      <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                        <Label className=\"my-3 w-full\">\n                          <span>Optical Drive {i + 1}</span>\n                          <Input\n                            className=\"mt-1\"\n                            placeholder={`Opticaldrive ${i + 1}`}\n                            name=\"opticaldrivename\"\n                            value={item.opticaldrivename}\n                            onChange={(e) => {\n                              let newlist = [...opticaldrive];\n                              newlist[i].opticaldrivename = e.target.value;\n                              setopticaldrive(newlist);\n                            }}\n                          />\n                        </Label>\n                        <Label className=\"my-3 w-full\">\n                          <span>Opticaldrive {i + 1}: Serial Number</span>\n                          <Input\n                            className=\"mt-1\"\n                            placeholder={`Optical Drive ${\n                              i + 1\n                            }'s Serial Number `}\n                            name=\"opticaldrivesno\"\n                            value={item.opticaldrivesno}\n                            onChange={(e) => {\n                              let newlist = [...opticaldrive];\n                              newlist[i].opticaldrivesno = e.target.value;\n                              setopticaldrive(newlist);\n                            }}\n                          />\n                        </Label>\n                      </div>\n                    </div>\n                  );\n                })}\n              </>\n            ) : null}\n            {/* ----------------opticaldrive------------------------------- */}\n\n            {/* ----------------others------------------------------- */}\n            <div className=\"flex flex-row items-center\">\n              <Label className=\"font-bold\">\n                <span>Others</span>\n              </Label>\n              <div className=\"ml-3\">\n                <Button\n                  onClick={() => {\n                    let newothers = [...others];\n                    let add = { othersname: \"\", otherssno: \"\" };\n                    newothers.push(add);\n                    setothers(newothers);\n                  }}\n                  icon={Add}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                />\n              </div>\n              <div className=\"ml-3\">\n                <Button\n                  onClick={() => {\n                    let newothers = [...others];\n                    if (newothers[1]) {\n                      newothers.pop();\n                      setothers(newothers);\n                    }\n                  }}\n                  icon={Remove}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                />\n              </div>\n            </div>\n            <hr className=\"mb-5 mt-2\" />\n            {others.map((item, i) => {\n              return (\n                <div key={i}>\n                  <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                    <Label className=\"my-3 w-full\">\n                      <span>Others {i + 1}</span>\n                      <Input\n                        className=\"mt-1\"\n                        placeholder={`Others ${i + 1}`}\n                        name=\"othersname\"\n                        value={item.othersname}\n                        onChange={(e) => {\n                          let newlist = [...others];\n                          newlist[i].othersname = e.target.value;\n                          setothers(newlist);\n                        }}\n                      />\n                    </Label>\n                    <Label className=\"my-3 w-full\">\n                      <span>Others {i + 1}: Serial Number</span>\n                      <Input\n                        className=\"mt-1\"\n                        placeholder={`Others ${i + 1}'s Serial Number `}\n                        name=\"otherssno\"\n                        value={item.otherssno}\n                        onChange={(e) => {\n                          let newlist = [...others];\n                          newlist[i].otherssno = e.target.value;\n                          setothers(newlist);\n                        }}\n                      />\n                    </Label>\n                  </div>\n                </div>\n              );\n            })}\n\n            {/* ----------------others------------------------------- */}\n\n            <div className=\"flex items-center justify-center my-10\">\n              <Button type=\"submit\">Submit</Button>\n            </div>\n\n            {/* <Label className=\"mt-4\">\n            <span>Disabled</span>\n            <Input disabled className=\"mt-1\" placeholder=\"Jane Doe\" />\n          </Label> */}\n          </form>\n        </div>\n      </>\n    );\n  };\n\n  //DROPDOWN------------------------------------------------------------------------------------\n\n  const [isOpen, setIsOpen] = useState(false);\n  function toggleDropdown() {\n    setIsOpen(!isOpen);\n  }\n\n  const dropdown = () => {\n    return (\n      <div className=\"relative z-50 \">\n        <Button\n          onClick={toggleDropdown}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n        >\n          Pick Products\n        </Button>\n        <Dropdown\n          className=\"z-40\"\n          isOpen={isOpen}\n          onClose={() => setIsOpen(false)}\n        >\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"Console\");\n            }}\n          >\n            <span>Console</span>\n          </DropdownItem>\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"DMP\");\n            }}\n          >\n            <span>DMP</span>\n          </DropdownItem>\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"Inkjet\");\n            }}\n          >\n            <span>Inkjet</span>\n          </DropdownItem>\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"KVM\");\n            }}\n          >\n            <span>KVM</span>\n          </DropdownItem>\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"Laptop\");\n            }}\n          >\n            <span>Laptop</span>\n          </DropdownItem>\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"Laser\");\n            }}\n          >\n            <span>Laser</span>\n          </DropdownItem>\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"LMP\");\n            }}\n          >\n            <span>LMP</span>\n          </DropdownItem>\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"Module\");\n            }}\n          >\n            <span>Module</span>\n          </DropdownItem>\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"Router\");\n            }}\n          >\n            <span>Router</span>\n          </DropdownItem>\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"Scanner\");\n            }}\n          >\n            <span>Scanner</span>\n          </DropdownItem>\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"Server\");\n            }}\n          >\n            <span>Server</span>\n          </DropdownItem>\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"Desktop\");\n            }}\n          >\n            <span>Desktop</span>\n          </DropdownItem>\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"Storage\");\n            }}\n          >\n            <span>Storage</span>\n          </DropdownItem>\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"Switch\");\n            }}\n          >\n            <span>Switch</span>\n          </DropdownItem>\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"UPS\");\n            }}\n          >\n            <span>UPS</span>\n          </DropdownItem>\n          <DropdownItem\n            onClick={() => {\n              clearState();\n              setIsOpen(false);\n              setProduct(\"Others\");\n            }}\n          >\n            <span>Others</span>\n          </DropdownItem>\n        </Dropdown>\n      </div>\n    );\n  };\n\n  const test = () => {\n    console.log(test);\n  };\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n          className=\"w-10/12 dark:bg-gray-800 p-10 my-12 h-screen  bg-gray-50 text-gray-900 dark:text-white  rounded-lg overflow-y-scroll\"\n        >\n          <ModalHeader>Create Asset</ModalHeader>\n          <ModalBody>\n            <div className=\"  \">\n              <div className=\" \">\n                {/* <div className=\"flex-col flex items-start justify-center mx-5 my-5  \">\n        <div>brand: {asset.brand}</div>\n        <div>Purchase Number: {asset.ponumber}</div>\n        <div>\n          {\" \"}\n          Contract From: {moment(asset.contractfrom).format(\"DD-MM-YYYY\")}\n        </div>\n        <div>Contract To: {moment(asset.contractto).format(\"DD-MM-YYYY\")}</div>{\" \"}\n      </div> */}\n                <div className=\"flex justify-between flex-row w-5/12 font-bold text-lg mb-2\">\n                  <div>Customer: {customer.customerName} </div>\n                  <div>Account: {account.accountName}</div>\n                  <div>\n                    {\" \"}\n                    Unit:\n                    {unit.unitName}\n                  </div>\n                </div>\n                <SectionTitle>AssetInfo</SectionTitle>\n                <div className=\"flex flex-row flex-wrap items-center justify-start lg:space-x-8  bg-gray-100 dark:bg-gray-700 p-2 rounded-md \">\n                  <div className=\"flex-col \">\n                    <div className=\"mx-5 my-1 px-1 py-1 \">\n                      Business Type: {Business}{\" \"}\n                    </div>\n                    <div className=\"mx-5 my-1 px-1 py-1 text-gray-100 dark:text-gray-900\">\n                      .\n                    </div>\n                  </div>\n                  <div className=\"flex-col\">\n                    <div className=\"mx-5 my-1 px-1 py-1 \">\n                      POnumber:{POnumber}\n                    </div>\n                    <div className=\"mx-5 my-1 px-1 py-1 \">POdate:{POdate}</div>\n                  </div>\n                  <div className=\"flex-col\">\n                    <div className=\"mx-5 my-1 px-1 py-1 \">\n                      {\" \"}\n                      ContractFrom:{ContractFrom}\n                    </div>\n                    <div className=\"mx-5 my-1 px-1 py-1 \">\n                      {\" \"}\n                      ContractTo:{ContractFrom}\n                    </div>\n                  </div>\n\n                  <div className=\"flex-col\">\n                    <div className=\"mx-5 my-1 px-1 py-1 \">\n                      {\" \"}\n                      BillingFrom:{BillingFrom}\n                    </div>\n                    <div className=\"mx-5 my-1 px-1 py-1 \">\n                      {\" \"}\n                      BillingTo:{BillingTo}\n                    </div>\n                  </div>\n\n                  <div className=\"flex-col\">\n                    <div className=\"mx-1 my-1 px-1 py-1 \"> GST:{GST}</div>\n                    <div className=\"mx-1 my-1 px-1 py-1 \">\n                      {\" \"}\n                      GSTAMOUNT:{GSTAMOUNT}\n                    </div>\n                  </div>\n\n                  <div className=\"flex-col\">\n                    <div className=\"mx-1 my-1 px-1 py-1 \">\n                      {\" \"}\n                      AMCRate:{AMCRate}\n                    </div>\n                    <div className=\"mx-1 my-1 px-1 py-1 \">\n                      {\" \"}\n                      NetAmount:{NetAmount}\n                    </div>\n                  </div>\n                  <br />\n                </div>\n                <SectionTitle>Product Description</SectionTitle>\n                <div className=\" dark:text-gray-200 text-black flex flex-row flex-wrap items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start lg:space-x-8  w-full \">\n                  {/* /////////////////////////////// . PRODUCT INFO  ///////////////////////////////////////////// */}\n                  <div className=\"flex flex-col lg:flex-row items-center justify-between lg:space-x-8 w-8/12\">\n                    <div className=\"my-3 font-semibold \">\n                      <span>Brand :{brand}</span>\n                    </div>\n                    <div className=\"my-3 font-semibold\">\n                      <span>Model:{model}</span>\n                    </div>\n                    <div className=\"my-3 font-semibold\">\n                      <span>Serial Number: {serialno}</span>\n                    </div>\n\n                    {product == \"Laptop\" ||\n                    product == \"Server\" ||\n                    product == \"Desktop\" ? (\n                      <>\n                        <div className=\"font-semibold\">\n                          <span>Operating System :{os}</span>\n                        </div>\n                      </>\n                    ) : null}\n                  </div>\n                  <br />\n                </div>\n                {/* <div className=\"flex flex-row flex-wrap items-center justify-start lg:space-x-8  \"> */}\n                {/* -------------------CPU and RAM-------------------------- */}\n                <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3 \">\n                  {/* ----------------CPU------------------------------- */}\n                  {product == \"Laptop\" ||\n                  product == \"Server\" ||\n                  product == \"Desktop\" ? (\n                    <div className=\"w-full  my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center \">\n                          <div className=\"font-semibold\">\n                            <span>CPU</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {cpu.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    CPU {i + 1}: {item.cpuname}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.cpusno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n                  {/* ----------------CPU------------------------------- */}\n                  {/* ----------------ram------------------------------- */}\n                  {product == \"Laptop\" ||\n                  product == \"Server\" ||\n                  product == \"Desktop\" ? (\n                    <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center mx-2\">\n                          <div className=\"font-semibold\">\n                            <span>RAM</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {ram.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    RAM {i + 1}: {item.ramname}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.ramsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n                  {/* </div> */}\n                  {/* ----------------ram------------------------------- */}\n                  {/* </div> */}\n                  {/* <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\"> */}\n                  {/* ----------------fan------------------------------- */}\n                  {product == \"Laptop\" ||\n                  product == \"Server\" ||\n                  product == \"Desktop\" ||\n                  product == \"Storage\" ? (\n                    <div className=\"w-full  my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3 mx-2\">\n                          <div className=\"font-semibold\">\n                            <span>Fan</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {fan.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    fan {i + 1}: {item.fanname}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.fansno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n                  {/* ----------------fan------------------------------- */}\n                  {/* ----------------motherboard------------------------------- */}\n\n                  {product == \"Laptop\" ||\n                  product == \"Server\" ||\n                  product == \"Desktop\" ? (\n                    <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center \">\n                          <div className=\"font-semibold\">\n                            <span>Mother Board</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {motherboard.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8 mx-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    motherboard {i + 1}: {item.motherboardname}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.motherboardsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n                  {/* ----------------motherboard------------------------------- */}\n                </div>\n                <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n                  {/* ----------------hdd------------------------------- */}\n                  {product == \"Laptop\" ||\n                  product == \"Server\" ||\n                  product == \"Desktop\" ||\n                  product == \"Storage\" ? (\n                    <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center\">\n                          <div className=\"font-semibold\">\n                            <span>HDD</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {hdd.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    hdd {i + 1}: {item.hddname}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No:{item.hddsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------hdd------------------------------- */}\n\n                  {/* ----------------smps------------------------------- */}\n                  {product == \"Laptop\" ||\n                  product == \"Server\" ||\n                  product == \"Desktop\" ||\n                  product == \"Storage\" ? (\n                    <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center\">\n                          <div className=\"font-semibold\">\n                            <span>SMPS</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {smps.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    smps {i + 1}: {item.smpsname}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.smpssno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n                  {/* </div> */}\n\n                  {/* ----------------smps------------------------------- */}\n\n                  {/* <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\"> */}\n                  {/* ----------------kbd------------------------------- */}\n                  {product == \"Laptop\" ||\n                  product == \"Server\" ||\n                  product == \"Desktop\" ||\n                  product == \"Router\" ? (\n                    <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center\">\n                          <div className=\"font-semibold\">\n                            <span>Keyboard</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {kbd.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    kbd {i + 1}: {item.keyboardname}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.keyboardsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------kbd------------------------------- */}\n\n                  {/* ----------------mouse------------------------------- */}\n                  {product == \"Laptop\" ||\n                  product == \"Server\" ||\n                  product == \"Desktop\" ||\n                  product == \"Storage\" ? (\n                    <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center\">\n                          <div className=\"font-semibold\">\n                            <span>Mouse</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {mouse.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    mouse {i + 1}: {item.mousename}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.mousesno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------mouse------------------------------- */}\n                </div>\n\n                <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n                  {/* ----------------monitor------------------------------- */}\n                  {product == \"Laptop\" ||\n                  product == \"Server\" ||\n                  product == \"Desktop\" ||\n                  product == \"Router\" ? (\n                    <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center\">\n                          <div className=\"font-semibold\">\n                            <span>Monitor</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {monitor.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    monitor {i + 1}: {item.monitorname}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.monitorsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------monitor------------------------------- */}\n\n                  {/* ----------------gcard------------------------------- */}\n                  {product == \"Laptop\" ||\n                  product == \"Server\" ||\n                  product == \"Desktop\" ? (\n                    <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center\">\n                          <div className=\"font-semibold\">\n                            <span>Graphics card</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {gcard.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    gcard {i + 1}: {item.gcardname}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.gcardsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------gcard------------------------------- */}\n                  {/* </div> */}\n\n                  {/* <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\"> */}\n                  {/* ----------------enetcard------------------------------- */}\n                  {product == \"Laptop\" ||\n                  product == \"Server\" ||\n                  product == \"Desktop\" ? (\n                    <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center\">\n                          <div className=\"font-semibold\">\n                            <span>ENET card</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {enetcard.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    enetcard {i + 1}: {item.enetcardname}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.enetcardsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------enetcard------------------------------- */}\n\n                  {/* ----------------serialcard------------------------------- */}\n                  {product == \"Server\" || product == \"Desktop\" ? (\n                    <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center\">\n                          <div className=\"font-semibold\">\n                            <span>Serial card</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {serialcard.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    Serialcard {i + 1}: {item.serialcardname}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.serialcardsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------serialcard------------------------------- */}\n                </div>\n\n                <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n                  {/* ----------------parallelcard------------------------------- */}\n                  {product == \"Server\" || product == \"Desktop\" ? (\n                    <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center\">\n                          <div className=\"font-semibold\">\n                            <span>Parallel card</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {parallelcard.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    parallelcard {i + 1}:{\" \"}\n                                    {item.parallelcardname}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.parallelcardsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------parallelcard------------------------------- */}\n\n                  {/* ----------------hbacard------------------------------- */}\n                  {product == \"Server\" || product == \"Storage\" ? (\n                    <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center\">\n                          <div className=\"font-semibold\">\n                            <span>HBA card</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {hbacard.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    hbacard {i + 1}: {item.hbacardname}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.hbacardsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------hbacard------------------------------- */}\n\n                  {/* ----------------raidcontroller------------------------------- */}\n                  {product == \"Server\" ? (\n                    <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center\">\n                          <div className=\"font-semibold\">\n                            <span>Raid Controller</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {raidcontroller.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    raidcontroller {i + 1}:{\" \"}\n                                    {item.raidcontrollername}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.raidcontrollersno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------raidcontroller------------------------------- */}\n                </div>\n                <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n                  {/* ----------------tapecontroller------------------------------- */}\n                  {product == \"Server\" ? (\n                    <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center\">\n                          <div className=\"font-semibold\">\n                            <span>Tape controller</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {tapecontroller.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    tapecontroller {i + 1}:{\" \"}\n                                    {item.tapecontrollername}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.tapecontrollersno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------tapecontroller------------------------------- */}\n\n                  {/* ----------------opticaldrive------------------------------- */}\n                  {product == \"Server\" ||\n                  product == \"Desktop\" ||\n                  product == \"Laptop\" ? (\n                    <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-row items-center\">\n                          <div className=\"font-semibold\">\n                            <span>opticaldrive</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {opticaldrive.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    opticaldrive {i + 1}:{\" \"}\n                                    {item.opticaldrivename}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.opticaldrivesno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------opticaldrive------------------------------- */}\n\n                  {/* ----------------others------------------------------- */}\n                  <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                    {true ? (\n                      <>\n                        <div className=\"flex flex-row items-center\">\n                          <div className=\"font-semibold\">\n                            <span>others</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {others.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    others {i + 1}: {item.othersname}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>S.No :{item.otherssno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    ) : null}\n                  </div>\n\n                  {/* ----------------others------------------------------- */}\n                </div>\n                {/* //////////////////////////////////////////////////////////////////////////// */}\n              </div>\n              {/* //////////////////////////////////////////////////////////////////////////// */}\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              layout=\"outline\"\n              onClick={() => setIsReviewModalOpen(false)}\n            >\n              Cancel\n            </Button>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => {\n                handleSubmit();\n                clearState();\n                clearAssetState();\n                setIsReviewModalOpen(false);\n              }}\n            >\n              Create Asset\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const AccCustErr = () => {\n    return (\n      <>\n        <Modal isOpen={isErrModalOpen} onClose={() => setIsErrModalOpen(false)}>\n          <ModalHeader>Customer or Account or Unit Not Selected!</ModalHeader>\n          <ModalBody>\n            If you cant find any units, make the unit in create unit first.\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsErrModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const clearState = () => {\n    //PRODUCT\n    setBrand(\"\");\n    setModel(\"\");\n    setSerialNo(\"\");\n    setOs(\"\");\n    setCpu([{ cpuname: \"\", cpusno: \"\" }]);\n    setram([{ ramname: \"\", ramsno: \"\" }]);\n    sethdd([{ hddname: \"\", hddsno: \"\" }]);\n    setsmps([{ smpsname: \"\", smpssno: \"\" }]);\n    setfan([{ fanname: \"\", fansno: \"\" }]);\n    setmotherboard([{ motherboardname: \"\", motherboardsno: \"\" }]);\n    setopticaldrive([{ opticaldrivename: \"\", opticaldrivesno: \"\" }]);\n    setkbd([{ keyboardname: \"\", keyboardsno: \"\" }]);\n    setmouse([{ mousename: \"\", mousesno: \"\" }]);\n    setmonitor([{ monitorname: \"\", monitorsno: \"\" }]);\n    setgcard([{ gcardname: \"\", gcardsno: \"\" }]);\n    setenetcard([{ enetcardname: \"\", enetcardsno: \"\" }]);\n    setserialcard([{ serialcardname: \"\", serialcardsno: \"\" }]);\n    setparallelcard([{ parallelcardname: \"\", parallelcardsno: \"\" }]);\n    sethbacard([{ hbacardname: \"\", hbacardsno: \"\" }]);\n    setraidcontroller([{ raidcontrollername: \"\", raidcontrollersno: \"\" }]);\n    settapecontroller([{ tapecontrollername: \"\", tapecontrollersno: \"\" }]);\n    setothers([{ othersname: \"\", otherssno: \"\" }]);\n    //asset\n\n    //\n    setProduct(\"null\");\n  };\n\n  const clearAssetState = () => {\n    // setBusiness(\"\");\n    setPOnumber(\"\");\n    setPOdate(\"\");\n    setContractFrom(\"\");\n    setContractTo(\"\");\n    setBillingFrom(\"\");\n    setBillingTo(\"\");\n    setAMCRate(\"\");\n    setGST(\"\");\n    setGSTAMOUNT(\"\");\n    setNetAmount(\"\");\n\n    // customer\n    setUnit({ _id: \"\", unitName: \"\" });\n    setCustomer({ _id: \"\", customerName: \"\" });\n    setAccount({ _id: \"\", accountName: \"\" });\n  };\n\n  const ReqFieldErr = () => {\n    return (\n      <>\n        <Modal\n          isOpen={reqFieldErrModal}\n          onClose={() => setReqFieldErrModal(false)}\n        >\n          <ModalHeader>Required Field Not filled!</ModalHeader>\n          <ModalBody>\n            {/* If you cant find any units, make the unit in create unit first. */}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setReqFieldErrModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <UnitListModal\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setUnit={setUnit}\n        unit={unit}\n        customer={customer}\n        setCustomer={setCustomer}\n        account={account}\n        setAccount={setAccount}\n      />\n      {/* Heading of page with float button */}\n      {/* <div className=\"flex items-center\">\n        <PageTitle>Assets Management</PageTitle>\n        <div>\n          <Button\n            className=\"mx-3\"\n            onClick={() => {\n              setFloatBox(!floatbox);\n            }}\n            icon={HeartIcon}\n            layout=\"link\"\n            aria-label=\"Like\"\n          />\n        </div>\n      </div> */}\n      {assetPicker()}\n      {/* <SectionTitle>Pick Product</SectionTitle> */}\n      {/* {dropdown()} */}\n      {product != \"null\" ? (\n        <div className=\"mb-20\">\n          <SectionTitle>{product} </SectionTitle>\n          {productPicker()}\n        </div>\n      ) : null}\n      {/* {productPicker()} */}\n\n      {/* --------------------------Bottom Bar-------------------------- */}\n      {/* {Bottombar()} */}\n      {ReviewSubmit()}\n      {AccCustErr()}\n      {ReqFieldErr()}\n      <div className=\"h-64\"></div>\n    </>\n  );\n}\n\nexport default CreateAsset;\n"],"sourceRoot":""}