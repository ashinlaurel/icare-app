{"version":3,"sources":["components/Modal/AssetFilters/CustomerSelection.js","components/Modal/UnitListModal.js","components/Modal/EngineerListModal.js","components/Modal/SelectEmployeeModal.js","components/Modal/SelectEmployeeModalForCalls.js"],"names":["CustomerSelection","isModalOpen","setIsModalOpen","unit","setUnit","account","setAccount","customer","setCustomer","refresh","setRefresh","theunitdetails","setTheUnitDetails","useState","customers","setCustomers","accounts","setAccounts","units","setUnits","tabIndex","setTabIndex","search","setSearch","handleChange","e","target","value","handleSubmit","a","payload","role","axios","url","API","method","data","response","console","log","useEffect","pickCustomer","_id","customerName","name","accountName","unitName","Axios","post","customerId","accs","pickAccount","accountId","u","pickUnit","contactPerson","contactNo","isOpen","onClose","className","selectedIndex","onSelect","ind","onSubmit","preventDefault","placeholder","onChange","map","i","key","onClick","type","UnitListModal","EngineerListModal","setEngineer","nextModal","values","setValues","Emp","getId","then","users","temp","user","push","catch","err","enggName","employeeName","employeeID","layout","SelectEmployeeModal","setEmployee","email","SelectEmployeeModalForCalls","limit","getter"],"mappings":"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","file":"static/js/4.4cd727b7.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../../backendapi\";\n\nexport default function CustomerSelection({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n  refresh,\n  setRefresh,\n  theunitdetails,\n  setTheUnitDetails,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async () => {\n    // e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n  useEffect(() => {\n    handleSubmit();\n  }, [search]);\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n\n      setAccounts(accs.data);\n\n      //   setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      //   setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(\"-------------piking unit\");\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      contactPerson: unit.contactPerson,\n      contactNo: unit.contactNo,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer className=\"\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>\n                <form onSubmit={(e) => e.preventDefault()}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody className=\"h-64 overflow-auto\">\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n        </ModalBody>\n        <ModalFooter>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              setRefresh(!refresh);\n              if (theunitdetails) {\n                setTheUnitDetails(unit);\n              }\n              setAccounts([]);\n              setUnits([]);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../backendapi\";\n\n\nexport default function UnitListModal({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table className=\" w-full overflow-y-scroll\">\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} >\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody className=\"overflow-y-scroll h-64\" >\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n          \n        </ModalBody>\n        <ModalFooter>\n        <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { API } from \"../../backendapi\";\nimport Emp from \"../../helpers/auth/EmpProfile\";\n\nexport default function EngineerListModal({\n  isModalOpen,\n  setIsModalOpen,\n  setEngineer,\n  nextModal,\n}) {\n  const [values, setValues] = useState([]);\n  useEffect(() => {\n    console.log(\"HERERRE\");\n    Axios.post(`${API}/admin/${Emp.getId()}/getAll`)\n      .then((users) => {\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        setValues(temp);\n      })\n      .catch((err) => {\n        console.log(\"axiosErr\", err);\n      });\n  }, []);\n\n  const userTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Name</TableCell>\n              {/* <TableCell>Email</TableCell> */}\n              <TableCell>Employee ID</TableCell>\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {values.map((user, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-blue-300 dark:hover:bg-gray-100 bg-opacity-25 \"\n                onClick={() => {\n                  setEngineer({\n                    _id: user._id,\n                    enggName: user.employeeName,\n                  });\n                  setIsModalOpen(false);\n                  nextModal(true);\n                }}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{user.employeeName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{user.employeeID}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          {/* <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            /> */}\n        </TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>Assign Engineer</ModalHeader>\n        <ModalBody>{userTable()}</ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Cancel\n          </Button>\n          <Button className=\"w-full sm:w-auto\">Accept</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { API } from \"../../backendapi\";\nimport Emp from \"../../helpers/auth/EmpProfile\";\n\nexport default function SelectEmployeeModal({\n  isModalOpen,\n  setIsModalOpen,\n  setEmployee,\n}) {\n  const [values, setValues] = useState([]);\n  useEffect(() => {\n    console.log(\"HERERRE\");\n    Axios.post(`${API}/admin/${Emp.getId()}/getAllEmpData`)\n      .then((users) => {\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        setValues(temp);\n      })\n      .catch((err) => {\n        console.log(\"axiosErr\", err);\n      });\n  }, []);\n\n  const userTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Name</TableCell>\n              <TableCell>Email</TableCell>\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {values.map((user, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-blue-300 dark:hover:bg-gray-100 bg-opacity-25 \"\n                onClick={() => {\n                  console.log(user);\n                  setEmployee(user);\n\n                  setIsModalOpen(false);\n                  //   nextModal(true)\n                }}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{user.employeeName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{user.email}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          {/* <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            /> */}\n        </TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>Select Employee</ModalHeader>\n        <ModalBody>{userTable()}</ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Cancel\n          </Button>\n          <Button className=\"w-full sm:w-auto\">Accept</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { API } from \"../../backendapi\";\nimport Emp from \"../../helpers/auth/EmpProfile\";\n\nexport default function SelectEmployeeModalForCalls({\n  isModalOpen,\n  setIsModalOpen,\n  setEmployee,\n}) {\n  const [values, setValues] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    // console.log(\"HERERRE\");\n    async function getter() {\n      let payload = {\n        search: search,\n        limit: 5,\n      };\n      // console.log(\"payload\", payload);\n\n      // here we are just getting all the employees not their calls\n      try {\n        let users = await Axios({\n          url: `${API}/admin/${Emp.getId()}/getAllEmpCalls`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        // console.log(temp);\n        setValues(temp);\n      } catch (error) {\n        throw error;\n      }\n    }\n\n    getter();\n  }, [search]);\n\n  const userTable = () => {\n    return (\n      <div>\n        <form\n          className=\"mb-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n          }}\n        >\n          <input\n            className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n            placeholder=\"Search Customers\"\n            onChange={(e) => {\n              setSearch(e.target.value);\n            }}\n          />\n        </form>\n        <TableContainer className=\" max-h-64 overflow-scroll\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Name</TableCell>\n                <TableCell>Email</TableCell>\n                {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {values.map((user, i) => (\n                <TableRow\n                  key={i}\n                  className=\"hover:bg-blue-300 dark:hover:bg-gray-100 bg-opacity-25 \"\n                  onClick={() => {\n                    console.log(user);\n                    setEmployee(user);\n\n                    setIsModalOpen(false);\n                    //   nextModal(true)\n                  }}\n                >\n                  <TableCell>\n                    <div>\n                      <div>\n                        <p className=\"font-semibold\">{user.employeeName}</p>\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <div>\n                      <div>\n                        <p className=\"font-semibold\">{user.email}</p>\n                      </div>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            {/* <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            /> */}\n          </TableFooter>\n        </TableContainer>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen}>\n        <ModalHeader>Select Employee</ModalHeader>\n        <ModalBody>{userTable()}</ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n            }}\n          >\n            Cancel\n          </Button>\n          <Button className=\"w-full sm:w-auto\">Accept</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}