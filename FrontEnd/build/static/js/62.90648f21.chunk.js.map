{"version":3,"sources":["pages/Calls/CallDetails.js"],"names":["CallDetails","useHistory","params","useParams","useContext","TopBarContext","setTopHeading","topheading","id","assetid","callid","useState","historyModalOpen","setHistoryModalOpen","assethistoryModalOpen","setAssetHistoryModalOpen","_id","unitName","unit","setUnit","customerName","customer","setCustomer","accountName","account","setAccount","setProductID","brand","setBrand","model","setModel","serialno","setSerialNo","os","setOs","cpuname","cpusno","setCpu","ramname","ramsno","ram","setram","hddname","hddsno","hdd","sethdd","smpsname","smpssno","smps","setsmps","fanname","fansno","setfan","motherboardname","motherboardsno","motherboard","setmotherboard","opticaldrivename","opticaldrivesno","setopticaldrive","keyboardname","keyboardsno","kbd","setkbd","mousename","mousesno","mouse","setmouse","monitorname","monitorsno","monitor","setmonitor","gcardname","gcardsno","setgcard","enetcardname","enetcardsno","setenetcard","serialcardname","serialcardsno","setserialcard","parallelcardname","parallelcardsno","setparallelcard","hbacardname","hbacardsno","sethbacard","raidcontrollername","raidcontrollersno","setraidcontroller","tapecontrollername","tapecontrollersno","settapecontroller","othersname","otherssno","setothers","Business","setBusiness","setServiceLocation","setPOnumber","setPOdate","setContractFrom","setContractTo","setBillingFrom","setBillingTo","setAMCRate","setGSTAMOUNT","setNetAmount","assethistory","setAssetHistory","product","setProduct","itemtype","selectedItem","data","setData","setInventData","name","sno","isImgUploadModal","setIsImgUploadModal","imageUploadMessage","setImageUploadMessage","isImgUploadMenuModal","setIsImgUploadMenuModal","imgUrl","setImgUrl","imgFile","setImgFile","imageUploadMenuMessage","setGoodSpareImgUrl","setDefectiveImgUrl","setCcfrImgUrl","isHistoryImgViewModal","setIsHistoryImgViewModal","goodSpareHistoryImg","setGoodSpareHistoryImg","defectiveHistoryImg","setDefectiveHistoryImg","ccfrHistoryImg","setCcfrHistoryImg","photoUpload","photo","cb","console","log","FormData","append","axios","post","API","headers","accept","_boundary","then","response","status","error","code","fileName","location","catch","useEffect","Date","page","searchtype","searchquery","a","payload","pages","limit","filters","type","toLowerCase","condition","url","Emp","getId","method","out","temp","thetype","theitemandsystem","map","item","i","systype","thegetter","getAsset","res","asset","history","servicelocation","producttype","customerId","accountId","business","ponumber","amcrate","moment","podate","format","contractfrom","contractto","billingfrom","billingto","gstamount","netamount","cpu","length","fan","opticaldrive","keyboard","gcard","enetcard","netcardname","serialcard","parallelcard","hbacard","raidcontroller","tapecontroller","others","call","setCall","getCall","isOpen","onClose","className","callNo","entry","key","onClick","date","capitalize","engineer","callAttendDate","startOfService","endOfService","callStatus","note","actionTaken","layout","newUrl","existUrl","ccfrImgUrl","HistoryModal","AssetHistoryModal","src","width","height","onChange","e","callback","target","files","photoUploadHandler","message","contactPerson","time","employeeName","assignedDate","assignedETA","problem","state","pincode","locationType","district"],"mappings":"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","file":"static/js/62.90648f21.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { API } from \"../../backendapi\";\nimport AsyncSelect from \"react-select/async\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Input,\n  HelperText,\n  Label,\n  Select,\n  Textarea,\n  Button,\n  Dropdown,\n  DropdownItem,\n  Badge,\n} from \"@windmill/react-ui\";\n\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport { DropdownIcon } from \"../../icons\";\nimport { useMemo } from \"react\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport { capitalize } from \"../../helpers/toolfuctions/toolfunctions\";\n\nfunction CallDetails() {\n  // floatbox\n  let movehistory = useHistory();\n  const params = useParams();\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const id = params.assetid;\n  const callid = params.callid;\n  // console.log(id);\n  //modal\n  const [historyModalOpen, setHistoryModalOpen] = useState(false);\n  const [assethistoryModalOpen, setAssetHistoryModalOpen] = useState(false);\n  //customer\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n\n  //prodcut\n  const [productID, setProductID] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [serialno, setSerialNo] = useState(\"\");\n  const [os, setOs] = useState(\"\");\n  const [cpu, setCpu] = useState([{ cpuname: \"\", cpusno: \"\" }]);\n  const [ram, setram] = useState([{ ramname: \"\", ramsno: \"\" }]);\n  const [hdd, sethdd] = useState([{ hddname: \"\", hddsno: \"\" }]);\n  const [smps, setsmps] = useState([{ smpsname: \"\", smpssno: \"\" }]);\n  const [fan, setfan] = useState([{ fanname: \"\", fansno: \"\" }]);\n  const [motherboard, setmotherboard] = useState([\n    { motherboardname: \"\", motherboardsno: \"\" },\n  ]);\n  const [opticaldrive, setopticaldrive] = useState([\n    { opticaldrivename: \"\", opticaldrivesno: \"\" },\n  ]);\n  const [kbd, setkbd] = useState([{ keyboardname: \"\", keyboardsno: \"\" }]);\n  const [mouse, setmouse] = useState([{ mousename: \"\", mousesno: \"\" }]);\n  const [monitor, setmonitor] = useState([{ monitorname: \"\", monitorsno: \"\" }]);\n  const [gcard, setgcard] = useState([{ gcardname: \"\", gcardsno: \"\" }]);\n  const [enetcard, setenetcard] = useState([\n    { enetcardname: \"\", enetcardsno: \"\" },\n  ]);\n  const [serialcard, setserialcard] = useState([\n    { serialcardname: \"\", serialcardsno: \"\" },\n  ]);\n  const [parallelcard, setparallelcard] = useState([\n    { parallelcardname: \"\", parallelcardsno: \"\" },\n  ]);\n  const [hbacard, sethbacard] = useState([{ hbacardname: \"\", hbacardsno: \"\" }]);\n  const [raidcontroller, setraidcontroller] = useState([\n    { raidcontrollername: \"\", raidcontrollersno: \"\" },\n  ]);\n  const [tapecontroller, settapecontroller] = useState([\n    { tapecontrollername: \"\", tapecontrollersno: \"\" },\n  ]);\n  const [others, setothers] = useState([{ othersname: \"\", otherssno: \"\" }]);\n  //asset\n\n  const [Business, setBusiness] = useState(\"\");\n  const [servicelocation, setServiceLocation] = useState(\"\");\n  const [POnumber, setPOnumber] = useState(\"\");\n  const [POdate, setPOdate] = useState(\"\");\n  const [ContractFrom, setContractFrom] = useState(\"\");\n  const [ContractTo, setContractTo] = useState(\"\");\n  const [BillingFrom, setBillingFrom] = useState(\"\");\n  const [BillingTo, setBillingTo] = useState(\"\");\n  const [AMCRate, setAMCRate] = useState(\"\");\n  const [GST, setGST] = useState(\"\");\n  const [GSTAMOUNT, setGSTAMOUNT] = useState(\"\");\n  const [NetAmount, setNetAmount] = useState(\"\");\n  const [assethistory, setAssetHistory] = useState([]);\n\n  //////////////-------------------------------------------->Product name not in asset\n  const [product, setProduct] = useState(\"Server\");\n\n  ////////////---------------- INVENTORY state\n  const [inventory, setInventory] = useState([]);\n\n  //MODAL\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // table variable styles\n\n  const [activeRowID, setActiveRowID] = useState(-1);\n  const [secondactiveRowID, setSecondactiveRowID] = useState(-1);\n\n  // ---------------New States------------\n  const [itemtype, setItemtype] = useState(\"\"); //Full system vs item\n  const [selectedItem, setSelectedItem] = useState(\"\"); //the selected item category\n  const [data, setData] = useState([]); //for first table expansion\n  const [inventdata, setInventData] = useState([]); //for second table expansion\n  const [existswap, setExistswap] = useState([\n    {\n      name: \"Not Selected\",\n      sno: \"Not Selected\",\n    },\n  ]);\n  const [inventswap, setInventswap] = useState([\n    {\n      name: \"Not Selected\",\n      sno: \"Not Selected\",\n    },\n  ]);\n\n  // Image states -----------------------------------------------------------------\n  const [isImgUploadModal, setIsImgUploadModal] = useState(false);\n  const [imageUploadMessage, setImageUploadMessage] = useState(\"\");\n  const [isImgUploadMenuModal, setIsImgUploadMenuModal] = useState(false);\n  const [imgUrl, setImgUrl] = useState(\"\");\n  const [imgFile, setImgFile] = useState(null);\n  const [imageUploadMenuMessage, setImageUploadMenuMessage] = useState(\"\");\n\n  const [goodSpareImgUrl, setGoodSpareImgUrl] = useState(\"\");\n  const [defectiveImgUrl, setDefectiveImgUrl] = useState(\"\");\n  const [ccfrImgUrl, setCcfrImgUrl] = useState(\"\");\n\n  const [isHistoryImgViewModal, setIsHistoryImgViewModal] = useState(false);\n  const [goodSpareHistoryImg, setGoodSpareHistoryImg] = useState(\"\");\n  const [defectiveHistoryImg, setDefectiveHistoryImg] = useState(\"\");\n  const [ccfrHistoryImg, setCcfrHistoryImg] = useState(\"\");\n\n  const photoUploadHandler = (e, callback) => {\n    callback(e.target.files[0]);\n  };\n\n  const photoUpload = (photo, cb) => {\n    console.log(photo);\n    if (photo == null) {\n      setImageUploadMessage(\"Image not selected\");\n      setIsImgUploadModal(true);\n      return;\n    }\n    setImageUploadMessage(\"Loading...\");\n    setIsImgUploadModal(true);\n\n    const data = new FormData(); // If file selected\n    data.append(\"imageUpload\", photo, photo.name);\n    // console.log(data);\n\n    axios\n      .post(`${API}/upload/img-upload`, data, {\n        headers: {\n          accept: \"application/json\",\n          \"Accept-Language\": \"en-US,en;q=0.8\",\n          \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\n        },\n      })\n      .then((response) => {\n        if (200 === response.status) {\n          // If file size is larger than expected.\n          if (response.data.error) {\n            if (\"LIMIT_FILE_SIZE\" === response.data.error.code) {\n              console.log(\"Max size: 2MB\", \"red\");\n              setImageUploadMessage(\"Maximum size is 2MB\");\n              setIsImgUploadModal(true);\n            } else {\n              console.log(response.data); // If not the given file type\n              // console.log( response.data.error, 'red' );\n              setImageUploadMessage(\"Given format not supported\");\n            }\n          } else {\n            // Success\n            let fileName = response.data;\n            console.log(\"fileName\", fileName.location);\n            console.log(\"File Uploaded\");\n            setImageUploadMessage(\"Image Uploaded\");\n            setIsImgUploadModal(true);\n            cb(response.data.location);\n          }\n        }\n      })\n      .catch((error) => {\n        // If another error\n        setImageUploadMessage(\"Error Occured\");\n        setIsImgUploadModal(true);\n        console.log(error);\n      });\n    // } else {\n    //  // if file not selected throw error\n    //  this.ocShowAlert( 'Please upload file', 'red' );\n    // }\n  };\n\n  const ImgUploadModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isImgUploadModal}\n          onClose={() => setIsImgUploadModal(false)}\n        >\n          <ModalHeader>{imageUploadMessage}</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsImgUploadModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const handleImgUpload = (message) => {\n    if (message == \"defective\") {\n      photoUpload(imgFile, (url) => {\n        console.log(\"PHOTO URL\", url);\n        setImgUrl(url);\n        setDefectiveImgUrl(url);\n      });\n    } else if (message == \"good\") {\n      photoUpload(imgFile, (url) => {\n        console.log(\"PHOTO URL\", url);\n        setImgUrl(url);\n        setGoodSpareImgUrl(url);\n      });\n    } else if (message == \"ccfr\") {\n      photoUpload(imgFile, (url) => {\n        console.log(\"PHOTO URL\", url);\n        setImgUrl(url);\n        setCcfrImgUrl(url);\n      });\n    }\n  };\n  const ImgUploadMenuModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isImgUploadMenuModal}\n          onClose={() => {\n            setImgUrl(\"\");\n            setImgFile(null);\n            setIsImgUploadMenuModal(false);\n          }}\n        >\n          <ModalHeader>{imageUploadMenuMessage}</ModalHeader>\n          <ModalBody>\n            <>\n              <img src={imgUrl} className=\"my-2\" width=\"100\" height=\"100\" />\n              <div className=\"flex-row flex  space-x-3 mt-3 \">\n                <div className=\"flex flex-col \">\n                  <Label className=\"\">\n                    <span>Image upload</span>\n                    <Input\n                      className=\"mt-1\"\n                      type=\"file\"\n                      // value={photo}\n                      onChange={(e) => photoUploadHandler(e, setImgFile)}\n                    />\n                  </Label>\n\n                  {/* <HelperText valid={false}>{err.employeeName}</HelperText> */}\n                </div>\n                <Button\n                  onClick={() => {\n                    handleImgUpload(imageUploadMenuMessage);\n                  }}\n                  layout=\"outline\"\n                  className=\"my-6    \"\n                >\n                  Upload Image\n                </Button>\n              </div>\n            </>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => {\n                setImgUrl(\"\");\n                setImgFile(null);\n                setIsImgUploadMenuModal(false);\n              }}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const HistoryImgViewModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isHistoryImgViewModal}\n          onClose={() => {\n            setDefectiveHistoryImg(\"\");\n            setGoodSpareHistoryImg(\"\");\n            setCcfrHistoryImg(\"\");\n            setIsHistoryImgViewModal(false);\n          }}\n          className=\"w-8/12 dark:bg-gray-800 p-10 my-12 h-screen  bg-gray-50 text-gray-900 dark:text-white  rounded-lg overflow-y-scroll\"\n          // className=\"w-6/12 h-8/12 dark:bg-gray-800 p-10 my-6  bg-gray-50 text-gray-900 dark:text-white  rounded-lg overflow-y-scroll text-cente items-center justify-center\"\n        >\n          <ModalHeader>Images</ModalHeader>\n          <ModalBody>\n            <div className=\"flex flex-col justify-center \">\n              {defectiveHistoryImg != \"\" ? (\n                <>\n                  <div className=\"text-lg font-semibold my-2 w-full\">\n                    {\" \"}\n                    Replaced Item\n                  </div>\n                  <img\n                    src={defectiveHistoryImg}\n                    className=\"my-2\"\n                    width=\"500\"\n                    height=\"500\"\n                  />\n                </>\n              ) : null}\n              {goodSpareHistoryImg != \"\" ? (\n                <>\n                  <div className=\"text-lg font-semibold my-2 w-full\">\n                    {\" \"}\n                    Replaced by\n                  </div>\n                  <img\n                    src={goodSpareHistoryImg}\n                    className=\"my-2\"\n                    width=\"500\"\n                    height=\"500\"\n                  />\n                </>\n              ) : null}\n              {ccfrHistoryImg != \"\" ? (\n                <>\n                  <div className=\"text-lg font-semibold my-2 w-full\"> CCFR</div>\n                  <img\n                    src={ccfrHistoryImg}\n                    className=\"my-2\"\n                    width=\"500\"\n                    height=\"500\"\n                  />\n                </>\n              ) : null}\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => {\n                setDefectiveHistoryImg(\"\");\n                setGoodSpareHistoryImg(\"\");\n                setCcfrHistoryImg(\"\");\n                setIsHistoryImgViewModal(false);\n              }}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //-----------------------------------------------------------------\n\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Call Details\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  // filterhooks\n  const [type, setType] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [toLocation, setToLocation] = useState(\"\");\n  const [LSTNo, setLSTNo] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [condition, setCondition] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // imp states\n  const [callAttendDate, setCallAttendDate] = useState(\"\");\n  const [startOfService, setStartOfService] = useState(\"\");\n  const [endOfService, setEndOfService] = useState(\"\");\n  const [actionTaken, setActionTaken] = useState(\"\");\n\n  // use effect to add fields to the item coming from asset\n  useEffect(() => {\n    let temp = data;\n    let thetype = selectedItem.toLowerCase();\n    let theitemandsystem = itemtype.toLowerCase();\n\n    temp.map((item, i) => {\n      item.name = item[`${thetype}name`];\n      item.sno = item[`${thetype}sno`];\n      item.type = thetype;\n      item.condition = \"Bad\";\n      item.systype = theitemandsystem;\n    });\n\n    console.log(temp);\n    setData(temp);\n    return () => {\n      \"Data Updation Done\";\n    };\n  }, [data]);\n\n  // -----use effect to pull new inventory list according to filters\n  useEffect(() => {\n    thegetter();\n  }, [selectedItem]);\n\n  async function thegetter() {\n    console.log(\"getter called\");\n    console.log(selectedItem);\n    let payload = {\n      pages: {\n        page: page,\n        limit: 1000000,\n      },\n      filters: {\n        type: selectedItem.toLowerCase(),\n        location: location,\n        condition: \"Good\",\n        searchtype: searchtype,\n        searchquery: searchquery,\n      },\n    };\n    // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n    try {\n      let response = await axios({\n        url: `${API}/inventory/${Emp.getId()}/getall`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data.out);\n      // setTotalResults(response.data.total);\n      // const { total, data } = response.data;\n      // console.log(data + \"Now\");\n\n      setInventData(response.data.out);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // History Modal\n  const HistoryModal = () => {\n    if (call.history) {\n      let data = call.history;\n      // console.log(data);\n\n      return (\n        <>\n          <Modal\n            isOpen={historyModalOpen}\n            onClose={() => setHistoryModalOpen(false)}\n            className=\"w-9/12 dark:bg-gray-800 p-10 my-6  bg-gray-50 text-gray-900 dark:text-white  rounded-lg overflow-y-scroll\"\n          >\n            <ModalHeader className=\"flex flex-row justify-between text-xl\">\n              {/* <div>{item.name}</div> */}\n              <div>\n                Call No: <Badge>{call.callNo}</Badge>{\" \"}\n              </div>\n            </ModalHeader>\n            <ModalBody>\n              <div className=\"font-semibold text-xl my-2\">Call History</div>\n              {/* ------------------------- Table ------------------------------ */}\n              <TableContainer className=\"mt-4\">\n                <Table>\n                  <TableHeader>\n                    <tr>\n                      <TableCell>Date</TableCell>\n                      <TableCell>Engineer</TableCell>\n                      <TableCell>Attended Date</TableCell>\n                      <TableCell>Start Of Service</TableCell>\n                      <TableCell>End Of Service</TableCell>\n                      <TableCell>Status</TableCell>\n                      <TableCell>Notes</TableCell>\n                      <TableCell>Action Taken</TableCell>\n                      <TableCell>Images</TableCell>\n                    </tr>\n                  </TableHeader>\n                  <TableBody>\n                    {data.map((entry, i) => (\n                      <TableRow\n                        className={`hover:shadow-lg dark:hover:bg-gray-600 \n                       `}\n                        key={i}\n                        onClick={() => {\n                          // setActiveRowId(user._id);\n                          // console.log(\"the id is \" );\n                          // setSelectedProd(user);\n                          // setAssetDetails(user);\n                          // console.log(user.product.keyboard[0].keyboardname);\n                        }}\n                      >\n                        <TableCell className=\"w-8\">\n                          <div className=\"flex items-center text-sm \">\n                            <div>\n                              <p className=\"font-semibold\">\n                                {moment(entry.date).format(\"DD-MM-YYYY\")}\n                              </p>\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {capitalize(entry.engineer)}\n                          </span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {entry.callAttendDate}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {entry.startOfService}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{entry.endOfService}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span>\n                            {call.callStatus == 0 ? (\n                              <Badge>Pending For Allocation</Badge>\n                            ) : null}\n                            {call.callStatus == 1 ? (\n                              <Badge>Pending for Percall Approval</Badge>\n                            ) : null}\n                            {call.callStatus == 2 ? (\n                              <Badge>Pending for Response</Badge>\n                            ) : null}\n                            {call.callStatus == 3 ? (\n                              <Badge>Pending for OEM Response</Badge>\n                            ) : null}\n                            {call.callStatus == 4 ? (\n                              <Badge>Pending for 2nd Response</Badge>\n                            ) : null}\n                            {call.callStatus == 5 ? (\n                              <Badge>Pending for Customer</Badge>\n                            ) : null}\n                            {call.callStatus == 6 ? (\n                              <Badge>Under Observation</Badge>\n                            ) : null}\n                            {call.callStatus == 7 ? (\n                              <Badge>Pending for Others</Badge>\n                            ) : null}\n                            {call.callStatus == 8 ? (\n                              <Badge>Pending for Spare</Badge>\n                            ) : null}\n                            {call.callStatus == 9 ? (\n                              <Badge>Spare in Transit</Badge>\n                            ) : null}\n                            {call.callStatus == 10 ? (\n                              <Badge>Cancelled Calls</Badge>\n                            ) : null}\n                            {call.callStatus == 11 ? (\n                              <Badge>Closed Calls</Badge>\n                            ) : null}\n                            {call.callStatus == 12 ? (\n                              <Badge>Spare Taken CMRR</Badge>\n                            ) : null}\n                            {call.callStatus == 13 ? (\n                              <Badge>Pending For Spare Collection</Badge>\n                            ) : null}\n                            {call.callStatus == 14 ? (\n                              <Badge>Standby Given</Badge>\n                            ) : null}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm  w-1/2\">{entry.note}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{entry.actionTaken}</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <Button\n                            layout=\"outline\"\n                            onClick={() => {\n                              if (entry.newUrl)\n                                setGoodSpareHistoryImg(entry.newUrl);\n                              if (entry.existUrl)\n                                setDefectiveHistoryImg(entry.existUrl);\n                              if (entry.ccfrImgUrl)\n                                setCcfrHistoryImg(entry.ccfrImgUrl);\n                              setIsHistoryImgViewModal(true);\n                            }}\n                          >\n                            Show\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n                {/* <TableFooter>\n                  <Pagination\n                    totalResults={totalResults}\n                    resultsPerPage={resultsPerPage}\n                    label=\"Table navigation\"\n                    onChange={onPageChange}\n                  />\n                </TableFooter> */}\n              </TableContainer>\n            </ModalBody>\n            <ModalFooter></ModalFooter>\n          </Modal>\n        </>\n      );\n    }\n  };\n\n  // Asset History Modal\n  const AssetHistoryModal = () => {\n    if (assethistory[0]) {\n      // let data = call.history;\n      // console.log(data);\n\n      return (\n        <>\n          <Modal\n            isOpen={assethistoryModalOpen}\n            onClose={() => setAssetHistoryModalOpen(false)}\n            className=\"w-9/12 dark:bg-gray-800 p-10 my-6  bg-gray-50 text-gray-900 dark:text-white  rounded-lg overflow-y-scroll\"\n          >\n            <ModalHeader className=\"flex flex-row justify-between text-xl\">\n              {/* <div>{item.name}</div> */}\n              <div>\n                Asset Serial: <Badge>{call.callNo}</Badge>{\" \"}\n              </div>\n            </ModalHeader>\n            <ModalBody>\n              <div className=\"font-semibold text-xl my-2\">Asset History</div>\n              {/* ------------------------- Table ------------------------------ */}\n              <TableContainer className=\"mt-4\">\n                <Table>\n                  <TableHeader>\n                    <tr>\n                      <TableCell>Date</TableCell>\n                      <TableCell>Engineer</TableCell>\n                      <TableCell>Attended Date</TableCell>\n                      <TableCell>Start Of Service</TableCell>\n                      <TableCell>End Of Service</TableCell>\n                      <TableCell>Status</TableCell>\n                      <TableCell>Notes</TableCell>\n                      <TableCell>Action Taken</TableCell>\n                    </tr>\n                  </TableHeader>\n                  <TableBody>\n                    {assethistory.map((entry, i) => (\n                      <TableRow\n                        className={`hover:shadow-lg dark:hover:bg-gray-600 \n                       `}\n                        key={i}\n                        onClick={() => {\n                          // setActiveRowId(user._id);\n                          // console.log(\"the id is \" + user._id);\n                          // setSelectedProd(user);\n                          // setAssetDetails(user);\n                          // console.log(user.product.keyboard[0].keyboardname);\n                        }}\n                      >\n                        <TableCell className=\"w-8\">\n                          <div className=\"flex items-center text-sm \">\n                            <div>\n                              <p className=\"font-semibold\">\n                                {moment(entry.date).format(\"DD-MM-YYYY\")}\n                              </p>\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {capitalize(entry.engineer)}\n                          </span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {entry.callAttendDate}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">\n                            {entry.startOfService}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{entry.endOfService}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span>\n                            {call.callStatus == 0 ? (\n                              <Badge>Pending For Allocation</Badge>\n                            ) : null}\n                            {call.callStatus == 1 ? (\n                              <Badge>Pending for Percall Approval</Badge>\n                            ) : null}\n                            {call.callStatus == 2 ? (\n                              <Badge>Pending for Response</Badge>\n                            ) : null}\n                            {call.callStatus == 3 ? (\n                              <Badge>Pending for OEM Response</Badge>\n                            ) : null}\n                            {call.callStatus == 4 ? (\n                              <Badge>Pending for 2nd Response</Badge>\n                            ) : null}\n                            {call.callStatus == 5 ? (\n                              <Badge>Pending for Customer</Badge>\n                            ) : null}\n                            {call.callStatus == 6 ? (\n                              <Badge>Under Observation</Badge>\n                            ) : null}\n                            {call.callStatus == 7 ? (\n                              <Badge>Pending for Others</Badge>\n                            ) : null}\n                            {call.callStatus == 8 ? (\n                              <Badge>Pending for Spare</Badge>\n                            ) : null}\n                            {call.callStatus == 9 ? (\n                              <Badge>Spare in Transit</Badge>\n                            ) : null}\n                            {call.callStatus == 10 ? (\n                              <Badge>Cancelled Calls</Badge>\n                            ) : null}\n                            {call.callStatus == 11 ? (\n                              <Badge>Closed Calls</Badge>\n                            ) : null}\n                            {call.callStatus == 12 ? (\n                              <Badge>Spare Taken CMRR</Badge>\n                            ) : null}\n                            {call.callStatus == 13 ? (\n                              <Badge>Pending For Spare Collection</Badge>\n                            ) : null}\n                            {call.callStatus == 14 ? (\n                              <Badge>Standby Given</Badge>\n                            ) : null}\n                          </span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm  w-1/2\">{entry.note}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{entry.actionTaken}</span>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n                {/* <TableFooter>\n                  <Pagination\n                    totalResults={totalResults}\n                    resultsPerPage={resultsPerPage}\n                    label=\"Table navigation\"\n                    onChange={onPageChange}\n                  />\n                </TableFooter> */}\n              </TableContainer>\n            </ModalBody>\n            <ModalFooter></ModalFooter>\n          </Modal>\n        </>\n      );\n    }\n  };\n\n  // -----getting inventory items\n\n  const getAsset = async () => {\n    console.log(\"ASSET CALL\");\n    try {\n      let res = await axios.post(`${API}/asset/${Emp.getId()}/getbyid`, {\n        id: id,\n      });\n      console.log(\"asset\", res.data);\n      let asset = res.data;\n      setProductID(asset.product._id);\n      setAssetHistory(asset.product.history);\n\n      setServiceLocation(asset.servicelocation);\n      setProduct(asset.producttype);\n      setUnit({ _id: id, unitName: asset.unitName });\n      setCustomer({ _id: asset.customerId, customerName: asset.customerName });\n      setAccount({ _id: asset.accountId, accountName: asset.accountName });\n\n      ////------------------------>>>>>>>>\n      // setProduct(\"Server\");\n      ////////---------ASSET INFO\n      setBusiness(asset.business);\n      setPOnumber(asset.ponumber);\n      setAMCRate(asset.amcrate);\n      // Dates --------------------------\n      setPOdate(moment(asset.podate).format(\"YYYY-MM-DD\"));\n      setContractFrom(moment(asset.contractfrom).format(\"YYYY-MM-DD\"));\n      setContractTo(moment(asset.contractto).format(\"YYYY-MM-DD\"));\n      setBillingFrom(moment(asset.billingfrom).format(\"YYYY-MM-DD\"));\n      setBillingTo(moment(asset.billingto).format(\"YYYY-MM-DD\"));\n      ////////////------------>>>>>>>> misiing field GST(asset.gs)\n      setGSTAMOUNT(asset.gstamount);\n      setNetAmount(asset.netamount);\n      // setProduct(asset);\n      //////////////////////////////\n\n      setBrand(asset.product.brand);\n      setModel(asset.product.model);\n      setSerialNo(asset.product.serialno);\n      setOs(asset.product.os);\n      setCpu(asset.product.cpu);\n      setram(asset.product.ram);\n      if (asset.product.hdd.length == 0) sethdd([{ hddname: \"\", hddsno: \"\" }]);\n      else sethdd(asset.product.hdd);\n      if (asset.product.smps.length == 0)\n        setsmps([{ smpsname: \"\", smpssno: \"\" }]);\n      else setsmps(asset.product.smps);\n      if (asset.product.fan.length == 0) setfan([{ fanname: \"\", fansno: \"\" }]);\n      else setfan(asset.product.fan);\n      if (asset.product.motherboard.length == 0)\n        setmotherboard([{ motherboardname: \"\", motherboardsno: \"\" }]);\n      else setmotherboard(asset.product.motherboard);\n      if (asset.product.opticaldrive.length == 0)\n        setopticaldrive([{ opticaldrivename: \"\", opticaldrivesno: \"\" }]);\n      else setopticaldrive(asset.product.opticaldrive);\n      if (asset.product.keyboard.length == 0)\n        setkbd([{ keyboardname: \"\", keyboardsno: \"\" }]);\n      else setkbd(asset.product.keyboard);\n      if (asset.product.mouse.length == 0)\n        setmouse([{ mousename: \"\", mousesno: \"\" }]);\n      else setmouse(asset.product.mouse);\n      if (asset.product.monitor.length == 0)\n        setmonitor([{ monitorname: \"\", monitorsno: \"\" }]);\n      else setmonitor(asset.product.monitor);\n      if (asset.product.gcard.length == 0)\n        setgcard([{ gcardname: \"\", gcardsno: \"\" }]);\n      else setgcard(asset.product.gcard);\n      if (asset.product.enetcard.length == 0)\n        setenetcard([{ netcardname: \"\", enetcardsno: \"\" }]);\n      else setenetcard(asset.product.enetcard);\n      if (asset.product.serialcard.length == 0)\n        setserialcard([{ serialcardname: \"\", serialcardsno: \"\" }]);\n      else setserialcard(asset.product.serialcard);\n\n      if (asset.product.parallelcard.length == 0)\n        setparallelcard([{ parallelcardname: \"\", parallelcardsno: \"\" }]);\n      else setparallelcard(asset.product.parallelcard);\n\n      if (asset.product.hbacard.length == 0)\n        sethbacard([{ hbacardname: \"\", hbacardsno: \"\" }]);\n      else sethbacard(asset.product.hbacard);\n\n      if (asset.product.raidcontroller.length == 0)\n        setraidcontroller([{ raidcontrollername: \"\", raidcontrollersno: \"\" }]);\n      else setraidcontroller(asset.product.raidcontroller);\n\n      if (asset.product.tapecontroller.length == 0)\n        settapecontroller([{ tapecontrollername: \"\", tapecontrollersno: \"\" }]);\n      else settapecontroller(asset.product.tapecontroller);\n\n      if (asset.product.others.length == 0)\n        setothers([{ othersname: \"\", otherssno: \"\" }]);\n      else setothers(asset.product.others);\n    } catch (err) {\n      console.log(\"assetFind Error\", err);\n    }\n  };\n\n  ////// CALL\n\n  const [call, setCall] = useState({});\n\n  const getCall = async () => {\n    try {\n      let res = await axios.post(`${API}/call/${Emp.getId()}/getbyid`, {\n        id: callid,\n      });\n      console.log(\"call\", res.data);\n      setCall(res.data);\n    } catch (err) {\n      console.log(\"call Find Error\", err);\n    }\n  };\n\n  useEffect(() => {\n    getAsset();\n    getCall();\n  }, []);\n\n  // ------Modals------\n\n  const AssetBar = () => {\n    return (\n      <div className=\"dark:text-white my-4 \">\n        {/* Row 1  */}\n        {/* <div className=\"text-xl font-semibold\">Asset Information</div> */}\n        {/* Row 1*/}\n        <div className=\"flex space-x-1 flex-wrap\">\n          <div className=\"dark:text-gray-200 text-black text-sm flex flex-wrap space-x-2 items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start  w-full my-2 \">\n            <div className=\" \">\n              <span>\n                <span className=\" font-semibold \">\n                  <span>Call Number: </span>\n                </span>\n                {call.callNo}\n              </span>\n            </div>\n            <div className=\" \">\n              <span>\n                <span className=\" font-semibold \">\n                  <span>Contact Person: </span>\n                </span>\n                {call.contactPerson}\n              </span>\n            </div>\n            <div className=\" \">\n              <span>\n                <span className=\" font-semibold \">\n                  <span>Date: </span>\n                </span>\n                {moment(call.date).format(\"DD-MM-YYYY\")}\n              </span>\n            </div>\n\n            <div className=\" \">\n              <span>\n                <span className=\" font-semibold \">\n                  <span>Time: </span>\n                </span>\n                {call.time}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"dark:text-gray-200 text-black text-sm space-x-1  flex flex-row items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start my-2 \">\n          <div className=\" \">\n            <span>\n              <span className=\" font-semibold \">\n                <span>Engineer: </span>\n              </span>\n              {call.employeeName}\n            </span>\n          </div>\n          <div className=\" \">\n            <span>\n              <span className=\" font-semibold \">\n                <span>AssignedDate: </span>\n              </span>\n              {moment(call.assignedDate).format(\"DD-MM-YYYY\")}\n            </span>\n          </div>\n          <div className=\" \">\n            <span>\n              <span className=\" font-semibold \">\n                <span>ETA: </span>\n              </span>\n              {call.assignedETA}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"dark:text-gray-200 text-black text-sm space-x-1  flex flex-row items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start my-2 \">\n          <div className=\" font-semibold \">\n            <span>Call Status: </span>\n          </div>\n          <span>\n            {call.callStatus == 0 ? (\n              <Badge>Pending For Allocation</Badge>\n            ) : null}\n            {call.callStatus == 1 ? (\n              <Badge>Pending for Percall Approval</Badge>\n            ) : null}\n            {call.callStatus == 2 ? <Badge>Pending for Response</Badge> : null}\n            {call.callStatus == 3 ? (\n              <Badge>Pending for OEM Response</Badge>\n            ) : null}\n            {call.callStatus == 4 ? (\n              <Badge>Pending for 2nd Response</Badge>\n            ) : null}\n            {call.callStatus == 5 ? <Badge>Pending for Customer</Badge> : null}\n            {call.callStatus == 6 ? <Badge>Under Observation</Badge> : null}\n            {call.callStatus == 7 ? <Badge>Pending for Others</Badge> : null}\n            {call.callStatus == 8 ? <Badge>Pending for Spare</Badge> : null}\n            {call.callStatus == 9 ? <Badge>Spare in Transit</Badge> : null}\n            {call.callStatus == 10 ? <Badge>Cancelled Calls</Badge> : null}\n            {call.callStatus == 11 ? <Badge>Closed Calls</Badge> : null}\n            {call.callStatus == 12 ? <Badge>Spare Taken CMRR</Badge> : null}\n            {call.callStatus == 13 ? (\n              <Badge>Pending For Spare Collection</Badge>\n            ) : null}\n            {call.callStatus == 14 ? <Badge>Standby Given</Badge> : null}\n          </span>\n        </div>\n\n        <div className=\"dark:text-gray-200 text-black text-sm flex flex-col flex-wrap items-start bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start  w-full  \">\n          {/* /////////////////////////////// . Problem Description  ///////////////////////////////////////////// */}\n          <div className=\" font-semibold\">\n            <span>\n              Problem Description:{\" \"}\n              <span className=\"font-normal\"> {call.problem}</span>\n            </span>\n          </div>\n        </div>\n\n        {/*  Row 2*/}\n\n        <div className=\"flex space-x-1\">\n          <div className=\"dark:text-gray-200 text-black text-sm space-x-2  flex items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start w-full my-2\">\n            <div className=\" \">\n              <span>\n                {\" \"}\n                <span className=\" font-semibold \">Brand :</span>\n                {brand}\n              </span>\n            </div>\n            <div className=\" \">\n              <span>\n                <span className=\" font-semibold \">Model:</span>\n                {model}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex space-x-1\">\n          <div className=\"dark:text-gray-200 text-black text-sm space-x-2  flex items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start w-full my-2\">\n            <div className=\" \">\n              <span>\n                <span className=\" font-semibold \">Serial Number:</span>\n                {serialno}\n              </span>\n            </div>\n\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <div className=\"\">\n                  <span>\n                    <span className=\" font-semibold \">Operating System :</span>\n                    {os}\n                  </span>\n                </div>\n              </>\n            ) : null}\n          </div>\n        </div>\n        {/* <div className=\"dark:text-gray-200 text-black text-sm  bg-gray-100 dark:bg-gray-800 p-2 rounded-md  my-2 w-1/2 flex items-center justify-end space-x-1\">\n            <Button\n              onClick={() => {\n                setAssetHistoryModalOpen(true);\n              }}\n              layout=\"outline\"\n            >\n              View Asset History\n            </Button>\n\n            <Button\n              onClick={() => {\n                setHistoryModalOpen(true);\n              }}\n              layout=\"outline\"\n            >\n              View Call History\n            </Button>\n          </div> */}\n\n        <div className=\"dark:text-gray-200  text-black flex flex-col md:flex-row flex-wrap items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-begin lg:justify-around lg:space-x-8  w-full \">\n          {/* Row - 1 */}\n          <div className=\"flex flex-col  text-sm my-3  mx-3  align-left w-full lg:w-1/6\">\n            <div>\n              <span className=\"font-semibold w-1/5\">Product Type :</span>{\" \"}\n              {product}\n            </div>\n            {unit.customerId ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">State : </span>{\" \"}\n                {unit.customerId.state}\n              </div>\n            ) : null}\n            <div>\n              <span className=\"font-semibold w-1/5\">Account :</span>{\" \"}\n              {account.accountName}\n            </div>\n\n            {mouse[0] && mouse[0].mousename != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Mouse Model :</span>{\" \"}\n                {mouse[0] ? mouse[0].mousename : \"\"}\n              </div>\n            ) : null}\n            {mouse[0] && mouse[0].mousename != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Mouse Serial : </span>{\" \"}\n                {mouse[0] ? mouse[0].mousesno : \"\"}\n              </div>\n            ) : null}\n          </div>\n\n          {/*  Row 2 */}\n\n          <div className=\"flex flex-col  text-sm my-3 mx-3 align-left w-full lg:w-1/6  \">\n            <div>\n              <span className=\"font-semibold w-1/5\">Customer : </span>{\" \"}\n              {customer.customerName}\n            </div>\n            <div>\n              <span className=\"font-semibold w-1/5\">Unit : </span>{\" \"}\n              {unit.unitName}\n            </div>\n            {unit.customerId ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">PIN Code : </span>{\" \"}\n                {unit.customerId.pincode}\n              </div>\n            ) : null}\n            {/* ---------------------------------------------------------------------------------------------------------------- */}\n            {kbd[0] && kbd[0].keyboardname != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">KBD Model :</span>{\" \"}\n                {kbd[0].keyboardname}\n              </div>\n            ) : null}\n\n            {kbd[0] && kbd[0].keyboardname != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">KBD Serial: </span>{\" \"}\n                {kbd[0] ? kbd[0].keyboardsno : \"\"}\n              </div>\n            ) : null}\n          </div>\n          {/*  Row 3 */}\n\n          <div className=\" flex flex-col  text-sm my-3 mx-3 align-left w-full lg:w-1/6 \">\n            {unit.customerId ? (\n              <div>\n                <span className=\"font-semibold w-1/5 \">Location type : </span>{\" \"}\n                {unit.customerId.locationType}\n              </div>\n            ) : null}\n            {/* ---------------------------------------------------------------------------------------------------------------- */}\n            {monitor[0] && monitor[0].monitorname != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5 \">Monitor : </span>{\" \"}\n                {monitor[0] ? monitor[0].monitorname : \"\"}\n              </div>\n            ) : null}\n            {monitor[0] && monitor[0].monitorsno != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5 \">Monitor Serial :</span>{\" \"}\n                {monitor[0] ? monitor[0].monitorsno : \"\"}\n              </div>\n            ) : null}\n\n            {smps[0] && smps[0].smpsname != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5 \">SMPS1 Model :</span>{\" \"}\n                {smps[0] ? smps[0].smpsname : \"\"}\n              </div>\n            ) : null}\n            {smps[0] && smps[0].smpssno != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5 \">SMPS1 Serial : </span>{\" \"}\n                {smps[0] ? smps[0].smpssno : \"\"}\n              </div>\n            ) : null}\n          </div>\n          {/* Row 4 */}\n\n          <div className=\"flex flex-col  text-sm my-3 mx-3 align-left w-full lg:w-1/6 \">\n            {/* ---------------------------------------------------------------------------------------------------------------- */}\n            {hdd[0] && hdd[0].hddname != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5 \">HDD1 Model:</span>{\" \"}\n                {hdd[0] ? hdd[0].hddname : \"\"}\n              </div>\n            ) : null}\n            {hdd[0] && hdd[0].hddsno != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5 \">HDD1 Serial :</span>{\" \"}\n                {hdd[0] ? hdd[0].hddsno : \"\"}\n              </div>\n            ) : null}\n\n            {hdd[1] && hdd[1].hddname != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5 \">HDD2 Model : </span>{\" \"}\n                {hdd[1] ? hdd[1].hddname : \"\"}\n              </div>\n            ) : null}\n\n            {hdd[1] && hdd[1].hddsno != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5 \">HDD2 Serial: </span>{\" \"}\n                {hdd[1] ? hdd[1].hddsno : \"\"}\n              </div>\n            ) : null}\n            {motherboard[0] && motherboard[0].motherboardname != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5 \">Motherboard: </span>{\" \"}\n                {motherboard[0] ? motherboard[0].motherboardname : \"\"}\n              </div>\n            ) : null}\n\n            {motherboard[0] && motherboard[0].motherboardsno != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5 \">MBD Serial : </span>\n                {motherboard[0] ? motherboard[0].motherboardsno : \"\"}\n              </div>\n            ) : null}\n          </div>\n          {/* -----------Row 5---------- */}\n          <div className=\"flex flex-col  text-sm my-3  mx-3 align-left w-full lg:w-1/6 \">\n            <div>\n              <span className=\"font-semibold w-1/5\">Business : </span>{\" \"}\n              {Business}\n            </div>\n            {unit.customerId ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">District : </span>{\" \"}\n                {unit.customerId.district}\n              </div>\n            ) : null}\n            {/* ---------------------------------------------------------------------------------------------------------------- */}\n\n            {ram[0] && ram[0].ramname != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">RAM1 Modell:</span>{\" \"}\n                {ram[0] ? ram[0].ramname : \"\"}\n              </div>\n            ) : null}\n            {ram[0] && ram[0].ramsno != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">RAM1 Serial:</span>{\" \"}\n                {ram[0] ? ram[0].ramsno : \"\"}\n              </div>\n            ) : null}\n\n            {ram[1] && ram[1].ramname != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">RAM2 Model:</span>{\" \"}\n                {ram[1] ? ram[1].ramname : \"\"}\n              </div>\n            ) : null}\n\n            {ram[1] && ram[1].ramsno != \"\" ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">RAM2 Serial : </span>{\" \"}\n                {ram[1] ? ram[1].ramsno : \"\"}\n              </div>\n            ) : null}\n            {/* {opticaldrive[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Optical Model: </span>{\" \"}\n                {opticaldrive[0] ? opticaldrive[0].opticaldrivename : \"\"}\n              </div>\n            ) : null}\n\n            {opticaldrive[0] ? (\n              <div>\n                <span className=\"font-semibold w-1/5\">Optical Serial : </span>{\" \"}\n                {opticaldrive[0] ? opticaldrive[0].opticaldrivesno : \"\"}\n              </div>\n            ) : null} */}\n          </div>\n        </div>\n\n        {/* <hr className=\"my-4\" /> */}\n\n        {/* <div className=\"flex space-x-1\">\n          <div className=\"dark:text-gray-200 text-black text-sm flex  flex-wrap items-center bg-gray-100 dark:bg-gray-800 p-2 rounded-md justify-start  w-full my-2 \">\n            {/* /////////////////////////////// . Engineer INFO  ///////////////////////////////////////////// */}\n\n        {/* //////////////////////////////////////////////////////////////////////////// */}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {HistoryModal()}\n      {AssetHistoryModal()}\n      {ImgUploadModal()}\n      {ImgUploadMenuModal()}\n      {HistoryImgViewModal()}\n      {AssetBar()}\n    </>\n  );\n}\n\nexport default CallDetails;\n"],"sourceRoot":""}