{"version":3,"sources":["pages/Assets/OriginalAssetView.js"],"names":["OriginalAssetView","useContext","TopBarContext","setTopHeading","topheading","useState","id","useParams","submitModal","setSubmitModal","_id","unitName","unit","setUnit","customerName","customer","setCustomer","accountName","account","setAccount","brand","setBrand","model","setModel","serialno","setSerialNo","os","setOs","cpuname","cpusno","cpu","setCpu","ramname","ramsno","ram","setram","hddname","hddsno","hdd","sethdd","smpsname","smpssno","smps","setsmps","fanname","fansno","fan","setfan","motherboardname","motherboardsno","motherboard","setmotherboard","opticaldrivename","opticaldrivesno","opticaldrive","setopticaldrive","keyboardname","keyboardsno","kbd","setkbd","mousename","mousesno","mouse","setmouse","monitorname","monitorsno","monitor","setmonitor","gcardname","gcardsno","gcard","setgcard","enetcardname","enetcardsno","enetcard","setenetcard","serialcardname","serialcardsno","serialcard","setserialcard","parallelcardname","parallelcardsno","parallelcard","setparallelcard","hbacardname","hbacardsno","hbacard","sethbacard","raidcontrollername","raidcontrollersno","raidcontroller","setraidcontroller","tapecontrollername","tapecontrollersno","tapecontroller","settapecontroller","othersname","otherssno","others","setothers","Business","setBusiness","POnumber","setPOnumber","POdate","setPOdate","ContractFrom","setContractFrom","ContractTo","setContractTo","BillingFrom","setBillingFrom","BillingTo","setBillingTo","AMCRate","setAMCRate","GST","setGST","setGSTAMOUNT","setNetAmount","servicelocation","setServiceLocation","product","setProduct","isModalOpen","setIsModalOpen","useEffect","getAsset","a","axios","post","API","Emp","getId","res","console","log","data","asset","producttype","customerId","accountId","business","ponumber","amcrate","moment","podate","format","contractfrom","contractto","billingfrom","billingto","gstperc","gstamount","netamount","originalproduct","length","keyboard","netcardname","className","readOnly","value","name","onChange","e","target","type","toFixed","parseInt","placeholder","map","item","i","key","newlist","isOpen","onClose","onClick"],"mappings":"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","file":"static/js/61.2eeacb65.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Select,\n  Textarea,\n  Button,\n  Dropdown,\n  DropdownItem,\n  Badge,\n} from \"@windmill/react-ui\";\n\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport { Add, Remove, HeartIcon } from \"../../icons\";\nimport UnitListModal from \"../../components/Modal/UnitListModal\";\nimport CreateAssetFloat from \"../../components/FloatDetails/CreateAssetFloat\";\n\n// Migration\nimport { handleMigration } from \"../../migration/migration\";\nimport { useParams } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n\nfunction OriginalAssetView() {\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n  // floatbox\n  const [floatbox, setFloatBox] = useState(false);\n  const { id } = useParams();\n  // console.log(id);\n  //modal\n  const [submitModal, setSubmitModal] = useState(false);\n\n  //customer\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n  //prodcut\n  const [brand, setBrand] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [serialno, setSerialNo] = useState(\"\");\n  const [os, setOs] = useState(\"\");\n  const [cpu, setCpu] = useState([{ cpuname: \"\", cpusno: \"\" }]);\n  const [ram, setram] = useState([{ ramname: \"\", ramsno: \"\" }]);\n  const [hdd, sethdd] = useState([{ hddname: \"\", hddsno: \"\" }]);\n  const [smps, setsmps] = useState([{ smpsname: \"\", smpssno: \"\" }]);\n  const [fan, setfan] = useState([{ fanname: \"\", fansno: \"\" }]);\n  const [motherboard, setmotherboard] = useState([\n    { motherboardname: \"\", motherboardsno: \"\" },\n  ]);\n  const [opticaldrive, setopticaldrive] = useState([\n    { opticaldrivename: \"\", opticaldrivesno: \"\" },\n  ]);\n  const [kbd, setkbd] = useState([{ keyboardname: \"\", keyboardsno: \"\" }]);\n  const [mouse, setmouse] = useState([{ mousename: \"\", mousesno: \"\" }]);\n  const [monitor, setmonitor] = useState([{ monitorname: \"\", monitorsno: \"\" }]);\n  const [gcard, setgcard] = useState([{ gcardname: \"\", gcardsno: \"\" }]);\n  const [enetcard, setenetcard] = useState([\n    { enetcardname: \"\", enetcardsno: \"\" },\n  ]);\n  const [serialcard, setserialcard] = useState([\n    { serialcardname: \"\", serialcardsno: \"\" },\n  ]);\n  const [parallelcard, setparallelcard] = useState([\n    { parallelcardname: \"\", parallelcardsno: \"\" },\n  ]);\n  const [hbacard, sethbacard] = useState([{ hbacardname: \"\", hbacardsno: \"\" }]);\n  const [raidcontroller, setraidcontroller] = useState([\n    { raidcontrollername: \"\", raidcontrollersno: \"\" },\n  ]);\n  const [tapecontroller, settapecontroller] = useState([\n    { tapecontrollername: \"\", tapecontrollersno: \"\" },\n  ]);\n  const [others, setothers] = useState([{ othersname: \"\", otherssno: \"\" }]);\n  //asset\n\n  const [Business, setBusiness] = useState(\"\");\n  const [POnumber, setPOnumber] = useState(\"\");\n  const [POdate, setPOdate] = useState(\"\");\n  const [ContractFrom, setContractFrom] = useState(\"\");\n  const [ContractTo, setContractTo] = useState(\"\");\n  const [BillingFrom, setBillingFrom] = useState(\"\");\n  const [BillingTo, setBillingTo] = useState(\"\");\n  const [AMCRate, setAMCRate] = useState(\"\");\n  const [GST, setGST] = useState(\"\");\n  const [GSTAMOUNT, setGSTAMOUNT] = useState(\"\");\n  const [NetAmount, setNetAmount] = useState(\"\");\n  const [servicelocation, setServiceLocation] = useState(\"\");\n\n  //////////////-------------------------------------------->Product name not in asset\n  const [product, setProduct] = useState(\"Server\");\n\n  //MODAL\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    setTopHeading(\"Original Asset History\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n\n  const getAsset = async () => {\n    try {\n      let res = await axios.post(\n        `${API}/asset/${Emp.getId()}/getorgassetbyid`,\n        {\n          id: id,\n        }\n      );\n      console.log(\"asset\", res.data);\n      let asset = res.data;\n      setServiceLocation(asset.servicelocation);\n      setProduct(asset.producttype);\n      setUnit({ _id: id, unitName: asset.unitName });\n      setCustomer({ _id: asset.customerId, customerName: asset.customerName });\n      setAccount({ _id: asset.accountId, accountName: asset.accountName });\n      ////------------------------>>>>>>>>\n      // setProduct(\"Server\");\n      ////////---------ASSET INFO\n      setBusiness(asset.business);\n      setPOnumber(asset.ponumber);\n      setAMCRate(asset.amcrate);\n      // Dates --------------------------\n      setPOdate(moment(asset.podate).format(\"YYYY-MM-DD\"));\n      setContractFrom(moment(asset.contractfrom).format(\"YYYY-MM-DD\"));\n      setContractTo(moment(asset.contractto).format(\"YYYY-MM-DD\"));\n      setBillingFrom(moment(asset.billingfrom).format(\"YYYY-MM-DD\"));\n      setBillingTo(moment(asset.billingto).format(\"YYYY-MM-DD\"));\n      ////////////------------>>>>>>>> misiing field GST(asset.gs)\n      setGST(asset.gstperc);\n      setGSTAMOUNT(asset.gstamount);\n      setNetAmount(asset.netamount);\n      // setProduct(asset);\n      //////////////////////////////\n\n      setBrand(asset.originalproduct.brand);\n      setModel(asset.originalproduct.model);\n      setSerialNo(asset.originalproduct.serialno);\n      setOs(asset.originalproduct.os);\n      setCpu(asset.originalproduct.cpu);\n      setram(asset.originalproduct.ram);\n      if (asset.originalproduct.hdd.length == 0)\n        sethdd([{ hddname: \"\", hddsno: \"\" }]);\n      else sethdd(asset.originalproduct.hdd);\n      if (asset.originalproduct.smps.length == 0)\n        setsmps([{ smpsname: \"\", smpssno: \"\" }]);\n      else setsmps(asset.originalproduct.smps);\n      if (asset.originalproduct.fan.length == 0)\n        setfan([{ fanname: \"\", fansno: \"\" }]);\n      else setfan(asset.originalproduct.fan);\n      if (asset.originalproduct.motherboard.length == 0)\n        setmotherboard([{ motherboardname: \"\", motherboardsno: \"\" }]);\n      else setmotherboard(asset.originalproduct.motherboard);\n      if (asset.originalproduct.opticaldrive.length == 0)\n        setopticaldrive([{ opticaldrivename: \"\", opticaldrivesno: \"\" }]);\n      else setopticaldrive(asset.originalproduct.opticaldrive);\n      if (asset.originalproduct.keyboard.length == 0)\n        setkbd([{ keyboardname: \"\", keyboardsno: \"\" }]);\n      else setkbd(asset.originalproduct.keyboard);\n      if (asset.originalproduct.mouse.length == 0)\n        setmouse([{ mousename: \"\", mousesno: \"\" }]);\n      else setmouse(asset.originalproduct.mouse);\n      if (asset.originalproduct.monitor.length == 0)\n        setmonitor([{ monitorname: \"\", monitorsno: \"\" }]);\n      else setmonitor(asset.originalproduct.monitor);\n      if (asset.originalproduct.gcard.length == 0)\n        setgcard([{ gcardname: \"\", gcardsno: \"\" }]);\n      else setgcard(asset.originalproduct.gcard);\n      if (asset.originalproduct.enetcard.length == 0)\n        setenetcard([{ netcardname: \"\", enetcardsno: \"\" }]);\n      else setenetcard(asset.originalproduct.enetcard);\n      if (asset.originalproduct.serialcard.length == 0)\n        setserialcard([{ serialcardname: \"\", serialcardsno: \"\" }]);\n      else setserialcard(asset.originalproduct.serialcard);\n\n      if (asset.originalproduct.parallelcard.length == 0)\n        setparallelcard([{ parallelcardname: \"\", parallelcardsno: \"\" }]);\n      else setparallelcard(asset.originalproduct.parallelcard);\n      if (asset.originalproduct.hbacard.length == 0)\n        sethbacard([{ hbacardname: \"\", hbacardsno: \"\" }]);\n      else sethbacard(asset.originalproduct.hbacard);\n      if (asset.originalproduct.raidcontroller.length == 0)\n        setraidcontroller([{ raidcontrollername: \"\", raidcontrollersno: \"\" }]);\n      else setraidcontroller(asset.originalproduct.raidcontroller);\n      if (asset.originalproduct.tapecontroller.length == 0)\n        settapecontroller([{ tapecontrollername: \"\", tapecontrollersno: \"\" }]);\n      else settapecontroller(asset.originalproduct.tapecontroller);\n      if (asset.originalproduct.others.length == 0)\n        setothers([{ othersname: \"\", otherssno: \"\" }]);\n      else setothers(asset.originalproduct.others);\n      //asset\n    } catch (err) {\n      console.log(\"assetFind Error\", err);\n    }\n  };\n\n  useEffect(() => {\n    getAsset();\n  }, []);\n\n  const UpdatedModal = () => {\n    return (\n      <>\n        <Modal isOpen={submitModal} onClose={() => setSubmitModal(false)}>\n          <ModalHeader>Asset Updated Successfully!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setSubmitModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //functions\n\n  // useEffect(() => {\n  //   handleMigration();\n  // }, []);\n\n  //ASSET----------------------------------------------------\n  const assetPicker = () => {\n    return (\n      <div className=\"px-4 py-3 mt-4 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800\">\n        {/* {floatbox ? (\n          <UpdateAssetFloat Business={Business} POnumber={POnumber} />\n        ) : null} */}\n\n        <Label className=\"font-bold\">\n          <span>Asset Information</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n\n        <div className=\"flex flex-row mb-2 \">\n          <div className=\"flex flex-row space-x-4 w-3/4\">\n            <SectionTitle className=\"w-3/4\">\n              Customer: {customer.customerName}\n            </SectionTitle>\n            <SectionTitle>Account: {account.accountName} </SectionTitle>\n            <SectionTitle>Unit: {unit.unitName}</SectionTitle>\n          </div>\n          {/* <div className=\"w-1/4 flex items-start justify-end\">\n            <Button layout=\"outline\" className=\"\">\n              View Original Asset\n            </Button>\n          </div> */}\n        </div>\n\n        <hr className=\"mb-5 mt-2\" />\n\n        {/* <Label className=\"font-bold\">\n          <span>Customer: {customer.customerName}</span>\n        </Label> */}\n        {/* ----------------------------Row - 1 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full \">\n            <Label className=\"my-3\">\n              <span>Business Type</span>\n              <Input readOnly className=\"mt-1\" value={Business}></Input>\n            </Label>\n          </div>\n          <div className=\"w-full  \">\n            <Label className=\"my-3\">\n              <span>Purchase Order Number</span>\n              <Input\n                readOnly\n                className=\"mt-1\"\n                name=\"brand\"\n                value={POnumber}\n                onChange={(e) => {\n                  setPOnumber(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full \">\n            <Label className=\"my-3\">\n              <span>Service Location*</span>\n              <Input value={servicelocation} className=\"mt-1\"></Input>\n            </Label>\n          </div>\n        </div>\n        {/* ----------------------------Row - 2 --------------------------------------------------------------------- */}\n\n        <div className=\"flex flex-col lg:flex-row  items-center justify-start lg:space-x-8\">\n          <Label className=\"w-full my-3\">\n            <span>Purchase Order Date</span>\n            <Input\n              readOnly\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={POdate}\n              onChange={(e) => {\n                setPOdate(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Contract From</span>\n            <Input\n              readOnly\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={ContractFrom}\n              onChange={(e) => {\n                setContractFrom(e.target.value);\n              }}\n            />\n          </Label>\n\n          <Label className=\"w-full my-3\">\n            <span>Contract To</span>\n            <Input\n              readOnly\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={ContractTo}\n              onChange={(e) => {\n                setContractTo(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing From</span>\n            <Input\n              readOnly\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={BillingFrom}\n              onChange={(e) => {\n                setBillingFrom(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing To</span>\n            <Input\n              readOnly\n              type=\"date\"\n              className=\"mt-1\"\n              name=\"brand\"\n              value={BillingTo}\n              onChange={(e) => {\n                setBillingTo(e.target.value);\n              }}\n            />\n          </Label>\n        </div>\n        {/* ----------------------------Row - 3 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>AMC Rate</span>\n              <Input\n                readOnly\n                className=\"mt-1\"\n                name=\"brand\"\n                value={AMCRate}\n                onChange={(e) => {\n                  setAMCRate(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>GST</span>\n              <Input\n                readOnly\n                className=\"mt-1\"\n                name=\"brand\"\n                value={GST}\n                onChange={(e) => {\n                  setGST(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div>\n        {/* ----------------------------Row - 4 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3 font-bold\">\n              <span>GST AMOUNT: </span>\n\n              <span> Rs {(AMCRate * (GST / 100)).toFixed(2)}</span>\n            </Label>\n          </div>\n          <div className=\"w-full font-bold\">\n            <Label className=\"my-3\">\n              <span>Net Amount: </span>\n              <span>\n                Rs{\" \"}\n                {(parseInt(AMCRate) + parseInt(AMCRate) * (GST / 100)).toFixed(\n                  2\n                )}\n              </span>\n            </Label>\n          </div>\n        </div>\n        {/* <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>GST AMOUNT</span>\n              <Input\n              readOnly\n                className=\"mt-1\"\n                name=\"brand\"\n                value={GSTAMOUNT}\n                onChange={(e) => {\n                  setGSTAMOUNT(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>Net Amount</span>\n              <Input\n              readOnly\n                className=\"mt-1\"\n                name=\"brand\"\n                value={NetAmount}\n                onChange={(e) => {\n                  setNetAmount(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div> */}\n      </div>\n    );\n  };\n\n  //PRODUCT\n\n  const productPicker = () => {\n    return (\n      <>\n        <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800\">\n          {/* <form onSubmit={handleSubmit}> */}\n          <Label className=\"font-bold\">\n            <span>Essential Details</span>\n          </Label>\n          <hr className=\"mb-5 mt-2\" />\n          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n            <Label className=\"my-3 w-full\">\n              <span>Brand</span>\n              <Input\n                readOnly\n                className=\"mt-1\"\n                placeholder=\"Brand\"\n                name=\"brand\"\n                value={brand}\n                onChange={(e) => {\n                  setBrand(e.target.value);\n                }}\n              />\n            </Label>\n            <Label className=\"my-3 w-full\">\n              <span>Model</span>\n              <Input\n                readOnly\n                className=\"mt-1\"\n                placeholder=\"Model\"\n                name=\"model\"\n                value={model}\n                onChange={(e) => {\n                  setModel(e.target.value);\n                }}\n              />\n            </Label>\n            <Label className=\"my-3 w-full\">\n              <span>Serial Number</span>\n              <Input\n                readOnly\n                className=\"mt-1\"\n                placeholder=\"Serial Number\"\n                name=\"serialno\"\n                value={serialno}\n                onChange={(e) => {\n                  setSerialNo(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          {/* ---------------------------OS--------------------------------- */}\n          {product == \"Laptop\" ||\n          product == \"Server\" ||\n          product == \"Desktop\" ? (\n            <>\n              <Label className=\"font-bold\">\n                <span>Operating System</span>\n              </Label>\n              <hr className=\"mb-5 mt-2\" />\n              <Label className=\"my-3\">\n                <span>OS</span>\n                <Input\n                  readOnly\n                  className=\"mt-1\"\n                  placeholder=\"OS\"\n                  name=\"os\"\n                  value={os}\n                  onChange={(e) => {\n                    setOs(e.target.value);\n                  }}\n                />\n              </Label>\n            </>\n          ) : null}\n\n          {/* //////////// ARRAY /////////////// */}\n          {/* -------------------CPU and RAM-------------------------- */}\n          <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n            {/* ----------------CPU------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Laptop\" ||\n              product == \"Server\" ||\n              product == \"Desktop\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>CPU</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {cpu.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"w-full my-3\">\n                            <span>CPU {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`CPU ${i + 1}`}\n                              name=\"cpuname\"\n                              value={item.cpuname}\n                              onChange={(e) => {\n                                let newlist = [...cpu];\n                                newlist[i].cpuname = e.target.value;\n                                setCpu(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"w-full my-3\">\n                            <span>CPU {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`CPU ${i + 1}'s Serial Number `}\n                              name=\"cpusno\"\n                              value={item.cpusno}\n                              onChange={(e) => {\n                                let newlist = [...cpu];\n                                newlist[i].cpusno = e.target.value;\n                                setCpu(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------CPU------------------------------- */}\n\n            {/* ----------------RAM------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Laptop\" ||\n              product == \"Server\" ||\n              product == \"Desktop\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>RAM</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {ram.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"my-3 w-full\">\n                            <span>RAM {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`RAM ${i + 1}`}\n                              name=\"ramname\"\n                              value={item.ramname}\n                              onChange={(e) => {\n                                let newlist = [...ram];\n                                newlist[i].ramname = e.target.value;\n                                setram(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"my-3 w-full\">\n                            <span>RAM {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`RAM ${i + 1}'s Serial Number `}\n                              name=\"cpusno\"\n                              value={item.ramsno}\n                              onChange={(e) => {\n                                let newlist = [...ram];\n                                newlist[i].ramsno = e.target.value;\n                                setram(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------RAM------------------------------- */}\n          </div>\n\n          {/* -----------------------fan and motherboard------------------------------ */}\n          <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n            {/* ----------------fan------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Laptop\" ||\n              product == \"Server\" ||\n              product == \"Desktop\" ||\n              product == \"Storage\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>FAN</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {fan.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"my-3 w-full\">\n                            <span>FAN {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`FAN ${i + 1}`}\n                              name=\"fanname\"\n                              value={item.fanname}\n                              onChange={(e) => {\n                                let newlist = [...fan];\n                                newlist[i].fanname = e.target.value;\n                                setfan(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"my-3 w-full\">\n                            <span>FAN {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`FAN ${i + 1}'s Serial Number `}\n                              name=\"fansno\"\n                              value={item.fansno}\n                              onChange={(e) => {\n                                let newlist = [...fan];\n                                newlist[i].fansno = e.target.value;\n                                setfan(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------fan------------------------------- */}\n\n            {/* ----------------motherboard------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Laptop\" ||\n              product == \"Server\" ||\n              product == \"Desktop\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>Motherboard</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {motherboard.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"my-3 w-full\">\n                            <span>Motherboard {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Motherboard ${i + 1}`}\n                              name=\"motherboardname\"\n                              value={item.motherboardname}\n                              onChange={(e) => {\n                                let newlist = [...motherboard];\n                                newlist[i].motherboardname = e.target.value;\n                                setmotherboard(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"my-3 w-full\">\n                            <span>Motherboard {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Motherboard ${\n                                i + 1\n                              }'s Serial Number `}\n                              name=\"motherboardsno\"\n                              value={item.motherboardsno}\n                              onChange={(e) => {\n                                let newlist = [...motherboard];\n                                newlist[i].motherboardsno = e.target.value;\n                                setmotherboard(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------motherboard------------------------------- */}\n          </div>\n\n          {/* ------------------------HDD And SMPS */}\n          <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n            {/* ----------------hdd------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Laptop\" ||\n              product == \"Server\" ||\n              product == \"Desktop\" ||\n              product == \"Storage\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>HDD</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {hdd.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"my-3 w-full\">\n                            <span>HDD {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`HDD ${i + 1}`}\n                              name=\"hddname\"\n                              value={item.hddname}\n                              onChange={(e) => {\n                                let newlist = [...hdd];\n                                newlist[i].hddname = e.target.value;\n                                sethdd(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"my-3 w-full\">\n                            <span>HDD {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`HDD ${i + 1}'s Serial Number `}\n                              name=\"hddsno\"\n                              value={item.hddsno}\n                              onChange={(e) => {\n                                let newlist = [...hdd];\n                                newlist[i].hddsno = e.target.value;\n                                sethdd(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------hdd------------------------------- */}\n\n            {/* ----------------smps------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Laptop\" ||\n              product == \"Server\" ||\n              product == \"Desktop\" ||\n              product == \"Storage\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>SMPS</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {smps.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"my-3 w-full\">\n                            <span>SMPS {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`SMPS ${i + 1}`}\n                              name=\"smpsname\"\n                              value={item.smpsname}\n                              onChange={(e) => {\n                                let newlist = [...smps];\n                                newlist[i].smpsname = e.target.value;\n                                setsmps(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"my-3 w-full\">\n                            <span>SMPS {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`SMPS ${i + 1}'s Serial Number `}\n                              name=\"smpssno\"\n                              value={item.smpssno}\n                              onChange={(e) => {\n                                let newlist = [...smps];\n                                newlist[i].smpssno = e.target.value;\n                                setsmps(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------smps------------------------------- */}\n          </div>\n\n          {/* -----------------------Keyboard And Mouse ------------------------------- */}\n          <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n            {/* ----------------kbd------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Laptop\" ||\n              product == \"Server\" ||\n              product == \"Desktop\" ||\n              product == \"Router\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>Keyboard</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {kbd.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"my-3 w-full\">\n                            <span>Keyboard {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Keyboard ${i + 1}`}\n                              name=\"keyboardname\"\n                              value={item.keyboardname}\n                              onChange={(e) => {\n                                let newlist = [...kbd];\n                                newlist[i].keyboardname = e.target.value;\n                                setkbd(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"my-3 w-full\">\n                            <span>Keyboard {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Keyboard ${i + 1}'s Serial Number `}\n                              name=\"keyboardsno\"\n                              value={item.keyboardsno}\n                              onChange={(e) => {\n                                let newlist = [...kbd];\n                                newlist[i].keyboardsno = e.target.value;\n                                setkbd(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------kbd------------------------------- */}\n\n            {/* ----------------mouse------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Laptop\" ||\n              product == \"Server\" ||\n              product == \"Desktop\" ||\n              product == \"Router\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>Mouse</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {mouse.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"my-3 w-full\">\n                            <span>Mouse {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Mouse ${i + 1}`}\n                              name=\"mousename\"\n                              value={item.mousename}\n                              onChange={(e) => {\n                                let newlist = [...mouse];\n                                newlist[i].mousename = e.target.value;\n                                setmouse(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"my-3 w-full\">\n                            <span>Mouse {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Mouse ${i + 1}'s Serial Number `}\n                              name=\"mousesno\"\n                              value={item.mousesno}\n                              onChange={(e) => {\n                                let newlist = [...mouse];\n                                newlist[i].mousesno = e.target.value;\n                                setmouse(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------mouse------------------------------- */}\n          </div>\n\n          {/* ---------------------------Monitor and GCard ------------------------*/}\n          <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n            {/* ----------------monitor------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Laptop\" ||\n              product == \"Server\" ||\n              product == \"Desktop\" ||\n              product == \"Router\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>Monitor</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {monitor.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"my-3 w-full\">\n                            <span>Monitor {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Monitor ${i + 1}`}\n                              name=\"monitorname\"\n                              value={item.monitorname}\n                              onChange={(e) => {\n                                let newlist = [...monitor];\n                                newlist[i].monitorname = e.target.value;\n                                setmonitor(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"my-3 w-full\">\n                            <span>Monitor {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Monitor ${i + 1}'s Serial Number `}\n                              name=\"monitorsno\"\n                              value={item.monitorsno}\n                              onChange={(e) => {\n                                let newlist = [...monitor];\n                                newlist[i].monitorsno = e.target.value;\n                                setmonitor(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------monitor------------------------------- */}\n\n            {/* ----------------gcard------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Laptop\" ||\n              product == \"Server\" ||\n              product == \"Desktop\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>Graphics Card</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {gcard.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"my-3 w-full\">\n                            <span>Graphics Card {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Graphics Card ${i + 1}`}\n                              name=\"gcardname\"\n                              value={item.gcardname}\n                              onChange={(e) => {\n                                let newlist = [...gcard];\n                                newlist[i].gcardname = e.target.value;\n                                setgcard(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"my-3 w-full\">\n                            <span>Graphics Card {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Graphics Card ${\n                                i + 1\n                              }'s Serial Number `}\n                              name=\"gcardsno\"\n                              value={item.gcardsno}\n                              onChange={(e) => {\n                                let newlist = [...gcard];\n                                newlist[i].gcardsno = e.target.value;\n                                setgcard(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------gcard------------------------------- */}\n          </div>\n\n          <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n            {/* ----------------enetcard------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Laptop\" ||\n              product == \"Server\" ||\n              product == \"Desktop\" ||\n              product == \"Server\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>E Net Card</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {enetcard.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"my-3 w-full\">\n                            <span>E Net Card {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`E Net Card ${i + 1}`}\n                              name=\"enetcardname\"\n                              value={item.enetcardname}\n                              onChange={(e) => {\n                                let newlist = [...enetcard];\n                                newlist[i].enetcardname = e.target.value;\n                                setenetcard(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"my-3 w-full\">\n                            <span>E Net Card {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`E Net Card ${\n                                i + 1\n                              }'s Serial Number `}\n                              name=\"enetcardsno\"\n                              value={item.enetcardsno}\n                              onChange={(e) => {\n                                let newlist = [...enetcard];\n                                newlist[i].enetcardsno = e.target.value;\n                                setenetcard(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------enetcard------------------------------- */}\n\n            {/* ----------------serialcard------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Server\" || product == \"Desktop\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>Serial Card</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {serialcard.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"my-3 w-full\">\n                            <span>Serial Card {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Serial Card ${i + 1}`}\n                              name=\"serialcardname\"\n                              value={item.serialcardname}\n                              onChange={(e) => {\n                                let newlist = [...serialcard];\n                                newlist[i].serialcardname = e.target.value;\n                                setserialcard(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"my-3 w-full\">\n                            <span>Serial Card {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Serial Card ${\n                                i + 1\n                              }'s Serial Number `}\n                              name=\"serialcardsno\"\n                              value={item.serialcardsno}\n                              onChange={(e) => {\n                                let newlist = [...serialcard];\n                                newlist[i].serialcardsno = e.target.value;\n                                setserialcard(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------serialcard------------------------------- */}\n          </div>\n\n          {/* --------------------Parallel And HBD Card ----------------------------------------- */}\n          <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n            {/* ----------------parallelcard------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Server\" || product == \"Desktop\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>Parallel Card</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {parallelcard.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"my-3 w-full\">\n                            <span>Parallel Card {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Parallel Card ${i + 1}`}\n                              name=\"parallelcardname\"\n                              value={item.parallelcardname}\n                              onChange={(e) => {\n                                let newlist = [...parallelcard];\n                                newlist[i].parallelcardname = e.target.value;\n                                setparallelcard(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"my-3 w-full\">\n                            <span>Parallel Card {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Parallel Card ${\n                                i + 1\n                              }'s Serial Number `}\n                              name=\"parallelcardsno\"\n                              value={item.parallelcardsno}\n                              onChange={(e) => {\n                                let newlist = [...parallelcard];\n                                newlist[i].parallelcardsno = e.target.value;\n                                setparallelcard(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------parallelcard------------------------------- */}\n\n            {/* ----------------hbacard------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Server\" || product == \"Storage\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>HBA Card</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {hbacard.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"my-3 w-full\">\n                            <span>HBA Card {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`HBA Card ${i + 1}`}\n                              name=\"hbacardname\"\n                              value={item.hbacardname}\n                              onChange={(e) => {\n                                let newlist = [...hbacard];\n                                newlist[i].hbacardname = e.target.value;\n                                sethbacard(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"my-3 w-full\">\n                            <span>HBA Card {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`HBA Card ${i + 1}'s Serial Number `}\n                              name=\"hbacardsno\"\n                              value={item.hbacardsno}\n                              onChange={(e) => {\n                                let newlist = [...hbacard];\n                                newlist[i].hbacardsno = e.target.value;\n                                sethbacard(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------hbacard------------------------------- */}\n          </div>\n          {/* --------------------Raid And Tape Controller------------------------------ */}\n\n          <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n            {/* ----------------raidcontroller------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Server\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>Raid Controller</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {raidcontroller.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"my-3 w-full\">\n                            <span>Raid Controller {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Raid Controller ${i + 1}`}\n                              name=\"raidcontrollername\"\n                              value={item.raidcontrollername}\n                              onChange={(e) => {\n                                let newlist = [...raidcontroller];\n                                newlist[i].raidcontrollername = e.target.value;\n                                setraidcontroller(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"my-3 w-full\">\n                            <span>Raid Controller {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Raid Controller ${\n                                i + 1\n                              }'s Serial Number `}\n                              name=\"raidcontrollersno\"\n                              value={item.raidcontrollersno}\n                              onChange={(e) => {\n                                let newlist = [...raidcontroller];\n                                newlist[i].raidcontrollersno = e.target.value;\n                                setraidcontroller(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------raidcontroller------------------------------- */}\n\n            {/* ----------------tapecontroller------------------------------- */}\n            <div className=\"w-full\">\n              {product == \"Server\" ? (\n                <>\n                  <div className=\"flex flex-row items-center\">\n                    <Label className=\"font-bold\">\n                      <span>Tape Controller</span>\n                    </Label>\n                  </div>\n                  <hr className=\"mb-5 mt-2\" />\n                  {tapecontroller.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                          <Label className=\"my-3 w-full\">\n                            <span>Tape Controller {i + 1}</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Tape Controller ${i + 1}`}\n                              name=\"tapecontrollername\"\n                              value={item.tapecontrollername}\n                              onChange={(e) => {\n                                let newlist = [...tapecontroller];\n                                newlist[i].tapecontrollername = e.target.value;\n                                settapecontroller(newlist);\n                              }}\n                            />\n                          </Label>\n                          <Label className=\"my-3 w-full\">\n                            <span>Tape Controller {i + 1}: Serial Number</span>\n                            <Input\n                              readOnly\n                              className=\"mt-1\"\n                              placeholder={`Tape Controller ${\n                                i + 1\n                              }'s Serial Number `}\n                              name=\"tapecontrollersno\"\n                              value={item.tapecontrollersno}\n                              onChange={(e) => {\n                                let newlist = [...tapecontroller];\n                                newlist[i].tapecontrollersno = e.target.value;\n                                settapecontroller(newlist);\n                              }}\n                            />\n                          </Label>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : null}\n            </div>\n            {/* ----------------tapecontroller------------------------------- */}\n          </div>\n\n          {/* ----------------opticaldrive------------------------------- */}\n          {product == \"Laptop\" ||\n          product == \"Server\" ||\n          product == \"Desktop\" ? (\n            <>\n              <div className=\"flex flex-row items-center\">\n                <Label className=\"font-bold\">\n                  <span>Optical Drive</span>\n                </Label>\n              </div>\n              <hr className=\"mb-5 mt-2\" />\n              {opticaldrive.map((item, i) => {\n                return (\n                  <div key={i}>\n                    <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                      <Label className=\"my-3 w-full\">\n                        <span>Optical Drive {i + 1}</span>\n                        <Input\n                          readOnly\n                          className=\"mt-1\"\n                          placeholder={`Opticaldrive ${i + 1}`}\n                          name=\"opticaldrivename\"\n                          value={item.opticaldrivename}\n                          onChange={(e) => {\n                            let newlist = [...opticaldrive];\n                            newlist[i].opticaldrivename = e.target.value;\n                            setopticaldrive(newlist);\n                          }}\n                        />\n                      </Label>\n                      <Label className=\"my-3 w-full\">\n                        <span>Opticaldrive {i + 1}: Serial Number</span>\n                        <Input\n                          readOnly\n                          className=\"mt-1\"\n                          placeholder={`Optical Drive ${\n                            i + 1\n                          }'s Serial Number `}\n                          name=\"opticaldrivesno\"\n                          value={item.opticaldrivesno}\n                          onChange={(e) => {\n                            let newlist = [...opticaldrive];\n                            newlist[i].opticaldrivesno = e.target.value;\n                            setopticaldrive(newlist);\n                          }}\n                        />\n                      </Label>\n                    </div>\n                  </div>\n                );\n              })}\n            </>\n          ) : null}\n          {/* ----------------opticaldrive------------------------------- */}\n\n          {/* ----------------others------------------------------- */}\n          <div className=\"flex flex-row items-center\">\n            <Label className=\"font-bold\">\n              <span>Others</span>\n            </Label>\n          </div>\n          <hr className=\"mb-5 mt-2\" />\n          {others.map((item, i) => {\n            return (\n              <div key={i}>\n                <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                  <Label className=\"my-3 w-full\">\n                    <span>Others {i + 1}</span>\n                    <Input\n                      readOnly\n                      className=\"mt-1 \"\n                      placeholder={`Others ${i + 1}`}\n                      name=\"othersname\"\n                      value={item.othersname}\n                      onChange={(e) => {\n                        let newlist = [...others];\n                        newlist[i].othersname = e.target.value;\n                        setothers(newlist);\n                      }}\n                    />\n                  </Label>\n                  <Label className=\"my-3 w-full\">\n                    <span>Others {i + 1}: Serial Number</span>\n                    <Input\n                      readOnly\n                      className=\"mt-1\"\n                      placeholder={`Others ${i + 1}'s Serial Number `}\n                      name=\"otherssno\"\n                      value={item.otherssno}\n                      onChange={(e) => {\n                        let newlist = [...others];\n                        newlist[i].otherssno = e.target.value;\n                        setothers(newlist);\n                      }}\n                    />\n                  </Label>\n                </div>\n              </div>\n            );\n          })}\n\n          {/* ----------------others------------------------------- */}\n\n          {/* <div className=\"flex items-center justify-center my-10\">\n              <Button type=\"submit\">Submit</Button>\n            </div> */}\n\n          {/* <Label className=\"mt-4\">\n              <span>Disabled</span>\n              <Input\n              readOnly disabled className=\"mt-1\" placeholder=\"Jane Doe\" />\n            </Label> */}\n          {/* </form> */}\n        </div>\n      </>\n    );\n  };\n\n  //DROPDOWN------------------------------------------------------------------------------------\n\n  const [isOpen, setIsOpen] = useState(false);\n  function toggleDropdown() {\n    setIsOpen(!isOpen);\n  }\n\n  const test = () => {\n    console.log(test);\n  };\n\n  return (\n    <>\n      <UnitListModal\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setUnit={setUnit}\n        unit={unit}\n        customer={customer}\n        setCustomer={setCustomer}\n        account={account}\n        setAccount={setAccount}\n      />\n      {/* Heading of page with float button */}\n\n      {assetPicker()}\n      {/* <SectionTitle>Pick Product</SectionTitle> */}\n      {/* {dropdown()} */}\n      {product != \"null\" ? (\n        <>\n          <SectionTitle>{product} </SectionTitle>\n          {productPicker()}\n        </>\n      ) : null}\n      {/* {productPicker()} */}\n      {/* /////---------------------------- FOOTER */}\n      {/* <div class=\" w-7/12 bottom-0  border-t border-grey p-4 fixed pin-b bg-gray-700 text-xs text-white\">\n        Asset Summary Asset Information:\n        <br />\n        Business: {Business} POnumber: {POnumber} ContractFrom: {ContractFrom}\n        ContractTo: {ContractTo} BillingFrom: {BillingFrom} BillingTo:{\" \"}\n        {BillingTo} AMCRate:\n        {AMCRate} GST:{GST} GSTAMOUNT:{GSTAMOUNT} NetAmount:{NetAmount}\n        <br />\n        Product: {product}\n        <br />\n        Brind: {brand} model: {model} serialno: {serialno} os: {os}\n        <br />\n        {cpu.map((p, i) => {\n          return (\n            <>\n              CPU:{p.cpuname}, {p.cpusno}\n            </>\n          );\n        })}\n      </div> */}\n      {UpdatedModal()}\n    </>\n  );\n}\n\nexport default OriginalAssetView;\n"],"sourceRoot":""}