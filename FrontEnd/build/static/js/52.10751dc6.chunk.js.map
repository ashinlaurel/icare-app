{"version":3,"sources":["components/Modal/CustomerCreateModal.js","pages/Customers/UpdateUnit.js"],"names":["CustomerCreatetModal","isModalOpen","setIsModalOpen","setCustomer","useState","values","setValues","useEffect","getCustomers","Axios","post","API","search","role","then","users","console","log","data","temp","map","user","push","catch","err","isOpen","onClose","i","key","className","onClick","_id","customerName","name","layout","UpdateUnit","history","useHistory","id","useParams","isReviewModalOpen","setIsReviewModalOpen","unitName","assetId","address","district","state","locationType","pincode","GSTnumber","contactPerson","contactNo","altContact","whatsappNo","handleChange","e","target","value","getUnitInfo","a","axios","url","Emp","getId","method","res","submitUnit","update","type","onChange","WhatsappNo","aria-label","aria-haspopup"],"mappings":"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","file":"static/js/52.10751dc6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nexport default function CustomerCreatetModal({\n  isModalOpen,\n  setIsModalOpen,\n  setCustomer,\n}) {\n  const [values, setValues] = useState([]);\n  useEffect(() => {\n    getCustomers();\n  }, []);\n\n  const getCustomers = () => {\n    Axios.post(`${API}/customer/customers`, { search: \"\", role: 1 })\n      .then((users) => {\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        setValues(temp);\n      })\n      .catch((err) => {\n        console.log(\"axiosErr\", err);\n      });\n  };\n\n  const userTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {values.map((user, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-900 \"\n                onClick={() => {\n                  setCustomer({\n                    _id: user._id,\n                    customerName: user.name,\n                  });\n                  setIsModalOpen(false);\n                }}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                {/* <TableCell>\n                    <span className=\"text-sm\">$ {user.email}</span>\n                  </TableCell> */}\n                {/* <TableCell>\n                    <Badge type={user.status}>{user.status}</Badge>\n                  </TableCell> */}\n                {/* <TableCell>\n                  <span className=\"text-sm\">{user.infoId.unit}</span>\n                </TableCell> */}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          {/* <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            /> */}\n        </TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>Modal header</ModalHeader>\n        <ModalBody>{userTable()}</ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Cancel\n          </Button>\n          <Button className=\"w-full sm:w-auto\">Accept</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\n\nimport { signup, signin, authenticate } from \"../../helpers/auth\";\nimport CustomerCreateModal from \"../../components/Modal/CustomerCreateModal\";\nimport EmpProfile from \"../../helpers/auth/EmpProfile\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport { resetIdCounter } from \"react-tabs\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n/////////////----------------->>>>>> bug <<<<<------------customerList refresh--------------------------\n\nfunction UpdateUnit() {\n  let history = useHistory();\n  let { id } = useParams(); /////// 0-Customer 1-Account\n\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n\n  //modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [values, setValues] = useState({\n    unitName: \"\",\n    assetId: [],\n    address: \"\",\n    district: \"\",\n    state: \"\",\n    locationType: \"\",\n    pincode: \"\",\n    GSTnumber: \"\",\n    contactPerson: \"\",\n    contactNo: \"\",\n    altContact: \"\",\n    whatsappNo: \"\",\n  });\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const getUnitInfo = async () => {\n    let data = { id: id };\n    // console.log(API);\n    try {\n      let res = await axios({\n        url: `${API}/unit/${Emp.getId()}/getbyid`,\n        method: \"POST\",\n        data: data,\n      });\n\n      setValues({\n        unitName: res.data.unitName,\n        assetId: res.data.assetId,\n        address: res.data.address,\n        district: res.data.district,\n        state: res.data.state,\n        locationType: res.data.locationType,\n        pincode: res.data.pincode,\n        GSTnumber: res.data.GSTnumber,\n        contactPerson: res.data.contactPerson,\n        contactNo: res.data.contactNo,\n        altContact: res.data.altContact,\n        whatsappNo: res.data.whatsappNo,\n      });\n\n      console.log(\"Done\", res.data[0]);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    getUnitInfo();\n  }, []);\n\n  const submitUnit = async () => {\n    // e.preventDefault();\n    const data = {\n      id: id,\n      update: {\n        unitName: values.unitName,\n        assetId: values.assetId,\n        address: values.address,\n        district: values.district,\n        state: values.state,\n        locationType: values.locationType,\n        pincode: values.pincode,\n        GSTnumber: values.GSTnumber,\n        contactPerson: values.contactPerson,\n        contactNo: values.contactNo,\n        altContact: values.altContact,\n        whatsappNo: values.whatsappNo,\n      },\n    };\n    console.log(\"PAYLOAD\", data);\n    try {\n      await axios({\n        url: `${API}/unit/${Emp.getId()}/update`,\n        method: \"POST\",\n        data: data,\n      });\n      setIsReviewModalOpen(true);\n      console.log(\"Done\");\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>Unit Updated Successfully!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => history.push(`/app/unit/getunitbyid/${id}`)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //ASSET\n  const addForm = () => {\n    return (\n      <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Update Unit</span>\n        </Label>\n        <hr className=\"mb-2 mt-2\" />\n        <>\n          <Label>\n            <span>Unit Name</span>\n            <Input\n              className=\"mt-1\"\n              type=\"text\"\n              value={values.unitName}\n              onChange={handleChange(\"unitName\")}\n            />\n          </Label>\n        </>\n        {/* ///////////////////////////////////////////////////////// */}\n        <Label className=\"font-bold mt-5 mb-2\"></Label>\n        <Label>\n          <span>Address</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.address}\n            onChange={handleChange(\"address\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>District</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.district}\n            onChange={handleChange(\"district\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>state</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.state}\n            onChange={handleChange(\"state\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Location Type</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.locationType}\n            onChange={handleChange(\"locationType\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>PIN code</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.pincode}\n            onChange={handleChange(\"pincode\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>GST Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.GSTnumber}\n            onChange={handleChange(\"GSTnumber\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Person</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactPerson}\n            onChange={handleChange(\"contactPerson\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactNo}\n            onChange={handleChange(\"contactNo\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Whatsapp Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.WhatsappNo}\n            onChange={handleChange(\"WhatsappNo\")}\n          />\n        </Label>\n        <hr className=\"my-8\" />\n        {/* ///////////////////////////////////////////////////////// */}\n        <hr />\n        <Button\n          onClick={submitUnit}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4\"\n        >\n          Update Information\n        </Button>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <PageTitle>Edit Unit Information</PageTitle>\n      {addForm()}\n\n      {/* {productPicker()} */}\n      {ReviewSubmit()}\n    </>\n  );\n}\n\nexport default UpdateUnit;\n"],"sourceRoot":""}