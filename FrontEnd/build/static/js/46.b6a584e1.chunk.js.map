{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/ViewAsset/Assetview.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","AssetView","useState","id","useParams","submitModal","setSubmitModal","_id","unitName","unit","setUnit","customerName","customer","setCustomer","accountName","account","setAccount","brand","setBrand","model","setModel","serialno","setSerialNo","os","setOs","cpuname","cpusno","cpu","setCpu","ramname","ramsno","ram","setram","hddname","hddsno","hdd","sethdd","smpsname","smpssno","smps","setsmps","fanname","fansno","fan","setfan","motherboardname","motherboardsno","motherboard","setmotherboard","opticaldrivename","opticaldrivesno","opticaldrive","setopticaldrive","kbdname","kbdsno","kbd","setkbd","mousename","mousesno","mouse","setmouse","monitorname","monitorsno","monitor","setmonitor","gcardname","gcardsno","gcard","setgcard","enetcardname","enetcardsno","enetcard","setenetcard","serialcardname","serialcardsno","serialcard","setserialcard","parallelcardname","parallelcardsno","parallelcard","setparallelcard","hbacardname","hbacardsno","hbacard","sethbacard","raidcontrollername","raidcontrollersno","raidcontroller","setraidcontroller","tapecontrollername","tapecontrollersno","tapecontroller","settapecontroller","othersname","otherssno","others","setothers","Business","setBusiness","POnumber","setPOnumber","POdate","setPOdate","ContractFrom","setContractFrom","ContractTo","setContractTo","BillingFrom","setBillingFrom","BillingTo","setBillingTo","AMCRate","setAMCRate","GST","setGST","setGSTAMOUNT","setNetAmount","product","setProduct","getAsset","a","axios","post","API","Emp","getId","res","console","log","data","asset","producttype","customerId","accountId","business","ponumber","amcrate","moment","podate","format","contractfrom","contractto","billingfrom","billingto","gstamount","netamount","length","keyboard","netcardname","useEffect","handleSubmit","e","preventDefault","className","type","name","value","onChange","target","parseInt","onSubmit","placeholder","onClick","newcpu","push","icon","Add","layout","aria-label","pop","Remove","map","item","i","key","newlist","newram","newfan","newmotherboard","newhdd","newsmps","newkbd","newmouse","newmonitor","newgcard","newenetcard","newserialcard","newparallelcard","newhbacard","newraidcontroller","newtapecontroller","newopticaldrive","newothers","isOpen","onClose"],"mappings":"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","file":"static/js/46.b6a584e1.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Select,\n  Textarea,\n  Button,\n  Dropdown,\n  DropdownItem,\n  Badge,\n} from \"@windmill/react-ui\";\n\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport { Add, Remove, HeartIcon } from \"../../icons\";\nimport UnitListModal from \"../../components/Modal/UnitListModal\";\nimport CreateAssetFloat from \"../../components/FloatDetails/CreateAssetFloat\";\n\n// Migration\nimport { handleMigration } from \"../../migration/migration\";\nimport { useParams } from \"react-router-dom\";\n\nfunction AssetView() {\n  // floatbox\n  const [floatbox, setFloatBox] = useState(false);\n  const { id } = useParams();\n  // console.log(id);\n  //modal\n  const [submitModal, setSubmitModal] = useState(false);\n\n  //customer\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n  //prodcut\n  const [brand, setBrand] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [serialno, setSerialNo] = useState(\"\");\n  const [os, setOs] = useState(\"\");\n  const [cpu, setCpu] = useState([{ cpuname: \"\", cpusno: \"\" }]);\n  const [ram, setram] = useState([{ ramname: \"\", ramsno: \"\" }]);\n  const [hdd, sethdd] = useState([{ hddname: \"\", hddsno: \"\" }]);\n  const [smps, setsmps] = useState([{ smpsname: \"\", smpssno: \"\" }]);\n  const [fan, setfan] = useState([{ fanname: \"\", fansno: \"\" }]);\n  const [motherboard, setmotherboard] = useState([\n    { motherboardname: \"\", motherboardsno: \"\" },\n  ]);\n  const [opticaldrive, setopticaldrive] = useState([\n    { opticaldrivename: \"\", opticaldrivesno: \"\" },\n  ]);\n  const [kbd, setkbd] = useState([{ kbdname: \"\", kbdsno: \"\" }]);\n  const [mouse, setmouse] = useState([{ mousename: \"\", mousesno: \"\" }]);\n  const [monitor, setmonitor] = useState([{ monitorname: \"\", monitorsno: \"\" }]);\n  const [gcard, setgcard] = useState([{ gcardname: \"\", gcardsno: \"\" }]);\n  const [enetcard, setenetcard] = useState([\n    { enetcardname: \"\", enetcardsno: \"\" },\n  ]);\n  const [serialcard, setserialcard] = useState([\n    { serialcardname: \"\", serialcardsno: \"\" },\n  ]);\n  const [parallelcard, setparallelcard] = useState([\n    { parallelcardname: \"\", parallelcardsno: \"\" },\n  ]);\n  const [hbacard, sethbacard] = useState([{ hbacardname: \"\", hbacardsno: \"\" }]);\n  const [raidcontroller, setraidcontroller] = useState([\n    { raidcontrollername: \"\", raidcontrollersno: \"\" },\n  ]);\n  const [tapecontroller, settapecontroller] = useState([\n    { tapecontrollername: \"\", tapecontrollersno: \"\" },\n  ]);\n  const [others, setothers] = useState([{ othersname: \"\", otherssno: \"\" }]);\n  //asset\n\n  const [Business, setBusiness] = useState(\"AMC\");\n  const [POnumber, setPOnumber] = useState(\"\");\n  const [POdate, setPOdate] = useState(\"\");\n  const [ContractFrom, setContractFrom] = useState(\"\");\n  const [ContractTo, setContractTo] = useState(\"\");\n  const [BillingFrom, setBillingFrom] = useState(\"\");\n  const [BillingTo, setBillingTo] = useState(\"\");\n  const [AMCRate, setAMCRate] = useState(\"\");\n  const [GST, setGST] = useState(\"\");\n  const [GSTAMOUNT, setGSTAMOUNT] = useState(\"\");\n  const [NetAmount, setNetAmount] = useState(\"\");\n\n  //////////////-------------------------------------------->Product name not in asset\n  const [product, setProduct] = useState(\"Server\");\n\n  //MODAL\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const getAsset = async () => {\n    try {\n      let res = await axios.post(`${API}/asset/${Emp.getId()}/getbyid`, {\n        id: id,\n      });\n      console.log(\"asset\", res.data);\n      let asset = res.data;\n      setProduct(asset.producttype);\n      setUnit({ _id: id, unitName: asset.unitName });\n      setCustomer({ _id: asset.customerId, customerName: asset.customerName });\n      setAccount({ _id: asset.accountId, accountName: asset.accountName });\n      ////------------------------>>>>>>>>\n      // setProduct(\"Server\");\n      ////////---------ASSET INFO\n      setBusiness(asset.business);\n      setPOnumber(asset.ponumber);\n      setAMCRate(asset.amcrate);\n      // Dates --------------------------\n      setPOdate(moment(asset.podate).format(\"YYYY-MM-DD\"));\n      setContractFrom(moment(asset.contractfrom).format(\"YYYY-MM-DD\"));\n      setContractTo(moment(asset.contractto).format(\"YYYY-MM-DD\"));\n      setBillingFrom(moment(asset.billingfrom).format(\"YYYY-MM-DD\"));\n      setBillingTo(moment(asset.billingto).format(\"YYYY-MM-DD\"));\n      ////////////------------>>>>>>>> misiing field GST(asset.gs)\n      setGSTAMOUNT(asset.gstamount);\n      setNetAmount(asset.netamount);\n      // setProduct(asset);\n      //////////////////////////////\n\n      setBrand(asset.product.brand);\n      setModel(asset.product.model);\n      setSerialNo(asset.product.serialno);\n      setOs(asset.product.os);\n      setCpu(asset.product.cpu);\n      setram(asset.product.ram);\n      if (asset.product.hdd.length == 0) sethdd([{ hddname: \"\", hddsno: \"\" }]);\n      else sethdd(asset.product.hdd);\n      if (asset.product.smps.length == 0)\n        setsmps([{ smpsname: \"\", smpssno: \"\" }]);\n      else setsmps(asset.product.smps);\n      if (asset.product.fan.length == 0) setfan([{ fanname: \"\", fansno: \"\" }]);\n      else setfan(asset.product.fan);\n      if (asset.product.motherboard.length == 0)\n        setmotherboard([{ motherboardname: \"\", motherboardsno: \"\" }]);\n      else setmotherboard(asset.product.motherboard);\n      if (asset.product.opticaldrive.length == 0)\n        setopticaldrive([{ opticaldrivename: \"\", opticaldrivesno: \"\" }]);\n      else setopticaldrive(asset.product.opticaldrive);\n      if (asset.product.keyboard.length == 0)\n        setkbd([{ kbdname: \"\", kbdsno: \"\" }]);\n      else setkbd(asset.product.keyboard);\n      if (asset.product.mouse.length == 0)\n        setmouse([{ mousename: \"\", mousesno: \"\" }]);\n      else setmouse(asset.product.mouse);\n      if (asset.product.monitor.length == 0)\n        setmonitor([{ monitorname: \"\", monitorsno: \"\" }]);\n      else setmonitor(asset.product.monitor);\n      if (asset.product.gcard.length == 0)\n        setgcard([{ gcardname: \"\", gcardsno: \"\" }]);\n      else setgcard(asset.product.gcard);\n      if (asset.product.enetcard.length == 0)\n        setenetcard([{ netcardname: \"\", enetcardsno: \"\" }]);\n      else setenetcard(asset.product.enetcard);\n      if (asset.product.serialcard.length == 0)\n        setserialcard([{ serialcardname: \"\", serialcardsno: \"\" }]);\n      else setserialcard(asset.product.serialcard);\n\n      if (asset.product.parallelcard.length == 0)\n        setparallelcard([{ parallelcardname: \"\", parallelcardsno: \"\" }]);\n      else setparallelcard(asset.product.parallelcard);\n      if (asset.product.hbacard.length == 0)\n        sethbacard([{ hbacardname: \"\", hbacardsno: \"\" }]);\n      else sethbacard(asset.product.hbacard);\n      if (asset.product.raidcontroller.length == 0)\n        setraidcontroller([{ raidcontrollername: \"\", raidcontrollersno: \"\" }]);\n      else setraidcontroller(asset.product.raidcontroller);\n      if (asset.product.tapecontroller.length == 0)\n        settapecontroller([{ tapecontrollername: \"\", tapecontrollersno: \"\" }]);\n      else settapecontroller(asset.product.tapecontroller);\n      if (asset.product.others.length == 0)\n        setothers([{ othersname: \"\", otherssno: \"\" }]);\n      else setothers(asset.product.others);\n      //asset\n    } catch (err) {\n      console.log(\"assetFind Error\", err);\n    }\n  };\n\n  useEffect(() => {\n    getAsset();\n  }, []);\n\n  const UpdatedModal = () => {\n    return (\n      <>\n        <Modal isOpen={submitModal} onClose={() => setSubmitModal(false)}>\n          <ModalHeader>Asset Updated Successfully!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setSubmitModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //functions\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n  };\n\n  // useEffect(() => {\n  //   handleMigration();\n  // }, []);\n\n  //ASSET----------------------------------------------------\n  const assetPicker = () => {\n    return (\n      <div className=\"px-4 mt-4 py-3 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800\">\n        {/* {floatbox ? (\n          <UpdateAssetFloat Business={Business} POnumber={POnumber} />\n        ) : null} */}\n\n        <Label className=\"font-bold\">\n          <span>Asset Information</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n\n        <div className=\"flex flex-row space-x-4\">\n          <SectionTitle className=\"\">\n            Customer: {customer.customerName}\n          </SectionTitle>\n          <SectionTitle>Account: {account.accountName} </SectionTitle>\n          <SectionTitle>Unit: {unit.unitName}</SectionTitle>\n        </div>\n\n        {/* <Label className=\"font-bold\">\n          <span>Customer: {customer.customerName}</span>\n        </Label> */}\n        {/* ----------------------------Row - 1 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full  \">\n            <div className=\"my-3 flex-row flex items-center space-x-1\">\n              <span>Business Type: </span>\n              <div> {Business}</div>\n            </div>\n          </div>\n          <div className=\"w-full  \">\n            <div className=\"my-3 flex-row flex items-center space-x-1\">\n              <span>Purchase Order Number</span>\n              <div>{POnumber}</div>\n            </div>\n          </div>\n        </div>\n        {/* ----------------------------Row - 2 --------------------------------------------------------------------- */}\n\n        <div className=\"flex flex-col lg:flex-row  items-center justify-start lg:space-x-8\">\n          <Label className=\"w-full my-3\">\n            <span>Purchase Order Date</span>\n            <Input\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={POdate}\n              onChange={(e) => {\n                setPOdate(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Contract From</span>\n            <Input\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={ContractFrom}\n              onChange={(e) => {\n                setContractFrom(e.target.value);\n              }}\n            />\n          </Label>\n\n          <Label className=\"w-full my-3\">\n            <span>Contract To</span>\n            <Input\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={ContractTo}\n              onChange={(e) => {\n                setContractTo(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing From</span>\n            <Input\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={BillingFrom}\n              onChange={(e) => {\n                setBillingFrom(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing To</span>\n            <Input\n              type=\"date\"\n              className=\"mt-1\"\n              name=\"brand\"\n              value={BillingTo}\n              onChange={(e) => {\n                setBillingTo(e.target.value);\n              }}\n            />\n          </Label>\n        </div>\n        {/* ----------------------------Row - 3 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>AMC Rate</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={AMCRate}\n                onChange={(e) => {\n                  setAMCRate(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>GST</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={GST}\n                onChange={(e) => {\n                  setGST(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div>\n        {/* ----------------------------Row - 4 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3 font-bold\">\n              <span>GST AMOUNT: </span>\n\n              <span> Rs {AMCRate * (GST / 100)}</span>\n            </Label>\n          </div>\n          <div className=\"w-full font-bold\">\n            <Label className=\"my-3\">\n              <span>Net Amount: </span>\n              <span>\n                Rs {parseInt(AMCRate) + parseInt(AMCRate) * (GST / 100)}\n              </span>\n            </Label>\n          </div>\n        </div>\n        {/* <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>GST AMOUNT</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={GSTAMOUNT}\n                onChange={(e) => {\n                  setGSTAMOUNT(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>Net Amount</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={NetAmount}\n                onChange={(e) => {\n                  setNetAmount(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div> */}\n      </div>\n    );\n  };\n\n  //PRODUCT\n\n  const productPicker = () => {\n    return (\n      <>\n        <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800\">\n          <form onSubmit={handleSubmit}>\n            <Label className=\"font-bold\">\n              <span>Essential Details</span>\n            </Label>\n            <hr className=\"mb-5 mt-2\" />\n            <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n              <Label className=\"my-3 w-full\">\n                <span>Brand</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Brand\"\n                  name=\"brand\"\n                  value={brand}\n                  onChange={(e) => {\n                    setBrand(e.target.value);\n                  }}\n                />\n              </Label>\n              <Label className=\"my-3 w-full\">\n                <span>Model</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Model\"\n                  name=\"model\"\n                  value={model}\n                  onChange={(e) => {\n                    setModel(e.target.value);\n                  }}\n                />\n              </Label>\n              <Label className=\"my-3 w-full\">\n                <span>Serial Number</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Serial Number\"\n                  name=\"serialno\"\n                  value={serialno}\n                  onChange={(e) => {\n                    setSerialNo(e.target.value);\n                  }}\n                />\n              </Label>\n            </div>\n            {/* ---------------------------OS--------------------------------- */}\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <Label className=\"font-bold\">\n                  <span>Operating System</span>\n                </Label>\n                <hr className=\"mb-5 mt-2\" />\n                <Label className=\"my-3\">\n                  <span>OS</span>\n                  <Input\n                    className=\"mt-1\"\n                    placeholder=\"OS\"\n                    name=\"os\"\n                    value={os}\n                    onChange={(e) => {\n                      setOs(e.target.value);\n                    }}\n                  />\n                </Label>\n              </>\n            ) : null}\n\n            {/* //////////// ARRAY /////////////// */}\n            {/* -------------------CPU and RAM-------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------CPU------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>CPU</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newcpu = [...cpu];\n                            let add = { cpuname: \"\", cpusno: \"\" };\n                            newcpu.push(add);\n                            setCpu(newcpu);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newcpu = [...cpu];\n                            if (newcpu[1]) {\n                              newcpu.pop();\n                              setCpu(newcpu);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {cpu.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"w-full my-3\">\n                              <span>CPU {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`CPU ${i + 1}`}\n                                name=\"cpuname\"\n                                value={item.cpuname}\n                                onChange={(e) => {\n                                  let newlist = [...cpu];\n                                  newlist[i].cpuname = e.target.value;\n                                  setCpu(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"w-full my-3\">\n                              <span>CPU {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`CPU ${i + 1}'s Serial Number `}\n                                name=\"cpusno\"\n                                value={item.cpusno}\n                                onChange={(e) => {\n                                  let newlist = [...cpu];\n                                  newlist[i].cpusno = e.target.value;\n                                  setCpu(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------CPU------------------------------- */}\n\n              {/* ----------------RAM------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>RAM</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newram = [...ram];\n                            let add = { ramname: \"\", ramsno: \"\" };\n                            newram.push(add);\n                            setram(newram);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newram = [...ram];\n                            if (newram[1]) {\n                              newram.pop();\n                              setram(newram);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {ram.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>RAM {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`RAM ${i + 1}`}\n                                name=\"ramname\"\n                                value={item.ramname}\n                                onChange={(e) => {\n                                  let newlist = [...ram];\n                                  newlist[i].ramname = e.target.value;\n                                  setram(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>RAM {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`RAM ${i + 1}'s Serial Number `}\n                                name=\"cpusno\"\n                                value={item.ramsno}\n                                onChange={(e) => {\n                                  let newlist = [...ram];\n                                  newlist[i].ramsno = e.target.value;\n                                  setram(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------RAM------------------------------- */}\n            </div>\n\n            {/* -----------------------fan and motherboard------------------------------ */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------fan------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>FAN</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newfan = [...fan];\n                            let add = { fanname: \"\", fansno: \"\" };\n                            newfan.push(add);\n                            setfan(newfan);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newfan = [...fan];\n                            if (newfan[1]) {\n                              newfan.pop();\n                              setfan(newfan);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {fan.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>FAN {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`FAN ${i + 1}`}\n                                name=\"fanname\"\n                                value={item.fanname}\n                                onChange={(e) => {\n                                  let newlist = [...fan];\n                                  newlist[i].fanname = e.target.value;\n                                  setfan(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>FAN {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`FAN ${i + 1}'s Serial Number `}\n                                name=\"fansno\"\n                                value={item.fansno}\n                                onChange={(e) => {\n                                  let newlist = [...fan];\n                                  newlist[i].fansno = e.target.value;\n                                  setfan(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------fan------------------------------- */}\n\n              {/* ----------------motherboard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Motherboard</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmotherboard = [...motherboard];\n                            let add = {\n                              motherboardname: \"\",\n                              motherboardsno: \"\",\n                            };\n                            newmotherboard.push(add);\n                            setmotherboard(newmotherboard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmotherboard = [...motherboard];\n                            if (newmotherboard[1]) {\n                              newmotherboard.pop();\n                              setmotherboard(newmotherboard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {motherboard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Motherboard {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Motherboard ${i + 1}`}\n                                name=\"motherboardname\"\n                                value={item.motherboardname}\n                                onChange={(e) => {\n                                  let newlist = [...motherboard];\n                                  newlist[i].motherboardname = e.target.value;\n                                  setmotherboard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Motherboard {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Motherboard ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"motherboardsno\"\n                                value={item.motherboardsno}\n                                onChange={(e) => {\n                                  let newlist = [...motherboard];\n                                  newlist[i].motherboardsno = e.target.value;\n                                  setmotherboard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------motherboard------------------------------- */}\n            </div>\n\n            {/* ------------------------HDD And SMPS */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------hdd------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>HDD</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhdd = [...hdd];\n                            let add = { hddname: \"\", hddsno: \"\" };\n                            newhdd.push(add);\n                            sethdd(newhdd);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhdd = [...hdd];\n                            if (newhdd[1]) {\n                              newhdd.pop();\n                              sethdd(newhdd);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {hdd.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>HDD {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HDD ${i + 1}`}\n                                name=\"hddname\"\n                                value={item.hddname}\n                                onChange={(e) => {\n                                  let newlist = [...hdd];\n                                  newlist[i].hddname = e.target.value;\n                                  sethdd(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>HDD {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HDD ${i + 1}'s Serial Number `}\n                                name=\"hddsno\"\n                                value={item.hddsno}\n                                onChange={(e) => {\n                                  let newlist = [...hdd];\n                                  newlist[i].hddsno = e.target.value;\n                                  sethdd(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------hdd------------------------------- */}\n\n              {/* ----------------smps------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>SMPS</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newsmps = [...smps];\n                            let add = { smpsname: \"\", smpssno: \"\" };\n                            newsmps.push(add);\n                            setsmps(newsmps);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newsmps = [...smps];\n                            if (newsmps[1]) {\n                              newsmps.pop();\n                              setsmps(newsmps);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {smps.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>SMPS {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`SMPS ${i + 1}`}\n                                name=\"smpsname\"\n                                value={item.smpsname}\n                                onChange={(e) => {\n                                  let newlist = [...smps];\n                                  newlist[i].smpsname = e.target.value;\n                                  setsmps(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>SMPS {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`SMPS ${i + 1}'s Serial Number `}\n                                name=\"smpssno\"\n                                value={item.smpssno}\n                                onChange={(e) => {\n                                  let newlist = [...smps];\n                                  newlist[i].smpssno = e.target.value;\n                                  setsmps(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------smps------------------------------- */}\n            </div>\n\n            {/* -----------------------Keyboard And Mouse ------------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------kbd------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Keyboard</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newkbd = [...kbd];\n                            let add = { kbdname: \"\", kbdsno: \"\" };\n                            newkbd.push(add);\n                            setkbd(newkbd);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newkbd = [...kbd];\n                            if (newkbd[1]) {\n                              newkbd.pop();\n                              setkbd(newkbd);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {kbd.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Keyboard {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Keyboard ${i + 1}`}\n                                name=\"kbdname\"\n                                value={item.kbdname}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].kbdname = e.target.value;\n                                  setkbd(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Keyboard {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Keyboard ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"kbdsno\"\n                                value={item.kbdsno}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].kbdsno = e.target.value;\n                                  setkbd(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------kbd------------------------------- */}\n\n              {/* ----------------mouse------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Mouse</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmouse = [...mouse];\n                            let add = { mousename: \"\", mousesno: \"\" };\n                            newmouse.push(add);\n                            setmouse(newmouse);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmouse = [...mouse];\n                            if (newmouse[1]) {\n                              newmouse.pop();\n                              setmouse(newmouse);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {mouse.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Mouse {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Mouse ${i + 1}`}\n                                name=\"mousename\"\n                                value={item.mousename}\n                                onChange={(e) => {\n                                  let newlist = [...mouse];\n                                  newlist[i].mousename = e.target.value;\n                                  setmouse(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Mouse {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Mouse ${i + 1}'s Serial Number `}\n                                name=\"mousesno\"\n                                value={item.mousesno}\n                                onChange={(e) => {\n                                  let newlist = [...mouse];\n                                  newlist[i].mousesno = e.target.value;\n                                  setmouse(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------mouse------------------------------- */}\n            </div>\n\n            {/* ---------------------------Monitor and GCard ------------------------*/}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------monitor------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Monitor</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmonitor = [...monitor];\n                            let add = { monitorname: \"\", monitorsno: \"\" };\n                            newmonitor.push(add);\n                            setmonitor(newmonitor);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmonitor = [...monitor];\n                            if (newmonitor[1]) {\n                              newmonitor.pop();\n                              setmonitor(newmonitor);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {monitor.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Monitor {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Monitor ${i + 1}`}\n                                name=\"monitorname\"\n                                value={item.monitorname}\n                                onChange={(e) => {\n                                  let newlist = [...monitor];\n                                  newlist[i].monitorname = e.target.value;\n                                  setmonitor(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Monitor {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Monitor ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"monitorsno\"\n                                value={item.monitorsno}\n                                onChange={(e) => {\n                                  let newlist = [...monitor];\n                                  newlist[i].monitorsno = e.target.value;\n                                  setmonitor(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------monitor------------------------------- */}\n\n              {/* ----------------gcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Graphics Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newgcard = [...gcard];\n                            let add = { gcardname: \"\", gcardsno: \"\" };\n                            newgcard.push(add);\n                            setgcard(newgcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newgcard = [...gcard];\n                            if (newgcard[1]) {\n                              newgcard.pop();\n                              setgcard(newgcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {gcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Graphics Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Graphics Card ${i + 1}`}\n                                name=\"gcardname\"\n                                value={item.gcardname}\n                                onChange={(e) => {\n                                  let newlist = [...gcard];\n                                  newlist[i].gcardname = e.target.value;\n                                  setgcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Graphics Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Graphics Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"gcardsno\"\n                                value={item.gcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...gcard];\n                                  newlist[i].gcardsno = e.target.value;\n                                  setgcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------gcard------------------------------- */}\n            </div>\n\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------enetcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>E Net Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newenetcard = [...enetcard];\n                            let add = { enetcardname: \"\", enetcardsno: \"\" };\n                            newenetcard.push(add);\n                            setenetcard(newenetcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newenetcard = [...enetcard];\n                            if (newenetcard[1]) {\n                              newenetcard.pop();\n                              setenetcard(newenetcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {enetcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>E Net Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`E Net Card ${i + 1}`}\n                                name=\"enetcardname\"\n                                value={item.enetcardname}\n                                onChange={(e) => {\n                                  let newlist = [...enetcard];\n                                  newlist[i].enetcardname = e.target.value;\n                                  setenetcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>E Net Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`E Net Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"enetcardsno\"\n                                value={item.enetcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...enetcard];\n                                  newlist[i].enetcardsno = e.target.value;\n                                  setenetcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------enetcard------------------------------- */}\n\n              {/* ----------------serialcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Serial Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newserialcard = [...serialcard];\n                            let add = { serialcardname: \"\", serialcardsno: \"\" };\n                            newserialcard.push(add);\n                            setserialcard(newserialcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newserialcard = [...serialcard];\n                            if (newserialcard[1]) {\n                              newserialcard.pop();\n                              setserialcard(newserialcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {serialcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Serial Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Serial Card ${i + 1}`}\n                                name=\"serialcardname\"\n                                value={item.serialcardname}\n                                onChange={(e) => {\n                                  let newlist = [...serialcard];\n                                  newlist[i].serialcardname = e.target.value;\n                                  setserialcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Serial Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Serial Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"serialcardsno\"\n                                value={item.serialcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...serialcard];\n                                  newlist[i].serialcardsno = e.target.value;\n                                  setserialcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------serialcard------------------------------- */}\n            </div>\n\n            {/* --------------------Parallel And HBD Card ----------------------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------parallelcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Parallel Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newparallelcard = [...parallelcard];\n                            let add = {\n                              parallelcardname: \"\",\n                              parallelcardsno: \"\",\n                            };\n                            newparallelcard.push(add);\n                            setparallelcard(newparallelcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newparallelcard = [...parallelcard];\n                            if (newparallelcard[1]) {\n                              newparallelcard.pop();\n                              setparallelcard(newparallelcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {parallelcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Parallel Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Parallel Card ${i + 1}`}\n                                name=\"parallelcardname\"\n                                value={item.parallelcardname}\n                                onChange={(e) => {\n                                  let newlist = [...parallelcard];\n                                  newlist[i].parallelcardname = e.target.value;\n                                  setparallelcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Parallel Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Parallel Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"parallelcardsno\"\n                                value={item.parallelcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...parallelcard];\n                                  newlist[i].parallelcardsno = e.target.value;\n                                  setparallelcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------parallelcard------------------------------- */}\n\n              {/* ----------------hbacard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>HBA Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhbacard = [...hbacard];\n                            let add = { hbacardname: \"\", hbacardsno: \"\" };\n                            newhbacard.push(add);\n                            sethbacard(newhbacard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhbacard = [...hbacard];\n                            if (newhbacard[1]) {\n                              newhbacard.pop();\n                              sethbacard(newhbacard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {hbacard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>HBA Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HBA Card ${i + 1}`}\n                                name=\"hbacardname\"\n                                value={item.hbacardname}\n                                onChange={(e) => {\n                                  let newlist = [...hbacard];\n                                  newlist[i].hbacardname = e.target.value;\n                                  sethbacard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>HBA Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HBA Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"hbacardsno\"\n                                value={item.hbacardsno}\n                                onChange={(e) => {\n                                  let newlist = [...hbacard];\n                                  newlist[i].hbacardsno = e.target.value;\n                                  sethbacard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------hbacard------------------------------- */}\n            </div>\n            {/* --------------------Raid And Tape Controller------------------------------ */}\n\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------raidcontroller------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Raid Controller</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newraidcontroller = [...raidcontroller];\n                            let add = {\n                              raidcontrollername: \"\",\n                              raidcontrollersno: \"\",\n                            };\n                            newraidcontroller.push(add);\n                            setraidcontroller(newraidcontroller);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newraidcontroller = [...raidcontroller];\n                            if (newraidcontroller[1]) {\n                              newraidcontroller.pop();\n                              setraidcontroller(newraidcontroller);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {raidcontroller.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Raid Controller {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Raid Controller ${i + 1}`}\n                                name=\"raidcontrollername\"\n                                value={item.raidcontrollername}\n                                onChange={(e) => {\n                                  let newlist = [...raidcontroller];\n                                  newlist[i].raidcontrollername =\n                                    e.target.value;\n                                  setraidcontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>\n                                Raid Controller {i + 1}: Serial Number\n                              </span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Raid Controller ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"raidcontrollersno\"\n                                value={item.raidcontrollersno}\n                                onChange={(e) => {\n                                  let newlist = [...raidcontroller];\n                                  newlist[i].raidcontrollersno = e.target.value;\n                                  setraidcontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------raidcontroller------------------------------- */}\n\n              {/* ----------------tapecontroller------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Tape Controller</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newtapecontroller = [...tapecontroller];\n                            let add = {\n                              tapecontrollername: \"\",\n                              tapecontrollersno: \"\",\n                            };\n                            newtapecontroller.push(add);\n                            settapecontroller(newtapecontroller);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newtapecontroller = [...tapecontroller];\n                            if (newtapecontroller[1]) {\n                              newtapecontroller.pop();\n                              settapecontroller(newtapecontroller);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {tapecontroller.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Tape Controller {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Tape Controller ${i + 1}`}\n                                name=\"tapecontrollername\"\n                                value={item.tapecontrollername}\n                                onChange={(e) => {\n                                  let newlist = [...tapecontroller];\n                                  newlist[i].tapecontrollername =\n                                    e.target.value;\n                                  settapecontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>\n                                Tape Controller {i + 1}: Serial Number\n                              </span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Tape Controller ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"tapecontrollersno\"\n                                value={item.tapecontrollersno}\n                                onChange={(e) => {\n                                  let newlist = [...tapecontroller];\n                                  newlist[i].tapecontrollersno = e.target.value;\n                                  settapecontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------tapecontroller------------------------------- */}\n            </div>\n\n            {/* ----------------opticaldrive------------------------------- */}\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <div className=\"flex flex-row items-center\">\n                  <Label className=\"font-bold\">\n                    <span>Optical Drive</span>\n                  </Label>\n                  <div className=\"ml-3 \">\n                    <Button\n                      onClick={() => {\n                        let newopticaldrive = [...opticaldrive];\n                        let add = { opticaldrivename: \"\", opticaldrivesno: \"\" };\n                        newopticaldrive.push(add);\n                        setopticaldrive(newopticaldrive);\n                      }}\n                      icon={Add}\n                      layout=\"link\"\n                      aria-label=\"Like\"\n                    />\n                  </div>\n                  <div className=\"ml-3\">\n                    <Button\n                      onClick={() => {\n                        let newopticaldrive = [...opticaldrive];\n                        if (newopticaldrive[1]) {\n                          newopticaldrive.pop();\n                          setopticaldrive(newopticaldrive);\n                        }\n                      }}\n                      icon={Remove}\n                      layout=\"link\"\n                      aria-label=\"Like\"\n                    />\n                  </div>\n                </div>\n                <hr className=\"mb-5 mt-2\" />\n                {opticaldrive.map((item, i) => {\n                  return (\n                    <div key={i}>\n                      <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                        <Label className=\"my-3 w-full\">\n                          <span>Optical Drive {i + 1}</span>\n                          <Input\n                            className=\"mt-1\"\n                            placeholder={`Opticaldrive ${i + 1}`}\n                            name=\"opticaldrivename\"\n                            value={item.opticaldrivename}\n                            onChange={(e) => {\n                              let newlist = [...opticaldrive];\n                              newlist[i].opticaldrivename = e.target.value;\n                              setopticaldrive(newlist);\n                            }}\n                          />\n                        </Label>\n                        <Label className=\"my-3 w-full\">\n                          <span>Opticaldrive {i + 1}: Serial Number</span>\n                          <Input\n                            className=\"mt-1\"\n                            placeholder={`Optical Drive ${\n                              i + 1\n                            }'s Serial Number `}\n                            name=\"opticaldrivesno\"\n                            value={item.opticaldrivesno}\n                            onChange={(e) => {\n                              let newlist = [...opticaldrive];\n                              newlist[i].opticaldrivesno = e.target.value;\n                              setopticaldrive(newlist);\n                            }}\n                          />\n                        </Label>\n                      </div>\n                    </div>\n                  );\n                })}\n              </>\n            ) : null}\n            {/* ----------------opticaldrive------------------------------- */}\n\n            {/* ----------------others------------------------------- */}\n            <div className=\"flex flex-row items-center\">\n              <Label className=\"font-bold\">\n                <span>Others</span>\n              </Label>\n              <div className=\"ml-3\">\n                <Button\n                  onClick={() => {\n                    let newothers = [...others];\n                    let add = { othersname: \"\", otherssno: \"\" };\n                    newothers.push(add);\n                    setothers(newothers);\n                  }}\n                  icon={Add}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                />\n              </div>\n              <div className=\"ml-3\">\n                <Button\n                  onClick={() => {\n                    let newothers = [...others];\n                    if (newothers[1]) {\n                      newothers.pop();\n                      setothers(newothers);\n                    }\n                  }}\n                  icon={Remove}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                />\n              </div>\n            </div>\n            <hr className=\"mb-5 mt-2\" />\n            {others.map((item, i) => {\n              return (\n                <div key={i}>\n                  <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                    <Label className=\"my-3 w-full\">\n                      <span>Others {i + 1}</span>\n                      <Input\n                        className=\"mt-1\"\n                        placeholder={`Others ${i + 1}`}\n                        name=\"othersname\"\n                        value={item.othersname}\n                        onChange={(e) => {\n                          let newlist = [...others];\n                          newlist[i].othersname = e.target.value;\n                          setothers(newlist);\n                        }}\n                      />\n                    </Label>\n                    <Label className=\"my-3 w-full\">\n                      <span>Others {i + 1}: Serial Number</span>\n                      <Input\n                        className=\"mt-1\"\n                        placeholder={`Others ${i + 1}'s Serial Number `}\n                        name=\"otherssno\"\n                        value={item.otherssno}\n                        onChange={(e) => {\n                          let newlist = [...others];\n                          newlist[i].otherssno = e.target.value;\n                          setothers(newlist);\n                        }}\n                      />\n                    </Label>\n                  </div>\n                </div>\n              );\n            })}\n\n            {/* ----------------others------------------------------- */}\n\n            <div className=\"flex items-center justify-center my-10\">\n              <Button type=\"submit\">Submit</Button>\n            </div>\n\n            {/* <Label className=\"mt-4\">\n              <span>Disabled</span>\n              <Input disabled className=\"mt-1\" placeholder=\"Jane Doe\" />\n            </Label> */}\n          </form>\n        </div>\n      </>\n    );\n  };\n\n  //DROPDOWN------------------------------------------------------------------------------------\n\n  const [isOpen, setIsOpen] = useState(false);\n  function toggleDropdown() {\n    setIsOpen(!isOpen);\n  }\n\n  const test = () => {\n    console.log(test);\n  };\n\n  return (\n    <>\n      {assetPicker()}\n      {product != \"null\" ? (\n        <>\n          <SectionTitle>{product} </SectionTitle>\n          {productPicker()}\n        </>\n      ) : null}\n\n      {UpdatedModal()}\n    </>\n  );\n}\n\nexport default AssetView;\n"],"sourceRoot":""}