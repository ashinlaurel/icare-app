{"version":3,"sources":["pages/Inventory/CreateInvent.js"],"names":["CreateInvent","useContext","TopBarContext","setTopHeading","topheading","useState","itemType","setItemType","condition","setCondition","location","setLocation","name","sno","invnumber","values","setValues","type","err","setErr","useEffect","handleChange","e","target","value","submitItem","a","console","log","newitem","toLowerCase","Axios","url","API","Emp","getId","method","data","then","_id","catch","className","onChange","valid","onClick","aria-label","aria-haspopup"],"mappings":"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","file":"static/js/58.6638303d.chunk.js","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport Emp from \"../../helpers/auth/EmpProfile\";\n\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\n\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport { API } from \"../../backendapi\";\nimport Axios from \"axios\";\n\nconst CreateInvent = () => {\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n  const [itemType, setItemType] = useState(\"Mouse\");\n  const [condition, setCondition] = useState(\"Good\");\n  const [location, setLocation] = useState(\"Trivandrum\");\n  const [values, setValues] = useState({\n    name: \"\",\n    sno: \"\",\n    invnumber: \"\",\n  });\n  const [err, setErr] = useState({\n    type: \"\",\n    name: \"\",\n    sno: \"\",\n    condition: \"\",\n    location: \"\",\n    invnumber: \"\",\n  });\n\n  useEffect(() => {\n    setTopHeading(\"Create Item\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const submitItem = async () => {\n    if (values.name === \"\" || values.sno === \"\" || values.invnumber === \"\") {\n      //   setIsReqFieldModal(true);\n      console.log(\"missing inputs\");\n      return;\n    }\n    const newitem = {\n      name: values.name,\n      sno: values.sno,\n      type: itemType.toLowerCase(),\n      condition: condition,\n      location: location,\n      invnumber: values.invnumber,\n    };\n    await Axios({\n      url: `${API}/inventory/${Emp.getId()}/create`,\n      method: \"POST\",\n      data: newitem,\n    })\n      .then((data) => {\n        console.log(\"Added\", data._id);\n        // setIsReviewModalOpen(true);\n        setValues({ name: \"\", sno: \"\", invnumber: \"\" });\n        setErr({\n          type: \"\",\n          name: \"\",\n          sno: \"\",\n          condition: \"\",\n          location: \"\",\n          invnumber: \"\",\n        });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        setErr({ ...err });\n      });\n  };\n\n  return (\n    <div className=\"px-4 py-3 mt-4 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n      <Label className=\"font-bold\">\n        <span>Add Item To Inventory</span>\n      </Label>\n      <hr className=\"mb-5 mt-2\" />\n      {/* ------------------------Row 1-------------------------- */}\n      <div className=\"flex-row flex space-x-3\">\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Select Type*</span>\n            <Select\n              className=\"mt-1\"\n              onChange={(e) => {\n                setItemType(e.target.value);\n              }}\n            >\n              <option value=\"Mouse\">Mouse</option>\n              <option value=\"Keyboard\">Keyboard</option>\n              <option value=\"Monitor\">Monitor</option>\n              <option value=\"Cpu\">Cpu</option>\n              <option value=\"Ram\">Ram</option>\n              <option value=\"Fan\">Fan</option>\n              <option value=\"Motherboard\">Motherboard</option>\n              <option value=\"SMPS\">SMPS</option>\n              <option value=\"HDD\">HDD</option>\n              <option value=\"SMPS\">SMPS</option>\n              <option value=\"GCard\">Gcard</option>\n              <option value=\"EnetCard\">Enet Card</option>\n              <option value=\"SerialCard\">Serial Card</option>\n              <option value=\"ParalellCard\">Paralell Card</option>\n              <option value=\"OpticalDrive\">Optical Drive</option>\n              <option value=\"Others\">Others</option>\n            </Select>\n          </Label>\n        </div>\n\n        <>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Product Name*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.name}\n                onChange={handleChange(\"name\")}\n              />\n            </Label>\n            <HelperText valid={false}>{err.name}</HelperText>\n          </div>\n        </>\n\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Serial Number*</span>\n            <Input\n              className=\"mt-1\"\n              type=\"text\"\n              value={values.sno}\n              onChange={handleChange(\"sno\")}\n            />\n          </Label>\n          <HelperText valid={false}>{err.sno}</HelperText>\n        </div>\n\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Select Condition*</span>\n            <Select\n              className=\"mt-1\"\n              onChange={(e) => {\n                setCondition(e.target.value);\n              }}\n            >\n              <option value=\"Good\">Good</option>\n              <option value=\"Bad\">Bad</option>\n            </Select>\n          </Label>\n        </div>\n      </div>\n      {/* ----------------------Row 2 ----------------------------- */}\n      <div className=\"flex-row flex space-x-3 my-2\">\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Select Location*</span>\n            <Select\n              className=\"mt-1\"\n              onChange={(e) => {\n                setLocation(e.target.value);\n              }}\n            >\n              <option value=\"Trivandrum\">Trivandrum</option>\n              <option value=\"Kottayum\">Kottayum</option>\n              <option value=\"Kozhikode\">Kozhikode</option>\n            </Select>\n          </Label>\n        </div>\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Invoice Number*</span>\n            <Input\n              className=\"mt-1\"\n              type=\"text\"\n              value={values.invnumber}\n              onChange={handleChange(\"invnumber\")}\n            />\n          </Label>\n          <HelperText valid={false}>{err.invnumber}</HelperText>\n        </div>\n      </div>\n      {/* ///////////////////////////////////////////////////////// */}\n      {/* <Label className=\"font-bold mt-5 mb-2\">\n      <span>Additional Information</span>\n    </Label> */}\n      {/* <hr /> */}\n\n      {/* ///////////////////////////////////////////////////////// */}\n\n      <Button\n        onClick={() => {\n          submitItem();\n        }}\n        aria-label=\"Notifications\"\n        aria-haspopup=\"true\"\n        className=\"mt-4\"\n      >\n        {\" \"}\n        Add Item\n      </Button>\n    </div>\n  );\n};\n\nexport default CreateInvent;\n"],"sourceRoot":""}