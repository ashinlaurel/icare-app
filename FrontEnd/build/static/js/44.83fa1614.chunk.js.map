{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/Assets/UpdateAsset.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","UpdateAsset","useState","floatbox","setFloatBox","id","useParams","submitModal","setSubmitModal","_id","unitName","unit","setUnit","customerName","customer","setCustomer","accountName","account","setAccount","brand","setBrand","model","setModel","serialno","setSerialNo","os","setOs","cpuname","cpusno","cpu","setCpu","ramname","ramsno","ram","setram","hddname","hddsno","hdd","sethdd","smpsname","smpssno","smps","setsmps","fanname","fansno","fan","setfan","motherboardname","motherboardsno","motherboard","setmotherboard","opticaldrivename","opticaldrivesno","opticaldrive","setopticaldrive","kbdname","kbdsno","kbd","setkbd","mousename","mousesno","mouse","setmouse","monitorname","monitorsno","monitor","setmonitor","gcardname","gcardsno","gcard","setgcard","enetcardname","enetcardsno","enetcard","setenetcard","serialcardname","serialcardsno","serialcard","setserialcard","parallelcardname","parallelcardsno","parallelcard","setparallelcard","hbacardname","hbacardsno","hbacard","sethbacard","raidcontrollername","raidcontrollersno","raidcontroller","setraidcontroller","tapecontrollername","tapecontrollersno","tapecontroller","settapecontroller","othersname","otherssno","others","setothers","Business","setBusiness","POnumber","setPOnumber","POdate","setPOdate","ContractFrom","setContractFrom","ContractTo","setContractTo","BillingFrom","setBillingFrom","BillingTo","setBillingTo","AMCRate","setAMCRate","GST","setGST","GSTAMOUNT","setGSTAMOUNT","NetAmount","setNetAmount","product","setProduct","isModalOpen","setIsModalOpen","getAsset","a","axios","post","API","Emp","getId","res","console","log","data","asset","producttype","customerId","accountId","business","ponumber","amcrate","moment","podate","format","contractfrom","contractto","billingfrom","billingto","gstperc","gstamount","netamount","length","keyboard","netcardname","useEffect","handleSubmit","e","preventDefault","payload","newproduct","newasset","url","method","className","onClick","icon","HeartIcon","layout","aria-label","onChange","target","value","selected","disabled","name","type","parseInt","onSubmit","placeholder","newcpu","push","Add","pop","Remove","map","item","i","key","newlist","newram","newfan","newmotherboard","newhdd","newsmps","newkbd","newmouse","newmonitor","newgcard","newenetcard","newserialcard","newparallelcard","newhbacard","newraidcontroller","newtapecontroller","newopticaldrive","newothers","isOpen","onClose"],"mappings":"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","file":"static/js/44.83fa1614.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Select,\n  Textarea,\n  Button,\n  Dropdown,\n  DropdownItem,\n  Badge,\n} from \"@windmill/react-ui\";\n\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport { Add, Remove, HeartIcon } from \"../../icons\";\nimport UnitListModal from \"../../components/Modal/UnitListModal\";\nimport CreateAssetFloat from \"../../components/FloatDetails/CreateAssetFloat\";\n\n// Migration\nimport { handleMigration } from \"../../migration/migration\";\nimport { useParams } from \"react-router-dom\";\n\nfunction UpdateAsset() {\n  // floatbox\n  const [floatbox, setFloatBox] = useState(false);\n  const { id } = useParams();\n  // console.log(id);\n  //modal\n  const [submitModal, setSubmitModal] = useState(false);\n\n  //customer\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n  //prodcut\n  const [brand, setBrand] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [serialno, setSerialNo] = useState(\"\");\n  const [os, setOs] = useState(\"\");\n  const [cpu, setCpu] = useState([{ cpuname: \"\", cpusno: \"\" }]);\n  const [ram, setram] = useState([{ ramname: \"\", ramsno: \"\" }]);\n  const [hdd, sethdd] = useState([{ hddname: \"\", hddsno: \"\" }]);\n  const [smps, setsmps] = useState([{ smpsname: \"\", smpssno: \"\" }]);\n  const [fan, setfan] = useState([{ fanname: \"\", fansno: \"\" }]);\n  const [motherboard, setmotherboard] = useState([\n    { motherboardname: \"\", motherboardsno: \"\" },\n  ]);\n  const [opticaldrive, setopticaldrive] = useState([\n    { opticaldrivename: \"\", opticaldrivesno: \"\" },\n  ]);\n  const [kbd, setkbd] = useState([{ kbdname: \"\", kbdsno: \"\" }]);\n  const [mouse, setmouse] = useState([{ mousename: \"\", mousesno: \"\" }]);\n  const [monitor, setmonitor] = useState([{ monitorname: \"\", monitorsno: \"\" }]);\n  const [gcard, setgcard] = useState([{ gcardname: \"\", gcardsno: \"\" }]);\n  const [enetcard, setenetcard] = useState([\n    { enetcardname: \"\", enetcardsno: \"\" },\n  ]);\n  const [serialcard, setserialcard] = useState([\n    { serialcardname: \"\", serialcardsno: \"\" },\n  ]);\n  const [parallelcard, setparallelcard] = useState([\n    { parallelcardname: \"\", parallelcardsno: \"\" },\n  ]);\n  const [hbacard, sethbacard] = useState([{ hbacardname: \"\", hbacardsno: \"\" }]);\n  const [raidcontroller, setraidcontroller] = useState([\n    { raidcontrollername: \"\", raidcontrollersno: \"\" },\n  ]);\n  const [tapecontroller, settapecontroller] = useState([\n    { tapecontrollername: \"\", tapecontrollersno: \"\" },\n  ]);\n  const [others, setothers] = useState([{ othersname: \"\", otherssno: \"\" }]);\n  //asset\n\n  const [Business, setBusiness] = useState(\"\");\n  const [POnumber, setPOnumber] = useState(\"\");\n  const [POdate, setPOdate] = useState(\"\");\n  const [ContractFrom, setContractFrom] = useState(\"\");\n  const [ContractTo, setContractTo] = useState(\"\");\n  const [BillingFrom, setBillingFrom] = useState(\"\");\n  const [BillingTo, setBillingTo] = useState(\"\");\n  const [AMCRate, setAMCRate] = useState(\"\");\n  const [GST, setGST] = useState(\"\");\n  const [GSTAMOUNT, setGSTAMOUNT] = useState(\"\");\n  const [NetAmount, setNetAmount] = useState(\"\");\n\n  //////////////-------------------------------------------->Product name not in asset\n  const [product, setProduct] = useState(\"Server\");\n\n  //MODAL\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const getAsset = async () => {\n    try {\n      let res = await axios.post(`${API}/asset/${Emp.getId()}/getbyid`, {\n        id: id,\n      });\n      console.log(\"asset\", res.data);\n      let asset = res.data;\n      setProduct(asset.producttype);\n      setUnit({ _id: id, unitName: asset.unitName });\n      setCustomer({ _id: asset.customerId, customerName: asset.customerName });\n      setAccount({ _id: asset.accountId, accountName: asset.accountName });\n      ////------------------------>>>>>>>>\n      // setProduct(\"Server\");\n      ////////---------ASSET INFO\n      setBusiness(asset.business);\n      setPOnumber(asset.ponumber);\n      setAMCRate(asset.amcrate);\n      // Dates --------------------------\n      setPOdate(moment(asset.podate).format(\"YYYY-MM-DD\"));\n      setContractFrom(moment(asset.contractfrom).format(\"YYYY-MM-DD\"));\n      setContractTo(moment(asset.contractto).format(\"YYYY-MM-DD\"));\n      setBillingFrom(moment(asset.billingfrom).format(\"YYYY-MM-DD\"));\n      setBillingTo(moment(asset.billingto).format(\"YYYY-MM-DD\"));\n      ////////////------------>>>>>>>> misiing field GST(asset.gs)\n      setGST(asset.gstperc);\n      setGSTAMOUNT(asset.gstamount);\n      setNetAmount(asset.netamount);\n      // setProduct(asset);\n      //////////////////////////////\n\n      setBrand(asset.product.brand);\n      setModel(asset.product.model);\n      setSerialNo(asset.product.serialno);\n      setOs(asset.product.os);\n      setCpu(asset.product.cpu);\n      setram(asset.product.ram);\n      if (asset.product.hdd.length == 0) sethdd([{ hddname: \"\", hddsno: \"\" }]);\n      else sethdd(asset.product.hdd);\n      if (asset.product.smps.length == 0)\n        setsmps([{ smpsname: \"\", smpssno: \"\" }]);\n      else setsmps(asset.product.smps);\n      if (asset.product.fan.length == 0) setfan([{ fanname: \"\", fansno: \"\" }]);\n      else setfan(asset.product.fan);\n      if (asset.product.motherboard.length == 0)\n        setmotherboard([{ motherboardname: \"\", motherboardsno: \"\" }]);\n      else setmotherboard(asset.product.motherboard);\n      if (asset.product.opticaldrive.length == 0)\n        setopticaldrive([{ opticaldrivename: \"\", opticaldrivesno: \"\" }]);\n      else setopticaldrive(asset.product.opticaldrive);\n      if (asset.product.keyboard.length == 0)\n        setkbd([{ kbdname: \"\", kbdsno: \"\" }]);\n      else setkbd(asset.product.keyboard);\n      if (asset.product.mouse.length == 0)\n        setmouse([{ mousename: \"\", mousesno: \"\" }]);\n      else setmouse(asset.product.mouse);\n      if (asset.product.monitor.length == 0)\n        setmonitor([{ monitorname: \"\", monitorsno: \"\" }]);\n      else setmonitor(asset.product.monitor);\n      if (asset.product.gcard.length == 0)\n        setgcard([{ gcardname: \"\", gcardsno: \"\" }]);\n      else setgcard(asset.product.gcard);\n      if (asset.product.enetcard.length == 0)\n        setenetcard([{ netcardname: \"\", enetcardsno: \"\" }]);\n      else setenetcard(asset.product.enetcard);\n      if (asset.product.serialcard.length == 0)\n        setserialcard([{ serialcardname: \"\", serialcardsno: \"\" }]);\n      else setserialcard(asset.product.serialcard);\n\n      if (asset.product.parallelcard.length == 0)\n        setparallelcard([{ parallelcardname: \"\", parallelcardsno: \"\" }]);\n      else setparallelcard(asset.product.parallelcard);\n      if (asset.product.hbacard.length == 0)\n        sethbacard([{ hbacardname: \"\", hbacardsno: \"\" }]);\n      else sethbacard(asset.product.hbacard);\n      if (asset.product.raidcontroller.length == 0)\n        setraidcontroller([{ raidcontrollername: \"\", raidcontrollersno: \"\" }]);\n      else setraidcontroller(asset.product.raidcontroller);\n      if (asset.product.tapecontroller.length == 0)\n        settapecontroller([{ tapecontrollername: \"\", tapecontrollersno: \"\" }]);\n      else settapecontroller(asset.product.tapecontroller);\n      if (asset.product.others.length == 0)\n        setothers([{ othersname: \"\", otherssno: \"\" }]);\n      else setothers(asset.product.others);\n      //asset\n    } catch (err) {\n      console.log(\"assetFind Error\", err);\n    }\n  };\n\n  useEffect(() => {\n    getAsset();\n  }, []);\n\n  const UpdatedModal = () => {\n    return (\n      <>\n        <Modal isOpen={submitModal} onClose={() => setSubmitModal(false)}>\n          <ModalHeader>Asset Updated Successfully!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setSubmitModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //functions\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      business: Business,\n      producttype: product,\n      ponumber: POnumber,\n      podate: POdate,\n      contractfrom: ContractFrom,\n      contractto: ContractTo,\n      billingfrom: BillingFrom,\n      billingto: BillingTo,\n      amcrate: AMCRate,\n      gstperc: GST,\n      gstamount: GSTAMOUNT,\n      netamount: NetAmount,\n      ///------------------ cust info\n      // unitId: unit._id,\n      // unitName: unit.unitName,\n      // accountId: account._id,\n      // accountName: account.accountName,\n      // customerId: customer._id,\n      // customerName: customer.customerName,\n    };\n    if (payload.podate == \"Invalid date\") payload.podate = \"\";\n    if (payload.contractfrom == \"Invalid date\") payload.contractfrom = \"\";\n    if (payload.contractto == \"Invalid date\") payload.contractto = \"\";\n    if (payload.billingfrom == \"Invalid date\") payload.billingfrom = \"\";\n    if (payload.billingto == \"Invalid date\") payload.billingto = \"\";\n    let newproduct = {\n      brand: brand,\n      model: model,\n      serialno: serialno,\n      os: os,\n      cpu: cpu,\n      ram: ram,\n      hdd: hdd,\n      smps: smps,\n      fan: fan,\n      motherboard: motherboard,\n      opticaldrive: opticaldrive,\n      keyboard: kbd,\n      mouse: mouse,\n      monitor: monitor,\n      gcard: gcard,\n      enetcard: enetcard,\n      serialcard: serialcard,\n      parallelcard: parallelcard,\n      hbacard: hbacard,\n      raidcontroller: raidcontroller,\n      tapecontroller: tapecontroller,\n      others: others,\n    };\n    console.log(payload, newproduct);\n\n    const data = { id: id, newasset: payload, newproduct: newproduct };\n    // console.log(API);\n    try {\n      let update = await axios({\n        url: `${API}/asset/${Emp.getId()}/update`,\n        method: \"POST\",\n        data: data,\n      });\n      setSubmitModal(true);\n      console.log(\"Done\");\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // useEffect(() => {\n  //   handleMigration();\n  // }, []);\n\n  //ASSET----------------------------------------------------\n  const assetPicker = () => {\n    return (\n      <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800\">\n        {/* {floatbox ? (\n          <UpdateAssetFloat Business={Business} POnumber={POnumber} />\n        ) : null} */}\n\n        <Label className=\"font-bold\">\n          <span>Asset Information</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n\n        <div className=\"flex flex-row space-x-4\">\n          <SectionTitle className=\"\">\n            Customer: {customer.customerName}\n          </SectionTitle>\n          <SectionTitle>Account: {account.accountName} </SectionTitle>\n          <SectionTitle>Unit: {unit.unitName}</SectionTitle>\n        </div>\n\n        {/* <Label className=\"font-bold\">\n          <span>Customer: {customer.customerName}</span>\n        </Label> */}\n        {/* ----------------------------Row - 1 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full \">\n            {/* <Label className=\"my-3\">\n              <span>Business</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={Business}\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n              />\n            </Label> */}\n            <Label className=\"my-3\">\n              <span>Business Type</span>\n              <Select\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n                className=\"mt-1\"\n                value={Business}\n              >\n                <option value=\"\" selected disabled>\n                  Select Business Type\n                </option>\n                <option value=\"AMC\">AMC</option>\n                <option value=\"Warranty\">Warranty</option>\n              </Select>\n            </Label>\n          </div>\n          <div className=\"w-full  \">\n            <Label className=\"my-3\">\n              <span>Purchase Order Number</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={POnumber}\n                onChange={(e) => {\n                  setPOnumber(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div>\n        {/* ----------------------------Row - 2 --------------------------------------------------------------------- */}\n\n        <div className=\"flex flex-col lg:flex-row  items-center justify-start lg:space-x-8\">\n          <Label className=\"w-full my-3\">\n            <span>Purchase Order Date</span>\n            <Input\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={POdate}\n              onChange={(e) => {\n                setPOdate(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Contract From</span>\n            <Input\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={ContractFrom}\n              onChange={(e) => {\n                setContractFrom(e.target.value);\n              }}\n            />\n          </Label>\n\n          <Label className=\"w-full my-3\">\n            <span>Contract To</span>\n            <Input\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={ContractTo}\n              onChange={(e) => {\n                setContractTo(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing From</span>\n            <Input\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={BillingFrom}\n              onChange={(e) => {\n                setBillingFrom(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing To</span>\n            <Input\n              type=\"date\"\n              className=\"mt-1\"\n              name=\"brand\"\n              value={BillingTo}\n              onChange={(e) => {\n                setBillingTo(e.target.value);\n              }}\n            />\n          </Label>\n        </div>\n        {/* ----------------------------Row - 3 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>AMC Rate</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={AMCRate}\n                onChange={(e) => {\n                  setAMCRate(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>GST</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={GST}\n                onChange={(e) => {\n                  setGST(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div>\n        {/* ----------------------------Row - 4 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3 font-bold\">\n              <span>GST AMOUNT: </span>\n\n              <span> Rs {AMCRate * (GST / 100)}</span>\n            </Label>\n          </div>\n          <div className=\"w-full font-bold\">\n            <Label className=\"my-3\">\n              <span>Net Amount: </span>\n              <span>\n                Rs {parseInt(AMCRate) + parseInt(AMCRate) * (GST / 100)}\n              </span>\n            </Label>\n          </div>\n        </div>\n        {/* <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>GST AMOUNT</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={GSTAMOUNT}\n                onChange={(e) => {\n                  setGSTAMOUNT(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>Net Amount</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={NetAmount}\n                onChange={(e) => {\n                  setNetAmount(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div> */}\n      </div>\n    );\n  };\n\n  //PRODUCT\n\n  const productPicker = () => {\n    return (\n      <>\n        <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800\">\n          <form onSubmit={handleSubmit}>\n            <Label className=\"font-bold\">\n              <span>Essential Details</span>\n            </Label>\n            <hr className=\"mb-5 mt-2\" />\n            <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n              <Label className=\"my-3 w-full\">\n                <span>Brand</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Brand\"\n                  name=\"brand\"\n                  value={brand}\n                  onChange={(e) => {\n                    setBrand(e.target.value);\n                  }}\n                />\n              </Label>\n              <Label className=\"my-3 w-full\">\n                <span>Model</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Model\"\n                  name=\"model\"\n                  value={model}\n                  onChange={(e) => {\n                    setModel(e.target.value);\n                  }}\n                />\n              </Label>\n              <Label className=\"my-3 w-full\">\n                <span>Serial Number</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Serial Number\"\n                  name=\"serialno\"\n                  value={serialno}\n                  onChange={(e) => {\n                    setSerialNo(e.target.value);\n                  }}\n                />\n              </Label>\n            </div>\n            {/* ---------------------------OS--------------------------------- */}\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <Label className=\"font-bold\">\n                  <span>Operating System</span>\n                </Label>\n                <hr className=\"mb-5 mt-2\" />\n                <Label className=\"my-3\">\n                  <span>OS</span>\n                  <Input\n                    className=\"mt-1\"\n                    placeholder=\"OS\"\n                    name=\"os\"\n                    value={os}\n                    onChange={(e) => {\n                      setOs(e.target.value);\n                    }}\n                  />\n                </Label>\n              </>\n            ) : null}\n\n            {/* //////////// ARRAY /////////////// */}\n            {/* -------------------CPU and RAM-------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------CPU------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>CPU</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newcpu = [...cpu];\n                            let add = { cpuname: \"\", cpusno: \"\" };\n                            newcpu.push(add);\n                            setCpu(newcpu);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newcpu = [...cpu];\n                            if (newcpu[1]) {\n                              newcpu.pop();\n                              setCpu(newcpu);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {cpu.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"w-full my-3\">\n                              <span>CPU {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`CPU ${i + 1}`}\n                                name=\"cpuname\"\n                                value={item.cpuname}\n                                onChange={(e) => {\n                                  let newlist = [...cpu];\n                                  newlist[i].cpuname = e.target.value;\n                                  setCpu(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"w-full my-3\">\n                              <span>CPU {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`CPU ${i + 1}'s Serial Number `}\n                                name=\"cpusno\"\n                                value={item.cpusno}\n                                onChange={(e) => {\n                                  let newlist = [...cpu];\n                                  newlist[i].cpusno = e.target.value;\n                                  setCpu(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------CPU------------------------------- */}\n\n              {/* ----------------RAM------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>RAM</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newram = [...ram];\n                            let add = { ramname: \"\", ramsno: \"\" };\n                            newram.push(add);\n                            setram(newram);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newram = [...ram];\n                            if (newram[1]) {\n                              newram.pop();\n                              setram(newram);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {ram.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>RAM {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`RAM ${i + 1}`}\n                                name=\"ramname\"\n                                value={item.ramname}\n                                onChange={(e) => {\n                                  let newlist = [...ram];\n                                  newlist[i].ramname = e.target.value;\n                                  setram(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>RAM {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`RAM ${i + 1}'s Serial Number `}\n                                name=\"cpusno\"\n                                value={item.ramsno}\n                                onChange={(e) => {\n                                  let newlist = [...ram];\n                                  newlist[i].ramsno = e.target.value;\n                                  setram(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------RAM------------------------------- */}\n            </div>\n\n            {/* -----------------------fan and motherboard------------------------------ */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------fan------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>FAN</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newfan = [...fan];\n                            let add = { fanname: \"\", fansno: \"\" };\n                            newfan.push(add);\n                            setfan(newfan);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newfan = [...fan];\n                            if (newfan[1]) {\n                              newfan.pop();\n                              setfan(newfan);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {fan.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>FAN {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`FAN ${i + 1}`}\n                                name=\"fanname\"\n                                value={item.fanname}\n                                onChange={(e) => {\n                                  let newlist = [...fan];\n                                  newlist[i].fanname = e.target.value;\n                                  setfan(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>FAN {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`FAN ${i + 1}'s Serial Number `}\n                                name=\"fansno\"\n                                value={item.fansno}\n                                onChange={(e) => {\n                                  let newlist = [...fan];\n                                  newlist[i].fansno = e.target.value;\n                                  setfan(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------fan------------------------------- */}\n\n              {/* ----------------motherboard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Motherboard</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmotherboard = [...motherboard];\n                            let add = {\n                              motherboardname: \"\",\n                              motherboardsno: \"\",\n                            };\n                            newmotherboard.push(add);\n                            setmotherboard(newmotherboard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmotherboard = [...motherboard];\n                            if (newmotherboard[1]) {\n                              newmotherboard.pop();\n                              setmotherboard(newmotherboard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {motherboard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Motherboard {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Motherboard ${i + 1}`}\n                                name=\"motherboardname\"\n                                value={item.motherboardname}\n                                onChange={(e) => {\n                                  let newlist = [...motherboard];\n                                  newlist[i].motherboardname = e.target.value;\n                                  setmotherboard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Motherboard {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Motherboard ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"motherboardsno\"\n                                value={item.motherboardsno}\n                                onChange={(e) => {\n                                  let newlist = [...motherboard];\n                                  newlist[i].motherboardsno = e.target.value;\n                                  setmotherboard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------motherboard------------------------------- */}\n            </div>\n\n            {/* ------------------------HDD And SMPS */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------hdd------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>HDD</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhdd = [...hdd];\n                            let add = { hddname: \"\", hddsno: \"\" };\n                            newhdd.push(add);\n                            sethdd(newhdd);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhdd = [...hdd];\n                            if (newhdd[1]) {\n                              newhdd.pop();\n                              sethdd(newhdd);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {hdd.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>HDD {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HDD ${i + 1}`}\n                                name=\"hddname\"\n                                value={item.hddname}\n                                onChange={(e) => {\n                                  let newlist = [...hdd];\n                                  newlist[i].hddname = e.target.value;\n                                  sethdd(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>HDD {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HDD ${i + 1}'s Serial Number `}\n                                name=\"hddsno\"\n                                value={item.hddsno}\n                                onChange={(e) => {\n                                  let newlist = [...hdd];\n                                  newlist[i].hddsno = e.target.value;\n                                  sethdd(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------hdd------------------------------- */}\n\n              {/* ----------------smps------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>SMPS</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newsmps = [...smps];\n                            let add = { smpsname: \"\", smpssno: \"\" };\n                            newsmps.push(add);\n                            setsmps(newsmps);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newsmps = [...smps];\n                            if (newsmps[1]) {\n                              newsmps.pop();\n                              setsmps(newsmps);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {smps.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>SMPS {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`SMPS ${i + 1}`}\n                                name=\"smpsname\"\n                                value={item.smpsname}\n                                onChange={(e) => {\n                                  let newlist = [...smps];\n                                  newlist[i].smpsname = e.target.value;\n                                  setsmps(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>SMPS {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`SMPS ${i + 1}'s Serial Number `}\n                                name=\"smpssno\"\n                                value={item.smpssno}\n                                onChange={(e) => {\n                                  let newlist = [...smps];\n                                  newlist[i].smpssno = e.target.value;\n                                  setsmps(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------smps------------------------------- */}\n            </div>\n\n            {/* -----------------------Keyboard And Mouse ------------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------kbd------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Keyboard</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newkbd = [...kbd];\n                            let add = { kbdname: \"\", kbdsno: \"\" };\n                            newkbd.push(add);\n                            setkbd(newkbd);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newkbd = [...kbd];\n                            if (newkbd[1]) {\n                              newkbd.pop();\n                              setkbd(newkbd);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {kbd.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Keyboard {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Keyboard ${i + 1}`}\n                                name=\"kbdname\"\n                                value={item.kbdname}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].kbdname = e.target.value;\n                                  setkbd(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Keyboard {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Keyboard ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"kbdsno\"\n                                value={item.kbdsno}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].kbdsno = e.target.value;\n                                  setkbd(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------kbd------------------------------- */}\n\n              {/* ----------------mouse------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Mouse</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmouse = [...mouse];\n                            let add = { mousename: \"\", mousesno: \"\" };\n                            newmouse.push(add);\n                            setmouse(newmouse);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmouse = [...mouse];\n                            if (newmouse[1]) {\n                              newmouse.pop();\n                              setmouse(newmouse);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {mouse.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Mouse {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Mouse ${i + 1}`}\n                                name=\"mousename\"\n                                value={item.mousename}\n                                onChange={(e) => {\n                                  let newlist = [...mouse];\n                                  newlist[i].mousename = e.target.value;\n                                  setmouse(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Mouse {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Mouse ${i + 1}'s Serial Number `}\n                                name=\"mousesno\"\n                                value={item.mousesno}\n                                onChange={(e) => {\n                                  let newlist = [...mouse];\n                                  newlist[i].mousesno = e.target.value;\n                                  setmouse(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------mouse------------------------------- */}\n            </div>\n\n            {/* ---------------------------Monitor and GCard ------------------------*/}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------monitor------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Monitor</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmonitor = [...monitor];\n                            let add = { monitorname: \"\", monitorsno: \"\" };\n                            newmonitor.push(add);\n                            setmonitor(newmonitor);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmonitor = [...monitor];\n                            if (newmonitor[1]) {\n                              newmonitor.pop();\n                              setmonitor(newmonitor);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {monitor.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Monitor {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Monitor ${i + 1}`}\n                                name=\"monitorname\"\n                                value={item.monitorname}\n                                onChange={(e) => {\n                                  let newlist = [...monitor];\n                                  newlist[i].monitorname = e.target.value;\n                                  setmonitor(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Monitor {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Monitor ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"monitorsno\"\n                                value={item.monitorsno}\n                                onChange={(e) => {\n                                  let newlist = [...monitor];\n                                  newlist[i].monitorsno = e.target.value;\n                                  setmonitor(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------monitor------------------------------- */}\n\n              {/* ----------------gcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Graphics Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newgcard = [...gcard];\n                            let add = { gcardname: \"\", gcardsno: \"\" };\n                            newgcard.push(add);\n                            setgcard(newgcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newgcard = [...gcard];\n                            if (newgcard[1]) {\n                              newgcard.pop();\n                              setgcard(newgcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {gcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Graphics Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Graphics Card ${i + 1}`}\n                                name=\"gcardname\"\n                                value={item.gcardname}\n                                onChange={(e) => {\n                                  let newlist = [...gcard];\n                                  newlist[i].gcardname = e.target.value;\n                                  setgcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Graphics Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Graphics Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"gcardsno\"\n                                value={item.gcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...gcard];\n                                  newlist[i].gcardsno = e.target.value;\n                                  setgcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------gcard------------------------------- */}\n            </div>\n\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------enetcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>E Net Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newenetcard = [...enetcard];\n                            let add = { enetcardname: \"\", enetcardsno: \"\" };\n                            newenetcard.push(add);\n                            setenetcard(newenetcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newenetcard = [...enetcard];\n                            if (newenetcard[1]) {\n                              newenetcard.pop();\n                              setenetcard(newenetcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {enetcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>E Net Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`E Net Card ${i + 1}`}\n                                name=\"enetcardname\"\n                                value={item.enetcardname}\n                                onChange={(e) => {\n                                  let newlist = [...enetcard];\n                                  newlist[i].enetcardname = e.target.value;\n                                  setenetcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>E Net Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`E Net Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"enetcardsno\"\n                                value={item.enetcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...enetcard];\n                                  newlist[i].enetcardsno = e.target.value;\n                                  setenetcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------enetcard------------------------------- */}\n\n              {/* ----------------serialcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Serial Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newserialcard = [...serialcard];\n                            let add = { serialcardname: \"\", serialcardsno: \"\" };\n                            newserialcard.push(add);\n                            setserialcard(newserialcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newserialcard = [...serialcard];\n                            if (newserialcard[1]) {\n                              newserialcard.pop();\n                              setserialcard(newserialcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {serialcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Serial Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Serial Card ${i + 1}`}\n                                name=\"serialcardname\"\n                                value={item.serialcardname}\n                                onChange={(e) => {\n                                  let newlist = [...serialcard];\n                                  newlist[i].serialcardname = e.target.value;\n                                  setserialcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Serial Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Serial Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"serialcardsno\"\n                                value={item.serialcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...serialcard];\n                                  newlist[i].serialcardsno = e.target.value;\n                                  setserialcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------serialcard------------------------------- */}\n            </div>\n\n            {/* --------------------Parallel And HBD Card ----------------------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------parallelcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Parallel Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newparallelcard = [...parallelcard];\n                            let add = {\n                              parallelcardname: \"\",\n                              parallelcardsno: \"\",\n                            };\n                            newparallelcard.push(add);\n                            setparallelcard(newparallelcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newparallelcard = [...parallelcard];\n                            if (newparallelcard[1]) {\n                              newparallelcard.pop();\n                              setparallelcard(newparallelcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {parallelcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Parallel Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Parallel Card ${i + 1}`}\n                                name=\"parallelcardname\"\n                                value={item.parallelcardname}\n                                onChange={(e) => {\n                                  let newlist = [...parallelcard];\n                                  newlist[i].parallelcardname = e.target.value;\n                                  setparallelcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Parallel Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Parallel Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"parallelcardsno\"\n                                value={item.parallelcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...parallelcard];\n                                  newlist[i].parallelcardsno = e.target.value;\n                                  setparallelcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------parallelcard------------------------------- */}\n\n              {/* ----------------hbacard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>HBA Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhbacard = [...hbacard];\n                            let add = { hbacardname: \"\", hbacardsno: \"\" };\n                            newhbacard.push(add);\n                            sethbacard(newhbacard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhbacard = [...hbacard];\n                            if (newhbacard[1]) {\n                              newhbacard.pop();\n                              sethbacard(newhbacard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {hbacard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>HBA Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HBA Card ${i + 1}`}\n                                name=\"hbacardname\"\n                                value={item.hbacardname}\n                                onChange={(e) => {\n                                  let newlist = [...hbacard];\n                                  newlist[i].hbacardname = e.target.value;\n                                  sethbacard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>HBA Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HBA Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"hbacardsno\"\n                                value={item.hbacardsno}\n                                onChange={(e) => {\n                                  let newlist = [...hbacard];\n                                  newlist[i].hbacardsno = e.target.value;\n                                  sethbacard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------hbacard------------------------------- */}\n            </div>\n            {/* --------------------Raid And Tape Controller------------------------------ */}\n\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------raidcontroller------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Raid Controller</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newraidcontroller = [...raidcontroller];\n                            let add = {\n                              raidcontrollername: \"\",\n                              raidcontrollersno: \"\",\n                            };\n                            newraidcontroller.push(add);\n                            setraidcontroller(newraidcontroller);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newraidcontroller = [...raidcontroller];\n                            if (newraidcontroller[1]) {\n                              newraidcontroller.pop();\n                              setraidcontroller(newraidcontroller);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {raidcontroller.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Raid Controller {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Raid Controller ${i + 1}`}\n                                name=\"raidcontrollername\"\n                                value={item.raidcontrollername}\n                                onChange={(e) => {\n                                  let newlist = [...raidcontroller];\n                                  newlist[i].raidcontrollername =\n                                    e.target.value;\n                                  setraidcontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>\n                                Raid Controller {i + 1}: Serial Number\n                              </span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Raid Controller ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"raidcontrollersno\"\n                                value={item.raidcontrollersno}\n                                onChange={(e) => {\n                                  let newlist = [...raidcontroller];\n                                  newlist[i].raidcontrollersno = e.target.value;\n                                  setraidcontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------raidcontroller------------------------------- */}\n\n              {/* ----------------tapecontroller------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Tape Controller</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newtapecontroller = [...tapecontroller];\n                            let add = {\n                              tapecontrollername: \"\",\n                              tapecontrollersno: \"\",\n                            };\n                            newtapecontroller.push(add);\n                            settapecontroller(newtapecontroller);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newtapecontroller = [...tapecontroller];\n                            if (newtapecontroller[1]) {\n                              newtapecontroller.pop();\n                              settapecontroller(newtapecontroller);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {tapecontroller.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Tape Controller {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Tape Controller ${i + 1}`}\n                                name=\"tapecontrollername\"\n                                value={item.tapecontrollername}\n                                onChange={(e) => {\n                                  let newlist = [...tapecontroller];\n                                  newlist[i].tapecontrollername =\n                                    e.target.value;\n                                  settapecontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>\n                                Tape Controller {i + 1}: Serial Number\n                              </span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Tape Controller ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"tapecontrollersno\"\n                                value={item.tapecontrollersno}\n                                onChange={(e) => {\n                                  let newlist = [...tapecontroller];\n                                  newlist[i].tapecontrollersno = e.target.value;\n                                  settapecontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------tapecontroller------------------------------- */}\n            </div>\n\n            {/* ----------------opticaldrive------------------------------- */}\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <div className=\"flex flex-row items-center\">\n                  <Label className=\"font-bold\">\n                    <span>Optical Drive</span>\n                  </Label>\n                  <div className=\"ml-3 \">\n                    <Button\n                      onClick={() => {\n                        let newopticaldrive = [...opticaldrive];\n                        let add = { opticaldrivename: \"\", opticaldrivesno: \"\" };\n                        newopticaldrive.push(add);\n                        setopticaldrive(newopticaldrive);\n                      }}\n                      icon={Add}\n                      layout=\"link\"\n                      aria-label=\"Like\"\n                    />\n                  </div>\n                  <div className=\"ml-3\">\n                    <Button\n                      onClick={() => {\n                        let newopticaldrive = [...opticaldrive];\n                        if (newopticaldrive[1]) {\n                          newopticaldrive.pop();\n                          setopticaldrive(newopticaldrive);\n                        }\n                      }}\n                      icon={Remove}\n                      layout=\"link\"\n                      aria-label=\"Like\"\n                    />\n                  </div>\n                </div>\n                <hr className=\"mb-5 mt-2\" />\n                {opticaldrive.map((item, i) => {\n                  return (\n                    <div key={i}>\n                      <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                        <Label className=\"my-3 w-full\">\n                          <span>Optical Drive {i + 1}</span>\n                          <Input\n                            className=\"mt-1\"\n                            placeholder={`Opticaldrive ${i + 1}`}\n                            name=\"opticaldrivename\"\n                            value={item.opticaldrivename}\n                            onChange={(e) => {\n                              let newlist = [...opticaldrive];\n                              newlist[i].opticaldrivename = e.target.value;\n                              setopticaldrive(newlist);\n                            }}\n                          />\n                        </Label>\n                        <Label className=\"my-3 w-full\">\n                          <span>Opticaldrive {i + 1}: Serial Number</span>\n                          <Input\n                            className=\"mt-1\"\n                            placeholder={`Optical Drive ${\n                              i + 1\n                            }'s Serial Number `}\n                            name=\"opticaldrivesno\"\n                            value={item.opticaldrivesno}\n                            onChange={(e) => {\n                              let newlist = [...opticaldrive];\n                              newlist[i].opticaldrivesno = e.target.value;\n                              setopticaldrive(newlist);\n                            }}\n                          />\n                        </Label>\n                      </div>\n                    </div>\n                  );\n                })}\n              </>\n            ) : null}\n            {/* ----------------opticaldrive------------------------------- */}\n\n            {/* ----------------others------------------------------- */}\n            <div className=\"flex flex-row items-center\">\n              <Label className=\"font-bold\">\n                <span>Others</span>\n              </Label>\n              <div className=\"ml-3\">\n                <Button\n                  onClick={() => {\n                    let newothers = [...others];\n                    let add = { othersname: \"\", otherssno: \"\" };\n                    newothers.push(add);\n                    setothers(newothers);\n                  }}\n                  icon={Add}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                />\n              </div>\n              <div className=\"ml-3\">\n                <Button\n                  onClick={() => {\n                    let newothers = [...others];\n                    if (newothers[1]) {\n                      newothers.pop();\n                      setothers(newothers);\n                    }\n                  }}\n                  icon={Remove}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                />\n              </div>\n            </div>\n            <hr className=\"mb-5 mt-2\" />\n            {others.map((item, i) => {\n              return (\n                <div key={i}>\n                  <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                    <Label className=\"my-3 w-full\">\n                      <span>Others {i + 1}</span>\n                      <Input\n                        className=\"mt-1\"\n                        placeholder={`Others ${i + 1}`}\n                        name=\"othersname\"\n                        value={item.othersname}\n                        onChange={(e) => {\n                          let newlist = [...others];\n                          newlist[i].othersname = e.target.value;\n                          setothers(newlist);\n                        }}\n                      />\n                    </Label>\n                    <Label className=\"my-3 w-full\">\n                      <span>Others {i + 1}: Serial Number</span>\n                      <Input\n                        className=\"mt-1\"\n                        placeholder={`Others ${i + 1}'s Serial Number `}\n                        name=\"otherssno\"\n                        value={item.otherssno}\n                        onChange={(e) => {\n                          let newlist = [...others];\n                          newlist[i].otherssno = e.target.value;\n                          setothers(newlist);\n                        }}\n                      />\n                    </Label>\n                  </div>\n                </div>\n              );\n            })}\n\n            {/* ----------------others------------------------------- */}\n\n            <div className=\"flex items-center justify-center my-10\">\n              <Button type=\"submit\">Submit</Button>\n            </div>\n\n            {/* <Label className=\"mt-4\">\n              <span>Disabled</span>\n              <Input disabled className=\"mt-1\" placeholder=\"Jane Doe\" />\n            </Label> */}\n          </form>\n        </div>\n      </>\n    );\n  };\n\n  //DROPDOWN------------------------------------------------------------------------------------\n\n  const [isOpen, setIsOpen] = useState(false);\n  function toggleDropdown() {\n    setIsOpen(!isOpen);\n  }\n\n  const test = () => {\n    console.log(test);\n  };\n\n  return (\n    <>\n      <UnitListModal\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setUnit={setUnit}\n        unit={unit}\n        customer={customer}\n        setCustomer={setCustomer}\n        account={account}\n        setAccount={setAccount}\n      />\n      {/* Heading of page with float button */}\n      <div className=\"flex items-center\">\n        <PageTitle>Assets Management</PageTitle>\n        <div>\n          <Button\n            className=\"mx-3\"\n            onClick={() => {\n              setFloatBox(!floatbox);\n            }}\n            icon={HeartIcon}\n            layout=\"link\"\n            aria-label=\"Like\"\n          />\n        </div>\n      </div>\n      {assetPicker()}\n      {/* <SectionTitle>Pick Product</SectionTitle> */}\n      {/* {dropdown()} */}\n      {product != \"null\" ? (\n        <>\n          <SectionTitle>{product} </SectionTitle>\n          {productPicker()}\n        </>\n      ) : null}\n      {/* {productPicker()} */}\n      {/* /////---------------------------- FOOTER */}\n      {/* <div class=\" w-7/12 bottom-0  border-t border-grey p-4 fixed pin-b bg-gray-700 text-xs text-white\">\n        Asset Summary Asset Information:\n        <br />\n        Business: {Business} POnumber: {POnumber} ContractFrom: {ContractFrom}\n        ContractTo: {ContractTo} BillingFrom: {BillingFrom} BillingTo:{\" \"}\n        {BillingTo} AMCRate:\n        {AMCRate} GST:{GST} GSTAMOUNT:{GSTAMOUNT} NetAmount:{NetAmount}\n        <br />\n        Product: {product}\n        <br />\n        Brind: {brand} model: {model} serialno: {serialno} os: {os}\n        <br />\n        {cpu.map((p, i) => {\n          return (\n            <>\n              CPU:{p.cpuname}, {p.cpusno}\n            </>\n          );\n        })}\n      </div> */}\n      {UpdatedModal()}\n    </>\n  );\n}\n\nexport default UpdateAsset;\n"],"sourceRoot":""}