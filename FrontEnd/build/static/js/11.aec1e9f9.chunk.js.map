{"version":3,"sources":["components/Modal/UnitListModal.js","pages/Assets/Assets.js","utils/demo/tableData.js","../node_modules/classnames/index.js","components/RoundIcon.js","components/Modal/AssetFilters/CustomerSelection.js"],"names":["UnitListModal","isModalOpen","setIsModalOpen","unit","setUnit","account","setAccount","customer","setCustomer","useState","customers","setCustomers","accounts","setAccounts","units","setUnits","tabIndex","setTabIndex","search","setSearch","handleChange","e","target","value","handleSubmit","a","preventDefault","payload","role","axios","url","API","method","data","response","console","log","useEffect","pickCustomer","_id","customerName","name","accountName","unitName","Axios","post","customerId","accs","pickAccount","accountId","u","pickUnit","isOpen","onClose","selectedIndex","onSelect","ind","onSubmit","className","placeholder","onChange","map","i","key","onClick","type","Assets","isDeleteModalOpen","setIsDeleteModalOpen","deleteId","setDeleteId","useContext","BottomBarContext","setBBarOpen","bbaropen","setAssetDetails","assetdetails","activerowid","setActiveRowId","TopBarContext","setTopHeading","topheading","page","setPage","setData","setIsOpen","isOpenTwo","setIsOpenTwo","refresh","setRefresh","disabler","setDisabler","Business","setBusiness","product","setProduct","selectedprod","setSelectedProd","searchtype","setSearchType","searchlabel","setSearchLabel","searchquery","setSearchQuery","totalResults","setTotalResults","pages","limit","filters","business","producttype","unitId","Emp","getId","out","total","id","temp","filter","x","class","xmlns","viewBox","d","disabled","selected","aria-label","aria-haspopup","user","serialno","moment","contractfrom","format","contractto","ponumber","podate","layout","size","to","aria-hidden","resultsPerPage","label","p","avatar","job","amount","status","date","hasOwn","hasOwnProperty","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","call","join","module","exports","default","RoundIcon","Icon","icon","iconColorClass","bgColorClass","cls","CustomerSelection"],"mappings":";gRAyBe,SAASA,EAAT,GASX,IARFC,EAQC,EARDA,YACAC,EAOC,EAPDA,eACAC,EAMC,EANDA,KACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACAC,EACC,EADDA,YACC,EACiCC,mBAAS,IAD1C,mBACMC,EADN,KACiBC,EADjB,OAE+BF,mBAAS,IAFxC,mBAEMG,EAFN,KAEgBC,EAFhB,OAGyBJ,mBAAS,IAHlC,mBAGMK,EAHN,KAGaC,EAHb,OAI+BN,mBAAS,GAJxC,mBAIMO,EAJN,KAIgBC,EAJhB,OAK2BR,mBAAS,IALpC,mBAKMS,EALN,KAKcC,EALd,KAQKC,EAAe,SAACC,GACpBF,EAAUE,EAAEC,OAAOC,QAKfC,EAAY,uCAAG,WAAOH,GAAP,iBAAAI,EAAA,6DACnBJ,EAAEK,iBACEC,EAAU,CACZT,OAAQA,EACRU,KAAM,GAJW,kBAOIC,IAAM,CACzBC,IAAI,GAAD,OAAKC,IAAL,uBACHC,OAAQ,OACRC,KAAMN,IAVS,OAObO,EAPa,OAYjBC,QAAQC,IAAIF,EAASD,MACrBtB,EAAauB,EAASD,MAbL,uHAAH,sDAqBlBI,qBAAU,YACR,uCAAC,8BAAAZ,EAAA,6DACKE,EAAU,CACZT,OAAQA,EACRU,KAAM,GAHT,kBAMwBC,IAAM,CACzBC,IAAI,GAAD,OAAKC,IAAL,uBACHC,OAAQ,OACRC,KAAMN,IATX,OAMOO,EANP,OAWGC,QAAQC,IAAIF,EAASD,MACrBtB,EAAauB,EAASD,MAZzB,oHAAD,yDAiBC,IAEH,IAAMK,EAAY,uCAAG,WAAO/B,GAAP,eAAAkB,EAAA,6DAEnBjB,EAAY,CACV+B,IAAKhC,EAASgC,IACdC,aAAcjC,EAASkC,OAEzBnC,EAAW,CACTiC,IAAK,GACLG,YAAa,KAEftC,EAAQ,CACNmC,IAAK,GACLI,SAAU,KAZO,kBAeEC,IAAMC,KAAN,UAAcd,IAAd,sBAAuC,CACxDe,WAAYvC,EAASgC,MAhBN,OAeXQ,EAfW,OAkBjBZ,QAAQC,IAAIW,EAAKd,MAKjBpB,EAAYkC,EAAKd,MACjBhB,EAAY,GAxBK,kDA0BjBkB,QAAQC,IAAI,WAAZ,MA1BiB,0DAAH,sDA8BZY,EAAW,uCAAG,WAAO3C,GAAP,eAAAoB,EAAA,6DAClBU,QAAQC,IAAI/B,GACZC,EAAW,CACTiC,IAAKlC,EAAQkC,IACbG,YAAarC,EAAQoC,OAEvBrC,EAAQ,CACNmC,IAAK,GACLI,SAAU,KARM,kBAWAC,IAAMC,KAAN,UAAcd,IAAd,mBAAoC,CAClDkB,UAAW5C,EAAQkC,MAZL,OAWVW,EAXU,OAchBf,QAAQC,IAAIc,EAAEjB,MAKdlB,EAASmC,EAAEjB,MACXhB,EAAY,GApBI,kDAsBhBkB,QAAQC,IAAI,WAAZ,MAtBgB,0DAAH,sDA0BXe,EAAQ,uCAAG,WAAOhD,GAAP,SAAAsB,EAAA,sDACfU,QAAQC,IAAIjC,GACZC,EAAQ,CACNmC,IAAKpC,EAAKoC,IACVI,SAAUxC,EAAKwC,WAJF,2CAAH,sDA4Hd,OACE,oCAIE,kBAAC,QAAD,CAAOS,OAAQnD,EAAaoD,QAAS,kBAAMnD,GAAe,KACxD,kBAAC,cAAD,cACS,IACM,GAAZc,EACC,gDACc,GAAZA,EACF,+CAEA,6CAGJ,kBAAC,YAAD,KACE,kBAAC,IAAD,CAAMsC,cAAetC,EAAUuC,SAAU,SAACC,GAAD,OAASvC,EAAYuC,KAC5D,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACA,kBAAC,IAAD,gBACA,kBAAC,IAAD,cAEF,kBAAC,IAAD,KAzIN,kBAAC,iBAAD,KACE,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,kBAKF,4BACE,kBAAC,YAAD,KACE,0BAAMC,SAAUjC,GACd,2BACEkC,UAAU,kNACVC,YAAY,mBACZC,SAAUxC,QAMpB,kBAAC,YAAD,KACGV,EAAUmD,KAAI,SAACtD,EAAUuD,GAAX,OACb,kBAAC,WAAD,CACEC,IAAKD,EACLJ,UAAU,qCACVM,QAAS,kBAAM1B,EAAa/B,KAE5B,kBAAC,YAAD,KACE,6BACE,6BACE,uBAAGmD,UAAU,iBAAiBnD,EAASkC,eAQrD,kBAAC,cAAD,QAmGI,kBAAC,IAAD,KA5FN,kBAAC,iBAAD,KACE,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,kBAMJ,kBAAC,YAAD,KACG7B,EAASiD,KAAI,SAACxD,EAASyD,GAAV,OACZ,kBAAC,WAAD,CACEC,IAAKD,EACLJ,UAAU,qCACVM,QAAS,kBAAMhB,EAAY3C,KAE3B,kBAAC,YAAD,KACE,6BACE,6BACE,uBAAGqD,UAAU,iBAAiBrD,EAAQoC,eAQpD,kBAAC,cAAD,QAiEI,kBAAC,IAAD,KA1DN,kBAAC,iBAAD,KACE,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,eAMJ,kBAAC,YAAD,KACG3B,EAAM+C,KAAI,SAAC1D,EAAM2D,GAAP,OACT,kBAAC,WAAD,CACEC,IAAKD,EACLJ,UAAU,qCACVM,QAAS,kBAAMb,EAAShD,KAExB,kBAAC,YAAD,KACE,6BACE,6BACE,uBAAGuD,UAAU,iBAAiBvD,EAAKwC,mBAQjD,kBAAC,cAAD,SAgCE,kBAAC,QAAD,CAAOe,UAAU,eAAeO,KAAK,WAArC,aACa1D,EAASiC,cAEtB,kBAAC,QAAD,CAAOkB,UAAU,eAAeO,KAAK,WAArC,aACa5D,EAAQqC,aAErB,kBAAC,QAAD,CAAOgB,UAAU,eAAeO,KAAK,WAArC,SACS9D,EAAKwC,WAGhB,kBAAC,cAAD,KACE,kBAAC,SAAD,CACEe,UAAU,mBAEVM,QAAS,kBAAM9D,GAAe,KAHhC,e,iOCqfKgE,UA7vBf,WAAkB,MAIkCzD,oBAAS,GAJ3C,mBAIT0D,EAJS,KAIUC,EAJV,OAKgB3D,mBAAS,GALzB,mBAKT4D,EALS,KAKCC,EALD,OAOiDC,qBAC/DC,KADgBC,GAPF,EAORC,SAPQ,EAOED,aAAaE,EAPf,EAOeA,gBAPf,KAOgCC,aAIVnE,mBAAS,IAX/B,mBAWToE,EAXS,KAWIC,EAXJ,OAasBP,qBAAWQ,KAA7BC,GAbJ,EAaRC,WAbQ,EAaID,eAbJ,EAegBvE,oBAAS,GAfzB,gCAgBQA,mBAAS,IAhBjB,mBAgBTyE,EAhBS,KAgBHC,EAhBG,OAiBQ1E,mBAAS,IAjBjB,mBAiBTwB,EAjBS,KAiBHmD,EAjBG,OAmBY3E,oBAAS,GAnBrB,mBAmBT2C,EAnBS,KAmBDiC,EAnBC,OAoBkB5E,oBAAS,GApB3B,mBAoBT6E,EApBS,KAoBEC,EApBF,OAqBsB9E,oBAAS,GArB/B,mBAqBTR,EArBS,KAqBIC,EArBJ,QAsBcO,oBAAS,GAtBvB,qBAsBT+E,GAtBS,MAsBAC,GAtBA,SAuBgBhF,oBAAS,GAvBzB,qBAuBTiF,GAvBS,MAuBCC,GAvBD,SA0BgBlF,mBAAS,IA1BzB,qBA0BTmF,GA1BS,MA0BCC,GA1BD,SA2BcpF,mBAAS,IA3BvB,qBA2BTqF,GA3BS,MA2BAC,GA3BA,SA4BQtF,mBAAS,CAAE8B,IAAK,GAAII,SAAU,KA5BtC,qBA4BTxC,GA5BS,MA4BHC,GA5BG,SA6BgBK,mBAAS,CAAE8B,IAAK,GAAIC,aAAc,KA7BlD,qBA6BTjC,GA7BS,MA6BCC,GA7BD,SA8BcC,mBAAS,CAAE8B,IAAK,GAAIG,YAAa,KA9B/C,qBA8BTrC,GA9BS,MA8BAC,GA9BA,SAiCwBG,mBAAS,IAjCjC,qBAiCTuF,GAjCS,MAiCKC,GAjCL,SAoCoBxF,mBAAS,IApC7B,qBAoCTyF,GApCS,MAoCGC,GApCH,SAqCsB1F,mBAAS,IArC/B,qBAqCT2F,GArCS,MAqCIC,GArCJ,SAsCsB5F,mBAAS,IAtC/B,qBAsCT6F,GAtCS,MAsCIC,GAtCJ,SA4CwB9F,mBAAS,IA5CjC,qBA4CT+F,GA5CS,MA4CKC,GA5CL,MA0JhB,OA7DApE,qBAAU,WAER,OAAO,WACLoC,EAAY,GACZE,EAAgB,OAEjB,IAGHtC,qBAAU,WAER,OADA2C,EAAc,qBACP,WACLA,EAAc,OAEf,IAGH3C,qBAAU,YAER,uCAAC,8BAAAZ,EAAA,6DACCU,QAAQC,IAAI,iBACRT,EAAU,CACZ+E,MAAO,CACLxB,KAAMA,EACNyB,MA1Ee,IA4EjBC,QAAS,CACPC,SAAUjB,GACVkB,YAAahB,GACbvF,SAAUA,GACVF,QAASA,GACT0G,OAAQ5G,GAAKoC,IACbO,WAAYvC,GAASgC,IACrBU,UAAW5C,GAAQkC,IACnB2D,WAAYA,GACZI,YAAaA,KAhBlB,kBAsBwBzE,IAAM,CACzBC,IAAI,GAAD,OAAKC,IAAL,kBAAkBiF,IAAIC,QAAtB,WACHjF,OAAQ,OACRC,KAAMN,IAzBX,OAsBOO,EAtBP,OA2BGC,QAAQC,IAAIF,EAASD,KAAKiF,KAC1BT,GAAgBvE,EAASD,KAAKkF,OAI9B/B,EAAQlD,EAASD,KAAKiF,KAhCzB,uHAAD,yDAsCC,CAAChC,EAAMU,GAAUE,GAASN,KAE7BrD,QAAQC,IAAI4D,IAGV,oCAEE,kBAAC,IAAD,CACE/F,YAAaA,EACbC,eAAgBA,EAChBE,QAASA,GACTD,KAAMA,GACNI,SAAUA,GACVC,YAAaA,GACbH,QAASA,GACTC,WAAYA,GACZkF,QAASA,GACTC,WAAYA,KAlHd,oCACE,kBAAC,QAAD,CACErC,OAAQe,EACRd,QAAS,kBAAMe,GAAqB,KAEpC,kBAAC,cAAD,yCACA,kBAAC,YAAD,MACA,kBAAC,cAAD,KACE,kBAAC,SAAD,CACEV,UAAU,mBACVM,QAAO,sBAAE,8BAAAvC,EAAA,+EAEgBI,IAAM,CACzBC,IAAI,GAAD,OAAKC,IAAL,kBAAkBiF,IAAIC,QAAtB,iBACHjF,OAAQ,OACRC,KAAM,CAAEmF,GAAI/C,KALT,OAEDnC,EAFC,OAOLC,QAAQC,IAAIF,EAASD,MACjBoF,EAAOpF,EAAKqF,QAAO,SAACC,GAAD,OAAOA,EAAEhF,KAAO8B,KACvCe,EAAQiC,GACRjD,GAAqB,GAVhB,wHAFX,qBAgHN,yBAAKV,UAAU,cAgBb,yBAAKA,UAAU,IAEb,yBAAK8D,MAAM,gGACT,yBAAKA,MAAM,cACT,4BACEA,MAAM,8LACNxD,QAAS,WACP9D,GAAgBD,KAHpB,iBAWA,yBAAKuH,MAAM,uFACT,yBACEA,MAAM,uBACNC,MAAM,6BACNC,QAAQ,aAER,0BAAMC,EAAE,kFAKd,yBAAKH,MAAM,kBACT,4BACEA,MAAM,8LACNjG,MAAOqE,GACPhC,SAAU,SAACvC,GACTwE,GAAYxE,EAAEC,OAAOC,SAGvB,4BAAQA,MAAM,GAAGqG,UAAQ,EAACC,UAAQ,GAAlC,iBAGA,4BAAQtG,MAAM,IAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,YACA,4BAAQA,MAAM,OAAd,QAGF,yBAAKiG,MAAM,uFACT,yBACEA,MAAM,uBACNC,MAAM,6BACNC,QAAQ,aAER,0BAAMC,EAAE,kFAKd,yBAAKjE,UAAU,kBACb,4BACEM,QAAS,WACPqB,GAAWjC,IAEbM,UAAU,0OACVoE,aAAW,gBACXC,gBAAc,QAEbjC,IAAoB,gBAEvB,yBAAK0B,MAAM,uFACT,yBACEA,MAAM,uBACNC,MAAM,6BACNC,QAAQ,aAER,0BAAMC,EAAE,iFAGZ,kBAAC,WAAD,CAAUvE,OAAQA,EAAQC,QAAS,kBAAMgC,GAAU,KACjD,kBAAC,eAAD,CACErB,QAAS,WACPqB,GAAU,GACVU,GAAW,MAGb,sCAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,aAGb,0CAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,SAGb,sCAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,YAGb,yCAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,SAGb,sCAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,YAGb,yCAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,WAGb,wCAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,SAGb,sCAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,YAGb,yCAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,YAGb,yCAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,aAGb,0CAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,YAGb,yCAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,aAGb,0CAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,aAGb,0CAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,YAGb,yCAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,SAGb,sCAEF,kBAAC,eAAD,CACE/B,QAAS,WACPqB,GAAU,GACVU,GAAW,YAGb,2CAMN,yBAAKrC,UAAU,aACb,4BACEM,QAAS,WACPuB,GAAcD,IAEhB5B,UAAU,0OACVoE,aAAW,gBACXC,gBAAc,QAEb7B,GAAaE,GAAc,oBAE9B,yBAAKoB,MAAM,uFACT,yBACEA,MAAM,uBACNC,MAAM,6BACNC,QAAQ,aAER,0BAAMC,EAAE,iFAGZ,kBAAC,WAAD,CAAUvE,OAAQkC,EAAWjC,QAAS,kBAAMkC,GAAa,KACvD,kBAAC,eAAD,CACEvB,QAAS,WACPuB,GAAa,GACbY,GAAc,IACdE,GAAe,IACfV,IAAY,GACZY,GAAe,IACfd,IAAYD,MAGd,sCAEF,kBAAC,eAAD,CACExB,QAAS,WACPuB,GAAa,GACbY,GAAc,cACdE,GAAe,kBACfV,IAAY,KAGd,iDAEF,kBAAC,eAAD,CACE3B,QAAS,WACPuB,GAAa,GACbY,GAAc,UACdE,GAAe,mBACfV,IAAY,KAGd,kDAEF,kBAAC,eAAD,CACE3B,QAAS,WACPuB,GAAa,GACbY,GAAc,YACdE,GAAe,gBACfV,IAAY,KAGd,+CAEF,kBAAC,eAAD,CACE3B,QAAS,WACPuB,GAAa,GACbY,GAAc,kBACdE,GAAe,sBACfV,IAAY,KAGd,qDAEF,kBAAC,eAAD,CACE3B,QAAS,WACPuB,GAAa,GACbY,GAAc,cACdE,GAAe,kBACfV,IAAY,KAGd,iDAEF,kBAAC,eAAD,CACE3B,QAAS,WACPuB,GAAa,GACbY,GAAc,UACdE,GAAe,cACfV,IAAY,KAGd,6CAEF,kBAAC,eAAD,CACE3B,QAAS,WACPuB,GAAa,GACbY,GAAc,UACdE,GAAe,cACfV,IAAY,KAGd,6CAEF,kBAAC,eAAD,CACE3B,QAAS,WACPuB,GAAa,GACbY,GAAc,UACdE,GAAe,cACfV,IAAY,KAGd,6CAEF,kBAAC,eAAD,CACE3B,QAAS,WACPuB,GAAa,GACbY,GAAc,WACdE,GAAe,eACfV,IAAY,KAGd,8CAEF,kBAAC,eAAD,CACE3B,QAAS,WACPuB,GAAa,GACbY,GAAc,UACdE,GAAe,cACfV,IAAY,KAGd,6CAEF,kBAAC,eAAD,CACE3B,QAAS,WACPuB,GAAa,GACbY,GAAc,mBACdE,GAAe,wBACfV,IAAY,KAGd,yDAKN,yBAAK6B,MAAM,2BACT,0BAAMA,MAAM,2DACV,yBACEE,QAAQ,YACRF,MAAM,sCAEN,0BAAMG,EAAE,4HAGZ,0BACElE,SAAU,SAACpC,GACTA,EAAEK,iBACF+D,IAAYD,MAGd,2BACEjE,MAAO+E,GACP1C,SAAU,SAACvC,GAAD,OAAOkF,GAAelF,EAAEC,OAAOC,QACzCoC,YAAY,SACZiE,SAAUlC,GACV8B,MAAM,gPAgChB,kBAAC,iBAAD,CAAgB9D,UAAU,QACxB,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,iBACA,kBAAC,YAAD,aACA,kBAAC,YAAD,iBACA,kBAAC,YAAD,gBACA,kBAAC,YAAD,uBACA,kBAAC,YAAD,sBACA,kBAAC,YAAD,oBACA,kBAAC,YAAD,wBACA,kBAAC,YAAD,sBACA,kBAAC,YAAD,sBAGJ,kBAAC,YAAD,KACGzB,EAAK4B,KAAI,SAACmE,EAAMlE,GAAP,OACR,kBAAC,WAAD,CACEJ,UAAS,iDACPmB,GAAemD,EAAKzF,IAChB,yCACA,QAHG,KAKTwB,IAAKD,EACLE,QAAS,WACPS,EAAY,GACZK,EAAekD,EAAKzF,KAEpB0D,GAAgB+B,GAChBrD,EAAgBqD,KAIlB,kBAAC,YAAD,CAAWtE,UAAU,OACnB,yBAAKA,UAAU,8BAMb,6BACE,uBAAGA,UAAU,iBAAiBsE,EAAKxF,cACnC,uBAAGkB,UAAU,4CACVsE,EAAKtF,gBAKd,kBAAC,YAAD,KACE,0BAAMgB,UAAU,WAAWsE,EAAKrF,WAElC,kBAAC,YAAD,KACE,kBAAC,QAAD,CACEsB,KAAuB,OAAjB+D,EAAKnB,SAAoB,UAAY,WAE1CmB,EAAKnB,WAGV,kBAAC,YAAD,KACE,0BAAMnD,UAAU,WAAWsE,EAAKlB,cAElC,kBAAC,YAAD,KACE,0BAAMpD,UAAU,WAAWsE,EAAKlC,QAAQmC,WAE1C,kBAAC,YAAD,KACE,0BAAMvE,UAAU,WACbwE,IAAOF,EAAKG,cAAcC,OAAO,gBAGtC,kBAAC,YAAD,KACE,0BAAM1E,UAAU,WACbwE,IAAOF,EAAKK,YAAYD,OAAO,gBAGpC,kBAAC,YAAD,KACE,0BAAM1E,UAAU,WAAWsE,EAAKM,WAElC,kBAAC,YAAD,KACE,0BAAM5E,UAAU,WACbwE,IAAOF,EAAKO,QAAQH,OAAO,gBAGhC,kBAAC,YAAD,KACE,yBAAK1E,UAAU,+BACb,kBAAC,SAAD,CAAQ8E,OAAO,OAAOC,KAAK,OAAOX,aAAW,QAC3C,kBAAC,IAAD,CACE/D,IAAKiE,EAAKzF,IACVmG,GAAE,2BAAsBV,EAAKzF,MAE7B,kBAAC,WAAD,CAAUmB,UAAU,UAAUiF,cAAY,UACpC,KAGV,kBAAC,SAAD,CACEH,OAAO,OACPC,KAAK,OACLX,aAAW,SACX9D,QAAO,sBAAE,sBAAAvC,EAAA,sDACPU,QAAQC,IAAI,gBACZgC,GAAqB,GACrBE,EAAY0D,EAAKzF,KAHV,4CAMT,kBAAC,YAAD,CAAWmB,UAAU,UAAUiF,cAAY,kBAyCzD,kBAAC,cAAD,KACE,kBAAC,aAAD,CACEnC,aAAcA,GACdoC,eAnsBW,GAosBXC,MAAM,mBACNjF,SAjsBZ,SAAsBkF,GACpB3D,EAAQ2D,Y,iCC3FG,KACb,CACEC,OAAQ,sEACRtG,KAAM,kBACNuG,IAAK,4BACLC,OAAQ,MACRC,OAAQ,UACRC,KAAM,8DAER,CACEJ,OAAQ,mEACRtG,KAAM,sBACNuG,IAAK,kCACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,gEACRtG,KAAM,cACNuG,IAAK,0BACLC,OAAQ,OACRC,OAAQ,UACRC,KAAM,8DAER,CACEJ,OAAQ,mEACRtG,KAAM,mBACNuG,IAAK,wBACLC,OAAQ,OACRC,OAAQ,UACRC,KAAM,8DAER,CACEJ,OAAQ,mEACRtG,KAAM,kBACNuG,IAAK,mCACLC,OAAQ,MACRC,OAAQ,UACRC,KAAM,8DAER,CACEJ,OAAQ,+DACRtG,KAAM,oBACNuG,IAAK,0BACLC,OAAQ,OACRC,OAAQ,UACRC,KAAM,8DAER,CACEJ,OAAQ,qEACRtG,KAAM,iBACNuG,IAAK,0BACLC,OAAQ,OACRC,OAAQ,UACRC,KAAM,8DAER,CACEJ,OAAQ,sEACRtG,KAAM,eACNuG,IAAK,0BACLC,OAAQ,IACRC,OAAQ,UACRC,KAAM,8DAER,CACEJ,OAAQ,uEACRtG,KAAM,gBACNuG,IAAK,yBACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,mEACRtG,KAAM,gBACNuG,IAAK,2BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,iEACRtG,KAAM,gBACNuG,IAAK,4BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,qEACRtG,KAAM,aACNuG,IAAK,2BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,kEACRtG,KAAM,kBACNuG,IAAK,6BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,yEACRtG,KAAM,cACNuG,IAAK,mCACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,gEACRtG,KAAM,oBACNuG,IAAK,+BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,gEACRtG,KAAM,eACNuG,IAAK,qCACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,oEACRtG,KAAM,kBACNuG,IAAK,yBACLC,OAAQ,MACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,iEACRtG,KAAM,kBACNuG,IAAK,sBACLC,OAAQ,MACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,oEACRtG,KAAM,gBACNuG,IAAK,6BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,sEACRtG,KAAM,mBACNuG,IAAK,iCACLC,OAAQ,MACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,mEACRtG,KAAM,aACNuG,IAAK,4BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,mEACRtG,KAAM,gBACNuG,IAAK,yBACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,sEACRtG,KAAM,gBACNuG,IAAK,gCACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,uEACRtG,KAAM,eACNuG,IAAK,+BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,iEACRtG,KAAM,gBACNuG,IAAK,2BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,uEACRtG,KAAM,aACNuG,IAAK,4BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,oEACRtG,KAAM,kBACNuG,IAAK,sBACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,iEACRtG,KAAM,gBACNuG,IAAK,+BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,mEACRtG,KAAM,mBACNuG,IAAK,iCACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,wEACRtG,KAAM,eACNuG,IAAK,4BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,iEACRtG,KAAM,kBACNuG,IAAK,+BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,kEACRtG,KAAM,YACNuG,IAAK,8BACLC,OAAQ,MACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,sEACRtG,KAAM,kBACNuG,IAAK,6BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,qEACRtG,KAAM,iBACNuG,IAAK,0BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,kEACRtG,KAAM,eACNuG,IAAK,iCACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,kEACRtG,KAAM,kBACNuG,IAAK,kCACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,oEACRtG,KAAM,gBACNuG,IAAK,iCACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,mEACRtG,KAAM,gBACNuG,IAAK,kCACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,yEACRtG,KAAM,iBACNuG,IAAK,uBACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,oEACRtG,KAAM,iBACNuG,IAAK,oCACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,qEACRtG,KAAM,iBACNuG,IAAK,yBACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,kEACRtG,KAAM,eACNuG,IAAK,0BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,mEACRtG,KAAM,aACNuG,IAAK,mCACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,uEACRtG,KAAM,gBACNuG,IAAK,iCACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,8DAER,CACEJ,OAAQ,+DACRtG,KAAM,eACNuG,IAAK,4BACLC,OAAQ,OACRC,OAAQ,SACRC,KAAM,gE,wCCvWV,OAOC,WACA,aAEA,IAAIC,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELzF,EAAI,EAAGA,EAAI0F,UAAUC,OAAQ3F,IAAK,CAC1C,IAAI4F,EAAMF,UAAU1F,GACpB,GAAK4F,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BJ,EAAQK,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC5C,IAAIM,EAAQT,EAAWU,MAAM,KAAMN,GAC/BK,GACHR,EAAQK,KAAKG,QAER,GAAgB,WAAZJ,EACV,IAAK,IAAI5F,KAAO2F,EACXN,EAAOa,KAAKP,EAAK3F,IAAQ2F,EAAI3F,IAChCwF,EAAQK,KAAK7F,IAMjB,OAAOwF,EAAQW,KAAK,KAGgBC,EAAOC,SAC3Cd,EAAWe,QAAUf,EACrBa,EAAOC,QAAUd,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aAtCP,I,gCCPD,qCAmBegB,IAhBf,YAKI,IAJIC,EAIL,EAJDC,KAIC,IAHDC,sBAGC,MAHgB,uCAGhB,MAFDC,oBAEC,MAFc,mCAEd,EADDhH,EACC,EADDA,UAIMiH,EAAMrB,IAFM,mBAEgBmB,EAAgBC,EAAchH,GAChE,OACE,yBAAKA,UAAWiH,GACd,kBAACJ,EAAD,CAAM7G,UAAU,e,mKCWP,SAASkH,EAAT,GAWX,IAVF3K,EAUC,EAVDA,YACAC,EASC,EATDA,eACAC,EAQC,EARDA,KACAC,EAOC,EAPDA,QACAC,EAMC,EANDA,QACAC,EAKC,EALDA,WACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,YACAgF,EAEC,EAFDA,QACAC,EACC,EADDA,WACC,EACiChF,mBAAS,IAD1C,mBACMC,EADN,KACiBC,EADjB,OAE+BF,mBAAS,IAFxC,mBAEMG,EAFN,KAEgBC,EAFhB,OAGyBJ,mBAAS,IAHlC,mBAGMK,EAHN,KAGaC,EAHb,OAI+BN,mBAAS,GAJxC,mBAIMO,EAJN,KAIgBC,EAJhB,OAK2BR,mBAAS,IALpC,mBAKMS,EALN,KAKcC,EALd,KAQKC,EAAe,SAACC,GACpBF,EAAUE,EAAEC,OAAOC,QAKfC,EAAY,uCAAG,WAAOH,GAAP,iBAAAI,EAAA,6DACnBJ,EAAEK,iBACEC,EAAU,CACZT,OAAQA,EACRU,KAAM,GAJW,kBAOIC,IAAM,CACzBC,IAAI,GAAD,OAAKC,IAAL,uBACHC,OAAQ,OACRC,KAAMN,IAVS,OAObO,EAPa,OAYjBC,QAAQC,IAAIF,EAASD,MACrBtB,EAAauB,EAASD,MAbL,uHAAH,sDAqBlBI,qBAAU,YACR,uCAAC,8BAAAZ,EAAA,6DACKE,EAAU,CACZT,OAAQA,EACRU,KAAM,GAHT,kBAMwBC,IAAM,CACzBC,IAAI,GAAD,OAAKC,IAAL,uBACHC,OAAQ,OACRC,KAAMN,IATX,OAMOO,EANP,OAWGC,QAAQC,IAAIF,EAASD,MACrBtB,EAAauB,EAASD,MAZzB,oHAAD,yDAiBC,IAEH,IAAMK,EAAY,uCAAG,WAAO/B,GAAP,eAAAkB,EAAA,6DAEnBjB,EAAY,CACV+B,IAAKhC,EAASgC,IACdC,aAAcjC,EAASkC,OAEzBnC,EAAW,CACTiC,IAAK,GACLG,YAAa,KAEftC,EAAQ,CACNmC,IAAK,GACLI,SAAU,KAZO,kBAeEC,IAAMC,KAAN,UAAcd,IAAd,sBAAuC,CACxDe,WAAYvC,EAASgC,MAhBN,OAeXQ,EAfW,OAkBjBZ,QAAQC,IAAIW,EAAKd,MAKjBpB,EAAYkC,EAAKd,MAvBA,kDA0BjBE,QAAQC,IAAI,WAAZ,MA1BiB,0DAAH,sDA8BZY,EAAW,uCAAG,WAAO3C,GAAP,eAAAoB,EAAA,6DAClBU,QAAQC,IAAI/B,GACZC,EAAW,CACTiC,IAAKlC,EAAQkC,IACbG,YAAarC,EAAQoC,OAEvBrC,EAAQ,CACNmC,IAAK,GACLI,SAAU,KARM,kBAWAC,IAAMC,KAAN,UAAcd,IAAd,mBAAoC,CAClDkB,UAAW5C,EAAQkC,MAZL,OAWVW,EAXU,OAchBf,QAAQC,IAAIc,EAAEjB,MAKdlB,EAASmC,EAAEjB,MAnBK,kDAsBhBE,QAAQC,IAAI,WAAZ,MAtBgB,0DAAH,sDA0BXe,EAAQ,uCAAG,WAAOhD,GAAP,SAAAsB,EAAA,sDACfU,QAAQC,IAAIjC,GACZC,EAAQ,CACNmC,IAAKpC,EAAKoC,IACVI,SAAUxC,EAAKwC,WAJF,2CAAH,sDA4Hd,OACE,oCAIE,kBAAC,QAAD,CAAOS,OAAQnD,EAAaoD,QAAS,kBAAMnD,GAAe,KACxD,kBAAC,cAAD,cACS,IACM,GAAZc,EACC,gDACc,GAAZA,EACF,+CAEA,6CAGJ,kBAAC,YAAD,KACE,kBAAC,IAAD,CAAMsC,cAAetC,EAAUuC,SAAU,SAACC,GAAD,OAASvC,EAAYuC,KAC5D,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACA,kBAAC,IAAD,gBACA,kBAAC,IAAD,cAEF,kBAAC,IAAD,KAzIN,kBAAC,iBAAD,KACE,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,kBAKF,4BACE,kBAAC,YAAD,KACE,0BAAMC,SAAUjC,GACd,2BACEkC,UAAU,kNACVC,YAAY,mBACZC,SAAUxC,QAMpB,kBAAC,YAAD,KACGV,EAAUmD,KAAI,SAACtD,EAAUuD,GAAX,OACb,kBAAC,WAAD,CACEC,IAAKD,EACLJ,UAAU,qCACVM,QAAS,kBAAM1B,EAAa/B,KAE5B,kBAAC,YAAD,KACE,6BACE,6BACE,uBAAGmD,UAAU,iBAAiBnD,EAASkC,eAQrD,kBAAC,cAAD,QAmGI,kBAAC,IAAD,KA5FN,kBAAC,iBAAD,KACE,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,kBAMJ,kBAAC,YAAD,KACG7B,EAASiD,KAAI,SAACxD,EAASyD,GAAV,OACZ,kBAAC,WAAD,CACEC,IAAKD,EACLJ,UAAU,qCACVM,QAAS,kBAAMhB,EAAY3C,KAE3B,kBAAC,YAAD,KACE,6BACE,6BACE,uBAAGqD,UAAU,iBAAiBrD,EAAQoC,eAQpD,kBAAC,cAAD,QAiEI,kBAAC,IAAD,KA1DN,kBAAC,iBAAD,KACE,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,eAMJ,kBAAC,YAAD,KACG3B,EAAM+C,KAAI,SAAC1D,EAAM2D,GAAP,OACT,kBAAC,WAAD,CACEC,IAAKD,EACLJ,UAAU,qCACVM,QAAS,kBAAMb,EAAShD,KAExB,kBAAC,YAAD,KACE,6BACE,6BACE,uBAAGuD,UAAU,iBAAiBvD,EAAKwC,mBAQjD,kBAAC,cAAD,SAgCE,kBAAC,QAAD,CAAOe,UAAU,eAAeO,KAAK,WAArC,aACa1D,EAASiC,cAEtB,kBAAC,QAAD,CAAOkB,UAAU,eAAeO,KAAK,WAArC,aACa5D,EAAQqC,aAErB,kBAAC,QAAD,CAAOgB,UAAU,eAAeO,KAAK,WAArC,SACS9D,EAAKwC,WAGhB,kBAAC,cAAD,KACE,kBAAC,SAAD,CACEe,UAAU,mBAEVM,QAAS,WACP9D,GAAe,GACfuF,GAAYD,KALhB","file":"static/js/11.aec1e9f9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../backendapi\";\n\nexport default function UnitListModal({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody>\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport {\n  ChatIcon,\n  CartIcon,\n  MoneyIcon,\n  PeopleIcon,\n  ButtonsIcon,\n  HeartIcon,\n  EditIcon,\n  TrashIcon,\n} from \"../../icons\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport RoundIcon from \"../../components/RoundIcon\";\nimport response from \"../../utils/demo/tableData\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  Button,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport AssetFloat from \"../../components/FloatDetails/AssetFloat\";\nimport { API } from \"../../backendapi\";\nimport UnitListModal from \"../../components/Modal/UnitListModal\";\nimport CustomerSelection from \"../../components/Modal/AssetFilters/CustomerSelection\";\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\nimport { Link } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n\nfunction Assets() {\n  // Bottom bar stuff\n  // const [bbaropen, setBBarOpen] = useContext(BottomBarContext);\n  // const [assetdetails, setAssetDetails] = useContext(BottomBarContext);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [deleteId, setDeleteId] = useState(0);\n\n  const { bbaropen, setBBarOpen, setAssetDetails, assetdetails } = useContext(\n    BottomBarContext\n  );\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const [floatbox, setFloatBox] = useState(false);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  // dropdown and modals\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenTwo, setIsOpenTwo] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [Business, setBusiness] = useState(\"\");\n  const [product, setProduct] = useState(\"\");\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  const DeleteModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isDeleteModalOpen}\n          onClose={() => setIsDeleteModalOpen(false)}\n        >\n          <ModalHeader>Are you sure you want to delete!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                try {\n                  let response = await axios({\n                    url: `${API}/asset/${Emp.getId()}/deletesalary`,\n                    method: \"POST\",\n                    data: { id: deleteId },\n                  });\n                  console.log(response.data);\n                  let temp = data.filter((x) => x._id != deleteId);\n                  setData(temp);\n                  setIsDeleteModalOpen(false);\n\n                  // setData(response.data);\n                } catch (error) {\n                  throw error;\n                }\n              }}\n            >\n              Confirm Delete\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n  // -------Enabling Bottom Bar----\n  useEffect(() => {\n    // setBBarOpen(1);\n    return () => {\n      setBBarOpen(0);\n      setAssetDetails({});\n    };\n  }, []);\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Assets Management\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          business: Business,\n          producttype: product,\n          customer: customer,\n          account: account,\n          unitId: unit._id,\n          customerId: customer._id,\n          accountId: account._id,\n          searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/asset/${Emp.getId()}/getall`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, Business, product, refresh]);\n\n  console.log(selectedprod);\n\n  return (\n    <>\n      {/* ---------------------Customer Selection Modal----------------------------------------- */}\n      <CustomerSelection\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setUnit={setUnit}\n        unit={unit}\n        customer={customer}\n        setCustomer={setCustomer}\n        account={account}\n        setAccount={setAccount}\n        refresh={refresh}\n        setRefresh={setRefresh}\n      />\n      {DeleteModal()}\n      {/* ---------------------Customer Selection Modal----------------------------------------- */}\n\n      {/* {floatbox ? <AssetFloat /> : null} */}\n      <div className=\"mb-64 mt-4\">\n        {/* <div className=\"flex items-center\">\n          <PageTitle>Assets Management</PageTitle>\n          <div>\n            <Button\n              className=\"mx-3\"\n              onClick={() => {\n                setFloatBox(!floatbox);\n              }}\n              icon={HeartIcon}\n              layout=\"link\"\n              aria-label=\"Like\"\n            />\n          </div>\n        </div> */}\n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-6 \">\n            <div class=\"relative  \">\n              <button\n                class=\" shadow-md appearance-none h-full rounded border block w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                onClick={() => {\n                  setIsModalOpen(!isModalOpen);\n                }}\n                // value={sortBy}\n                // onChange={onSortToggle}\n              >\n                Pick Customer\n              </button>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            <div class=\"relative mx-5 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={Business}\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Business Type\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"AMC\">AMC</option>\n                <option value=\"WTY\">Warranty</option>\n                <option value=\"NOS\">NOS</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* ---------------------------Product Drop Down-------------------------------------- */}\n            <div className=\"relative z-40 \">\n              <button\n                onClick={() => {\n                  setIsOpen(!isOpen);\n                }}\n                className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                aria-label=\"Notifications\"\n                aria-haspopup=\"true\"\n              >\n                {product ? product : \"Pick Product\"}\n              </button>\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n              <Dropdown isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"\");\n                  }}\n                >\n                  <span>All</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Console\");\n                  }}\n                >\n                  <span>Console</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"DMP\");\n                  }}\n                >\n                  <span>DMP</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Inkjet\");\n                  }}\n                >\n                  <span>Inkjet</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"KVM\");\n                  }}\n                >\n                  <span>KVM</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Laptop\");\n                  }}\n                >\n                  <span>Laptop</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Laser\");\n                  }}\n                >\n                  <span>Laser</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"LMP\");\n                  }}\n                >\n                  <span>LMP</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Module\");\n                  }}\n                >\n                  <span>Module</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Router\");\n                  }}\n                >\n                  <span>Router</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Scanner\");\n                  }}\n                >\n                  <span>Scanner</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Server\");\n                  }}\n                >\n                  <span>Server</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Desktop\");\n                  }}\n                >\n                  <span>Desktop</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Storage\");\n                  }}\n                >\n                  <span>Storage</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Switch\");\n                  }}\n                >\n                  <span>Switch</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"UPS\");\n                  }}\n                >\n                  <span>UPS</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Others\");\n                  }}\n                >\n                  <span>Others</span>\n                </DropdownItem>\n              </Dropdown>\n            </div>\n\n            {/* -------------------------------Search Type--------------------------------------- */}\n            <div className=\"relative \">\n              <button\n                onClick={() => {\n                  setIsOpenTwo(!isOpenTwo);\n                }}\n                className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                aria-label=\"Notifications\"\n                aria-haspopup=\"true\"\n              >\n                {searchtype ? searchlabel : \"Pick Search Type\"}\n              </button>\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n              <Dropdown isOpen={isOpenTwo} onClose={() => setIsOpenTwo(false)}>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"\");\n                    setSearchLabel(\"\");\n                    setDisabler(true);\n                    setSearchQuery(\"\");\n                    setRefresh(!refresh);\n                  }}\n                >\n                  <span>All</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"prodserial\");\n                    setSearchLabel(\"Product Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Product Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"kbdsno\");\n                    setSearchLabel(\"Keyboard Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Keyboard Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"mousesno\");\n                    setSearchLabel(\"Mouse Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Mouse Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"motherboardsno\");\n                    setSearchLabel(\"Motherboard Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Motherboard Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"monitorsno\");\n                    setSearchLabel(\"Monitor Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Monitor Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"hddsno\");\n                    setSearchLabel(\"HDD Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>HDD Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"cpusno\");\n                    setSearchLabel(\"CPU Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>CPU Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"ramsno\");\n                    setSearchLabel(\"Ram Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>RAM Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"smpssno\");\n                    setSearchLabel(\"SMPS Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>SMPS Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"fansno\");\n                    setSearchLabel(\"Fan Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Fan Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"opticaldrivesno\");\n                    setSearchLabel(\"Optical Drive Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Optical Drive Serial</span>\n                </DropdownItem>\n              </Dropdown>\n            </div>\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search\"\n                  disabled={disabler}\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n          </div>\n          {/* ----------------------------------------Row 2 -------------------------------------------------------------------- */}\n          {/* <div className=\"my-4 flex \">\n            <div class=\"relative \">\n              <select\n                class=\" shadow-md appearance-none h-full rounded border block w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                // value={sortBy}\n                // onChange={onSortToggle}\n              >\n                <option value=\"TIME_ASC\">Time(Latest)</option>\n                <option value=\"TIME_DESC\">Time(Oldest)</option>\n                <option value=\"NAME_ASC\">Name(A-Z)</option>\n                <option value=\"NAME_DESC\">Name(Z-A)</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n          </div> */}\n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Customer</TableCell>\n                <TableCell>Unit</TableCell>\n                <TableCell>Business</TableCell>\n                <TableCell>Product</TableCell>\n                <TableCell>Product Serial</TableCell>\n                <TableCell>Contract From</TableCell>\n                <TableCell>Contract To</TableCell>\n                <TableCell>Purchase Number</TableCell>\n                <TableCell>Purchase Date</TableCell>\n                <TableCell>Edit/Delete</TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <TableRow\n                  className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                    activerowid == user._id\n                      ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                      : \"white\"\n                  } `}\n                  key={i}\n                  onClick={() => {\n                    setBBarOpen(1);\n                    setActiveRowId(user._id);\n                    // console.log(\"the id is \" + user._id);\n                    setSelectedProd(user);\n                    setAssetDetails(user);\n                    // console.log(user.product.keyboard[0].kbdname);\n                  }}\n                >\n                  <TableCell className=\"w-8\">\n                    <div className=\"flex items-center text-sm \">\n                      {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                      <div>\n                        <p className=\"font-semibold\">{user.customerName}</p>\n                        <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p>\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.unitName}</span>\n                  </TableCell>\n                  <TableCell>\n                    <Badge\n                      type={user.business == \"AMC\" ? \"primary\" : \"success\"}\n                    >\n                      {user.business}\n                    </Badge>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.producttype}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.product.serialno}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.contractfrom).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.contractto).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.ponumber}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.podate).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex items-center space-x-4\">\n                      <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                        <Link\n                          key={user._id}\n                          to={`/app/unit/update/${user._id}`}\n                        >\n                          <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                        </Link>{\" \"}\n                      </Button>\n\n                      <Button\n                        layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"Delete\"\n                        onClick={async () => {\n                          console.log(\"delete Asset\");\n                          setIsDeleteModalOpen(true);\n                          setDeleteId(user._id);\n                        }}\n                      >\n                        <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                      {/* <div>\n            <Button className=\"mx-3 mt02\">\n              {\" \"}\n              <Link\n                key={selectedprod._id}\n                to={`/app/unit/update/${selectedprod._id}`}\n              >\n                Edit\n              </Link>{\" \"}\n            </Button>\n            <Button\n              className=\"mx-3 mt02\"\n              onClick={async () => {\n                console.log(\"delete Asset\");\n                try {\n                  let response = await axios({\n                    url: `${API}/asset/${Emp.getId()}/delete`,\n                    method: \"POST\",\n                    data: { id: selectedprod._id },\n                  });\n                  console.log(response.data);\n                  // let temp = data.filter((x) => x._id != selectedprod._id);\n                  // setData(temp);\n\n                  // setData(response.data);\n                } catch (error) {\n                  throw error;\n                }\n              }}\n            >\n              Delete\n            </Button>\n          </div> */}\n                    </div>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n}\n\nexport default Assets;\n","export default [\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/lokesh_coder/128.jpg',\n    name: 'Chandler Jacobi',\n    job: 'Direct Security Executive',\n    amount: 989.4,\n    status: 'primary',\n    date: 'Mon Feb 03 2020 04:13:15 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg',\n    name: 'Monserrat Marquardt',\n    job: 'Forward Accountability Producer',\n    amount: 471.44,\n    status: 'danger',\n    date: 'Fri Nov 29 2019 10:43:17 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jjsiii/128.jpg',\n    name: 'Lonie Wyman',\n    job: 'Legacy Program Director',\n    amount: 934.24,\n    status: 'success',\n    date: 'Fri Apr 03 2020 03:07:53 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/holdenweb/128.jpg',\n    name: 'Corine Abernathy',\n    job: 'Chief Factors Planner',\n    amount: 351.28,\n    status: 'warning',\n    date: 'Fri Jun 21 2019 20:21:55 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/operatino/128.jpg',\n    name: 'Lorenz Botsford',\n    job: 'Central Accountability Developer',\n    amount: 355.3,\n    status: 'neutral',\n    date: 'Wed Aug 28 2019 15:31:43 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/akmur/128.jpg',\n    name: 'Everette Botsford',\n    job: 'Product Group Architect',\n    amount: 525.42,\n    status: 'success',\n    date: 'Thu Jan 16 2020 09:53:33 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nateschulte/128.jpg',\n    name: 'Marilou Beahan',\n    job: 'Future Security Planner',\n    amount: 414.99,\n    status: 'success',\n    date: 'Mon Oct 28 2019 14:44:31 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jerrybai1907/128.jpg',\n    name: 'Ceasar Sauer',\n    job: 'Direct Brand Specialist',\n    amount: 488.0,\n    status: 'primary',\n    date: 'Tue Jul 23 2019 00:24:44 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg',\n    name: 'Rae McDermott',\n    job: 'Lead Branding Engineer',\n    amount: 502.69,\n    status: 'danger',\n    date: 'Sat Feb 01 2020 12:57:03 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/rtgibbons/128.jpg',\n    name: 'Mable Steuber',\n    job: 'National Group Executive',\n    amount: 911.09,\n    status: 'danger',\n    date: 'Mon Sep 09 2019 12:03:25 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/danthms/128.jpg',\n    name: 'Julian Glover',\n    job: 'Global Branding Assistant',\n    amount: 656.94,\n    status: 'danger',\n    date: 'Fri May 22 2020 17:46:12 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/andysolomon/128.jpg',\n    name: 'Duncan Toy',\n    job: 'Central Intranet Manager',\n    amount: 120.78,\n    status: 'danger',\n    date: 'Sun Nov 17 2019 11:59:50 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jesseddy/128.jpg',\n    name: 'Blanche Friesen',\n    job: 'Forward Identity Executive',\n    amount: 676.95,\n    status: 'danger',\n    date: 'Sun Jun 21 2020 16:46:39 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/haruintesettden/128.jpg',\n    name: 'Orion Koepp',\n    job: 'Global Accountability Strategist',\n    amount: 447.56,\n    status: 'danger',\n    date: 'Thu Jun 04 2020 18:29:41 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/vocino/128.jpg',\n    name: 'Dakota Vandervort',\n    job: 'Future Assurance Coordinator',\n    amount: 765.22,\n    status: 'danger',\n    date: 'Fri Jan 31 2020 13:02:55 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/zaki3d/128.jpg',\n    name: 'Lily Collier',\n    job: 'Forward Configuration Orchestrator',\n    amount: 449.11,\n    status: 'danger',\n    date: 'Sun Aug 18 2019 14:52:01 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/evanshajed/128.jpg',\n    name: 'Kayleigh Schumm',\n    job: 'Central Division Agent',\n    amount: 65.54,\n    status: 'danger',\n    date: 'Wed May 06 2020 17:49:09 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/mdsisto/128.jpg',\n    name: 'General McGlynn',\n    job: 'Central Web Analyst',\n    amount: 30.51,\n    status: 'danger',\n    date: 'Mon Mar 30 2020 01:24:54 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/woodydotmx/128.jpg',\n    name: 'Shayna Schumm',\n    job: 'Future Directives Engineer',\n    amount: 313.73,\n    status: 'danger',\n    date: 'Wed Jul 03 2019 10:01:06 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/mfacchinello/128.jpg',\n    name: 'Giovanna Sanford',\n    job: 'Dynamic Interactions Executive',\n    amount: 398.3,\n    status: 'danger',\n    date: 'Tue Oct 08 2019 17:08:43 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/ademilter/128.jpg',\n    name: 'Emie Mante',\n    job: 'Direct Factors Supervisor',\n    amount: 142.51,\n    status: 'danger',\n    date: 'Wed Jul 24 2019 19:17:16 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/tobysaxon/128.jpg',\n    name: 'Chance Muller',\n    job: 'Lead Usability Planner',\n    amount: 963.26,\n    status: 'danger',\n    date: 'Sun Dec 01 2019 14:04:10 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg',\n    name: 'Armani Torphy',\n    job: 'Forward Functionality Analyst',\n    amount: 445.23,\n    status: 'danger',\n    date: 'Tue Dec 24 2019 13:28:36 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/devinhalladay/128.jpg',\n    name: 'Braeden Ward',\n    job: 'Central Integration Director',\n    amount: 588.53,\n    status: 'danger',\n    date: 'Wed Apr 15 2020 21:40:11 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/kimcool/128.jpg',\n    name: 'Malcolm Price',\n    job: 'District Program Planner',\n    amount: 181.93,\n    status: 'danger',\n    date: 'Thu Oct 24 2019 07:09:03 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/angelceballos/128.jpg',\n    name: 'Susan Jast',\n    job: 'Future Paradigm Associate',\n    amount: 928.41,\n    status: 'danger',\n    date: 'Sun Feb 09 2020 23:22:23 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/peachananr/128.jpg',\n    name: 'Torrey Reynolds',\n    job: 'Lead Security Agent',\n    amount: 447.37,\n    status: 'danger',\n    date: 'Mon Oct 28 2019 04:10:39 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/agromov/128.jpg',\n    name: 'Travon Harber',\n    job: 'Legacy Marketing Facilitator',\n    amount: 422.48,\n    status: 'danger',\n    date: 'Sat Nov 09 2019 05:04:09 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/danpliego/128.jpg',\n    name: 'Hattie Gutkowski',\n    job: 'Chief Configuration Supervisor',\n    amount: 714.34,\n    status: 'danger',\n    date: 'Tue Oct 22 2019 22:36:23 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/ahmetalpbalkan/128.jpg',\n    name: 'Demarco Lang',\n    job: 'Investor Program Designer',\n    amount: 536.92,\n    status: 'danger',\n    date: 'Wed Apr 08 2020 03:05:59 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nasirwd/128.jpg',\n    name: 'Glennie Ziemann',\n    job: 'Dynamic Interactions Analyst',\n    amount: 597.25,\n    status: 'danger',\n    date: 'Mon Jun 22 2020 21:27:06 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/juaumlol/128.jpg',\n    name: 'Alta Howe',\n    job: 'District Intranet Executive',\n    amount: 42.28,\n    status: 'danger',\n    date: 'Sat Oct 12 2019 22:57:22 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/victordeanda/128.jpg',\n    name: 'Sydnee Gottlieb',\n    job: 'Global Response Specialist',\n    amount: 868.92,\n    status: 'danger',\n    date: 'Wed Feb 05 2020 05:17:34 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/baumannzone/128.jpg',\n    name: 'Arlene Schmitt',\n    job: 'Lead Metrics Consultant',\n    amount: 364.68,\n    status: 'danger',\n    date: 'Thu Oct 03 2019 08:47:32 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/chacky14/128.jpg',\n    name: 'Hilda Schoen',\n    job: 'National Solutions Facilitator',\n    amount: 260.91,\n    status: 'danger',\n    date: 'Wed Dec 04 2019 06:28:30 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/kostaspt/128.jpg',\n    name: 'Chase Bahringer',\n    job: 'Dynamic Communications Designer',\n    amount: 454.61,\n    status: 'danger',\n    date: 'Mon Nov 25 2019 16:59:38 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/timgthomas/128.jpg',\n    name: 'Lucile Hansen',\n    job: 'Customer Usability Facilitator',\n    amount: 982.22,\n    status: 'danger',\n    date: 'Sun Aug 25 2019 17:15:59 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/safrankov/128.jpg',\n    name: 'Mollie Heaney',\n    job: 'Forward Communications Director',\n    amount: 390.33,\n    status: 'danger',\n    date: 'Mon Jul 22 2019 01:45:19 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/justme_timothyg/128.jpg',\n    name: 'Bennie Kuvalis',\n    job: 'Future Factors Agent',\n    amount: 456.64,\n    status: 'danger',\n    date: 'Sat Feb 08 2020 07:55:08 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/Chakintosh/128.jpg',\n    name: 'Jodie Luettgen',\n    job: 'Customer Implementation Associate',\n    amount: 398.37,\n    status: 'danger',\n    date: 'Tue Jun 09 2020 11:19:53 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/weavermedia/128.jpg',\n    name: 'Bethel Quitzon',\n    job: 'Dynamic Web Strategist',\n    amount: 183.58,\n    status: 'danger',\n    date: 'Sun Dec 29 2019 18:56:54 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/gmourier/128.jpg',\n    name: 'Jon Dietrich',\n    job: 'Legacy Creative Planner',\n    amount: 439.01,\n    status: 'danger',\n    date: 'Sun Dec 29 2019 11:11:34 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/stefvdham/128.jpg',\n    name: 'Nakia Kihn',\n    job: 'Central Interactions Coordinator',\n    amount: 824.12,\n    status: 'danger',\n    date: 'Sun Sep 15 2019 06:43:56 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/thedamianhdez/128.jpg',\n    name: 'Assunta Grady',\n    job: 'Investor Operations Specialist',\n    amount: 172.97,\n    status: 'danger',\n    date: 'Tue Dec 17 2019 01:46:37 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nehfy/128.jpg',\n    name: 'Lukas Klocko',\n    job: 'Human Usability Associate',\n    amount: 515.74,\n    status: 'danger',\n    date: 'Mon Jun 15 2020 04:04:32 GMT-0300 (Brasilia Standard Time)',\n  },\n]\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className,\n}) {\n  const baseStyle = 'rounded-full p-5'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className=\"w-6 h-6\" />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../../backendapi\";\n\nexport default function CustomerSelection({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n  refresh,\n  setRefresh,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      //   setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      //   setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody>\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              setRefresh(!refresh);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}