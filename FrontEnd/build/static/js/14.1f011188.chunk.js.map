{"version":3,"sources":["pages/CustomerPages/MyAssets.js","../node_modules/classnames/index.js","components/RoundIcon.js","components/Modal/AssetFilters/CustomerSelection.js","components/Modal/UnitListModal.js","utils/demo/tableData.js"],"names":["MyAssets","useContext","BottomBarContext","bbaropen","setBBarOpen","setAssetDetails","assetdetails","useState","activerowid","setActiveRowId","page","setPage","data","setData","isOpen","setIsOpen","isOpenTwo","setIsOpenTwo","refresh","setRefresh","setDisabler","Business","product","setProduct","_id","unitName","customerName","accountName","selectedprod","setSelectedProd","searchtype","setSearchType","searchlabel","setSearchLabel","searchquery","setSearchQuery","totalResults","setTotalResults","useEffect","console","log","Cust","getId","getRole","a","payload","pages","limit","filters","business","producttype","customerId","accountId","axios","url","API","method","response","out","total","className","class","onClick","aria-label","aria-haspopup","xmlns","viewBox","d","onClose","onSubmit","e","preventDefault","value","onChange","target","placeholder","map","user","i","key","type","serialno","moment","contractfrom","format","contractto","ponumber","podate","resultsPerPage","label","p","hasOwn","hasOwnProperty","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","call","join","module","exports","default","RoundIcon","Icon","icon","iconColorClass","bgColorClass","cls","CustomerSelection","isModalOpen","setIsModalOpen","unit","setUnit","account","setAccount","customer","setCustomer","theunitdetails","setTheUnitDetails","customers","setCustomers","accounts","setAccounts","units","setUnits","tabIndex","setTabIndex","search","setSearch","handleChange","handleSubmit","role","pickCustomer","name","Axios","post","accs","pickAccount","u","pickUnit","contactPerson","contactNo","selectedIndex","onSelect","ind","UnitListModal","avatar","job","amount","status","date"],"mappings":"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","file":"static/js/14.1f011188.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\n// import Emp from \"../../helpers/auth/EmpProfile\";\nimport Cust from \"../../helpers/auth/CustProfile\";\n\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport {\n  ChatIcon,\n  CartIcon,\n  MoneyIcon,\n  PeopleIcon,\n  ButtonsIcon,\n  HeartIcon,\n} from \"../../icons\";\nimport RoundIcon from \"../../components/RoundIcon\";\nimport response from \"../../utils/demo/tableData\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  Button,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport AssetFloat from \"../../components/FloatDetails/AssetFloat\";\nimport { API } from \"../../backendapi\";\nimport UnitListModal from \"../../components/Modal/UnitListModal\";\nimport CustomerSelection from \"../../components/Modal/AssetFilters/CustomerSelection\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\n\nfunction MyAssets() {\n  const { bbaropen, setBBarOpen, setAssetDetails, assetdetails } =\n    useContext(BottomBarContext);\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n  // Url params------------\n  // let { id, accountid, unitid } = useParams();\n\n  const [floatbox, setFloatBox] = useState(false);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  // dropdown and modals\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenTwo, setIsOpenTwo] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [Business, setBusiness] = useState(\"\");\n  const [product, setProduct] = useState(\"\");\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(0);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n  useEffect(() => {\n    console.log(Cust.getId(), Cust.getRole());\n    // Using an IIFE\n    (async function thegetter() {\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          business: Business,\n          producttype: product,\n          //   customer: customer,\n          //   account: account,\n          // unitId: unitid,\n          //   customerId: customer._id,\n          //   accountId: account._id,\n          searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      if (Cust.getRole() == 1) {\n        payload.filters.customerId = Cust.getId();\n      } else if (Cust.getRole() == 2) {\n        payload.filters.accountId = Cust.getId();\n      } else return;\n      try {\n        let response = await axios({\n          url: `${API}/asset/getallbycust`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n        setData(response.data.out);\n        setTotalResults(response.data.total);\n      } catch (error) {\n        throw error;\n      }\n    })();\n\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, Business, product, refresh]);\n\n  console.log(selectedprod);\n\n  return (\n    <>\n      {/* ---------------------Customer Selection Modal----------------------------------------- */}\n      {/* <CustomerSelection\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setUnit={setUnit}\n        unit={unit}\n        customer={customer}\n        setCustomer={setCustomer}\n        account={account}\n        setAccount={setAccount}\n        refresh={refresh}\n        setRefresh={setRefresh}\n      /> */}\n      {/* ---------------------Customer Selection Modal----------------------------------------- */}\n\n      <div className=\"mb-64\">\n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-6 \">\n            {/* <div class=\"relative  \">\n              <button\n                class=\" shadow-md appearance-none h-full rounded border block w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                onClick={() => {\n                  setIsModalOpen(!isModalOpen);\n                }}\n                // value={sortBy}\n                // onChange={onSortToggle}\n              >\n                Pick Customer\n              </button>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div> */}\n\n            {/* <div class=\"relative mx-5 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={Business}\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Business Type\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"AMC\">AMC</option>\n                <option value=\"Warranty\">Warranty</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div> */}\n            {/* ---------------------------Product Drop Down-------------------------------------- */}\n            <div className=\"relative \">\n              <button\n                onClick={() => {\n                  setIsOpen(!isOpen);\n                }}\n                className=\"shadow-md z-50 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                aria-label=\"Notifications\"\n                aria-haspopup=\"true\"\n              >\n                {product ? product : \"Pick Product\"}\n              </button>\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n              <Dropdown isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"\");\n                  }}\n                >\n                  <span>All</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Console\");\n                  }}\n                >\n                  <span>Console</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"DMP\");\n                  }}\n                >\n                  <span>DMP</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Inkjet\");\n                  }}\n                >\n                  <span>Inkjet</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"KVM\");\n                  }}\n                >\n                  <span>KVM</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Laptop\");\n                  }}\n                >\n                  <span>Laptop</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Laser\");\n                  }}\n                >\n                  <span>Laser</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"LMP\");\n                  }}\n                >\n                  <span>LMP</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Module\");\n                  }}\n                >\n                  <span>Module</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Router\");\n                  }}\n                >\n                  <span>Router</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Scanner\");\n                  }}\n                >\n                  <span>Scanner</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Server\");\n                  }}\n                >\n                  <span>Server</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Desktop\");\n                  }}\n                >\n                  <span>Desktop</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Storage\");\n                  }}\n                >\n                  <span>Storage</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Switch\");\n                  }}\n                >\n                  <span>Switch</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"UPS\");\n                  }}\n                >\n                  <span>UPS</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Others\");\n                  }}\n                >\n                  <span>Others</span>\n                </DropdownItem>\n              </Dropdown>\n            </div>\n\n            {/* -------------------------------Search Type--------------------------------------- */}\n            <div className=\"relative \">\n              <button\n                onClick={() => {\n                  setIsOpenTwo(!isOpenTwo);\n                }}\n                className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                aria-label=\"Notifications\"\n                aria-haspopup=\"true\"\n              >\n                {searchtype ? searchlabel : \"Pick Search Type\"}\n              </button>\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n              <Dropdown isOpen={isOpenTwo} onClose={() => setIsOpenTwo(false)}>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"\");\n                    setSearchLabel(\"\");\n                    setDisabler(true);\n                    setSearchQuery(\"\");\n                    setRefresh(!refresh);\n                  }}\n                >\n                  <span>All</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"keyboardsno\");\n                    setSearchLabel(\"Keyboard Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Keyboard Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"mousesno\");\n                    setSearchLabel(\"Mouse Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Mouse Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"motherboardsno\");\n                    setSearchLabel(\"Motherboard Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Motherboard Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"monitorsno\");\n                    setSearchLabel(\"Monitor Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Monitor Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"hddsno\");\n                    setSearchLabel(\"HDD Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>HDD Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"cpusno\");\n                    setSearchLabel(\"CPU Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>CPU Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"ramsno\");\n                    setSearchLabel(\"Ram Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>RAM Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"smpssno\");\n                    setSearchLabel(\"SMPS Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>SMPS Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"fansno\");\n                    setSearchLabel(\"Fan Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Fan Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"opticaldrivesno\");\n                    setSearchLabel(\"Optical Drive Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Optical Drive Serial</span>\n                </DropdownItem>\n              </Dropdown>\n            </div>\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search\"\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n          </div>\n          {/* ----------------------------------------Row 2 -------------------------------------------------------------------- */}\n          {/* <div className=\"my-4 flex \">\n            <div class=\"relative \">\n              <select\n                class=\" shadow-md appearance-none h-full rounded border block w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                // value={sortBy}\n                // onChange={onSortToggle}\n              >\n                <option value=\"TIME_ASC\">Time(Latest)</option>\n                <option value=\"TIME_DESC\">Time(Oldest)</option>\n                <option value=\"NAME_ASC\">Name(A-Z)</option>\n                <option value=\"NAME_DESC\">Name(Z-A)</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n          </div> */}\n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Customer</TableCell>\n                <TableCell>Unit</TableCell>\n                <TableCell>Business</TableCell>\n                <TableCell>Product</TableCell>\n                <TableCell>Product Serial</TableCell>\n                <TableCell>Contract From</TableCell>\n                <TableCell>Contract To</TableCell>\n                <TableCell>Purchase Number</TableCell>\n                <TableCell>Purchase Date</TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <TableRow\n                  className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                    activerowid == user._id\n                      ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                      : \"white\"\n                  } `}\n                  key={i}\n                  onClick={() => {\n                    setActiveRowId(user._id);\n                    // console.log(\"the id is \" + user._id);\n                    setSelectedProd(user);\n                    // setAssetDetails(user);\n                    // console.log(user.product.keyboard[0].keyboardname);\n                  }}\n                >\n                  <TableCell className=\"w-8\">\n                    <div className=\"flex items-center text-sm \">\n                      {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                      <div>\n                        <p className=\"font-semibold\">{user.customerName}</p>\n                        <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p>\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.unitName}</span>\n                  </TableCell>\n                  <TableCell>\n                    <Badge\n                      type={user.business == \"AMC\" ? \"primary\" : \"success\"}\n                    >\n                      {user.business}\n                    </Badge>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.producttype}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.product.serialno}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.contractfrom).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.contractto).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.ponumber}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.podate).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n}\n\nexport default MyAssets;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className,\n}) {\n  const baseStyle = 'rounded-full p-5'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className=\"w-6 h-6\" />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../../backendapi\";\n\nexport default function CustomerSelection({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n  refresh,\n  setRefresh,\n  theunitdetails,\n  setTheUnitDetails,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      //   setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      //   setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(\"-------------piking unit\");\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      contactPerson: unit.contactPerson,\n      contactNo: unit.contactNo,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody className=\"overflow-y-scroll h-64\"  >\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n          \n        </ModalBody>\n        <ModalFooter>\n        <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              setRefresh(!refresh);\n              if (theunitdetails) {\n                setTheUnitDetails(unit);\n              }\n              setAccounts([]);\n              setUnits([]);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../backendapi\";\n\n\nexport default function UnitListModal({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table className=\" w-full overflow-y-scroll\">\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} >\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody className=\"overflow-y-scroll h-64\" >\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n          \n        </ModalBody>\n        <ModalFooter>\n        <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","export default [\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/lokesh_coder/128.jpg',\n    name: 'Chandler Jacobi',\n    job: 'Direct Security Executive',\n    amount: 989.4,\n    status: 'primary',\n    date: 'Mon Feb 03 2020 04:13:15 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg',\n    name: 'Monserrat Marquardt',\n    job: 'Forward Accountability Producer',\n    amount: 471.44,\n    status: 'danger',\n    date: 'Fri Nov 29 2019 10:43:17 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jjsiii/128.jpg',\n    name: 'Lonie Wyman',\n    job: 'Legacy Program Director',\n    amount: 934.24,\n    status: 'success',\n    date: 'Fri Apr 03 2020 03:07:53 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/holdenweb/128.jpg',\n    name: 'Corine Abernathy',\n    job: 'Chief Factors Planner',\n    amount: 351.28,\n    status: 'warning',\n    date: 'Fri Jun 21 2019 20:21:55 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/operatino/128.jpg',\n    name: 'Lorenz Botsford',\n    job: 'Central Accountability Developer',\n    amount: 355.3,\n    status: 'neutral',\n    date: 'Wed Aug 28 2019 15:31:43 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/akmur/128.jpg',\n    name: 'Everette Botsford',\n    job: 'Product Group Architect',\n    amount: 525.42,\n    status: 'success',\n    date: 'Thu Jan 16 2020 09:53:33 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nateschulte/128.jpg',\n    name: 'Marilou Beahan',\n    job: 'Future Security Planner',\n    amount: 414.99,\n    status: 'success',\n    date: 'Mon Oct 28 2019 14:44:31 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jerrybai1907/128.jpg',\n    name: 'Ceasar Sauer',\n    job: 'Direct Brand Specialist',\n    amount: 488.0,\n    status: 'primary',\n    date: 'Tue Jul 23 2019 00:24:44 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg',\n    name: 'Rae McDermott',\n    job: 'Lead Branding Engineer',\n    amount: 502.69,\n    status: 'danger',\n    date: 'Sat Feb 01 2020 12:57:03 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/rtgibbons/128.jpg',\n    name: 'Mable Steuber',\n    job: 'National Group Executive',\n    amount: 911.09,\n    status: 'danger',\n    date: 'Mon Sep 09 2019 12:03:25 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/danthms/128.jpg',\n    name: 'Julian Glover',\n    job: 'Global Branding Assistant',\n    amount: 656.94,\n    status: 'danger',\n    date: 'Fri May 22 2020 17:46:12 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/andysolomon/128.jpg',\n    name: 'Duncan Toy',\n    job: 'Central Intranet Manager',\n    amount: 120.78,\n    status: 'danger',\n    date: 'Sun Nov 17 2019 11:59:50 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jesseddy/128.jpg',\n    name: 'Blanche Friesen',\n    job: 'Forward Identity Executive',\n    amount: 676.95,\n    status: 'danger',\n    date: 'Sun Jun 21 2020 16:46:39 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/haruintesettden/128.jpg',\n    name: 'Orion Koepp',\n    job: 'Global Accountability Strategist',\n    amount: 447.56,\n    status: 'danger',\n    date: 'Thu Jun 04 2020 18:29:41 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/vocino/128.jpg',\n    name: 'Dakota Vandervort',\n    job: 'Future Assurance Coordinator',\n    amount: 765.22,\n    status: 'danger',\n    date: 'Fri Jan 31 2020 13:02:55 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/zaki3d/128.jpg',\n    name: 'Lily Collier',\n    job: 'Forward Configuration Orchestrator',\n    amount: 449.11,\n    status: 'danger',\n    date: 'Sun Aug 18 2019 14:52:01 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/evanshajed/128.jpg',\n    name: 'Kayleigh Schumm',\n    job: 'Central Division Agent',\n    amount: 65.54,\n    status: 'danger',\n    date: 'Wed May 06 2020 17:49:09 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/mdsisto/128.jpg',\n    name: 'General McGlynn',\n    job: 'Central Web Analyst',\n    amount: 30.51,\n    status: 'danger',\n    date: 'Mon Mar 30 2020 01:24:54 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/woodydotmx/128.jpg',\n    name: 'Shayna Schumm',\n    job: 'Future Directives Engineer',\n    amount: 313.73,\n    status: 'danger',\n    date: 'Wed Jul 03 2019 10:01:06 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/mfacchinello/128.jpg',\n    name: 'Giovanna Sanford',\n    job: 'Dynamic Interactions Executive',\n    amount: 398.3,\n    status: 'danger',\n    date: 'Tue Oct 08 2019 17:08:43 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/ademilter/128.jpg',\n    name: 'Emie Mante',\n    job: 'Direct Factors Supervisor',\n    amount: 142.51,\n    status: 'danger',\n    date: 'Wed Jul 24 2019 19:17:16 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/tobysaxon/128.jpg',\n    name: 'Chance Muller',\n    job: 'Lead Usability Planner',\n    amount: 963.26,\n    status: 'danger',\n    date: 'Sun Dec 01 2019 14:04:10 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg',\n    name: 'Armani Torphy',\n    job: 'Forward Functionality Analyst',\n    amount: 445.23,\n    status: 'danger',\n    date: 'Tue Dec 24 2019 13:28:36 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/devinhalladay/128.jpg',\n    name: 'Braeden Ward',\n    job: 'Central Integration Director',\n    amount: 588.53,\n    status: 'danger',\n    date: 'Wed Apr 15 2020 21:40:11 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/kimcool/128.jpg',\n    name: 'Malcolm Price',\n    job: 'District Program Planner',\n    amount: 181.93,\n    status: 'danger',\n    date: 'Thu Oct 24 2019 07:09:03 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/angelceballos/128.jpg',\n    name: 'Susan Jast',\n    job: 'Future Paradigm Associate',\n    amount: 928.41,\n    status: 'danger',\n    date: 'Sun Feb 09 2020 23:22:23 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/peachananr/128.jpg',\n    name: 'Torrey Reynolds',\n    job: 'Lead Security Agent',\n    amount: 447.37,\n    status: 'danger',\n    date: 'Mon Oct 28 2019 04:10:39 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/agromov/128.jpg',\n    name: 'Travon Harber',\n    job: 'Legacy Marketing Facilitator',\n    amount: 422.48,\n    status: 'danger',\n    date: 'Sat Nov 09 2019 05:04:09 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/danpliego/128.jpg',\n    name: 'Hattie Gutkowski',\n    job: 'Chief Configuration Supervisor',\n    amount: 714.34,\n    status: 'danger',\n    date: 'Tue Oct 22 2019 22:36:23 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/ahmetalpbalkan/128.jpg',\n    name: 'Demarco Lang',\n    job: 'Investor Program Designer',\n    amount: 536.92,\n    status: 'danger',\n    date: 'Wed Apr 08 2020 03:05:59 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nasirwd/128.jpg',\n    name: 'Glennie Ziemann',\n    job: 'Dynamic Interactions Analyst',\n    amount: 597.25,\n    status: 'danger',\n    date: 'Mon Jun 22 2020 21:27:06 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/juaumlol/128.jpg',\n    name: 'Alta Howe',\n    job: 'District Intranet Executive',\n    amount: 42.28,\n    status: 'danger',\n    date: 'Sat Oct 12 2019 22:57:22 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/victordeanda/128.jpg',\n    name: 'Sydnee Gottlieb',\n    job: 'Global Response Specialist',\n    amount: 868.92,\n    status: 'danger',\n    date: 'Wed Feb 05 2020 05:17:34 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/baumannzone/128.jpg',\n    name: 'Arlene Schmitt',\n    job: 'Lead Metrics Consultant',\n    amount: 364.68,\n    status: 'danger',\n    date: 'Thu Oct 03 2019 08:47:32 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/chacky14/128.jpg',\n    name: 'Hilda Schoen',\n    job: 'National Solutions Facilitator',\n    amount: 260.91,\n    status: 'danger',\n    date: 'Wed Dec 04 2019 06:28:30 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/kostaspt/128.jpg',\n    name: 'Chase Bahringer',\n    job: 'Dynamic Communications Designer',\n    amount: 454.61,\n    status: 'danger',\n    date: 'Mon Nov 25 2019 16:59:38 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/timgthomas/128.jpg',\n    name: 'Lucile Hansen',\n    job: 'Customer Usability Facilitator',\n    amount: 982.22,\n    status: 'danger',\n    date: 'Sun Aug 25 2019 17:15:59 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/safrankov/128.jpg',\n    name: 'Mollie Heaney',\n    job: 'Forward Communications Director',\n    amount: 390.33,\n    status: 'danger',\n    date: 'Mon Jul 22 2019 01:45:19 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/justme_timothyg/128.jpg',\n    name: 'Bennie Kuvalis',\n    job: 'Future Factors Agent',\n    amount: 456.64,\n    status: 'danger',\n    date: 'Sat Feb 08 2020 07:55:08 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/Chakintosh/128.jpg',\n    name: 'Jodie Luettgen',\n    job: 'Customer Implementation Associate',\n    amount: 398.37,\n    status: 'danger',\n    date: 'Tue Jun 09 2020 11:19:53 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/weavermedia/128.jpg',\n    name: 'Bethel Quitzon',\n    job: 'Dynamic Web Strategist',\n    amount: 183.58,\n    status: 'danger',\n    date: 'Sun Dec 29 2019 18:56:54 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/gmourier/128.jpg',\n    name: 'Jon Dietrich',\n    job: 'Legacy Creative Planner',\n    amount: 439.01,\n    status: 'danger',\n    date: 'Sun Dec 29 2019 11:11:34 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/stefvdham/128.jpg',\n    name: 'Nakia Kihn',\n    job: 'Central Interactions Coordinator',\n    amount: 824.12,\n    status: 'danger',\n    date: 'Sun Sep 15 2019 06:43:56 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/thedamianhdez/128.jpg',\n    name: 'Assunta Grady',\n    job: 'Investor Operations Specialist',\n    amount: 172.97,\n    status: 'danger',\n    date: 'Tue Dec 17 2019 01:46:37 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nehfy/128.jpg',\n    name: 'Lukas Klocko',\n    job: 'Human Usability Associate',\n    amount: 515.74,\n    status: 'danger',\n    date: 'Mon Jun 15 2020 04:04:32 GMT-0300 (Brasilia Standard Time)',\n  },\n]\n"],"sourceRoot":""}