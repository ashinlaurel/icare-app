{"version":3,"sources":["pages/Customers/CreateCustomer.js","components/Modal/CustomerCreateModal.js","helpers/unitHelper.js","components/Modal/AddUnitModal.js"],"names":["CreateCustomer","useHistory","useState","accType","setAccType","isReviewModalOpen","setIsReviewModalOpen","isErrModalOpen","setIsErrModalOpen","isReqFieldModal","setIsReqFieldModal","setTopHeading","useContext","TopBarContext","isModalOpen","setIsModalOpen","isUModalOpen","setIsUModalOpen","_id","customerName","Ucustomer","setUCustomer","accountName","Uaccount","setUAccount","customer","setCustomer","username","email","password","confpassword","accountId","unitId","unitName","address","district","state","locationType","pincode","GSTnumber","contactPerson","contactNo","altContact","WhatsappNo","values","setValues","name","enc_password","err","setErr","useEffect","handleChange","e","target","value","submitCustomer","a","newuser","role","childAccountIds","whatsappNo","show_password","signup","Emp","getId","then","data","console","log","catch","sumbitAccount","parentCustomerId","parentCustomerName","submitUnit","payload","customerId","customerMame","unitCreate","setAccount","account","className","onChange","parseInt","type","valid","placeholder","length","onClick","aria-label","aria-haspopup","addForm","isOpen","onClose","window","location","reload","CustomerCreateModal","customers","setCustomers","tabIndex","setTabIndex","search","setSearch","handleSubmit","preventDefault","axios","url","API","method","response","pickCustomer","selectedIndex","onSelect","ind","onSubmit","map","i","key","newunit","Axios","post","unit","error","status","errors","AddUnitModal","accounts","setAccounts","accs","pickAccount"],"mappings":"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","file":"static/js/36.fe884892.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\n\nimport { signup, signin, authenticate } from \"../../helpers/auth\";\nimport CustomerCreateModal from \"../../components/Modal/CustomerCreateModal\";\nimport EmpProfile from \"../../helpers/auth/EmpProfile\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport { resetIdCounter } from \"react-tabs\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport { unitCreate } from \"../../helpers/unitHelper\";\nimport AddUnitModal from \"../../components/Modal/AddUnitModal\";\nimport { useHistory } from \"react-router-dom\";\n/////////////----------------->>>>>> bug <<<<<------------customerList refresh--------------------------\n\nfunction CreateCustomer() {\n  let history = useHistory();\n  const [accType, setAccType] = useState(0); /////// 0-Customer 1-Account 2-Unit\n\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [isErrModalOpen, setIsErrModalOpen] = useState(false);\n  const [isReqFieldModal, setIsReqFieldModal] = useState(false);\n  const { setTopHeading } = useContext(TopBarContext);\n\n  //modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  //States for unit\n  const [isUModalOpen, setIsUModalOpen] = useState(false);\n  const [Ucustomer, setUCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [Uaccount, setUAccount] = useState({ _id: \"\", accountName: \"\" });\n\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n\n  const [values, setValues] = useState({\n    //both\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confpassword: \"\",\n    //customer\n    customerName: \"\",\n    accountId: [],\n    //account\n    accountName: \"\",\n    unitId: [],\n    // //------> customerName from above\n    //unit\n    unitName: \"\",\n    address: \"\",\n    district: \"\",\n    state: \"\",\n    locationType: \"\",\n    pincode: \"\",\n    GSTnumber: \"\",\n    contactPerson: \"\",\n    contactNo: \"\",\n    altContact: \"\",\n    WhatsappNo: \"\",\n  });\n  const [err, setErr] = useState({\n    email: \"\",\n    name: \"\",\n    // accountName: \"\",\n    enc_password: \"\",\n    confpassword: \"\",\n  });\n\n  // ----------------------Heading Use Effect-------------\n\n  useEffect(() => {\n    setTopHeading(\"Add Customer\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const handleConfPassChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n    if (values.password !== e.target.value) {\n      setErr({ ...err, confpassword: \"Confirm password does not match\" });\n    } else setErr({ ...err, confpassword: \"\" });\n  };\n\n  const submitCustomer = async () => {\n    if (values.password !== values.confpassword) {\n      setErr({ ...err, confpassword: \"Confirm password does not match\" });\n      return;\n    }\n    if (\n      (values.customerName === \"\") |\n      (values.username === \"\") |\n      (values.email === \"\") |\n      (values.password === \"\") |\n      (values.confpassword === \"\")\n    ) {\n      setIsReqFieldModal(true);\n      return;\n    }\n    // e.preventDefault();\n    const newuser = {\n      username: values.username,\n      name: values.customerName,\n      email: values.email,\n      password: values.password,\n      role: 1,\n      childAccountIds: [],\n      address: values.address,\n      district: values.district,\n      state: values.state,\n      locationType: values.locationType,\n      pincode: values.pincode,\n      GSTnumber: values.GSTnumber,\n      contactPerson: values.contactPerson,\n      contactNo: values.contactNo,\n      altContact: values.altContact,\n      whatsappNo: values.WhatsappNo,\n      show_password: values.password,\n    };\n    signup(newuser, `customer/${Emp.getId()}/signup`)\n      .then((data) => {\n        console.log(\"Signed Up\", data._id);\n        setIsReviewModalOpen(true);\n        setErr({\n          username: \"\",\n          email: \"\",\n          customerName: \"\",\n          enc_password: \"\",\n          confpassword: \"\",\n        });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        setErr({ ...err });\n      });\n  };\n\n  const sumbitAccount = async (e) => {\n    if (values.password !== values.confpassword) {\n      setErr({ ...err, confpassword: \"Confirm password does not match\" });\n      return;\n    }\n    if (\n      (values.accountName === \"\") |\n      (values.username === \"\") |\n      (values.email === \"\") |\n      (values.password === \"\") |\n      (values.confpassword === \"\")\n    ) {\n      setIsReqFieldModal(true);\n      return;\n    }\n    if (customer._id == \"\") {\n      setIsErrModalOpen(true);\n      return;\n    }\n    // e.preventDefault();\n    console.log(\"username\", values.username);\n    const newuser = {\n      username: values.username,\n      name: values.accountName,\n      email: values.email,\n      password: values.password,\n      parentCustomerId: customer._id,\n      parentCustomerName: customer.customerName,\n      role: 2,\n      address: values.address,\n      district: values.district,\n      state: values.state,\n      locationType: values.locationType,\n      pincode: values.pincode,\n      GSTnumber: values.GSTnumber,\n      contactPerson: values.contactPerson,\n      contactNo: values.contactNo,\n      altContact: values.altContact,\n      whatsappNo: values.WhatsappNo,\n      show_password: values.password,\n    };\n    signup(newuser, `customer/${Emp.getId()}/signup`)\n      .then((data) => {\n        setIsReviewModalOpen(true);\n        console.log(\"Signed Up\", data);\n        setErr({\n          username: \"\",\n          email: \"\",\n          accountName: \"\",\n          enc_password: \"\",\n          confpassword: \"\",\n        });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        setErr({ ...err });\n      });\n  };\n  const submitUnit = async (e) => {\n    if (Ucustomer._id == \"\" || Uaccount._id == \"\") {\n      setIsErrModalOpen(true);\n      return;\n    }\n    // e.preventDefault();\n    const payload = {\n      username: values.username,\n      email: values.email,\n      customerId: Ucustomer._id,\n      customerName: Ucustomer.customerMame,\n      accountId: Uaccount._id,\n      accountName: Uaccount.accountName,\n\n      unitName: values.unitName,\n      address: values.address,\n      district: values.district,\n      state: values.state,\n      locationType: values.locationType,\n      pincode: values.pincode,\n      GSTnumber: values.GSTnumber,\n      contactPerson: values.contactPerson,\n      contactNo: values.contactNo,\n      altContact: values.altContact,\n      whatsappNo: values.WhatsappNo,\n      show_password: values.password,\n    };\n    unitCreate(payload)\n      .then((data) => {\n        console.log(\"Signed Up\", data);\n        setIsReviewModalOpen(true);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        // setErr({ ...err });\n      });\n  };\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>\n            {accType === 0 ? <>Customer </> : null}\n            {accType === 1 ? <>Account </> : null}\n            {accType === 2 ? <>Unit </> : null}\n            Created Successfully!\n          </ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              // onClick={() => setIsReviewModalOpen(false)}\n              onClick={() => window.location.reload()}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const AccCustErr = () => {\n    return (\n      <>\n        <Modal isOpen={isErrModalOpen} onClose={() => setIsErrModalOpen(false)}>\n          <ModalHeader>Customer Not Selected!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsErrModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const ReqFieldErrModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReqFieldModal}\n          onClose={() => setIsReqFieldModal(false)}\n        >\n          <ModalHeader>Required fields are not filled!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReqFieldModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //ASSET\n  const addForm = () => {\n    return (\n      <div className=\"px-4 py-3 mt-4 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Add Customer</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n        {/* ------------------------Row 1-------------------------- */}\n        <div className=\"flex-row flex space-x-3\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Select Account Type*</span>\n              <Select\n                className=\"mt-1\"\n                onChange={(e) => {\n                  setAccType(parseInt(e.target.value));\n                }}\n              >\n                <option value=\"0\">Customer</option>\n                <option value=\"1\">Account</option>\n                <option value=\"2\">Unit</option>\n              </Select>\n            </Label>\n          </div>\n          {accType === 0 ? (\n            <>\n              <div className=\"flex flex-col w-full\">\n                <Label className=\"w-full\">\n                  <span>Customer Name*</span>\n                  <Input\n                    className=\"mt-1\"\n                    type=\"text\"\n                    value={values.customerName}\n                    onChange={handleChange(\"customerName\")}\n                  />\n                </Label>\n                <HelperText valid={false}>{err.customerName}</HelperText>\n              </div>\n            </>\n          ) : null}\n          {accType === 1 ? (\n            <>\n              <div className=\"flex flex-col w-full\">\n                <Label className=\"w-full\">\n                  <span>Account Name*</span>\n                  <Input\n                    className=\"mt-1\"\n                    type=\"text\"\n                    value={values.accountName}\n                    onChange={handleChange(\"accountName\")}\n                  />\n                </Label>\n                <HelperText valid={false}>{err.accountName}</HelperText>\n              </div>\n            </>\n          ) : null}\n          {accType === 2 ? (\n            <>\n              <div className=\"flex flex-col w-full\">\n                <Label className=\"w-full\">\n                  <span>Unit Name*</span>\n                  <Input\n                    className=\"mt-1\"\n                    type=\"text\"\n                    value={values.unitName}\n                    onChange={handleChange(\"unitName\")}\n                  />\n                </Label>\n              </div>\n            </>\n          ) : null}\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>User Name*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.username}\n                onChange={handleChange(\"username\")}\n              />\n            </Label>\n            <HelperText valid={false}>{err.username}</HelperText>\n          </div>\n          <Label className=\"w-full\">\n            <span>Email*</span>\n            <Input\n              className=\"mt-1\"\n              type=\"email\"\n              placeholder=\"\"\n              value={values.email}\n              onChange={handleChange(\"email\")}\n            />\n          </Label>\n          <HelperText valid={false}>{err.email}</HelperText>\n        </div>\n        {/* ----------------------Row 2 ----------------------------- */}\n        <div className=\"flex-row flex space-x-3 \">\n          <Label className=\"w-full mt-4\">\n            <span>Password*</span>\n            <Input\n              className=\"mt-1\"\n              placeholder=\"\"\n              type=\"password\"\n              value={values.password}\n              onChange={handleChange(\"password\")}\n            />\n          </Label>\n          <HelperText valid={false}>{err.enc_password}</HelperText>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full mt-4\">\n              <span>Confirm password*</span>\n\n              <Input\n                className=\"mt-1\"\n                type=\"password\"\n                value={values.confpassword}\n                onChange={handleConfPassChange(\"confpassword\")}\n              />\n            </Label>\n\n            <HelperText valid={false}>{err.confpassword}</HelperText>\n          </div>\n        </div>\n        {/* ///////////////////////////////////////////////////////// */}\n        <Label className=\"font-bold mt-5 mb-2\">\n          <span>Additional Information</span>\n        </Label>\n        <hr />\n        {/* -------Row - 3 ---------------------- */}\n        <div className=\"flex-row flex space-x-3 mt-3 mb-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>GST Number</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.GSTnumber}\n                onChange={handleChange(\"GSTnumber\")}\n              />\n            </Label>{\" \"}\n            {values.GSTnumber.length != 15 && values.GSTnumber != 0 ? (\n              <>\n                <HelperText valid={false}>\n                  GST number shound be 15 digits\n                </HelperText>\n              </>\n            ) : null}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Contact Person</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.contactPerson}\n                onChange={handleChange(\"contactPerson\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Contact Number</span>\n              <Input\n                className=\"mt-1\"\n                type=\"number\"\n                value={values.contactNo}\n                onChange={handleChange(\"contactNo\")}\n              />\n            </Label>{\" \"}\n            {values.contactNo.length != 10 && values.contactNo != 0 ? (\n              <>\n                <HelperText valid={false}>\n                  Phone number shound be 10 digits\n                </HelperText>\n              </>\n            ) : null}\n          </div>\n          {/* <HelperText valid={false}>{digiterr.contactNo}</HelperText> */}\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Whatsapp Number</span>\n              <Input\n                className=\"mt-1\"\n                type=\"number\"\n                value={values.WhatsappNo}\n                onChange={handleChange(\"WhatsappNo\")}\n              />\n            </Label>\n            {values.WhatsappNo.length != 10 && values.WhatsappNo != 0 ? (\n              <>\n                <HelperText valid={false}>\n                  Phone number shound be 10 digits\n                </HelperText>\n              </>\n            ) : null}\n          </div>\n        </div>\n        <Label className=\"my-2\">\n          <span>Address</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.address}\n            onChange={handleChange(\"address\")}\n          />\n        </Label>{\" \"}\n        {/* -----------------------Row-4 */}\n        <div className=\"flex-row flex space-x-3 my-2\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>District</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.district}\n                onChange={handleChange(\"district\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>State</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.state}\n                onChange={handleChange(\"state\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Location Type</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.locationType}\n                onChange={handleChange(\"locationType\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>PIN code</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.pincode}\n                onChange={handleChange(\"pincode\")}\n              />\n            </Label>{\" \"}\n            {values.pincode.length != 6 && values.pincode != 0 ? (\n              <>\n                <HelperText valid={false}>PIN shound be 6 digits</HelperText>\n              </>\n            ) : null}\n          </div>\n        </div>\n        {/* ///////////////////////////////////////////////////////// */}\n        {accType === 1 ? (\n          <>\n            <Button\n              onClick={() => setIsModalOpen(true)}\n              aria-label=\"Notifications\"\n              aria-haspopup=\"true\"\n              className=\"mt-4 mr-2\"\n            >\n              {customer.customerName === \"\" ? (\n                <>Select Associations</>\n              ) : (\n                <>Customer: {customer.customerName}</>\n              )}\n            </Button>\n          </>\n        ) : null}\n        {accType === 2 ? (\n          <>\n            <Button\n              onClick={() => setIsUModalOpen(true)}\n              aria-label=\"Notifications\"\n              aria-haspopup=\"true\"\n              className=\"mt-4 mr-2\"\n            >\n              {Ucustomer.customerName === \"\" ? (\n                <>Select Associations</>\n              ) : (\n                <div className=\"flex \">\n                  <div>Customer: {Ucustomer.customerName}</div>\n                  <div className=\"ml-2\">Account: {Uaccount.accountName}</div>\n                </div>\n              )}\n            </Button>\n          </>\n        ) : null}\n        <Button\n          onClick={() => {\n            if (accType === 0) submitCustomer();\n            else if (accType === 1) sumbitAccount();\n            else submitUnit();\n          }}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4\"\n        >\n          {\" \"}\n          Create {}\n          {(accType === 0 && <> Customer </>) ||\n            (accType === 1 && <>Account</>) ||\n            (accType == 2 && <>Unit</>)}\n        </Button>\n        {/* <hr className=\"my-8\" />\n        <Label className=\"font-bold\">\n          <span>Additional Information</span>\n        </Label>\n      \n        <hr className=\"my-2\" />\n        // ////////////////////////// . INFO\n        <Label>\n          <span>Account</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.account}\n            onChange={handleChange(\"account\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Unit</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.unit}\n            onChange={handleChange(\"unit\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Address</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.address}\n            onChange={handleChange(\"address\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>District</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.district}\n            onChange={handleChange(\"district\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>state</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.state}\n            onChange={handleChange(\"state\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Location Type</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.locationType}\n            onChange={handleChange(\"locationType\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>PIN code</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.pincode}\n            onChange={handleChange(\"pincode\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>GST Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.GSTnumber}\n            onChange={handleChange(\"GSTnumber\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Person</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactPerson}\n            onChange={handleChange(\"contactPerson\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactNo}\n            onChange={handleChange(\"contactNi\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Whatsapp Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.WhatsappNo}\n            onChange={handleChange(\"WhatsappNo\")}\n          />\n        </Label>\n        <Button\n          //   tag={Link}\n          // to=\"/AdminSignUp\"\n          block\n          className=\"mt-4\"\n          onClick={handleSubmit}\n        >\n          Create account\n        </Button>\n        <hr className=\"my-8\" /> */}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <CustomerCreateModal\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setCustomer={setCustomer}\n        customer={Ucustomer}\n      />\n      <AddUnitModal\n        isModalOpen={isUModalOpen}\n        setIsModalOpen={setIsUModalOpen}\n        setAccount={setUAccount}\n        account={Uaccount}\n        customer={Ucustomer}\n        setCustomer={setUCustomer}\n      />\n      {/* <PageTitle>Add Customer</PageTitle> */}\n      {addForm()}\n\n      {/* {productPicker()} */}\n      {ReviewSubmit()}\n      {AccCustErr()}\n      {ReqFieldErrModal()}\n    </>\n  );\n}\n\nexport default CreateCustomer;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport { API } from \"../../backendapi\";\n\nexport default function CustomerCreateModal({\n  isModalOpen,\n  setIsModalOpen,\n  customer,\n  setCustomer,\n}) {\n  const [customers, setCustomers] = useState([]);\n  // const [accounts, setAccounts] = useState([]);\n  // const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n  const [tempbadgeView, setTempBadgeView] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setIsModalOpen(false);\n    // setTempBadgeView(customer.customerName);\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>Select Customer</ModalHeader>\n        <ModalBody className=\"overflow-y-scroll h-64\">\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n          </Tabs>\n        </ModalBody>\n        <ModalFooter>\n          {/* <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {tempbadgeView}\n          </Badge> */}\n          {/* <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge> */}\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import Axios from \"axios\";\nimport { API } from \"../backendapi\";\nimport Emp from \"../helpers/auth/EmpProfile\";\n\nexport const unitCreate = (newunit) => {\n  return Axios.post(`${API}/unit/${Emp.getId()}/create`, newunit)\n    .then((unit) => {\n      console.log(\"h\", unit.data);\n      return unit.data;\n    })\n    .catch((error) => {\n      console.log(\"ERRRROs\");\n      if (error.response) {\n        console.log(error.response.data);\n        console.log(error.response.status);\n        throw error.response.data.errors;\n      }\n    });\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport { API } from \"../../backendapi\";\n\nexport default function AddUnitModal({\n  isModalOpen,\n  setIsModalOpen,\n\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  // const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select {tabIndex == 0 ? <>Customer</> : <>Account</>}\n        </ModalHeader>\n        <ModalBody className=\"overflow-y-scroll h-64\">\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n          </Tabs>\n        </ModalBody>\n        <ModalFooter>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              // setRefresh(!refresh);\n\n              setAccounts([]);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}