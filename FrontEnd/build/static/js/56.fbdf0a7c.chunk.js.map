{"version":3,"sources":["pages/Attendance/ApplyLeave.js"],"names":["ApplyLeave","useContext","TopBarContext","setTopHeading","topheading","useState","employeeName","employeeId","startdate","enddate","reason","values","setValues","messageModal","setMessageModal","modalMessage","setModalMessage","useEffect","handleChange","name","e","target","value","submitItem","a","console","log","Math","floor","Date","parse","Emp","getName","getId","Axios","url","API","method","data","then","newval","catch","err","isOpen","onClose","className","onClick","type","onChange","aria-label","aria-haspopup"],"mappings":"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","file":"static/js/56.fbdf0a7c.chunk.js","sourcesContent":["import React, { useEffect, useContext, useState, useMemo } from \"react\";\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport { Input, Label, Button, Badge, Select } from \"@windmill/react-ui\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport { API } from \"../../backendapi\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\n\nexport default function ApplyLeave() {\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n  const [values, setValues] = useState({\n    employeeName: \"\",\n    employeeId: \"\",\n    startdate: \"\",\n    enddate: \"item\",\n    reason: \"\",\n  });\n\n  const [messageModal, setMessageModal] = useState(false);\n  const [modalMessage, setModalMessage] = useState(\"\");\n\n  useEffect(() => {\n    setTopHeading(\"Apply Leave\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const submitItem = async () => {\n    if (values.startdate === \"\") {\n      setModalMessage(\"Start Date necessary\");\n      setMessageModal(true);\n      console.log(\"missing inputs\");\n      return;\n    }\n    if (values.enddate === \"\") {\n      setModalMessage(\"End Date necessary\");\n      setMessageModal(true);\n      console.log(\"missing inputs\");\n      return;\n    }\n\n    if (\n      Math.floor(\n        (Date.parse(values.enddate) - Date.parse(values.startdate)) / 86400000\n      ) < 0\n    ) {\n      setModalMessage(\"Invalid Date\");\n      setMessageModal(true);\n      console.log(\"invalid inputs\");\n      return;\n    }\n\n    if (values.reason === \"\") {\n      setModalMessage(\"Please Give Reason\");\n      setMessageModal(true);\n      console.log(\"missing inputs\");\n      return;\n    }\n\n    values.employeeName = Emp.getName();\n    values.employeeId = Emp.getId();\n    console.log(values);\n\n    await Axios({\n      url: `${API}/leave/${Emp.getId()}/create`,\n      method: \"POST\",\n      data: values,\n    })\n      .then((data) => {\n        console.log(\"Added\", data);\n        setModalMessage(\"Leave Application Submitted.\");\n        setMessageModal(true);\n\n        let newval = values;\n        newval.startdate = \"\";\n        newval.enddate = \"\";\n        newval.reason = \"\";\n\n        setValues(newval);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n\n  const messageModalComponent = () => {\n    return (\n      <>\n        <Modal isOpen={messageModal} onClose={() => setMessageModal(false)}>\n          <ModalHeader>{modalMessage}</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setMessageModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      {messageModalComponent()}\n      <div className=\"px-4 py-3 mt-4 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Apply for Leave</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n        {/* ------------------------Row 1-------------------------- */}\n        <div className=\"flex-row flex space-x-3 w-full\">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Start Date*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"date\"\n                value={values.startdate}\n                onChange={handleChange(\"startdate\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.invnumber}</HelperText> */}\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>End Date*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"date\"\n                value={values.enddate}\n                onChange={handleChange(\"enddate\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.invnumber}</HelperText> */}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <div>Number of Days</div>\n              <div className=\"text-xl font-semibold my-2 p-2 mx-5 text-black dark:text-white\">\n                {values.startdate != \"\" && values.enddate != \"\" ? (\n                  Math.floor(\n                    (Date.parse(values.enddate) -\n                      Date.parse(values.startdate)) /\n                      86400000\n                  ) >= 0 ? (\n                    Math.floor(\n                      (Date.parse(values.enddate) -\n                        Date.parse(values.startdate)) /\n                        86400000\n                    ) + 1\n                  ) : (\n                    <>Invalid Dates</>\n                  )\n                ) : null}\n              </div>\n            </Label>\n            {/* <HelperText valid={false}>{err.invnumber}</HelperText> */}\n          </div>\n        </div>\n        {/* ----------------------Row 2 ----------------------------- */}\n        <div className=\"flex-row flex space-x-3 my-2\">\n          <div className=\"flex flex-col w-full \">\n            <Label className=\"w-full\">\n              <span>Reason</span>\n              <Input\n                className=\"mt-1  \"\n                type=\"text-area\"\n                value={values.reason}\n                onChange={handleChange(\"reason\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.invnumber}</HelperText> */}\n          </div>\n        </div>\n        {/* ///////////////////////////////////////////////////////// */}\n\n        <Button\n          onClick={() => {\n            submitItem();\n          }}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4\"\n        >\n          {\" \"}\n          Submit Application\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}