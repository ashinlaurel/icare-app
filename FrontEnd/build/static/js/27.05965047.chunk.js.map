{"version":3,"sources":["pages/LST/LSTHistory.js","../../src/FileSaver.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Modal/AssetFilters/CustomerSelection.js"],"names":["LSTHistory","useState","activerowid","setActiveRowId","isDeleteModalOpen","setIsDeleteModalOpen","deleteId","setDeleteId","deleteNum","setDeleteNum","isDownloadModalOpen","setisDownloadModalOpen","downloadLST","downloadNum","useContext","TopBarContext","setTopHeading","topheading","page","setPage","CMRRItems","data","setData","refresh","setRefresh","status","setstatus","location","setLocation","ToLocation","setToLocation","condition","LSTtype","setLSTtype","selectedprod","searchquery","setSearchQuery","totalResults","setTotalResults","activeRowID","setActiveRowID","useEffect","a","console","log","payload","pages","limit","filters","from","to","axios","url","API","Emp","getId","method","response","out","total","createAndDownloadPdf","id","LSTno","responseType","pdfBlob","Blob","type","saveAs","isOpen","onClose","className","onClick","invs","invItems","map","item","_id","update","temp","filter","x","value","DocketType","onChange","e","target","class","CourierNumber","disabled","selected","xmlns","viewBox","d","onSubmit","preventDefault","placeholder","user","i","key","LSTNo","vendorId","vendorName","moment","date","format","length","layout","aria-label","size","aria-hidden","items","Customer","name","sno","invnumber","InvTable","resultsPerPage","label","p","MouseEvent","document","window","self","global","test","navigator","HTMLAnchorElement","b","setTimeout","f","autoBom","open","module","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","unsupportedIterableToArray","TypeError","CustomerSelection","isModalOpen","setIsModalOpen","unit","setUnit","account","setAccount","customer","setCustomer","customers","setCustomers","accounts","setAccounts","units","setUnits","tabIndex","setTabIndex","search","setSearch","handleChange","handleSubmit","role","pickCustomer","customerName","accountName","unitName","Axios","post","customerId","accs","pickAccount","accountId","u","pickUnit","selectedIndex","onSelect","ind"],"mappings":"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","file":"static/js/27.05965047.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport { EditIcon, TrashIcon, DropdownIcon } from \"../../icons\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  Button,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport { API } from \"../../backendapi\";\nimport CustomerSelection from \"../../components/Modal/AssetFilters/CustomerSelection\";\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\nimport { Link } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n// import PrintLST from \"./PrintLST\";\n\nfunction LSTHistory() {\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [deleteId, setDeleteId] = useState(0);\n  const [deleteNum, setDeleteNum] = useState(-1);\n\n  const [isDownloadModalOpen, setisDownloadModalOpen] = useState(false)\n  const [downloadLST, setDownloadLST] = useState({});\n  const [downloadNum, setDownloadNum] = useState(0);\n\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const [floatbox, setFloatBox] = useState(false);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([{CMRRItems:[]}]);\n  // dropdown and modals\n\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [status, setstatus] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [ToLocation, setToLocation] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n  const [LSTtype, setLSTtype] = useState(\"Normal\");\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  const [activeRowID, setActiveRowID] = useState(-1);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"LST History\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          // type: type,\n          from: location,\n          to: ToLocation,\n          status: status,\n          LSTtype:LSTtype,\n          // searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/lst/${Emp.getId()}/getall`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, location, ToLocation, condition, status, refresh,LSTtype]);\n\n  console.log(selectedprod);\n  // DElete Modal\n\n  const DeleteModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isDeleteModalOpen}\n          onClose={() => setIsDeleteModalOpen(false)}\n        >\n          <ModalHeader>Are you sure you want to delete!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                let invs = data[deleteNum].invItems;\n                console.log(invs);\n                invs.map(async (item) => {\n                  const payload = {\n                    id: item._id,\n                    update: {\n                      location: data[deleteNum].from,\n                    },\n                  };\n                  console.log(\"PAYLOAD\", payload);\n                  try {\n                    await axios({\n                      url: `${API}/inventory/${Emp.getId()}/invupdate`,\n                      method: \"POST\",\n                      data: payload,\n                    });\n                    // setIsReviewModalOpen(true);\n                    console.log(\"Done\");\n                  } catch (error) {\n                    console.log(error);\n                    throw error;\n                  }\n                });\n                try {\n                  let response = await axios({\n                    url: `${API}/lst/${Emp.getId()}/delete`,\n                    method: \"POST\",\n                    data: { id: deleteId },\n                  });\n                  console.log(response.data);\n                  let temp = data.filter((x) => x._id != deleteId);\n                  setData(temp);\n                  setIsDeleteModalOpen(false);\n\n                  // setData(response.data);\n                } catch (error) {\n                  throw error;\n                }\n              }}\n            >\n              Confirm Delete\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const DownloadModal = () => {\n    console.log(downloadLST);\n    return (\n      <>\n        <Modal\n          isOpen={isDownloadModalOpen}\n          onClose={() => setisDownloadModalOpen(false)}\n        >\n          <ModalHeader>Download LST</ModalHeader>\n          <ModalBody>\n\n\n\n       <div className=\"flex flex-row\">\n        <div className=\" my-2 ml-5 mr-2 w-full\">Docket Type:</div>\n                <input\n                  value={data[downloadNum].DocketType}\n                  onChange={(e) =>{\n                    let temp = [...data];\n                    temp[downloadNum].DocketType=e.target.value\n                    // console.log( temp[downloadNum].DocketType)\n                    setData(temp);\n                  } }\n                  \n                  class=\"w-full mr-5 shadow-md z-20 appearance-none rounded border border-gray-400 border-b block py-1  bg-white text-sm  text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n            </div>\n\n            <div className=\"flex flex-row my-2\">\n        <div className=\"my-2 ml-5 mr-2 w-full\">Courier Number:</div>\n                <input\n                  value={data[downloadNum].CourierNumber}\n                  onChange={(e) =>{\n                    let temp = [...data];\n                    temp[downloadNum].CourierNumber=e.target.value\n                    // console.log( temp[downloadNum].CourierNumber)\n                    setData(temp);\n                  } }\n                  \n                  class=\"w-full mr-5  shadow-md z-20 appearance-none rounded border border-gray-400 border-b block py-1  bg-white text-sm  text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n            </div>\n\n\n\n\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {}}\n               \n            >\n              Download\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  // PDF Download Functions\n\n  const createAndDownloadPdf = async (id, LSTno) => {\n    let payload = {\n      id: id,\n    };\n    let response = await axios({\n      url: `${API}/lst/${Emp.getId()}/downloadpdf`,\n      method: \"POST\",\n      data: payload,\n      responseType: \"blob\",\n    });\n\n    const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\n\n    saveAs(pdfBlob, `LST_${LSTno}.pdf`);\n  };\n\n  const InvTable = (items,Customer, LSTtype, CMRRItems) => {\n    return (\n      <div className=\" bg-gray-200 dark:bg-gray-700 p-3\">\n     {(LSTtype == \"Customer\") ?(<div>Customer:{Customer}</div>):null}\n        <div className=\"mb- mt-4\">\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n          <TableContainer className=\"mt-4\">\n            <Table>\n              <TableHeader>\n                <tr>\n                  <TableCell>Type</TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Serial Number</TableCell>\n                  <TableCell>Location</TableCell>\n                  <TableCell>Inv Number</TableCell>\n                  <TableCell>Condition</TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {(LSTtype == \"Normal\"||LSTtype == \"Customer\") ? (\n                  <>\n                    {items.map((user, i) => (\n                      <TableRow\n                        className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                          activerowid == user._id\n                            ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                            : \"white\"\n                        } `}\n                        key={i}\n                        onClick={() => {\n                          setActiveRowId(user._id);\n                          // console.log(\"the id is \" + user._id);\n                          // setSelectedProd(user);\n                          // setAssetDetails(user);\n                          // console.log(user.product.keyboard[0].keyboardname);\n                        }}\n                      >\n                        <TableCell className=\"w-8\">\n                          <div className=\"flex items-center text-sm \">\n                            {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                            <div>\n                              <p className=\"font-semibold\">{user.type}</p>\n                              {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p> */}\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.name}</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">{user.sno}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.location}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.invnumber}</span>\n                        </TableCell>\n                        <TableCell>\n                          <Badge\n                            type={\n                              user.condition == \"Good\" ? \"primary\" : \"danger\"\n                            }\n                          >\n                            {user.condition}\n                          </Badge>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </>\n                ) : (\n                  <>\n                    {CMRRItems.map((user, i) => (\n                      <TableRow\n                        className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                          activerowid == user._id\n                            ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                            : \"white\"\n                        } `}\n                        key={i}\n                        onClick={() => {\n                          setActiveRowId(user._id);\n                          // console.log(\"the id is \" + user._id);\n                          // setSelectedProd(user);\n                          // setAssetDetails(user);\n                          // console.log(user.product.keyboard[0].keyboardname);\n                        }}\n                      >\n                        <TableCell className=\"w-8\">\n                          <div className=\"flex items-center text-sm \">\n                            {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                            <div>\n                              <p className=\"font-semibold\">{user.type}</p>\n                              {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p> */}\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.name}</span>\n                        </TableCell>\n\n                        <TableCell>\n                          <span className=\"text-sm\">{user.sno}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.location}</span>\n                        </TableCell>\n                        <TableCell>\n                          <span className=\"text-sm\">{user.invnumber}</span>\n                        </TableCell>\n                        <TableCell>\n                          <Badge\n                            type={\n                              user.condition == \"Good\" ? \"primary\" : \"danger\"\n                            }\n                          >\n                            {user.condition}\n                          </Badge>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n        </div>\n\n        {/* ------------------------------------Bottom Bar---------------------------------- */}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {DeleteModal()}{DownloadModal()}\n      <div className=\"mb-64 mt-4\">\n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-2 \">\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={status}\n                onChange={(e) => {\n                  setstatus(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Status\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"In Transit\">In Transit</option>\n                <option value=\"Received\">Received</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={LSTtype}\n                onChange={(e) => {\n                  setLSTtype(e.target.value);\n                }}\n              >\n                \n                <option value=\"\" selected>LST type</option>\n                <option value=\"Normal\" >Normal</option>\n                <option value=\"CMRR\">CMRR</option>\n                <option value=\"Customer\">Customer</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* -----------------------------------------Location ----------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={location}\n                onChange={(e) => {\n                  setLocation(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  From Location\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* -----------------------------------------Location ----------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={ToLocation}\n                onChange={(e) => {\n                  setToLocation(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  To Location\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n                <option value=\"Vendor\">Vendor</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* ---------------------------Condition Drop Down-------------------------------------- */}\n            {/* <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={condition}\n                onChange={(e) => {\n                  setCondition(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Condition\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Good\">Good</option>\n                <option value=\"Bad\">Bad</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div> */}\n\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search LST Number\"\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr className=\"flex flex-row justify-between\">\n                <TableCell>No</TableCell>\n                <TableCell>From</TableCell>\n                <TableCell>To</TableCell>\n                <TableCell>\n                  <span className=\"ml-10\">Date</span>{\" \"}\n                </TableCell>\n                <TableCell>\n                  <span className=\"ml-2 mr-2\">Num</span>{\" \"}\n                </TableCell>\n                {/* <TableCell>Status</TableCell> */}\n\n                <TableCell> Report</TableCell>\n                <TableCell> Delete</TableCell>\n                <TableCell>\n                  <span\n                    className=\"cursor-pointer\"\n                    onClick={() => setActiveRowID(-1)}\n                  >\n                    Items\n                  </span>\n                </TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <div className=\"flex flex-col justify-around\">\n                  <TableRow\n                    className={`hover:shadow-lg dark:hover:bg-gray-600 flex flex-row justify-between  ${\n                      activerowid == user._id\n                        ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                        : \"white\"\n                    } `}\n                    key={i}\n                    onClick={() => {\n                      setActiveRowId(i);\n                      // console.log(\"the id is \" + user._id);\n                      // setSelectedProd(user);\n                      // setAssetDetails(user);\n                      // console.log(user.product.keyboard[0].keyboardname);\n                    }}\n                  >\n                    <TableCell className=\"w-8\">\n                      <div className=\"flex items-center text-sm \">\n                        <div>\n                          <p className=\"font-semibold\">{user.LSTNo}</p>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell className=\"\">\n                      <span className=\" \">{user.from}</span>\n                    </TableCell>\n\n                    <TableCell className=\"  \">\n                      <span className=\"  \">\n                        {user.vendorId ? user.vendorName : user.to}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">\n                        {\" \"}\n                        {moment(user.date).format(\"DD/MM/YYYY\")}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{(user.LSTtype == \"Normal\"||user.LSTtype == \"Customer\")?user.invItems.length:user.CMRRItems.length}</span>\n                    </TableCell>\n                    {/* <TableCell>\n                      <span className=\"text-sm\">{user.docketNo}</span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.courierName}</span>\n                    </TableCell> */}\n                    {/* <TableCell>\n                    <Badge>\n                      condition\n                    </Badge>\n                  </TableCell> */}\n                    <TableCell className=\"text-center \">\n                      <Button\n                        layout=\"outline\"\n                        aria-label=\"DropDown\"\n                        onClick={() => {\n                          console.log(\"dwlod\");\n                          createAndDownloadPdf(user._id, user.LSTNo);\n                          // setDownloadLST(user);\n                          // setisDownloadModalOpen(true);\n                          // setDownloadNum(i);\n                        }}\n                        className=\"rounded-lg m-1\"\n                      >\n                        Download\n                      </Button>\n                    </TableCell>\n\n                    <TableCell className=\"text-center \">\n                      <Button\n                        layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"Delete\"\n                        onClick={async () => {\n                          console.log(\"delete LST\");\n                          setIsDeleteModalOpen(true);\n                          setDeleteId(user._id);\n                          setDeleteNum(i);\n                        }}\n                      >\n                        <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                    </TableCell>\n\n                    <TableCell className=\"text-center \">\n                      <Button\n                        // layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"DropDown\"\n                        onClick={() => {\n                          console.log(activerowid);\n                          // if(activerowid==i){\n\n                          // setActiveRowID(-1);\n                          // }\n                          // else\n                          setActiveRowID(i);\n                        }}\n                        className=\"rounded-lg m-1\"\n                      >\n                        <DropdownIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n\n                  {activeRowID == i\n                    ? InvTable(\n                        user.invItems,\n                       user.Customer,\n                        user.LSTtype,\n                        user.CMRRItems\n                      )\n                    : null}\n                </div>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n}\n\nexport default LSTHistory;\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../../backendapi\";\n\nexport default function CustomerSelection({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n  refresh,\n  setRefresh,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      //   setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      //   setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody>\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              setRefresh(!refresh);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}