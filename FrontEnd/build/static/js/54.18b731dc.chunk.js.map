{"version":3,"sources":["pages/Calls/ViewCalls.js"],"names":["ViewCalls","useState","isSetStatusModal","setisSetStatusModal","isReviewModalOpen","setIsReviewModalOpen","useContext","BottomBarContext","setBBarOpen","bbaropen","setAssetDetails","assetdetails","activerowid","setActiveRowId","TopBarContext","setTopHeading","topheading","page","setPage","data","setData","isOpen","setIsOpen","isOpenTwo","setIsOpenTwo","isModalOpen","setIsModalOpen","refresh","setRefresh","disabler","setDisabler","Business","setBusiness","product","setProduct","_id","unitName","unit","customerName","customer","accountName","account","enggName","engineer","selectedprod","setSelectedProd","searchtype","setSearchType","searchlabel","setSearchLabel","searchquery","setSearchQuery","totalResults","setTotalResults","SetStatusModal","onClose","className","onClick","a","console","log","payload","id","update","employeeId","employeeName","callStatus","axios","url","API","Emp","getId","method","temp","filter","c","useEffect","pages","limit","filters","business","producttype","unitId","customerId","accountId","response","total","out","ReviewSubmit","class","xmlns","viewBox","d","value","onChange","e","target","disabled","selected","aria-label","aria-haspopup","onSubmit","preventDefault","placeholder","map","call","i","key","assetId","callNo","moment","date","format","phone","aria-hidden","layout","to","resultsPerPage","label","p"],"mappings":"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","file":"static/js/54.18b731dc.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport {\n  ChatIcon,\n  CartIcon,\n  MoneyIcon,\n  PeopleIcon,\n  ButtonsIcon,\n  HeartIcon,\n  EditIcon,\n  TrashIcon,\n  TickIcon\n} from \"../../icons\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  Button,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Label,\n  Select,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport { API } from \"../../backendapi\";\n// import EngineerListModal from \"../../components/Modal/EngineerListModal\";\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\nimport { Link } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport { isAutheticated } from \"../../helpers/auth\";\n\nfunction ViewCalls() {\n  // Bottom bar stuff\n  // const [bbaropen, setBBarOpen] = useContext(BottomBarContext);\n  // const [assetdetails, setAssetDetails] = useContext(BottomBarContext);\n  const [isSetStatusModal, setisSetStatusModal] = useState(false);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n\n  const { bbaropen, setBBarOpen, setAssetDetails, assetdetails } = useContext(\n    BottomBarContext\n  );\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const [floatbox, setFloatBox] = useState(false);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  // dropdown and modals\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenTwo, setIsOpenTwo] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [Business, setBusiness] = useState(\"\");\n  const [product, setProduct] = useState(\"\");\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n\n  /////// engineer\n  const [engineer, setEngineer] = useState({ _id: \"\", enggName: \"\" });\n  const [isEnggModalOpen, setIsEnggModalOpen] = useState(false);\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  const SetStatusModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isSetStatusModal}\n          onClose={() => setisSetStatusModal(false)}\n        >\n          <ModalHeader>Set Call Status</ModalHeader>\n          <ModalBody>\n          <div className=\"flex-col flex\">\n          <div className=\"font-xl dark:text-white\">Current Status:</div>\n          <Button className=\"font-xl\">Set Status</Button>\n          <Button className=\"font-xl my-2 mx-10 inline\">Pending for Allocation</Button>\n          <Button className=\"font-xl my-2 mx-10 inline\">Pending for Allocation</Button>\n          <Button className=\"font-xl my-2 mx-10 inline\">Pending for Allocation</Button>\n          <Button className=\"font-xl my-2 mx-10 inline\">Pending for Allocation</Button>\n          \n\n          \n          </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                console.log(\"SELECTED\" ,selectedprod);\n                let payload={\n                  id:selectedprod._id,\n                  update:{\n                    employeeId:engineer._id,\n                    employeeName:engineer.enggName,\n                    callStatus:1\n                  }\n                }\n                try {\n                  let response = await axios({\n                    url: `${API}/call/${Emp.getId()}/ViewCallsg`,\n                    method: \"POST\",\n                    data: payload,\n                  });\n                  let temp=data;\n                  console.log(temp)\n                  temp=temp.filter(c=>{\n                    if(c._id===selectedprod._id){\n                      c.callStatus=1;\n                      c.employeeName=engineer.enggName;\n                      c.employeeId=engineer._id;\n                      return c;\n                    }\n                    setData(temp)\n                  })\n                  // console.log(response.data);\n                  setisSetStatusModal(false);\n                } catch (error) {\n                  throw error;\n                }\n              }}\n            >\n              Confirm Assignment\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n  // -------Enabling Bottom Bar----\n  useEffect(() => {\n    setBBarOpen(1);\n    return () => {\n      setBBarOpen(0);\n      setAssetDetails({});\n    };\n  }, []);\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"View Calls\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      // console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          business: Business,\n          producttype: product,\n          customer: customer,\n          account: account,\n          unitId: unit._id,\n          customerId: customer._id,\n          accountId: account._id,\n          searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/call/${Emp.getId()}/getall`,\n          method: \"POST\",\n          data: payload,\n        });\n        // console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, Business, product, refresh]);\n\n  // console.log(selectedprod);\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>\n            Updated Successfully!\n          </ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReviewModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  return (\n    <>\n      {/* ---------------------Customer Selection Modal----------------------------------------- */}\n      {/* <CustomerSelection\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setUnit={setUnit}\n        unit={unit}\n        customer={customer}\n        setCustomer={setCustomer}\n        account={account}\n        setAccount={setAccount}\n        refresh={refresh}\n        setRefresh={setRefresh}\n      /> */}\n      <SetStatusModal/>\n      <ReviewSubmit/>\n  \n      {/* ---------------------Customer Selection Modal----------------------------------------- */}\n\n      {/* {floatbox ? <AssetFloat /> : null} */}\n      <div className=\"mb-64 mt-4\">\n    \n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-6 \">\n            <div class=\"relative  \">\n              <button\n                class=\" shadow-md appearance-none h-full rounded border block w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                onClick={() => {\n                  setIsModalOpen(!isModalOpen);\n                }}\n                // value={sortBy}\n                // onChange={onSortToggle}\n              >\n                Pick Customer\n              </button>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            <div class=\"relative mx-5 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={Business}\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Business Type\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"AMC\">AMC</option>\n                <option value=\"WTY\">Warranty</option>\n                <option value=\"NOS\">NOS</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* ---------------------------Product Drop Down-------------------------------------- */}\n            <div className=\"relative z-40 \">\n              <button\n                onClick={() => {\n                  setIsOpen(!isOpen);\n                }}\n                className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                aria-label=\"Notifications\"\n                aria-haspopup=\"true\"\n              >\n                {product ? product : \"Pick Product\"}\n              </button>\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n              <Dropdown isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"\");\n                  }}\n                >\n                  <span>All</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Console\");\n                  }}\n                >\n                  <span>Console</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"DMP\");\n                  }}\n                >\n                  <span>DMP</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Inkjet\");\n                  }}\n                >\n                  <span>Inkjet</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"KVM\");\n                  }}\n                >\n                  <span>KVM</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Laptop\");\n                  }}\n                >\n                  <span>Laptop</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Laser\");\n                  }}\n                >\n                  <span>Laser</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"LMP\");\n                  }}\n                >\n                  <span>LMP</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Module\");\n                  }}\n                >\n                  <span>Module</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Router\");\n                  }}\n                >\n                  <span>Router</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Scanner\");\n                  }}\n                >\n                  <span>Scanner</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Server\");\n                  }}\n                >\n                  <span>Server</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Desktop\");\n                  }}\n                >\n                  <span>Desktop</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Storage\");\n                  }}\n                >\n                  <span>Storage</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Switch\");\n                  }}\n                >\n                  <span>Switch</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"UPS\");\n                  }}\n                >\n                  <span>UPS</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpen(false);\n                    setProduct(\"Others\");\n                  }}\n                >\n                  <span>Others</span>\n                </DropdownItem>\n              </Dropdown>\n            </div>\n\n            {/* -------------------------------Search Type--------------------------------------- */}\n            <div className=\"relative \">\n              <button\n                onClick={() => {\n                  setIsOpenTwo(!isOpenTwo);\n                }}\n                className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                aria-label=\"Notifications\"\n                aria-haspopup=\"true\"\n              >\n                {searchtype ? searchlabel : \"Pick Search Type\"}\n              </button>\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n              <Dropdown isOpen={isOpenTwo} onClose={() => setIsOpenTwo(false)}>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"\");\n                    setSearchLabel(\"\");\n                    setDisabler(true);\n                    setSearchQuery(\"\");\n                    setRefresh(!refresh);\n                  }}\n                >\n                  <span>All</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"kbdsno\");\n                    setSearchLabel(\"Keyboard Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Keyboard Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"mousesno\");\n                    setSearchLabel(\"Mouse Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Mouse Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"motherboardsno\");\n                    setSearchLabel(\"Motherboard Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Motherboard Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"monitorsno\");\n                    setSearchLabel(\"Monitor Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Monitor Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"hddsno\");\n                    setSearchLabel(\"HDD Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>HDD Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"cpusno\");\n                    setSearchLabel(\"CPU Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>CPU Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"ramsno\");\n                    setSearchLabel(\"Ram Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>RAM Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"smpssno\");\n                    setSearchLabel(\"SMPS Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>SMPS Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"fansno\");\n                    setSearchLabel(\"Fan Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Fan Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"opticaldrivesno\");\n                    setSearchLabel(\"Optical Drive Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Optical Drive Serial</span>\n                </DropdownItem>\n              </Dropdown>\n            </div>\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search\"\n                  disabled={disabler}\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n          </div>\n          {/* ----------------------------------------Row 2 -------------------------------------------------------------------- */}\n          \n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Call No</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Unit Name</TableCell>\n                <TableCell>Phone</TableCell>\n                <TableCell>Call Status</TableCell>\n                <TableCell>Assigned Employee</TableCell>\n                <TableCell>Update</TableCell>\n                \n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((call, i) => (\n                <TableRow\n                  className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                    activerowid == call._id\n                      ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                      : \"white\"\n                  } `}\n                  key={i}\n                  onClick={() => {\n                    setActiveRowId(call._id);\n                    // console.log(\"the id is \" + call._id);\n                    setSelectedProd(call);\n                    console.log(\"SELECTD\",call)\n                    setAssetDetails(call.assetId);\n                    // console.log(call.product.keyboard[0].kbdname);\n                  }}\n                >\n                  <TableCell className=\"w-8\">\n                    <div className=\"flex items-center text-sm \">\n                      <div>\n                        <p className=\"font-semibold\">{call.callNo}</p>\n                        \n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{moment(call.date).format(\"DD/MM/YYYY\")}</span>\n                  </TableCell>\n                  <TableCell>\n                  <span className=\"text-sm\">{call.unitName}</span> \n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{call.phone}</span>\n                  </TableCell>\n                  <TableCell>\n                  <div className=\"flex \">\n                  {/* <Label className=\"w-full\"> */}\n                  <Select\n                    className=\"inline\"\n                    onChange={(e) => {\n                      // setAccType(parseInt(e.target.value));\n                      let temp=data;\n                      console.log(temp)\n                      temp=temp.filter(c=>{\n                        if(c._id===call._id){\n                          c.callStatus=e.target.value;\n                          return c;\n                        }else return c;\n                      })\n                        setData(temp);\n                    }}\n                    value={call.callStatus}\n                  >\n                    <option value=\"0\">Not Allocated</option>\n                    <option value=\"1\">Pending for Percall Approval</option>\n                   <option value=\"2\"> Pending for Response</option>\n                   <option value=\"3\"> Pending for OEM Response</option>\n                   <option value=\"4\"> Pending for 2nd Response</option>\n                   <option value=\"5\"> Pending for Customer</option>\n                   <option value=\"6\"> Under Observation</option>\n                   <option value=\"7\"> Pending for Others</option>\n                   <option value=\"8\"> Pending for Spare</option>\n                   <option value=\"9\"> Spare in Transit</option>\n                   <option value=\"10\"> Cancelled Calls</option>\n                   <option value=\"11\"> Closed Calls</option>\n\n                  </Select>\n                {/* </Label> */}\n                <div className=\"p-1 m-2 dark:hover:bg-green-700 hover:bg-green-200 rounded-full text-green-400\"\n                    onClick={async ()=>{\n                      let payload={\n                        id:call._id,\n                        update:{\n                          callStatus:call.callStatus\n                        }\n                      }\n                      try {\n                          let response = await axios({\n                            url: `${API}/call/${Emp.getId()}/assignEngg`,\n                            method: \"POST\",\n                            data: payload,\n                          });\n                          console.log(\"updated\")\n                          setIsReviewModalOpen(true);\n                          \n                        } catch (error) {\n                          throw error;\n                        }\n                    }}\n                >\n                <TickIcon className=\"w-5 h-5 fill-current\" aria-hidden=\"true\" />\n                </div>\n                </div>\n                  \n                  </TableCell>\n                  <TableCell>\n                  {call.employeeId?(<>\n                    \n                    {call.employeeName}\n                    {/* <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\" onClick={()=>setIsEnggModalOpen(true)} className=\"rounded-full mx-2 \">\n                       \n                          <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                        \n                      </Button> */}\n                    \n                  </>):<>\n                    {/* <Button onClick={()=>setIsEnggModalOpen(true)}> */}\n                      Not Assigned\n                      {/* </Button> */}\n                      </> }\n                      \n                  </TableCell>\n                  <TableCell>\n                      <Button layout=\"outline\"  onClick={()=>{}} className=\" \">\n                      <Link\n                          key={call._id}\n                          to={`/app/call/updatecall/${call._id}/${call.assetId._id}`}\n                        >\n                          Update\n                        </Link>\n                          \n                        \n                      </Button>\n                  </TableCell>\n                  \n              \n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n}\n\nexport default ViewCalls;\n"],"sourceRoot":""}