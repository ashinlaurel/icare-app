{"version":3,"sources":["pages/Employee/ViewSalary.js"],"names":["ViewSalary","id","useParams","useHistory","useState","activerowid","setActiveRowId","deleteId","setDeleteId","isDeleteModalOpen","setIsDeleteModalOpen","useContext","TopBarContext","setTopHeading","topheading","page","setPage","data","setData","totalResults","setTotalResults","useEffect","a","console","log","payload","pages","limit","filters","queryID","axios","url","API","Emp","getId","method","response","total","out","className","map","user","i","_id","key","onClick","moment","date","format","employeeName","employeeID","EligibleDays","BplusDA","Deduction","TakeHomeSalary","GrossSalary","CTC","layout","size","aria-label","aria-hidden","resultsPerPage","label","onChange","p","isOpen","onClose","temp","filter","x"],"mappings":"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","file":"static/js/62.bb2196c1.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport { API } from \"../../backendapi\";\nimport { Card, CardBody } from \"@windmill/react-ui\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport { Input, HelperText, Label, Select } from \"@windmill/react-ui\";\nimport { Link } from \"react-router-dom\";\n\nimport { EditIcon, TrashIcon } from \"../../icons\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  Button,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n/////////////----------------->>>>>> bug <<<<<------------customerList refresh--------------------------\n\nfunction ViewSalary() {\n  const { id } = useParams();\n  let history = useHistory();\n  const [activerowid, setActiveRowId] = useState(0);\n  const [deleteId, setDeleteId] = useState(0);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Salary History\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          queryID: id,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/admin/${Emp.getId()}/getAllSalary`,\n          method: \"POST\",\n          data: payload,\n        });\n\n        // console.log(response);\n        // console.log(response.data.out);\n        // console.log(response.data.total);\n        setTotalResults(response.data.total);\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page]);\n\n  const DeleteModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isDeleteModalOpen}\n          onClose={() => setIsDeleteModalOpen(false)}\n        >\n          <ModalHeader>Are you sure you want to delete!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                try {\n                  let response = await axios({\n                    url: `${API}/admin/${Emp.getId()}/deleteSalary`,\n                    method: \"POST\",\n                    data: { id: deleteId },\n                  });\n                  console.log(response.data);\n                  let temp = data.filter((x) => x._id != deleteId);\n                  setData(temp);\n                  setIsDeleteModalOpen(false);\n\n                  // setData(response.data);\n                } catch (error) {\n                  throw error;\n                }\n              }}\n            >\n              Confirm Delete\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n  return (\n    <>\n      <div>\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Date</TableCell>\n                <TableCell>Employee</TableCell>\n                <TableCell>Employee ID</TableCell>\n                <TableCell>Eligible Days</TableCell>\n                <TableCell>Eligible B + DA</TableCell>\n                <TableCell>Deductions</TableCell>\n                <TableCell>Take Home Salary</TableCell>\n                <TableCell>Gross Salary</TableCell>\n                <TableCell>CTC</TableCell>\n                <TableCell>Delete</TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <TableRow\n                  className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                    activerowid == user._id\n                      ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                      : \"white\"\n                  } `}\n                  key={i}\n                  onClick={() => {\n                    // setBBarOpen(1);\n                    setActiveRowId(user._id);\n                    // console.log(\"the id is \" + user._id);\n                    // setSelectedProd(user);\n                    // setAssetDetails(user);\n                    // console.log(user.product.keyboard[0].keyboardname);\n                  }}\n                >\n                  <TableCell className=\"w-8\">\n                    <div className=\"flex items-center text-sm \">\n                      {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                      <div>\n                        <p className=\"font-semibold\">\n                          {moment(user.date).format(\"DD/MM/YYYY\")}\n                        </p>\n                        {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p> */}\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.employeeName}</span>\n                  </TableCell>\n                  {/* <TableCell>\n                    <Badge\n                      type={user.business == \"AMC\" ? \"primary\" : \"success\"}\n                    >\n                      {user.business}\n                    </Badge>\n                  </TableCell> */}\n                  <TableCell>\n                    <span className=\"text-sm\">{user.employeeID}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.EligibleDays}</span>\n                  </TableCell>\n\n                  <TableCell>\n                    <span className=\"text-sm\">{user.BplusDA}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.Deduction}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.TakeHomeSalary}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.GrossSalary}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.CTC}</span>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex items-center space-x-4\">\n                      {/* <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                        <Link\n                          key={user._id}\n                          to={`/app/unit/update/${user._id}`}\n                        >\n                          <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                        </Link>{\" \"}\n                      </Button> */}\n\n                      <Button\n                        layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"Delete\"\n                        onClick={async () => {\n                          console.log(\"delete Asset\");\n                          setIsDeleteModalOpen(true);\n                          setDeleteId(user._id);\n                        }}\n                      >\n                        <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n      </div>\n      {DeleteModal()}\n    </>\n  );\n}\n\nexport default ViewSalary;\n"],"sourceRoot":""}