{"version":3,"sources":["pages/Employee/EmployeeDetails.js","../node_modules/classnames/index.js","components/RoundIcon.js","components/Cards/InfoCard.js"],"names":["EmployeeDetails","history","useHistory","id","useParams","useState","isDeleteModalOpen","setIsDeleteModalOpen","PasswordModalOpen","setPasswordModalOpen","isReviewModalOpen","setIsReviewModalOpen","newpass","setNewpass","newpassconf","setNewpassconf","passerror","setPasserror","employeeID","username","email","customerName","address","district","state","locationType","pincode","GSTnumber","contactPerson","contactNo","altContact","WhatsappNo","role","parentCustomerId","show_password","values","setValues","name","enc_password","confpassword","changePassword","a","data","pass","Axios","url","API","Emp","getId","method","user","console","log","getCustomerInfo","axios","res","today","Date","birthDate","dob","curage","getFullYear","m","getMonth","getDate","employeeName","contactPersonOcc","sex","contactNoLand","age","useEffect","isOpen","onClose","className","type","value","onChange","e","target","placeholder","valid","onClick","push","to","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","Array","isArray","inner","apply","key","call","join","module","exports","default","RoundIcon","Icon","icon","iconColorClass","bgColorClass","cls","InfoCard","title","children"],"mappings":"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","file":"static/js/38.b687b0de.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { API } from \"../../backendapi\";\nimport axios from \"axios\";\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport InfoCard from \"../../components/Cards/InfoCard\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\nimport { CartIcon, ChatIcon, MoneyIcon, PeopleIcon } from \"../../icons\";\nimport RoundIcon from \"../../components/RoundIcon\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport Axios from \"axios\";\n\nexport default function EmployeeDetails() {\n  let history = useHistory();\n  const { id } = useParams();\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [PasswordModalOpen, setPasswordModalOpen] = useState(false);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [newpass, setNewpass] = useState(\"\");\n  const [newpassconf, setNewpassconf] = useState(\"\");\n  const [passerror, setPasserror] = useState(\"\");\n\n  // console.log(id);\n  const [values, setValues] = useState({\n    //both\n    employeeID: \"\",\n    username: \"\",\n    email: \"\",\n    // password: \"\",\n    // confpassword: \"\",\n    //customer\n    customerName: \"\",\n    // accountId: [],\n    //account\n    // accountName: \"\",\n    // unitId: [],\n    // //------> customerName from above\n    address: \"\",\n    district: \"\",\n    state: \"\",\n    locationType: \"\",\n    pincode: \"\",\n    GSTnumber: \"\",\n    contactPerson: \"\",\n    contactNo: \"\",\n    altContact: \"\",\n    WhatsappNo: \"\",\n    role: 0,\n    parentCustomerId: \"\",\n    show_password: \"\",\n  });\n  const [err, setErr] = useState({\n    email: \"\",\n    name: \"\",\n    // accountName: \"\",\n    enc_password: \"\",\n    confpassword: \"\",\n  });\n\n  const changePassword = async () => {\n    let data = { id, pass: newpass };\n    try {\n      let user = await Axios({\n        url: `${API}/customer/${Emp.getId()}/resetPassByAdmin`,\n        method: \"POST\",\n        data: data,\n      });\n      setIsReviewModalOpen(true);\n      setPasswordModalOpen(false);\n      console.log(\"Done\", user);\n    } catch (error) {\n      throw error;\n    }\n    let user = values;\n    user.show_password = newpass;\n    setValues(user);\n  };\n\n  const getCustomerInfo = async () => {\n    let data = { id: id };\n    // console.log(API);\n    try {\n      let res = await axios({\n        url: `${API}/admin/${Emp.getId()}/getEmployeeById`,\n        method: \"POST\",\n        data: data,\n      });\n      // calc age\n      var today = new Date();\n      var birthDate = new Date(res.data[0].dob);\n      var curage = today.getFullYear() - birthDate.getFullYear();\n      var m = today.getMonth() - birthDate.getMonth();\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n          curage--;\n      }\n      setValues({\n        employeeID: res.data[0].employeeID,\n        username: res.data[0].username,\n        email: res.data[0].email,\n        employeeName: res.data[0].employeeName,\n        address: res.data[0].address,\n        district: res.data[0].district,\n        state: res.data[0].state,\n        pincode: res.data[0].pincode,\n        contactPerson: res.data[0].contactPerson,\n        contactPersonOcc: res.data[0].contactPersonOcc,\n        contactNo: res.data[0].contactNo,\n        role: res.data[0].role,\n        show_password: res.data[0].show_password,\n        sex: res.data[0].sex,\n        contactNoLand: res.data[0].contactNoLand,\n        dob: res.data[0].dob,\n        age: curage,\n        // WhatsappNo:WhatsappNo ,\n      });\n\n      \n\n      console.log(\"Done\", res.data[0]);\n      //   console.log(\"Hello\");\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    getCustomerInfo();\n  }, []);\n\n  const ResetPassModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={PasswordModalOpen}\n          onClose={() => setPasswordModalOpen(false)}\n        >\n          <ModalHeader>Change Password for {values.username}!</ModalHeader>\n          <ModalBody>\n            <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n              <Label>\n                <span>New Password</span>\n                <Input\n                  className=\"mt-5\"\n                  type=\"password\"\n                  value={newpass}\n                  onChange={(e) => setNewpass(e.target.value)}\n                  placeholder=\"New Password\"\n                />\n              </Label>{\" \"}\n              <Label>\n                <span>Confirm Password</span>\n                <Input\n                  className=\"my-5\"\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={newpassconf}\n                  onChange={(e) => {\n                    setNewpassconf(e.target.value);\n                    if (e.target.value != newpass)\n                      setPasserror(\"Passwords do not match!\");\n                    else setPasserror(\"\");\n                  }}\n                />\n              </Label>\n              <HelperText valid={false}>{passerror}</HelperText>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => changePassword()}\n            >\n              Change Password\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const PassChangeModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>Password Updated Successfully!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReviewModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const DeleteModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isDeleteModalOpen}\n          onClose={() => setIsDeleteModalOpen(false)}\n        >\n          <ModalHeader>Are you sure you want to delete!</ModalHeader>\n          <ModalBody>\n            All the data linked with this employee will be lost.\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                try {\n                  await axios({\n                    url: `${API}/admin/${Emp.getId()}/deleteEmployee`,\n                    method: \"POST\",\n                    data: { id: id },\n                  });\n                  history.push(`/app/employee`);\n\n                  console.log(\"employee deleted\");\n                } catch (err) {\n                  throw err;\n                }\n              }}\n            >\n              Confirm Delete\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      {ResetPassModal()}\n      {PassChangeModal()}\n      {DeleteModal()}\n      <PageTitle>Employee: {values.employeeName}</PageTitle>\n\n      {/* <SectionTitle> </SectionTitle> */}\n      <Card className=\"mb-8 shadow-md\">\n        <CardBody>\n          <div className=\"flex flex-row flex-wrap \">\n            <div className=\"w-1/2\">\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Employee ID:</span>\n                {values.employeeID}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Role:</span>{\" \"}\n                {values.role == 0\n                  ? \"Admin\"\n                  : values.role == 11\n                  ? \"Engineer\"\n                  : \"Assistant\"}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Name:</span>{\" \"}\n                {values.employeeName}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Email:</span> {values.email}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Password:</span>{\" \"}\n                {values.show_password}\n              </p>\n\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Sex:</span> {values.sex}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Contact Number(Mobile):</span>{\" \"}\n                {values.contactNo}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\">\n                  {\" \"}\n                  Contact Number(Landline):\n                </span>{\" \"}\n                {values.contactNoLand}\n              </p>\n            </div>\n            <div className=\" w-1/2\">\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> DOB:</span> {values.dob}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Age:</span> {values.age}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Address:</span>{\" \"}\n                {values.address}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> District:</span>{\" \"}\n                {values.district}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> State:</span> {values.state}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Pincode:</span>{\" \"}\n                {values.pincode}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\"> Contact Person:</span>{\" \"}\n                {values.contactPerson}\n              </p>\n              <p className=\"text-md text-gray-900 dark:text-gray-100 py-2\">\n                <span className=\"font-semibold\">\n                  {\" \"}\n                  Contact Person Occupation:\n                </span>{\" \"}\n                {values.contactPersonOcc}\n              </p>\n            </div>\n          </div>\n          <div className=\"my-10\">\n            <Link to={`/app/employee/${id}/update`}>\n              <Button className=\"mr-3\">Update Info</Button>\n            </Link>\n            <Link to={`/app/employee/${id}/viewsalary`}>\n              <Button className=\"mr-3\">Payment History</Button>\n            </Link>\n            <Link to={`/app/employee/${id}/update`}>\n              <Button className=\"mr-3\">View Full Info</Button>\n            </Link>\n            <Button className=\"\" onClick={() => setPasswordModalOpen(true)}>\n              Reset Password\n            </Button>\n            <Button onClick={() => setIsDeleteModalOpen(true)} className=\"mx-3\">\n              Delete Employee{\" \"}\n            </Button>\n            {/* <Button className=\"mx-3\">Delete Customer</Button> */}\n          </div>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className,\n}) {\n  const baseStyle = 'rounded-full p-5'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className=\"w-6 h-6\" />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","import React from 'react'\nimport { Card, CardBody } from '@windmill/react-ui'\n\nfunction InfoCard({ title, value, children: icon }) {\n  return (\n    <Card>\n      <CardBody className=\"flex items-center\">\n        {icon}\n        <div>\n          <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">{title}</p>\n          <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">{value}</p>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default InfoCard\n"],"sourceRoot":""}