{"version":3,"sources":["components/Cards/ValueCard.js","utils/chartData/invBarChart.js","utils/chartData/callsLineChart.js","pages/Dashboard.js","../node_modules/classnames/index.js","components/RoundIcon.js","components/Cards/InfoCard.js","components/Chart/ChartCard.js","components/Chart/ChartLegend.js","utils/chartData/chartsData.js"],"names":["ValueCard","title","value","icon","children","x","toString","lastThree","substring","length","otherNumbers","res","replace","className","getInvChartData","a","axios","url","API","EmpProfile","getId","method","tInventoryChartData","dataObj","data","tLabel","tData","map","push","capitalize","_id","count","invBarOptions","labels","datasets","label","backgroundColor","borderWidth","options","responsive","legend","display","getCallsChartData","tCallsChartData","month","callsLineOptions","fill","borderColor","tooltips","mode","intersect","hover","scales","scaleLabel","labelString","y","yAxes","ticks","beginAtZero","Dashboard","useState","page","setPage","setData","useContext","TopBarContext","setTopHeading","topheading","setSelectedProd","searchtype","setSearchType","searchlabel","setSearchLabel","searchquery","setSearchQuery","refresh","setRefresh","disabler","setDisabler","isOpenTwo","setIsOpenTwo","activerowid","setActiveRowId","customercount","setCustomerCount","assetcount","setAssetCount","amcassetcount","setAmcAssetCount","wtyassetcount","setWtyAssetCount","nosassetcount","setNosAssetCount","unitcount","setUnitCount","totalResults","setTotalResults","inventoryChartData","setInventoryChartData","callsChartData","setCallsChartData","useEffect","payload","pages","limit","filters","Emp","response","total","out","tcustomercount","tassetcount","tamcassetcount","twtyassetcount","tnosassetcount","tunitcount","console","log","InfoCard","RoundIcon","MoneyIcon","iconColorClass","bgColorClass","CartIcon","PeopleIcon","ChatIcon","SectionTitle","onClick","aria-label","aria-haspopup","class","xmlns","viewBox","d","isOpen","onClose","onSubmit","e","preventDefault","onChange","target","placeholder","disabled","user","i","key","customerName","accountName","unitName","type","business","producttype","product","serialno","moment","contractfrom","format","contractto","ponumber","podate","resultsPerPage","p","PageTitle","ChartCard","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","Array","isArray","inner","apply","call","join","module","exports","default","Icon","cls","Chart","ChartLegend","legends","color","doughnutLegends","doughnutOptions","cutoutPercentage","lineLegends","lineOptions","barLegends","barOptions"],"mappings":"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","file":"static/js/11.47657fdd.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, CardBody } from \"@windmill/react-ui\";\n\nfunction ValueCard({ title, value, children: icon }) {\n  let x = value.toString();\n  var lastThree = x.substring(x.length - 3);\n  var otherNumbers = x.substring(0, x.length - 3);\n  if (otherNumbers != \"\") lastThree = \",\" + lastThree;\n  var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\n  return (\n    <Card>\n      <CardBody className=\"flex items-center\">\n        {icon}\n        <div>\n          <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">\n            {title}\n          </p>\n          <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">\n            Rs: {res}\n          </p>\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default ValueCard;\n","import axios from \"axios\";\nimport EmpProfile from \"../../helpers/auth/EmpProfile\";\nimport { API } from \"../../backendapi\";\nimport { capitalize } from \"../../helpers/toolfuctions/toolfunctions\";\n\nexport const getInvChartData = async () => {\n  //Getting inventory chart data from backend\n  let tInventoryChartData = await axios({\n    url: `${API}/inventory/${EmpProfile.getId()}/getChartData`,\n    method: \"GET\",\n  });\n  const dataObj = tInventoryChartData.data;\n  const tLabel = [];\n  const tData = [];\n  const tempOptions = [\"Cpu\", \"ram\"];\n  dataObj.map((data) => {\n    tLabel.push(capitalize(data._id));\n    tData.push(data.count);\n  });\n\n  const invBarOptions = {\n    data: {\n      //TODO\n      labels: tLabel,\n      datasets: [\n        {\n          label: \"Bags\",\n          backgroundColor: \"#7e3af2\",\n          // borderColor: window.chartColors.blue,\n          borderWidth: 1,\n          //TODO\n          data: tData,\n        },\n      ],\n    },\n    options: {\n      responsive: true,\n    },\n    legend: {\n      display: false,\n    },\n  };\n\n  return invBarOptions;\n};\n","import axios from \"axios\";\nimport EmpProfile from \"../../helpers/auth/EmpProfile\";\nimport { API } from \"../../backendapi\";\n\nexport const getCallsChartData = async () => {\n  //Getting inventory chart data from backend\n  let tCallsChartData = await axios({\n    url: `${API}/call/${EmpProfile.getId()}/getChartData`,\n    method: \"GET\",\n  });\n  const dataObj = tCallsChartData.data;\n  const tLabel = [];\n  const tData = [];\n  dataObj.map((data) => {\n    tLabel.push(data.month);\n    tData.push(data.count);\n  });\n\n  const callsLineOptions = {\n    data: {\n      labels: tLabel,\n      datasets: [\n        {\n          label: \"Calls\",\n          fill: false,\n          backgroundColor: \"#7e3af2\",\n          borderColor: \"#7e3af2\",\n          data: tData,\n        },\n      ],\n    },\n    options: {\n      responsive: true,\n      tooltips: {\n        mode: \"index\",\n        intersect: false,\n      },\n      hover: {\n        mode: \"nearest\",\n        intersect: true,\n      },\n      scales: {\n        x: {\n          display: true,\n          scaleLabel: {\n            display: true,\n            labelString: \"Month\",\n          },\n        },\n        y: {\n          display: true,\n          scaleLabel: {\n            display: true,\n            labelString: \"Value\",\n          },\n        },\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n            },\n          },\n        ],\n      },\n    },\n    legend: {\n      display: false,\n    },\n  };\n\n  return callsLineOptions;\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport Emp from \"../helpers/auth/EmpProfile\";\nimport InfoCard from \"../components/Cards/InfoCard\";\nimport ChartCard from \"../components/Chart/ChartCard\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport ChartLegend from \"../components/Chart/ChartLegend\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport {\n  ChatIcon,\n  CartIcon,\n  MoneyIcon,\n  PeopleIcon,\n  EditIcon,\n  TrashIcon,\n} from \"../icons\";\nimport RoundIcon from \"../components/RoundIcon\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Card,\n  CardBody,\n  Label,\n  Dropdown,\n  DropdownItem,\n  Button,\n} from \"@windmill/react-ui\";\n\nimport {\n  doughnutOptions,\n  lineOptions,\n  doughnutLegends,\n  lineLegends,\n  barOptions,\n  barLegends,\n} from \"../utils/chartData/chartsData\";\nimport { API } from \"../backendapi\";\nimport SectionTitle from \"../components/Typography/SectionTitle\";\nimport { TopBarContext } from \"../context/TopBarContext\";\nimport ValueCard from \"../components/Cards/ValueCard\";\nimport { getInvChartData, invBarOptions } from \"../utils/chartData/invBarChart\";\nimport { getCallsChartData } from \"../utils/chartData/callsLineChart\";\n\nfunction Dashboard() {\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  // Quick Search States ------------------------\n  const [selectedprod, setSelectedProd] = useState({});\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n  const [isOpenTwo, setIsOpenTwo] = useState(false);\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n\n  // Count States ---------------------------------------------\n  const [customercount, setCustomerCount] = useState(0);\n  const [assetcount, setAssetCount] = useState(0);\n  const [amcassetcount, setAmcAssetCount] = useState(0);\n  const [wtyassetcount, setWtyAssetCount] = useState(0);\n  const [nosassetcount, setNosAssetCount] = useState(0);\n  const [unitcount, setUnitCount] = useState(0);\n  const [amccontracts, setAmcContracts] = useState(0); // unique PO numbers\n  const [assetvalue, setAssetValue] = useState(0);\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  //Chart States\n  const [inventoryChartData, setInventoryChartData] = useState(0);\n  const [callsChartData, setCallsChartData] = useState(0);\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  // ---------------------Table Data Getter -------------------------\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      // console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/asset/${Emp.getId()}/getall`,\n          method: \"POST\",\n          data: payload,\n        });\n        // console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, refresh]);\n\n  // -------Stats getter ---------------\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      try {\n        let tcustomercount = await axios({\n          url: `${API}/customer/countcustomers`,\n          method: \"GET\",\n        });\n        let tassetcount = await axios({\n          url: `${API}/asset/count`,\n          method: \"GET\",\n        });\n        let tamcassetcount = await axios({\n          url: `${API}/asset/countamc`,\n          method: \"GET\",\n        });\n        let twtyassetcount = await axios({\n          url: `${API}/asset/countwty`,\n          method: \"GET\",\n        });\n        let tnosassetcount = await axios({\n          url: `${API}/asset/countnos`,\n          method: \"GET\",\n        });\n        // temporarily not calling these functions\n        // let tamccontract = await axios({\n        //   url: `${API}/asset/countamccontract`,\n        //   method: \"GET\",\n        // });\n        // let tassetvalue = await axios({\n        //   url: `${API}/asset/countassetvalue`,\n        //   method: \"GET\",\n        // });\n        let tunitcount = await axios({\n          url: `${API}/unit/count`,\n          method: \"GET\",\n        });\n\n        setCustomerCount(tcustomercount.data);\n        setAssetCount(tassetcount.data);\n        setAmcAssetCount(tamcassetcount.data);\n        setWtyAssetCount(twtyassetcount.data);\n        setNosAssetCount(tnosassetcount.data);\n        setUnitCount(tunitcount.data);\n        // setAmcContracts(tamccontract.data);\n        // setAssetValue(tassetvalue.data);\n\n        setInventoryChartData(await getInvChartData());\n        setCallsChartData(await getCallsChartData());\n      } catch (error) {\n        throw error;\n      }\n    })();\n\n    return () => {\n      console.log(\"exiting dashboard\");\n    };\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, []);\n\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    if (API == \"http://localhost:3000/api\") {\n      setTopHeading(\"Dashboard: Dev Environment\");\n    } else {\n      setTopHeading(\"Dashboard\");\n    }\n\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  // const handleChange = () => {\n  //   console.log(\"change\");\n  // };\n\n  // const handleSubmit = () => {\n  //   console.log(\"submit\");\n  // };\n\n  return (\n    <>\n      {/* <PageTitle>Dashboard</PageTitle> */}\n\n      {/* <!-- Cards --> */}\n      <div className=\"grid gap-6 mt-5 mb-8 md:grid-cols-2 xl:grid-cols-4\">\n        <InfoCard title=\"Total Customers\" value={customercount}>\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-green-500 dark:text-green-100\"\n            bgColorClass=\"bg-green-100 dark:bg-green-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Total Units\" value={unitcount}>\n          <RoundIcon\n            icon={CartIcon}\n            iconColorClass=\"text-blue-500 dark:text-blue-100\"\n            bgColorClass=\"bg-blue-100 dark:bg-blue-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n        <InfoCard title=\"Total Assets\" value={assetcount}>\n          <RoundIcon\n            icon={PeopleIcon}\n            iconColorClass=\"text-orange-500 dark:text-orange-100\"\n            bgColorClass=\"bg-orange-100 dark:bg-orange-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Assets (AMC)\" value={amcassetcount}>\n          <RoundIcon\n            icon={ChatIcon}\n            iconColorClass=\"text-teal-500 dark:text-teal-100\"\n            bgColorClass=\"bg-teal-100 dark:bg-teal-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n        <InfoCard title=\"Assets (WTY)\" value={wtyassetcount}>\n          <RoundIcon\n            icon={ChatIcon}\n            iconColorClass=\"text-teal-500 dark:text-teal-100\"\n            bgColorClass=\"bg-teal-100 dark:bg-teal-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n        <InfoCard title=\"Assets (NOS)\" value={nosassetcount}>\n          <RoundIcon\n            icon={ChatIcon}\n            iconColorClass=\"text-teal-500 dark:text-teal-100\"\n            bgColorClass=\"bg-teal-100 dark:bg-teal-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n        <InfoCard title=\"AMC Contracts\" value=\"0\">\n          <RoundIcon\n            icon={ChatIcon}\n            iconColorClass=\"text-teal-500 dark:text-teal-100\"\n            bgColorClass=\"bg-teal-100 dark:bg-teal-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n        <ValueCard title=\"Total Value\" value=\"0\">\n          <RoundIcon\n            icon={ChatIcon}\n            iconColorClass=\"text-teal-500 dark:text-teal-100\"\n            bgColorClass=\"bg-teal-100 dark:bg-teal-500\"\n            className=\"mr-4\"\n          />\n        </ValueCard>\n      </div>\n      <hr className=\"mb-4\" />\n\n      {/* ------------------Search------------------------------ */}\n      <SectionTitle>Quick Search</SectionTitle>\n      <div className=\"flex flex-row items-center space-x-2\">\n        <div className=\"relative z-50 \">\n          <button\n            onClick={() => {\n              setIsOpenTwo(!isOpenTwo);\n            }}\n            className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n            aria-label=\"Notifications\"\n            aria-haspopup=\"true\"\n          >\n            {searchtype ? searchlabel : \"Pick Search Type\"}\n          </button>\n          <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n            <svg\n              class=\"fill-current h-4 w-4\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n            >\n              <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n            </svg>\n          </div>\n          <Dropdown isOpen={isOpenTwo} onClose={() => setIsOpenTwo(false)}>\n            <DropdownItem\n              onClick={() => {\n                setIsOpenTwo(false);\n                setSearchType(\"\");\n                setSearchLabel(\"\");\n                setDisabler(true);\n                setSearchQuery(\"\");\n                setRefresh(!refresh);\n              }}\n            >\n              <span>All</span>\n            </DropdownItem>\n            <DropdownItem\n              onClick={() => {\n                setIsOpenTwo(false);\n                setSearchType(\"prodserial\");\n                setSearchLabel(\"Product Serial\");\n                setDisabler(false);\n              }}\n            >\n              <span>Product Serial</span>\n            </DropdownItem>\n            <DropdownItem\n              onClick={() => {\n                setIsOpenTwo(false);\n                setSearchType(\"keyboardsno\");\n                setSearchLabel(\"Keyboard Serial\");\n                setDisabler(false);\n              }}\n            >\n              <span>Keyboard Serial</span>\n            </DropdownItem>\n            <DropdownItem\n              onClick={() => {\n                setIsOpenTwo(false);\n                setSearchType(\"mousesno\");\n                setSearchLabel(\"Mouse Serial\");\n                setDisabler(false);\n              }}\n            >\n              <span>Mouse Serial</span>\n            </DropdownItem>\n            <DropdownItem\n              onClick={() => {\n                setIsOpenTwo(false);\n                setSearchType(\"motherboardsno\");\n                setSearchLabel(\"Motherboard Serial\");\n                setDisabler(false);\n              }}\n            >\n              <span>Motherboard Serial</span>\n            </DropdownItem>\n            <DropdownItem\n              onClick={() => {\n                setIsOpenTwo(false);\n                setSearchType(\"monitorsno\");\n                setSearchLabel(\"Monitor Serial\");\n                setDisabler(false);\n              }}\n            >\n              <span>Monitor Serial</span>\n            </DropdownItem>\n            <DropdownItem\n              onClick={() => {\n                setIsOpenTwo(false);\n                setSearchType(\"hddsno\");\n                setSearchLabel(\"HDD Serial\");\n                setDisabler(false);\n              }}\n            >\n              <span>HDD Serial</span>\n            </DropdownItem>\n            <DropdownItem\n              onClick={() => {\n                setIsOpenTwo(false);\n                setSearchType(\"cpusno\");\n                setSearchLabel(\"CPU Serial\");\n                setDisabler(false);\n              }}\n            >\n              <span>CPU Serial</span>\n            </DropdownItem>\n            <DropdownItem\n              onClick={() => {\n                setIsOpenTwo(false);\n                setSearchType(\"ramsno\");\n                setSearchLabel(\"Ram Serial\");\n                setDisabler(false);\n              }}\n            >\n              <span>RAM Serial</span>\n            </DropdownItem>\n            <DropdownItem\n              onClick={() => {\n                setIsOpenTwo(false);\n                setSearchType(\"smpssno\");\n                setSearchLabel(\"SMPS Serial\");\n                setDisabler(false);\n              }}\n            >\n              <span>SMPS Serial</span>\n            </DropdownItem>\n            <DropdownItem\n              onClick={() => {\n                setIsOpenTwo(false);\n                setSearchType(\"fansno\");\n                setSearchLabel(\"Fan Serial\");\n                setDisabler(false);\n              }}\n            >\n              <span>Fan Serial</span>\n            </DropdownItem>\n            <DropdownItem\n              onClick={() => {\n                setIsOpenTwo(false);\n                setSearchType(\"opticaldrivesno\");\n                setSearchLabel(\"Optical Drive Serial\");\n                setDisabler(false);\n              }}\n            >\n              <span>Optical Drive Serial</span>\n            </DropdownItem>\n          </Dropdown>\n        </div>\n\n        <div class=\"block relative \">\n          <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n            <svg viewBox=\"0 0 24 24\" class=\"h-4 w-4 fill-current text-gray-500\">\n              <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n            </svg>\n          </span>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              setRefresh(!refresh);\n            }}\n          >\n            <input\n              value={searchquery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              placeholder=\"Search\"\n              disabled={disabler}\n              class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n            />\n          </form>\n        </div>\n      </div>\n\n      {/* -----------------Quick Search Table ---------------  */}\n      <TableContainer className=\"mt-4\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              <TableCell>Unit</TableCell>\n              <TableCell>Business</TableCell>\n              <TableCell>Product</TableCell>\n              <TableCell>Product Serial</TableCell>\n              <TableCell>Contract From</TableCell>\n              <TableCell>Contract To</TableCell>\n              <TableCell>Purchase Number</TableCell>\n              <TableCell>Purchase Date</TableCell>\n              {/* <TableCell>Edit/Delete</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {data.map((user, i) => (\n              <TableRow\n                className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                  activerowid == user._id\n                    ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                    : \"white\"\n                } `}\n                key={i}\n                onClick={() => {\n                  setActiveRowId(user._id);\n                  // console.log(\"the id is \" + user._id);\n                  setSelectedProd(user);\n                  // setAssetDetails(user);\n                }}\n              >\n                <TableCell className=\"w-8\">\n                  <div className=\"flex items-center text-sm \">\n                    {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                    <div>\n                      <p className=\"font-semibold\">{user.customerName}</p>\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                        {user.accountName}\n                      </p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{user.unitName}</span>\n                </TableCell>\n                <TableCell>\n                  <Badge type={user.business == \"AMC\" ? \"primary\" : \"success\"}>\n                    {user.business}\n                  </Badge>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{user.producttype}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{user.product.serialno}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">\n                    {moment(user.contractfrom).format(\"DD/MM/YYYY\")}\n                  </span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">\n                    {moment(user.contractto).format(\"DD/MM/YYYY\")}\n                  </span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{user.ponumber}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">\n                    {moment(user.podate).format(\"DD/MM/YYYY\")}\n                  </span>\n                </TableCell>\n                {/* <TableCell>\n                  <div className=\"flex items-center space-x-4\">\n                    <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                      <Link key={user._id} to={`/app/unit/update/${user._id}`}>\n                        <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Link>\n                      {\"\"}\n                    </Button>\n\n                    <Button\n                      layout=\"link\"\n                      size=\"icon\"\n                      aria-label=\"Delete\"\n                      onClick={async () => {\n                        console.log(\"delete Asset\");\n                        try {\n                          let response = await axios({\n                            url: `${API}/asset/${Emp.getId()}/delete`,\n                            method: \"POST\",\n                            data: { id: user._id },\n                          });\n                          console.log(response.data);\n                          let temp = data.filter((x) => x._id != user._id);\n                          setData(temp);\n\n                          // setData(response.data);\n                        } catch (error) {\n                          throw error;\n                        }\n                      }}\n                    >\n                      <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    </Button>\n                  </div>\n                </TableCell> */}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n\n      {/* --------------Charts---------------------------- */}\n      <PageTitle>Charts</PageTitle>\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2\">\n        {/* <ChartCard title=\"Stock Overview\">\n          <Doughnut {...doughnutOptions} />\n          <ChartLegend legends={doughnutLegends} />\n        </ChartCard> */}\n        <ChartCard title=\"Bars\">\n          {inventoryChartData && <Bar {...inventoryChartData} />}\n          {/* <ChartLegend legends={barLegends} /> */}\n        </ChartCard>\n\n        <ChartCard title=\"Calls ( Month Wise )\">\n          {callsChartData && <Line {...callsChartData} />}\n          {/* <ChartLegend legends={lineLegends} /> */}\n        </ChartCard>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className,\n}) {\n  const baseStyle = 'rounded-full p-5'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className=\"w-6 h-6\" />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","import React from 'react'\nimport { Card, CardBody } from '@windmill/react-ui'\n\nfunction InfoCard({ title, value, children: icon }) {\n  return (\n    <Card>\n      <CardBody className=\"flex items-center\">\n        {icon}\n        <div>\n          <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">{title}</p>\n          <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">{value}</p>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","import React from 'react'\n\nfunction Chart({ children, title }) {\n  return (\n    <div className=\"min-w-0 p-4 bg-white rounded-lg shadow-xs dark:bg-gray-800\">\n      <p className=\"mb-4 font-semibold text-gray-800 dark:text-gray-300\">{title}</p>\n      {children}\n    </div>\n  )\n}\n\nexport default Chart\n","import React from 'react'\n\nfunction ChartLegend({ legends }) {\n  return (\n    <div className=\"flex justify-center mt-4 space-x-3 text-sm text-gray-600 dark:text-gray-400\">\n      {legends.map((legend) => (\n        <div className=\"flex items-center\" key={legend.title}>\n          <span className={`inline-block w-3 h-3 mr-1 ${legend.color} rounded-full`}></span>\n          <span>{legend.title}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ChartLegend\n","export const doughnutLegends = [\n  { title: \"Mouse\", color: \"bg-blue-500\" },\n  { title: \"Keyboard\", color: \"bg-teal-600\" },\n  { title: \"Monitor\", color: \"bg-purple-600\" },\n];\n\nexport const doughnutOptions = {\n  data: {\n    datasets: [\n      {\n        data: [33, 10, 20],\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: [\"#0694a2\", \"#1c64f2\", \"#7e3af2\"],\n        label: \"Dataset 1\",\n      },\n    ],\n    labels: [\"Mouse\", \"Keyboard\", \"Monitor\"],\n  },\n  options: {\n    responsive: true,\n    cutoutPercentage: 80,\n  },\n  legend: {\n    display: false,\n  },\n};\n\nexport const lineLegends = [\n  { title: \"Organic\", color: \"bg-teal-600\" },\n  // { title: \"Paid\", color: \"bg-purple-600\" },\n];\n\nexport const lineOptions = {\n  data: {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [\n      // {\n      //   label: \"Organic\",\n      //   /**\n      //    * These colors come from Tailwind CSS palette\n      //    * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n      //    */\n      //   backgroundColor: \"#0694a2\",\n      //   borderColor: \"#0694a2\",\n      //   data: [43, 48, 40, 54, 67, 73, 70],\n      //   fill: false,\n      // },\n      {\n        label: \"Calls\",\n        fill: false,\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: \"#7e3af2\",\n        borderColor: \"#7e3af2\",\n        data: [24, 50, 64, 74, 52, 51, 65],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n    },\n    hover: {\n      mode: \"nearest\",\n      intersect: true,\n    },\n    scales: {\n      x: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: \"Month\",\n        },\n      },\n      y: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: \"Value\",\n        },\n      },\n    },\n  },\n  legend: {\n    display: false,\n  },\n};\n\nexport const barLegends = [\n  { title: \"Shoes\", color: \"bg-teal-600\" },\n  { title: \"Bags\", color: \"bg-purple-600\" },\n];\n\nexport const barOptions = {\n  data: {\n    labels: [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n    ],\n    datasets: [\n      // {\n      //   label: \"Shoes\",\n      //   backgroundColor: \"#0694a2\",\n      //   // borderColor: window.chartColors.red,\n      //   borderWidth: 1,\n      //   data: [-3, 14, 52, 74, 33, 90, 70],\n      // },\n      {\n        label: \"Bags\",\n        backgroundColor: \"#7e3af2\",\n        // borderColor: window.chartColors.blue,\n        borderWidth: 1,\n        data: [\n          66, 33, 43, 12, 54, 62, 84, 66, 33, 43, 12, 54, 62, 84, 66, 33, 43,\n          12, 54, 62, 84,\n        ],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n  },\n  legend: {\n    display: false,\n  },\n};\n"],"sourceRoot":""}