{"version":3,"sources":["pages/Assets/Assets.js","../node_modules/classnames/index.js","components/RoundIcon.js","utils/demo/tableData.js"],"names":["Assets","useState","isDeleteModalOpen","setIsDeleteModalOpen","deleteId","setDeleteId","useContext","BottomBarContext","setBBarOpen","bbaropen","setAssetDetails","assetdetails","activerowid","setActiveRowId","TopBarContext","setTopHeading","topheading","page","setPage","data","setData","isOpenTwo","setIsOpenTwo","isModalOpen","setIsModalOpen","refresh","setRefresh","disabler","setDisabler","Business","setBusiness","product","setProduct","_id","unitName","unit","setUnit","customerName","customer","setCustomer","accountName","account","setAccount","selectedprod","setSelectedProd","searchtype","setSearchType","searchlabel","setSearchLabel","searchquery","setSearchQuery","assethistory","setAssetHistory","assethistoryModalOpen","setAssetHistoryModalOpen","totalResults","setTotalResults","isDwnldModalOpen","setIsDwnldModalOpen","downloadAssets","a","payload","pages","limit","filters","business","producttype","unitId","customerId","accountId","axios","url","API","Emp","getId","method","response","array","out","maxcpucount","maxramcount","maxhddcount","maxsmpscount","maxfancount","maxmotherboardcount","maxopticaldrivecount","maxkeybdcount","maxmousecount","maxmonitorcount","maxgcardcount","maxenetcount","maxserialcardcount","maxparalellcardcount","maxhbacardcount","maxraidcount","maxtapecount","maxotherscount","map","temp","i","Math","max","cpu","length","ram","hdd","smps","fan","motherboard","opticaldrive","keyboard","mouse","monitor","gcard","enetcard","serialcard","parallelcard","hbacard","raidcontroller","tapecontroller","others","csv","ttt","count","brand","model","serialno","os","cpuname","cpusno","ramname","ramsno","hddname","hddsno","smpsname","smpssno","fanname","fansno","motherboardname","motherboardsno","opticaldrivename","opticaldrivesno","keyboardname","keyboardsno","mousename","mousesno","monitorname","monitorsno","gcardname","gcardsno","enetcardname","enetcardsno","serialcardname","serialcardsno","tstring","JSON","parse","stringify","undefined","parallelcardname","parallelcardsno","hbacardname","hbacardsno","raidcontrollername","raidcontrollersno","tapecontrollername","tapecontrollersno","othersname","otherssno","csvData","Blob","type","saveAs","downloadContractDetails","console","log","ponumber","moment","podate","format","contractfrom","contractto","billingfrom","billingto","amcrate","gstamount","netamount","downloadMIFDetails","useEffect","useMemo","total","isOpen","onClose","className","entry","key","onClick","date","capitalize","engineer","callAttendDate","startOfService","endOfService","callStatus","note","actionTaken","id","filter","x","layout","class","xmlns","viewBox","d","value","onChange","e","target","disabled","selected","aria-label","aria-haspopup","onSubmit","preventDefault","placeholder","user","size","to","aria-hidden","getRole","history","resultsPerPage","label","p","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","push","Array","isArray","inner","apply","call","join","module","exports","default","RoundIcon","Icon","icon","iconColorClass","bgColorClass","cls","avatar","name","job","amount","status"],"mappings":";kVA03CeA,UAx1Cf,WAAkB,MAIkCC,oBAAS,GAJ3C,mBAITC,EAJS,KAIUC,EAJV,OAKgBF,mBAAS,GALzB,mBAKTG,EALS,KAKCC,EALD,OAQdC,qBAAWC,KADKC,GAPF,EAORC,SAPQ,EAOED,aAAaE,EAPf,EAOeA,gBAPf,KAOgCC,aAGVV,mBAAS,IAV/B,mBAUTW,EAVS,KAUIC,EAVJ,OAYsBP,qBAAWQ,KAA7BC,GAZJ,EAYRC,WAZQ,EAYID,eAZJ,EAcgBd,oBAAS,GAdzB,gCAeQA,mBAAS,IAfjB,mBAeTgB,EAfS,KAeHC,EAfG,OAgBQjB,mBAAS,IAhBjB,mBAgBTkB,EAhBS,KAgBHC,EAhBG,OAkBYnB,oBAAS,GAlBrB,gCAmBkBA,oBAAS,IAnB3B,mBAmBToB,EAnBS,KAmBEC,EAnBF,OAoBsBrB,oBAAS,GApB/B,mBAoBTsB,EApBS,KAoBIC,EApBJ,QAqBcvB,oBAAS,GArBvB,qBAqBTwB,GArBS,MAqBAC,GArBA,SAsBgBzB,oBAAS,GAtBzB,qBAsBT0B,GAtBS,MAsBCC,GAtBD,SAyBgB3B,mBAAS,IAzBzB,qBAyBT4B,GAzBS,MAyBCC,GAzBD,SA0Bc7B,mBAAS,IA1BvB,qBA0BT8B,GA1BS,MA0BAC,GA1BA,SA2BQ/B,mBAAS,CAAEgC,IAAK,GAAIC,SAAU,KA3BtC,qBA2BTC,GA3BS,MA2BHC,GA3BG,SA4BgBnC,mBAAS,CAAEgC,IAAK,GAAII,aAAc,KA5BlD,qBA4BTC,GA5BS,MA4BCC,GA5BD,SA6BctC,mBAAS,CAAEgC,IAAK,GAAIO,YAAa,KA7B/C,qBA6BTC,GA7BS,MA6BAC,GA7BA,SAgCwBzC,mBAAS,IAhCjC,qBAgCT0C,GAhCS,MAgCKC,GAhCL,SAmCoB3C,mBAAS,IAnC7B,qBAmCT4C,GAnCS,MAmCGC,GAnCH,SAoCsB7C,mBAAS,IApC/B,qBAoCT8C,GApCS,MAoCIC,GApCJ,SAqCsB/C,mBAAS,IArC/B,qBAqCTgD,GArCS,MAqCIC,GArCJ,SAwCwBjD,mBAAS,IAxCjC,qBAwCTkD,GAxCS,MAwCKC,GAxCL,SAyC0CnD,oBAAS,GAzCnD,qBAyCToD,GAzCS,MAyCcC,GAzCd,SA+CwBrD,mBAAS,IA/CjC,qBA+CTsD,GA/CS,MA+CKC,GA/CL,SAkDgCvD,oBAAS,GAlDzC,qBAkDTwD,GAlDS,MAkDSC,GAlDT,MAiTVC,GAAc,uCAAG,4GAAAC,EAAA,6DAEjBC,EAAU,CACZC,MAAO,CACL7C,KAAMA,EACN8C,MAAO,KAETC,QAAS,CACPC,SAAUpC,GACVqC,YAAanC,GACbO,SAAUA,GACVG,QAASA,GACT0B,OAAQhC,GAAKF,IACbmC,WAAY9B,GAASL,IACrBoC,UAAW5B,GAAQR,IACnBY,WAAYA,GACZI,YAAaA,KAhBI,kBAoBEqB,IAAM,CACzBC,IAAI,GAAD,OAAKC,MAAL,kBAAkBC,IAAIC,QAAtB,WACHC,OAAQ,OACRxD,KAAM0C,IAvBW,OAoBfe,EApBe,OA0BnBC,EAAQD,EAASzD,KAAK2D,IA1BH,mEAuFrB,IAvDIC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAe,EACfC,EAAc,EACdC,EAAsB,EACtBC,EAAuB,EACvBC,EAAgB,EAChBC,EAAgB,EAChBC,EAAkB,EAClBC,EAAgB,EAChBC,EAAe,EACfC,EAAqB,EACrBC,EAAuB,EACvBC,EAAkB,EAClBC,EAAe,EACfC,EAAe,EACfC,EAAiB,EAErBnB,EAAMoB,KAAI,SAACC,EAAMC,GACfpB,EAAcqB,KAAKC,IAAItB,EAAamB,EAAKnE,QAAQuE,IAAIC,QACrDvB,EAAcoB,KAAKC,IAAIrB,EAAakB,EAAKnE,QAAQyE,IAAID,QACrDtB,EAAcmB,KAAKC,IAAIpB,EAAaiB,EAAKnE,QAAQ0E,IAAIF,QACrDrB,EAAekB,KAAKC,IAAInB,EAAcgB,EAAKnE,QAAQ2E,KAAKH,QACxDpB,EAAciB,KAAKC,IAAIlB,EAAae,EAAKnE,QAAQ4E,IAAIJ,QACrDnB,EAAsBgB,KAAKC,IACzBjB,EACAc,EAAKnE,QAAQ6E,YAAYL,QAE3BlB,EAAuBe,KAAKC,IAC1BhB,EACAa,EAAKnE,QAAQ8E,aAAaN,QAE5BjB,EAAgBc,KAAKC,IAAIf,EAAeY,EAAKnE,QAAQ+E,SAASP,QAC9DhB,EAAgBa,KAAKC,IAAId,EAAeW,EAAKnE,QAAQgF,MAAMR,QAC3Df,EAAkBY,KAAKC,IAAIb,EAAiBU,EAAKnE,QAAQiF,QAAQT,QACjEd,EAAgBW,KAAKC,IAAIZ,EAAeS,EAAKnE,QAAQkF,MAAMV,QAC3Db,EAAeU,KAAKC,IAAIX,EAAcQ,EAAKnE,QAAQmF,SAASX,QAC5DZ,EAAqBS,KAAKC,IACxBV,EACAO,EAAKnE,QAAQoF,WAAWZ,QAE1BX,EAAuBQ,KAAKC,IAC1BT,EACAM,EAAKnE,QAAQqF,aAAab,QAE5BV,EAAkBO,KAAKC,IAAIR,EAAiBK,EAAKnE,QAAQsF,QAAQd,QACjET,EAAeM,KAAKC,IAAIP,EAAcI,EAAKnE,QAAQuF,eAAef,QAClER,EAAeK,KAAKC,IAAIN,EAAcG,EAAKnE,QAAQwF,eAAehB,QAClEP,EAAiBI,KAAKC,IAAIL,EAAgBE,EAAKnE,QAAQyF,OAAOjB,WAI5DkB,EArFiB,uFAuFZC,EAAM,EAAGA,GAAO3C,EAAa2C,IACpCD,GAAG,cAAWC,EAAX,gBAAsBA,EAAtB,SAGL,IAASA,EAAM,EAAGA,GAAO1C,EAAa0C,IACpCD,GAAG,cAAWC,EAAX,gBAAsBA,EAAtB,SAGL,IAASA,EAAM,EAAGA,GAAOzC,EAAayC,IACpCD,GAAG,cAAWC,EAAX,gBAAsBA,EAAtB,SAGL,IAASA,EAAM,EAAGA,GAAOxC,EAAcwC,IACrCD,GAAG,eAAYC,EAAZ,iBAAwBA,EAAxB,SAGL,IAASA,EAAM,EAAGA,GAAOvC,EAAauC,IACpCD,GAAG,cAAWC,EAAX,gBAAsBA,EAAtB,SAGL,IAASA,EAAM,EAAGA,GAAOtC,EAAqBsC,IAC5CD,GAAG,sBAAmBC,EAAnB,wBAAsCA,EAAtC,SAGL,IAASA,EAAM,EAAGA,GAAOrC,EAAsBqC,IAC7CD,GAAG,wBAAqBC,EAArB,0BAA0CA,EAA1C,SAGL,IAASA,EAAM,EAAGA,GAAOpC,EAAeoC,IACtCD,GAAG,mBAAgBC,EAAhB,qBAAgCA,EAAhC,SAGL,IAASA,EAAM,EAAGA,GAAOnC,EAAemC,IACtCD,GAAG,gBAAaC,EAAb,kBAA0BA,EAA1B,SAGL,IAASA,EAAM,EAAGA,GAAOlC,EAAiBkC,IACxCD,GAAG,kBAAeC,EAAf,oBAA8BA,EAA9B,SAGL,IAASA,EAAM,EAAGA,GAAOjC,EAAeiC,IACtCD,GAAG,wBAAqBC,EAArB,0BAA0CA,EAA1C,SAGL,IAASA,EAAM,EAAGA,GAAOhC,EAAcgC,IACrCD,GAAG,oBAAiBC,EAAjB,sBAAkCA,EAAlC,SAGL,IAASA,EAAM,EAAGA,GAAO/B,EAAoB+B,IAC3CD,GAAG,sBAAmBC,EAAnB,wBAAsCA,EAAtC,SAGL,IAASA,EAAM,EAAGA,GAAO9B,EAAsB8B,IAC7CD,GAAG,wBAAqBC,EAArB,0BAA0CA,EAA1C,SAGL,IAASA,EAAM,EAAGA,GAAO7B,EAAiB6B,IACxCD,GAAG,mBAAgBC,EAAhB,qBAAgCA,EAAhC,SAGL,IAASA,EAAM,EAAGA,GAAO5B,EAAc4B,IACrCD,GAAG,0BAAuBC,EAAvB,4BAA8CA,EAA9C,SAGL,IAASA,EAAM,EAAGA,GAAO3B,EAAc2B,IACrCD,GAAG,0BAAuBC,EAAvB,4BAA8CA,EAA9C,SAGL,IAASA,EAAM,EAAGA,GAAO1B,EAAgB0B,IACvCD,GAAG,iBAAcC,EAAd,mBAA4BA,EAA5B,SAGLD,GAAG,KACH5C,EAAMoB,KAAI,SAACE,EAAGwB,GACZF,GACK,WACCtB,EAAEjC,YADH,cACoBiC,EAAE9D,aADtB,cACwC8D,EAAE3D,YAD1C,cAC2D2D,EAAEjE,SAD7D,cAC2EiE,EAAElC,SAD7E,cAC2FkC,EAAEpE,QAAQ6F,MADrG,cACgHzB,EAAEpE,QAAQ8F,MAD1H,cACqI1B,EAAEpE,QAAQ+F,SAD/I,cAC6J3B,EAAEpE,QAAQgG,GADvK,MAGL,IAAK,IAAI7B,EAAO,EAAGA,EAAOnB,EAAamB,IACjCC,EAAEpE,QAAQuE,IAAIJ,GAChBuB,GAAG,WAAQtB,EAAEpE,QAAQuE,IAAIJ,GAAM8B,QAA5B,cAAyC7B,EAAEpE,QAAQuE,IAAIJ,GAAM+B,OAA7D,MAEHR,GAAG,SAIP,IAAK,IAAIvB,EAAO,EAAGA,EAAOlB,EAAakB,IACjCC,EAAEpE,QAAQyE,IAAIN,GAChBuB,GAAG,WAAQtB,EAAEpE,QAAQyE,IAAIN,GAAMgC,QAA5B,cAAyC/B,EAAEpE,QAAQyE,IAAIN,GAAMiC,OAA7D,MAEHV,GAAG,SAIP,IAAK,IAAIvB,EAAO,EAAGA,EAAOjB,EAAaiB,IACjCC,EAAEpE,QAAQ0E,IAAIP,GAChBuB,GAAG,WAAQtB,EAAEpE,QAAQ0E,IAAIP,GAAMkC,QAA5B,cAAyCjC,EAAEpE,QAAQ0E,IAAIP,GAAMmC,OAA7D,MAEHZ,GAAG,SAIP,IAAK,IAAIvB,EAAO,EAAGA,EAAOhB,EAAcgB,IAClCC,EAAEpE,QAAQ2E,KAAKR,GACjBuB,GAAG,WAAQtB,EAAEpE,QAAQ2E,KAAKR,GAAMoC,SAA7B,cAA2CnC,EAAEpE,QAAQ2E,KAAKR,GAAMqC,QAAhE,MAEHd,GAAG,SAIP,IAAK,IAAIvB,EAAO,EAAGA,EAAOf,EAAae,IACjCC,EAAEpE,QAAQ4E,IAAIT,GAChBuB,GAAG,WAAQtB,EAAEpE,QAAQ4E,IAAIT,GAAMsC,QAA5B,cAAyCrC,EAAEpE,QAAQ4E,IAAIT,GAAMuC,OAA7D,MAEHhB,GAAG,SAIP,IAAK,IAAIvB,EAAO,EAAGA,EAAOd,EAAqBc,IACzCC,EAAEpE,QAAQ6E,YAAYV,GACxBuB,GAAG,WAAQtB,EAAEpE,QAAQ6E,YAAYV,GAAMwC,gBAApC,cAAyDvC,EAAEpE,QAAQ6E,YAAYV,GAAMyC,eAArF,MAEHlB,GAAG,SAIP,IAAK,IAAIvB,EAAO,EAAGA,EAAOb,EAAsBa,IAC1CC,EAAEpE,QAAQ8E,aAAaX,GACzBuB,GAAG,WAAQtB,EAAEpE,QAAQ8E,aAAaX,GAAM0C,iBAArC,cAA2DzC,EAAEpE,QAAQ8E,aAAaX,GAAM2C,gBAAxF,MAEHpB,GAAG,SAIP,IAAK,IAAIvB,EAAO,EAAGA,EAAOZ,EAAeY,IACnCC,EAAEpE,QAAQ+E,SAASZ,GACrBuB,GAAG,WAAQtB,EAAEpE,QAAQ+E,SAASZ,GAAM4C,aAAjC,cAAmD3C,EAAEpE,QAAQ+E,SAASZ,GAAM6C,YAA5E,MAEHtB,GAAG,SAIP,IAAK,IAAIvB,EAAO,EAAGA,EAAOX,EAAeW,IACnCC,EAAEpE,QAAQgF,MAAMb,GAClBuB,GAAG,WAAQtB,EAAEpE,QAAQgF,MAAMb,GAAM8C,UAA9B,cAA6C7C,EAAEpE,QAAQgF,MAAMb,GAAM+C,SAAnE,MAEHxB,GAAG,SAIP,IAAK,IAAIvB,EAAO,EAAGA,EAAOV,EAAiBU,IACrCC,EAAEpE,QAAQiF,QAAQd,GACpBuB,GAAG,WAAQtB,EAAEpE,QAAQiF,QAAQd,GAAMgD,YAAhC,cAAiD/C,EAAEpE,QAAQiF,QAAQd,GAAMiD,WAAzE,MAEH1B,GAAG,SAIP,IAAK,IAAIvB,EAAO,EAAGA,EAAOT,EAAeS,IACnCC,EAAEpE,QAAQkF,MAAMf,GAClBuB,GAAG,WAAQtB,EAAEpE,QAAQkF,MAAMf,GAAMkD,UAA9B,cAA6CjD,EAAEpE,QAAQkF,MAAMf,GAAMmD,SAAnE,MAEH5B,GAAG,SAIP,IAAK,IAAIvB,EAAO,EAAGA,EAAOR,EAAcQ,IAClCC,EAAEpE,QAAQmF,SAAShB,GACrBuB,GAAG,WAAQtB,EAAEpE,QAAQmF,SAAShB,GAAMoD,aAAjC,cAAmDnD,EAAEpE,QAAQmF,SAAShB,GAAMqD,YAA5E,MAEH9B,GAAG,SAIP,IAAK,IAAIvB,EAAO,EAAGA,EAAOP,EAAoBO,IACxCC,EAAEpE,QAAQoF,WAAWjB,GACvBuB,GAAG,WAAQtB,EAAEpE,QAAQoF,WAAWjB,GAAMsD,eAAnC,cAAuDrD,EAAEpE,QAAQoF,WAAWjB,GAAMuD,cAAlF,MAEHhC,GAAG,SAIP,IAAK,IAAIvB,EAAO,EAAGA,EAAON,EAAsBM,IAE9C,GAAIC,EAAEpE,QAAQqF,aAAalB,GAAO,CAChC,IAAIwD,EAAUC,KAAKC,MACjBD,KAAKE,UAAU1D,EAAEpE,QAAQqF,aAAalB,UAGT4D,IAA7BJ,EAAQK,kBACgB,IAAxBL,EAAQtC,aAERK,GAAG,WAAQtB,EAAEpE,QAAQqF,aAAalB,GAAM6D,iBAArC,cAA2D5D,EAAEpE,QAAQqF,aAAalB,GAAM8D,gBAAxF,MAEHvC,GAAG,SAMT,IAAK,IAAIvB,EAAO,EAAGA,EAAOL,EAAiBK,IACrCC,EAAEpE,QAAQsF,QAAQnB,GACpBuB,GAAG,WAAQtB,EAAEpE,QAAQsF,QAAQnB,GAAM+D,YAAhC,cAAiD9D,EAAEpE,QAAQsF,QAAQnB,GAAMgE,WAAzE,MAEHzC,GAAG,SAIP,IAAK,IAAIvB,EAAO,EAAGA,EAAOJ,EAAcI,IAClCC,EAAEpE,QAAQuF,eAAepB,GAC3BuB,GAAG,WAAQtB,EAAEpE,QAAQuF,eAAepB,GAAMiE,mBAAvC,cAA+DhE,EAAEpE,QAAQuF,eAAepB,GAAMkE,kBAA9F,MAEH3C,GAAG,SAIP,IAAK,IAAIvB,EAAO,EAAGA,EAAOH,EAAcG,IAClCC,EAAEpE,QAAQwF,eAAerB,GAC3BuB,GAAG,WAAQtB,EAAEpE,QAAQwF,eAAerB,GAAMmE,mBAAvC,cAA+DlE,EAAEpE,QAAQwF,eAAerB,GAAMoE,kBAA9F,MAEH7C,GAAG,SAKP,IAAK,IAAIvB,EAAO,EAAGA,EAAOH,EAAcG,IAClCC,EAAEpE,QAAQwF,eAAerB,GAC3BuB,GAAG,WAAQtB,EAAEpE,QAAQwF,eAAerB,GAAMmE,mBAAvC,cAA+DlE,EAAEpE,QAAQwF,eAAerB,GAAMoE,kBAA9F,MAEH7C,GAAG,SAKP,IAAK,IAAIvB,EAAO,EAAGA,EAAOF,EAAgBE,IACpCC,EAAEpE,QAAQyF,OAAOtB,GACnBuB,GAAG,WAAQtB,EAAEpE,QAAQyF,OAAOtB,GAAMqE,WAA/B,cAA+CpE,EAAEpE,QAAQyF,OAAOtB,GAAMsE,UAAtE,MAEH/C,GAAG,SAIPA,GAAG,QAGCgD,EAAU,IAAIC,KAAK,CAACjD,GAAM,CAAEkD,KAAM,4BACxCC,iBAAOH,EAAS,cA7UK,yDAAH,qDAgVdI,GAAuB,uCAAG,oCAAAjH,EAAA,6DAC1B6D,EAD0B,0IAI1B5D,EAAU,CACZC,MAAO,CACL7C,KAAMA,EACN8C,MAAO,KAETC,QAAS,CACPC,SAAUpC,GACVqC,YAAanC,GACbO,SAAUA,GACVG,QAASA,GACT0B,OAAQhC,GAAKF,IACbmC,WAAY9B,GAASL,IACrBoC,UAAW5B,GAAQR,IACnBY,WAAYA,GACZI,YAAaA,KAlBa,kBAsBPqB,IAAM,CACzBC,IAAI,GAAD,OAAKC,MAAL,kBAAkBC,IAAIC,QAAtB,WACHC,OAAQ,OACRxD,KAAM0C,IAzBoB,OAsBxBe,EAtBwB,OA2B5BkG,QAAQC,IAAInG,EAASzD,KAAK2D,KAC1BD,EAAQD,EAASzD,KAAK2D,IA5BM,qEAmC9BD,EAAMoB,KAAI,SAACE,EAAGwB,GACZF,GACK,WACCE,EAAQ,EADT,cACgBxB,EAAE9D,aADlB,cACoC8D,EAAE3D,YADtC,cAED2D,EAAEjE,SAFD,cAGGiE,EAAE6E,SAHL,cAGmBC,IAAO9E,EAAE+E,QAAQC,OAAO,cAH3C,cAG8DF,IAC/D9E,EAAEiF,cACFD,OAAO,cALN,cAKyBF,IAAO9E,EAAEkF,YAAYF,OAC/C,cANC,cAOIF,IAAO9E,EAAEmF,aAAaH,OAAO,cAPjC,cAOoDF,IACrD9E,EAAEoF,WACFJ,OAAO,cATN,cASyBhF,EAAEqF,QAT3B,cASwCrF,EAAEsF,UAT1C,cAUDtF,EAAEuF,UAVD,cAWGT,IAAO9E,EAAEkF,YAAYF,OAAO,QAX/B,cAW4ChF,EAAEjC,YAX9C,cAYDiC,EAAEpE,QAAQ+F,SAZT,WAePgD,QAAQC,IAAItD,GACNgD,EAAU,IAAIC,KAAK,CAACjD,GAAM,CAAEkD,KAAM,4BACxCC,iBAAOH,EAAS,cAtDc,0DAAH,qDAwDvBkB,GAAkB,uCAAG,oCAAA/H,EAAA,6DACrB6D,EADqB,2MAIrB5D,EAAU,CACZC,MAAO,CACL7C,KAAMA,EACN8C,MAAO,KAETC,QAAS,CACPC,SAAUpC,GACVqC,YAAanC,GACbO,SAAUA,GACVG,QAASA,GACT0B,OAAQhC,GAAKF,IACbmC,WAAY9B,GAASL,IACrBoC,UAAW5B,GAAQR,IACnBY,WAAYA,GACZI,YAAaA,KAlBQ,kBAsBFqB,IAAM,CACzBC,IAAI,GAAD,OAAKC,MAAL,kBAAkBC,IAAIC,QAAtB,WACHC,OAAQ,OACRxD,KAAM0C,IAzBe,OAsBnBe,EAtBmB,OA2BvBkG,QAAQC,IAAInG,EAASzD,KAAK2D,KAC1BD,EAAQD,EAASzD,KAAK2D,IA5BC,qEAkCzBD,EAAMoB,KAAI,SAACE,EAAGwB,GACZF,GACK,WACCE,EAAQ,EADT,cACgBxB,EAAE9D,aADlB,cACoC8D,EAAE3D,YADtC,cAED2D,EAAEjE,SAFD,cAGGiE,EAAE6E,SAHL,cAGmBC,IAAO9E,EAAE+E,QAAQC,OAAO,cAH3C,cAG8DF,IAC/D9E,EAAEiF,cACFD,OAAO,cALN,cAKyBF,IAAO9E,EAAEkF,YAAYF,OAC/C,cANC,cAOIF,IAAO9E,EAAEmF,aAAaH,OAAO,cAPjC,cAOoDF,IACrD9E,EAAEoF,WACFJ,OAAO,cATN,cASyBhF,EAAEqF,QAT3B,cASwCrF,EAAEsF,UAT1C,cAUDtF,EAAEuF,UAVD,cAWGT,IAAO9E,EAAEkF,YAAYF,OAAO,QAX/B,cAW4ChF,EAAEjC,YAX9C,cAYDiC,EAAEpE,QAAQ+F,SAZT,cAc4B,GAA7B3B,EAAEpE,QAAQ+E,SAASP,OACfJ,EAAEpE,QAAQ+E,SAAS,GAAGgC,aACtB,GAhBH,cAkB4B,GAA7B3C,EAAEpE,QAAQ+E,SAASP,OACfJ,EAAEpE,QAAQ+E,SAAS,GAAGiC,YACtB,GApBH,cAsByB,GAA1B5C,EAAEpE,QAAQgF,MAAMR,OAAcJ,EAAEpE,QAAQgF,MAAM,GAAGiC,UAAY,GAtB5D,cAwByB,GAA1B7C,EAAEpE,QAAQgF,MAAMR,OAAcJ,EAAEpE,QAAQgF,MAAM,GAAGkC,SAAW,GAxB3D,cA0B2B,GAA5B9C,EAAEpE,QAAQiF,QAAQT,OAAcJ,EAAEpE,QAAQiF,QAAQ,GAAGkC,YAAc,GA1BlE,cA4B2B,GAA5B/C,EAAEpE,QAAQiF,QAAQT,OAAcJ,EAAEpE,QAAQiF,QAAQ,GAAGmC,WAAa,GA5BjE,WA+BP2B,QAAQC,IAAItD,GACNgD,EAAU,IAAIC,KAAK,CAACjD,GAAM,CAAEkD,KAAM,4BACxCC,iBAAOH,EAAS,cArES,0DAAH,qDAgJxB,OArEAmB,qBAAU,WAER,OAAO,WACLpL,EAAY,GACZE,EAAgB,OAEjB,IAGHkL,qBAAU,WAER,OADA7K,EAAc,qBACP,WACLA,EAAc,OAEf,IAGH8K,mBAAQ,YAEN,uCAAC,8BAAAjI,EAAA,6DACCkH,QAAQC,IAAI,iBACRlH,EAAU,CACZC,MAAO,CACL7C,KAAMA,EACN8C,MA9uBe,IAgvBjBC,QAAS,CACPC,SAAUpC,GACVqC,YAAanC,GACbO,SAAUA,GACVG,QAASA,GACT0B,OAAQhC,GAAKF,IACbmC,WAAY9B,GAASL,IACrBoC,UAAW5B,GAAQR,IACnBY,WAAYA,GACZI,YAAaA,KAhBlB,kBAsBwBqB,IAAM,CACzBC,IAAI,GAAD,OAAKC,MAAL,kBAAkBC,IAAIC,QAAtB,WACHC,OAAQ,OACRxD,KAAM0C,IAzBX,cAsBOe,EAtBP,OA2BGkG,QAAQC,IAAInG,EAASzD,KAAK2D,KA3B7B,SA4BStB,GAAgBoB,EAASzD,KAAK2K,OA5BvC,OA8BGhB,QAAQC,IAAI,iBAAkBnG,EAASzD,KAAK2K,OAK5C1K,EAAQwD,EAASzD,KAAK2D,KAnCzB,qEA2CCgG,QAAQC,IAAI,eAAgBxH,IA3C7B,0DAAD,yDA8CC,CAACtC,EAAMY,GAAUE,GAASN,KAE7BqJ,QAAQC,IAAIpI,IAGV,oCAEE,kBAAC,IAAD,CACEpB,YAAaA,EACbC,eAAgBA,EAChBY,QAASA,GACTD,KAAMA,GACNG,SAAUA,GACVC,YAAaA,GACbE,QAASA,GACTC,WAAYA,GACZjB,QAASA,GACTC,WAAYA,KA5xBd,oCACE,kBAAC,QAAD,CACEqK,OAAQ1I,GACR2I,QAAS,kBAAM1I,IAAyB,IACxC2I,UAAU,2GAEV,kBAAC,cAAD,CAAaA,UAAU,0CAMvB,kBAAC,YAAD,KACE,yBAAKA,UAAU,8BAAf,iBAEA,kBAAC,iBAAD,CAAgBA,UAAU,QACxB,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,aACA,kBAAC,YAAD,iBACA,kBAAC,YAAD,sBACA,kBAAC,YAAD,yBACA,kBAAC,YAAD,uBACA,kBAAC,YAAD,eACA,kBAAC,YAAD,cACA,kBAAC,YAAD,qBACA,kBAAC,YAAD,iBAGJ,kBAAC,YAAD,KACG9I,GAAa8C,KAAI,SAACiG,EAAO/F,GAAR,OAChB,kBAAC,WAAD,CACE8F,UAAS,mEAETE,IAAKhG,EACLiG,QAAS,cAQT,kBAAC,YAAD,CAAWH,UAAU,OACnB,yBAAKA,UAAU,8BACb,6BACE,uBAAGA,UAAU,iBACVhB,IAAOiB,EAAMG,MAAMlB,OAAO,kBAKnC,kBAAC,YAAD,KACE,0BAAMc,UAAU,WACbK,qBAAWJ,EAAMK,YAItB,kBAAC,YAAD,KACE,0BAAMN,UAAU,WAAWC,EAAMM,iBAEnC,kBAAC,YAAD,KACE,0BAAMP,UAAU,WAAWC,EAAMO,iBAEnC,kBAAC,YAAD,KACE,0BAAMR,UAAU,WAAWC,EAAMQ,eAEnC,kBAAC,YAAD,KACE,8BACuB,GAApBR,EAAMS,WACL,kBAAC,QAAD,+BACE,KACiB,GAApBT,EAAMS,WACL,kBAAC,QAAD,qCACE,KACiB,GAApBT,EAAMS,WACL,kBAAC,QAAD,6BACE,KACiB,GAApBT,EAAMS,WACL,kBAAC,QAAD,iCACE,KACiB,GAApBT,EAAMS,WACL,kBAAC,QAAD,iCACE,KACiB,GAApBT,EAAMS,WACL,kBAAC,QAAD,6BACE,KACiB,GAApBT,EAAMS,WACL,kBAAC,QAAD,0BACE,KACiB,GAApBT,EAAMS,WACL,kBAAC,QAAD,2BACE,KACiB,GAApBT,EAAMS,WACL,kBAAC,QAAD,0BACE,KACiB,GAApBT,EAAMS,WACL,kBAAC,QAAD,yBACE,KACiB,IAApBT,EAAMS,WACL,kBAAC,QAAD,wBACE,KACiB,IAApBT,EAAMS,WACL,kBAAC,QAAD,qBACE,KACiB,IAApBT,EAAMS,WACL,kBAAC,QAAD,yBACE,KACiB,IAApBT,EAAMS,WACL,kBAAC,QAAD,qCACE,KACiB,IAApBT,EAAMS,WACL,kBAAC,QAAD,sBACE,KACiB,IAApBT,EAAMS,WACL,kBAAC,QAAD,iCACE,OAGR,kBAAC,YAAD,CAAWV,UAAU,0BACnB,0BAAMA,UAAU,wBACbC,EAAMU,OAGX,kBAAC,YAAD,KACE,0BAAMX,UAAU,WAAWC,EAAMW,cAEnC,kBAAC,YAAD,cA8BZ,kBAAC,cAAD,QAQJ,oCACE,kBAAC,QAAD,CACEd,OAAQ7L,EACR8L,QAAS,kBAAM7L,GAAqB,KAEpC,kBAAC,cAAD,yCACA,kBAAC,YAAD,MACA,kBAAC,cAAD,KACE,kBAAC,SAAD,CACE8L,UAAU,mBACVG,QAAO,sBAAE,8BAAAxI,EAAA,+EAEgBU,IAAM,CACzBC,IAAI,GAAD,OAAKC,MAAL,kBAAkBC,IAAIC,QAAtB,WACHC,OAAQ,OACRxD,KAAM,CAAE2L,GAAI1M,KALT,OAEDwE,EAFC,OAOLkG,QAAQC,IAAInG,EAASzD,MACjB+E,EAAO/E,EAAK4L,QAAO,SAACC,GAAD,OAAOA,EAAE/K,KAAO7B,KACvCgB,EAAQ8E,GACR/F,GAAqB,GAVhB,wHAFX,qBA8BN,oCACE,kBAAC,QAAD,CACE4L,OAAQtI,GACRuI,QAAS,kBAAMtI,IAAoB,IACnCuI,UAAU,mGAEV,kBAAC,cAAD,CAAaA,UAAU,IACrB,yBAAKA,UAAU,WAAf,0BAEF,kBAAC,YAAD,KACE,yBAAKA,UAAU,wDACb,kBAAC,SAAD,CACEgB,OAAO,UACPb,QAAS,WACPzI,OAHJ,iBAQA,kBAAC,SAAD,CACEsJ,OAAO,UACPb,QAAS,WACPvB,OAHJ,oBAQA,kBAAC,SAAD,CACEoC,OAAO,UACPb,QAAS,WACPT,OAHJ,iBA6jBR,yBAAKM,UAAU,cAgBb,yBAAKA,UAAU,IAEb,yBAAKiB,MAAM,gGACT,yBAAKA,MAAM,cACT,4BACEA,MAAM,8LACNd,QAAS,WACP5K,GAAgBD,KAHpB,iBASA,yBAAK2L,MAAM,uFACT,yBACEA,MAAM,uBACNC,MAAM,6BACNC,QAAQ,aAER,0BAAMC,EAAE,kFAKd,yBAAKH,MAAM,kBACT,4BACEA,MAAM,8LACNI,MAAOzL,GACP0L,SAAU,SAACC,GACT1L,GAAY0L,EAAEC,OAAOH,SAGvB,4BAAQA,MAAM,GAAGI,UAAQ,EAACC,UAAQ,GAAlC,iBAGA,4BAAQL,MAAM,IAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,YACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,SAGF,yBAAKJ,MAAM,uFACT,yBACEA,MAAM,uBACNC,MAAM,6BACNC,QAAQ,aAER,0BAAMC,EAAE,kFAKd,yBAAKH,MAAM,kBACT,4BACEA,MAAM,8LACNI,MAAOvL,GACPwL,SAAU,SAACC,GACTxL,GAAWwL,EAAEC,OAAOH,SAGtB,4BAAQA,MAAM,GAAGI,UAAQ,EAACC,UAAQ,GAAlC,gBAGA,4BAAQL,MAAM,IAAd,OACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,UAAd,WAGF,yBAAKJ,MAAM,uFACT,yBACEA,MAAM,uBACNC,MAAM,6BACNC,QAAQ,aAER,0BAAMC,EAAE,kFAMd,yBAAKpB,UAAU,aACb,4BACEG,QAAS,WACP9K,GAAa,IAEf2K,UAAU,0OACV2B,aAAW,gBACXC,gBAAc,QAEbhL,GAAaE,GAAc,oBAE9B,yBAAKmK,MAAM,uFACT,yBACEA,MAAM,uBACNC,MAAM,6BACNC,QAAQ,aAER,0BAAMC,EAAE,iFAGZ,kBAAC,WAAD,CACEtB,OAAQ1K,EACR2K,QAAS,kBAAM1K,GAAcD,KAE7B,kBAAC,eAAD,CACE+K,QAAS,WACP9K,GAAa,GACbwB,GAAc,IACdE,GAAe,IACfpB,IAAY,GACZsB,GAAe,IACfxB,IAAYD,MAGd,sCAEF,kBAAC,eAAD,CACE2K,QAAS,WACP9K,GAAa,GACbwB,GAAc,cACdE,GAAe,kBACfpB,IAAY,KAGd,iDAEF,kBAAC,eAAD,CACEwK,QAAS,WACP9K,GAAa,GACbwB,GAAc,eACdE,GAAe,mBACfpB,IAAY,KAGd,kDAEF,kBAAC,eAAD,CACEwK,QAAS,WACP9K,GAAa,GACbwB,GAAc,YACdE,GAAe,gBACfpB,IAAY,KAGd,+CAEF,kBAAC,eAAD,CACEwK,QAAS,WACP9K,GAAa,GACbwB,GAAc,kBACdE,GAAe,sBACfpB,IAAY,KAGd,qDAEF,kBAAC,eAAD,CACEwK,QAAS,WACP9K,GAAa,GACbwB,GAAc,cACdE,GAAe,kBACfpB,IAAY,KAGd,iDAEF,kBAAC,eAAD,CACEwK,QAAS,WACP9K,GAAa,GACbwB,GAAc,UACdE,GAAe,cACfpB,IAAY,KAGd,6CAEF,kBAAC,eAAD,CACEwK,QAAS,WACP9K,GAAa,GACbwB,GAAc,UACdE,GAAe,cACfpB,IAAY,KAGd,6CAEF,kBAAC,eAAD,CACEwK,QAAS,WACP9K,GAAa,GACbwB,GAAc,UACdE,GAAe,cACfpB,IAAY,KAGd,6CAEF,kBAAC,eAAD,CACEwK,QAAS,WACP9K,GAAa,GACbwB,GAAc,WACdE,GAAe,eACfpB,IAAY,KAGd,8CAEF,kBAAC,eAAD,CACEwK,QAAS,WACP9K,GAAa,GACbwB,GAAc,UACdE,GAAe,cACfpB,IAAY,KAGd,6CAEF,kBAAC,eAAD,CACEwK,QAAS,WACP9K,GAAa,GACbwB,GAAc,mBACdE,GAAe,wBACfpB,IAAY,KAGd,yDAKN,yBAAKsL,MAAM,2BACT,0BAAMA,MAAM,2DACV,yBACEE,QAAQ,YACRF,MAAM,sCAEN,0BAAMG,EAAE,4HAGZ,0BACES,SAAU,SAACN,GACTA,EAAEO,iBAEFrM,IAAYD,MAGd,2BACE6L,MAAOrK,GACPsK,SAAU,SAACC,GAAD,OAAOtK,GAAesK,EAAEC,OAAOH,QACzCU,YAAY,SACZN,SAAU/L,GACVuL,MAAM,8OAKZ,yBAAKA,MAAM,2BACT,kBAAC,SAAD,CACED,OAAO,UACPb,QAAS,WACP1I,IAAoB,KAHxB,kBAqCN,kBAAC,iBAAD,CAAgBuI,UAAU,QACxB,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,iBACA,kBAAC,YAAD,aACA,kBAAC,YAAD,iBACA,kBAAC,YAAD,gBACA,kBAAC,YAAD,uBACA,kBAAC,YAAD,sBACA,kBAAC,YAAD,oBACA,kBAAC,YAAD,wBACA,kBAAC,YAAD,sBACA,kBAAC,YAAD,sBAGJ,kBAAC,YAAD,KACG9K,EAAK8E,KAAI,SAACgI,EAAM9H,GAAP,OACR,kBAAC,WAAD,CACE8F,UAAS,iDACU,OAAjBgC,EAAKhK,SACD,yDACA,GAHG,YAKPrD,GAAeqN,EAAKhM,IAChB,yCACA,QAPG,KASTkK,IAAKhG,EACLiG,QAAS,WACP5L,EAAY,GACZK,EAAeoN,EAAKhM,KAEpBW,GAAgBqL,GAChBvN,EAAgBuN,KAIlB,kBAAC,YAAD,CAAWhC,UAAU,OACnB,yBAAKA,UAAU,8BAMb,6BACE,uBAAGA,UAAU,iBAAiBgC,EAAK5L,cACnC,uBAAG4J,UAAU,4CACVgC,EAAKzL,gBAKd,kBAAC,YAAD,KACE,0BAAMyJ,UAAU,WAAWgC,EAAK/L,WAElC,kBAAC,YAAD,KACE,kBAAC,QAAD,CACEyI,KAAuB,OAAjBsD,EAAKhK,SAAoB,UAAY,WAE1CgK,EAAKhK,WAGV,kBAAC,YAAD,KACE,0BAAMgI,UAAU,WAAWgC,EAAK/J,cAElC,kBAAC,YAAD,KACE,0BAAM+H,UAAU,WAAWgC,EAAKlM,QAAQ+F,WAE1C,kBAAC,YAAD,KACE,0BAAMmE,UAAU,WACbhB,IAAOgD,EAAK7C,cAAcD,OAAO,gBAGtC,kBAAC,YAAD,KACE,0BAAMc,UAAU,WACbhB,IAAOgD,EAAK5C,YAAYF,OAAO,gBAGpC,kBAAC,YAAD,KACE,0BAAMc,UAAU,WAAWgC,EAAKjD,WAElC,kBAAC,YAAD,KACE,0BAAMiB,UAAU,WACbhB,IAAOgD,EAAK/C,QAAQC,OAAO,gBAGhC,kBAAC,YAAD,KACE,yBAAKc,UAAU,+BACb,kBAAC,SAAD,CAAQgB,OAAO,OAAOiB,KAAK,OAAON,aAAW,QAC3C,kBAAC,IAAD,CACEzB,IAAK8B,EAAKhM,IACVkM,GAAE,2BAAsBF,EAAKhM,MAE7B,kBAAC,WAAD,CAAUgK,UAAU,UAAUmC,cAAY,UACpC,KAGQ,IAAjB3J,IAAI4J,UAAkB,KACrB,kBAAC,SAAD,CACEpB,OAAO,OACPiB,KAAK,OACLN,aAAW,SACXxB,QAAO,sBAAE,sBAAAxI,EAAA,sDACPkH,QAAQC,IAAI,gBACZ5K,GAAqB,GACrBE,EAAY4N,EAAKhM,KAHV,4CAMT,kBAAC,YAAD,CAAWgK,UAAU,UAAUmC,cAAY,UAG/C,kBAAC,SAAD,CACEhC,QAAS,WACPtB,QAAQC,IAAI,UAAW5J,EAAKgF,GAAGpE,QAAQuM,SACvClL,GAAgBjC,EAAKgF,GAAGpE,QAAQuM,SAChChL,IAAyB,IAE3B2J,OAAO,OACPiB,KAAK,OACLN,aAAW,QAEX,kBAAC,WAAD,CAAU3B,UAAU,UAAUmC,cAAY,kBAyCxD,kBAAC,cAAD,KACE,kBAAC,aAAD,CACE7K,aAAcA,GACdgL,eA3xCW,GA4xCXC,MAAM,mBACNjB,SAtxCZ,SAAsBkB,GACpBvN,EAAQuN,Y,oBCxFZ,OAOC,WACA,aAEA,IAAIC,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAEL1I,EAAI,EAAGA,EAAI2I,UAAUvI,OAAQJ,IAAK,CAC1C,IAAI4I,EAAMD,UAAU3I,GACpB,GAAK4I,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BH,EAAQI,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IAAQA,EAAIxI,OAAQ,CAC5C,IAAI6I,EAAQR,EAAWS,MAAM,KAAMN,GAC/BK,GACHP,EAAQI,KAAKG,QAER,GAAgB,WAAZJ,EACV,IAAK,IAAI7C,KAAO4C,EACXL,EAAOY,KAAKP,EAAK5C,IAAQ4C,EAAI5C,IAChC0C,EAAQI,KAAK9C,IAMjB,OAAO0C,EAAQU,KAAK,KAGgBC,EAAOC,SAC3Cb,EAAWc,QAAUd,EACrBY,EAAOC,QAAUb,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aAtCP,I,iCCPD,sCAmBee,IAhBf,YAKI,IAJIC,EAIL,EAJDC,KAIC,IAHDC,sBAGC,MAHgB,uCAGhB,MAFDC,oBAEC,MAFc,mCAEd,EADD9D,EACC,EADDA,UAIM+D,EAAMpB,IAFM,mBAEgBkB,EAAgBC,EAAc9D,GAChE,OACE,yBAAKA,UAAW+D,GACd,kBAACJ,EAAD,CAAM3D,UAAU,e,iCCdP,KACb,CACEgE,OAAQ,sEACRC,KAAM,kBACNC,IAAK,4BACLC,OAAQ,MACRC,OAAQ,UACRhE,KAAM,8DAER,CACE4D,OAAQ,mEACRC,KAAM,sBACNC,IAAK,kCACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,gEACRC,KAAM,cACNC,IAAK,0BACLC,OAAQ,OACRC,OAAQ,UACRhE,KAAM,8DAER,CACE4D,OAAQ,mEACRC,KAAM,mBACNC,IAAK,wBACLC,OAAQ,OACRC,OAAQ,UACRhE,KAAM,8DAER,CACE4D,OAAQ,mEACRC,KAAM,kBACNC,IAAK,mCACLC,OAAQ,MACRC,OAAQ,UACRhE,KAAM,8DAER,CACE4D,OAAQ,+DACRC,KAAM,oBACNC,IAAK,0BACLC,OAAQ,OACRC,OAAQ,UACRhE,KAAM,8DAER,CACE4D,OAAQ,qEACRC,KAAM,iBACNC,IAAK,0BACLC,OAAQ,OACRC,OAAQ,UACRhE,KAAM,8DAER,CACE4D,OAAQ,sEACRC,KAAM,eACNC,IAAK,0BACLC,OAAQ,IACRC,OAAQ,UACRhE,KAAM,8DAER,CACE4D,OAAQ,uEACRC,KAAM,gBACNC,IAAK,yBACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,mEACRC,KAAM,gBACNC,IAAK,2BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,iEACRC,KAAM,gBACNC,IAAK,4BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,qEACRC,KAAM,aACNC,IAAK,2BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,kEACRC,KAAM,kBACNC,IAAK,6BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,yEACRC,KAAM,cACNC,IAAK,mCACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,gEACRC,KAAM,oBACNC,IAAK,+BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,gEACRC,KAAM,eACNC,IAAK,qCACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,oEACRC,KAAM,kBACNC,IAAK,yBACLC,OAAQ,MACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,iEACRC,KAAM,kBACNC,IAAK,sBACLC,OAAQ,MACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,oEACRC,KAAM,gBACNC,IAAK,6BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,sEACRC,KAAM,mBACNC,IAAK,iCACLC,OAAQ,MACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,mEACRC,KAAM,aACNC,IAAK,4BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,mEACRC,KAAM,gBACNC,IAAK,yBACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,sEACRC,KAAM,gBACNC,IAAK,gCACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,uEACRC,KAAM,eACNC,IAAK,+BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,iEACRC,KAAM,gBACNC,IAAK,2BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,uEACRC,KAAM,aACNC,IAAK,4BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,oEACRC,KAAM,kBACNC,IAAK,sBACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,iEACRC,KAAM,gBACNC,IAAK,+BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,mEACRC,KAAM,mBACNC,IAAK,iCACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,wEACRC,KAAM,eACNC,IAAK,4BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,iEACRC,KAAM,kBACNC,IAAK,+BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,kEACRC,KAAM,YACNC,IAAK,8BACLC,OAAQ,MACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,sEACRC,KAAM,kBACNC,IAAK,6BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,qEACRC,KAAM,iBACNC,IAAK,0BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,kEACRC,KAAM,eACNC,IAAK,iCACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,kEACRC,KAAM,kBACNC,IAAK,kCACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,oEACRC,KAAM,gBACNC,IAAK,iCACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,mEACRC,KAAM,gBACNC,IAAK,kCACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,yEACRC,KAAM,iBACNC,IAAK,uBACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,oEACRC,KAAM,iBACNC,IAAK,oCACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,qEACRC,KAAM,iBACNC,IAAK,yBACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,kEACRC,KAAM,eACNC,IAAK,0BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,mEACRC,KAAM,aACNC,IAAK,mCACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,uEACRC,KAAM,gBACNC,IAAK,iCACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM,8DAER,CACE4D,OAAQ,+DACRC,KAAM,eACNC,IAAK,4BACLC,OAAQ,OACRC,OAAQ,SACRhE,KAAM","file":"static/js/43.1a3c7f50.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, useMemo } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport { capitalize } from \"../../helpers/toolfuctions/toolfunctions\";\n\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport { MenuIcon, EditIcon, TrashIcon } from \"../../icons\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport RoundIcon from \"../../components/RoundIcon\";\nimport response from \"../../utils/demo/tableData\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  Button,\n  TableFooter,\n  Badge,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport { API } from \"../../backendapi\";\nimport CustomerSelection from \"../../components/Modal/AssetFilters/CustomerSelection\";\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\nimport { Link } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n\nfunction Assets() {\n  // Bottom bar stuff\n  // const [bbaropen, setBBarOpen] = useContext(BottomBarContext);\n  // const [assetdetails, setAssetDetails] = useContext(BottomBarContext);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [deleteId, setDeleteId] = useState(0);\n\n  const { bbaropen, setBBarOpen, setAssetDetails, assetdetails } =\n    useContext(BottomBarContext);\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const [floatbox, setFloatBox] = useState(false);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  // dropdown and modals\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenTwo, setIsOpenTwo] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [Business, setBusiness] = useState(\"\");\n  const [product, setProduct] = useState(\"\");\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // asset history\n  const [assethistory, setAssetHistory] = useState([]);\n  const [assethistoryModalOpen, setAssetHistoryModalOpen] = useState(false);\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  //download\n  const [isDwnldModalOpen, setIsDwnldModalOpen] = useState(false);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n  const AssetHistoryModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={assethistoryModalOpen}\n          onClose={() => setAssetHistoryModalOpen(false)}\n          className=\"w-9/12 dark:bg-gray-800 p-10 my-6  bg-gray-50 text-gray-900 dark:text-white  rounded-lg overflow-y-auto\"\n        >\n          <ModalHeader className=\"flex flex-row justify-between text-xl\">\n            {/* <div>{item.name}</div> */}\n            {/* <div>\n                Asset Serial: <Badge>{}</Badge>{\" \"}\n              </div> */}\n          </ModalHeader>\n          <ModalBody>\n            <div className=\"font-semibold text-xl my-2\">Asset History</div>\n            {/* ------------------------- Table ------------------------------ */}\n            <TableContainer className=\"mt-4\">\n              <Table>\n                <TableHeader>\n                  <tr>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Engineer</TableCell>\n                    <TableCell>Attended Date</TableCell>\n                    <TableCell>Start Of Service</TableCell>\n                    <TableCell>End Of Service</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell>Notes</TableCell>\n                    <TableCell>Action Taken</TableCell>\n                    <TableCell>Images</TableCell>\n                  </tr>\n                </TableHeader>\n                <TableBody>\n                  {assethistory.map((entry, i) => (\n                    <TableRow\n                      className={`hover:shadow-lg dark:hover:bg-gray-600 \n                       `}\n                      key={i}\n                      onClick={() => {\n                        // setActiveRowId(user._id);\n                        // console.log(\"the id is \" + user._id);\n                        // setSelectedProd(user);\n                        // setAssetDetails(user);\n                        // console.log(user.product.keyboard[0].keyboardname);\n                      }}\n                    >\n                      <TableCell className=\"w-8\">\n                        <div className=\"flex items-center text-sm \">\n                          <div>\n                            <p className=\"font-semibold\">\n                              {moment(entry.date).format(\"DD-MM-YYYY\")}\n                            </p>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <span className=\"text-sm\">\n                          {capitalize(entry.engineer)}\n                        </span>\n                      </TableCell>\n\n                      <TableCell>\n                        <span className=\"text-sm\">{entry.callAttendDate}</span>\n                      </TableCell>\n                      <TableCell>\n                        <span className=\"text-sm\">{entry.startOfService}</span>\n                      </TableCell>\n                      <TableCell>\n                        <span className=\"text-sm\">{entry.endOfService}</span>\n                      </TableCell>\n                      <TableCell>\n                        <span>\n                          {entry.callStatus == 0 ? (\n                            <Badge>Pending For Allocation</Badge>\n                          ) : null}\n                          {entry.callStatus == 1 ? (\n                            <Badge>Pending for Percall Approval</Badge>\n                          ) : null}\n                          {entry.callStatus == 2 ? (\n                            <Badge>Pending for Response</Badge>\n                          ) : null}\n                          {entry.callStatus == 3 ? (\n                            <Badge>Pending for OEM Response</Badge>\n                          ) : null}\n                          {entry.callStatus == 4 ? (\n                            <Badge>Pending for 2nd Response</Badge>\n                          ) : null}\n                          {entry.callStatus == 5 ? (\n                            <Badge>Pending for Customer</Badge>\n                          ) : null}\n                          {entry.callStatus == 6 ? (\n                            <Badge>Under Observation</Badge>\n                          ) : null}\n                          {entry.callStatus == 7 ? (\n                            <Badge>Pending for Others</Badge>\n                          ) : null}\n                          {entry.callStatus == 8 ? (\n                            <Badge>Pending for Spare</Badge>\n                          ) : null}\n                          {entry.callStatus == 9 ? (\n                            <Badge>Spare in Transit</Badge>\n                          ) : null}\n                          {entry.callStatus == 10 ? (\n                            <Badge>Cancelled Calls</Badge>\n                          ) : null}\n                          {entry.callStatus == 11 ? (\n                            <Badge>Closed Calls</Badge>\n                          ) : null}\n                          {entry.callStatus == 12 ? (\n                            <Badge>Spare Taken CMRR</Badge>\n                          ) : null}\n                          {entry.callStatus == 13 ? (\n                            <Badge>Pending For Spare Collection</Badge>\n                          ) : null}\n                          {entry.callStatus == 14 ? (\n                            <Badge>Standby Given</Badge>\n                          ) : null}\n                          {entry.callStatus == 15 ? (\n                            <Badge>Pending For Verification</Badge>\n                          ) : null}\n                        </span>\n                      </TableCell>\n                      <TableCell className=\"flex flex-row max-w-sm\">\n                        <span className=\"w-full overflow-auto\">\n                          {entry.note}\n                        </span>\n                      </TableCell>\n                      <TableCell>\n                        <span className=\"text-sm\">{entry.actionTaken}</span>\n                      </TableCell>\n                      <TableCell>\n                        {/* <Button\n                            layout=\"outline\"\n                            onClick={() => {\n                              if (entry.newUrl)\n                                setGoodSpareHistoryImg(entry.newUrl);\n                              if (entry.existUrl)\n                                setDefectiveHistoryImg(entry.existUrl);\n                              if (entry.ccfrImgUrl)\n                                setCcfrHistoryImg(entry.ccfrImgUrl);\n                              setIsHistoryImgViewModal(true);\n                            }}\n                          >\n                            Show\n                          </Button> */}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n              {/* <TableFooter>\n                  <Pagination\n                    totalResults={totalResults}\n                    resultsPerPage={resultsPerPage}\n                    label=\"Table navigation\"\n                    onChange={onPageChange}\n                  />\n                </TableFooter> */}\n            </TableContainer>\n          </ModalBody>\n          <ModalFooter></ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const DeleteModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isDeleteModalOpen}\n          onClose={() => setIsDeleteModalOpen(false)}\n        >\n          <ModalHeader>Are you sure you want to delete!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                try {\n                  let response = await axios({\n                    url: `${API}/asset/${Emp.getId()}/delete`,\n                    method: \"POST\",\n                    data: { id: deleteId },\n                  });\n                  console.log(response.data);\n                  let temp = data.filter((x) => x._id != deleteId);\n                  setData(temp);\n                  setIsDeleteModalOpen(false);\n\n                  // setData(response.data);\n                } catch (error) {\n                  throw error;\n                }\n              }}\n            >\n              Confirm Delete\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const DwnldModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isDwnldModalOpen}\n          onClose={() => setIsDwnldModalOpen(false)}\n          className=\" dark:bg-gray-800 p-5  mx-10  bg-gray-50 text-gray-900 dark:text-white text-center  rounded-lg \"\n        >\n          <ModalHeader className=\"\">\n            <div className=\"text-lg\">Select Type Of Export</div>\n          </ModalHeader>\n          <ModalBody>\n            <div className=\"flex flex-row items-center justify-between space-x-4\">\n              <Button\n                layout=\"outline\"\n                onClick={() => {\n                  downloadAssets();\n                }}\n              >\n                Full Database\n              </Button>\n              <Button\n                layout=\"outline\"\n                onClick={() => {\n                  downloadContractDetails();\n                }}\n              >\n                Contract Details\n              </Button>\n              <Button\n                layout=\"outline\"\n                onClick={() => {\n                  downloadMIFDetails();\n                }}\n              >\n                Brief MIF\n              </Button>\n            </div>\n          </ModalBody>\n          {/* <ModalFooter></ModalFooter> */}\n        </Modal>\n      </>\n    );\n  };\n\n  const downloadAssets = async () => {\n    let array;\n    let payload = {\n      pages: {\n        page: page,\n        limit: 10000000,\n      },\n      filters: {\n        business: Business,\n        producttype: product,\n        customer: customer,\n        account: account,\n        unitId: unit._id,\n        customerId: customer._id,\n        accountId: account._id,\n        searchtype: searchtype,\n        searchquery: searchquery,\n      },\n    };\n    try {\n      let response = await axios({\n        url: `${API}/asset/${Emp.getId()}/getall`,\n        method: \"POST\",\n        data: payload,\n      });\n      // console.log(response.data.out);\n      array = response.data.out;\n      // return response.data;\n    } catch (error) {\n      throw error;\n    }\n    //counting how many headings are required in\n    let maxcpucount = 0;\n    let maxramcount = 0;\n    let maxhddcount = 0;\n    let maxsmpscount = 0;\n    let maxfancount = 0;\n    let maxmotherboardcount = 0;\n    let maxopticaldrivecount = 0;\n    let maxkeybdcount = 0;\n    let maxmousecount = 0;\n    let maxmonitorcount = 0;\n    let maxgcardcount = 0;\n    let maxenetcount = 0;\n    let maxserialcardcount = 0;\n    let maxparalellcardcount = 0;\n    let maxhbacardcount = 0;\n    let maxraidcount = 0;\n    let maxtapecount = 0;\n    let maxotherscount = 0;\n\n    array.map((temp, i) => {\n      maxcpucount = Math.max(maxcpucount, temp.product.cpu.length);\n      maxramcount = Math.max(maxramcount, temp.product.ram.length);\n      maxhddcount = Math.max(maxhddcount, temp.product.hdd.length);\n      maxsmpscount = Math.max(maxsmpscount, temp.product.smps.length);\n      maxfancount = Math.max(maxfancount, temp.product.fan.length);\n      maxmotherboardcount = Math.max(\n        maxmotherboardcount,\n        temp.product.motherboard.length\n      );\n      maxopticaldrivecount = Math.max(\n        maxopticaldrivecount,\n        temp.product.opticaldrive.length\n      );\n      maxkeybdcount = Math.max(maxkeybdcount, temp.product.keyboard.length);\n      maxmousecount = Math.max(maxmousecount, temp.product.mouse.length);\n      maxmonitorcount = Math.max(maxmonitorcount, temp.product.monitor.length);\n      maxgcardcount = Math.max(maxgcardcount, temp.product.gcard.length);\n      maxenetcount = Math.max(maxenetcount, temp.product.enetcard.length);\n      maxserialcardcount = Math.max(\n        maxserialcardcount,\n        temp.product.serialcard.length\n      );\n      maxparalellcardcount = Math.max(\n        maxparalellcardcount,\n        temp.product.parallelcard.length\n      );\n      maxhbacardcount = Math.max(maxhbacardcount, temp.product.hbacard.length);\n      maxraidcount = Math.max(maxraidcount, temp.product.raidcontroller.length);\n      maxtapecount = Math.max(maxtapecount, temp.product.tapecontroller.length);\n      maxotherscount = Math.max(maxotherscount, temp.product.others.length);\n    });\n    // console.log(\"maxcpucount=\", maxcpucount);\n\n    let csv = `ProductType,Customer,Account,Unit,Business,Brand,Model,SerialNumber,OperatingSystem,`;\n    //cpu headings\n    for (let ttt = 1; ttt <= maxcpucount; ttt++) {\n      csv += `CPU ${ttt},CPU ${ttt} SNo,`;\n    }\n    //ram headings\n    for (let ttt = 1; ttt <= maxramcount; ttt++) {\n      csv += `RAM ${ttt},RAM ${ttt} SNo,`;\n    }\n    // hdd headings\n    for (let ttt = 1; ttt <= maxhddcount; ttt++) {\n      csv += `HDD ${ttt},HDD ${ttt} SNo,`;\n    }\n    // smps headings\n    for (let ttt = 1; ttt <= maxsmpscount; ttt++) {\n      csv += `SMPS ${ttt},SMPS ${ttt} SNo,`;\n    }\n    // fan headings\n    for (let ttt = 1; ttt <= maxfancount; ttt++) {\n      csv += `Fan ${ttt},Fan ${ttt} SNo,`;\n    }\n    // motherboard headings\n    for (let ttt = 1; ttt <= maxmotherboardcount; ttt++) {\n      csv += `Motherboard ${ttt},Motherboard ${ttt} SNo,`;\n    }\n    // optical headings\n    for (let ttt = 1; ttt <= maxopticaldrivecount; ttt++) {\n      csv += `Optical Drive ${ttt},Optical Drive ${ttt} SNo,`;\n    }\n    // keyboard headings\n    for (let ttt = 1; ttt <= maxkeybdcount; ttt++) {\n      csv += `Keyboard ${ttt},Keyboard ${ttt} SNo,`;\n    }\n    // mouse headings\n    for (let ttt = 1; ttt <= maxmousecount; ttt++) {\n      csv += `Mouse ${ttt},Mouse ${ttt} SNo,`;\n    }\n    // monitor headings\n    for (let ttt = 1; ttt <= maxmonitorcount; ttt++) {\n      csv += `Monitor ${ttt},Monitor ${ttt} SNo,`;\n    }\n    // gcard headings\n    for (let ttt = 1; ttt <= maxgcardcount; ttt++) {\n      csv += `Graphics Card ${ttt},Graphics Card ${ttt} SNo,`;\n    }\n    // enet headings\n    for (let ttt = 1; ttt <= maxenetcount; ttt++) {\n      csv += `Enet Card ${ttt},Enet Card ${ttt} SNo,`;\n    }\n    // serial headings\n    for (let ttt = 1; ttt <= maxserialcardcount; ttt++) {\n      csv += `Serial Card ${ttt},Serial Card ${ttt} SNo,`;\n    }\n    // paralell headings\n    for (let ttt = 1; ttt <= maxparalellcardcount; ttt++) {\n      csv += `Parallel Card ${ttt},Parallel Card ${ttt} SNo,`;\n    }\n    // hba headings\n    for (let ttt = 1; ttt <= maxhbacardcount; ttt++) {\n      csv += `HBA Card ${ttt},HBA Card ${ttt} SNo,`;\n    }\n    // raid headings\n    for (let ttt = 1; ttt <= maxraidcount; ttt++) {\n      csv += `Raid Controller ${ttt},Raid Controller ${ttt} SNo,`;\n    }\n    // tape headings\n    for (let ttt = 1; ttt <= maxtapecount; ttt++) {\n      csv += `Tape Controller ${ttt},Tape Controller ${ttt} SNo,`;\n    }\n    // others headings\n    for (let ttt = 1; ttt <= maxotherscount; ttt++) {\n      csv += `Others ${ttt},Others ${ttt} SNo,`;\n    }\n\n    csv += `\\n`;\n    array.map((i, count) => {\n      csv =\n        csv +\n        `\"${i.producttype}\",\"${i.customerName}\",\"${i.accountName}\",\"${i.unitName}\",\"${i.business}\",\"${i.product.brand}\",\"${i.product.model}\",\"${i.product.serialno}\",\"${i.product.os}\",`;\n      //cpu insert\n      for (let temp = 0; temp < maxcpucount; temp++) {\n        if (i.product.cpu[temp]) {\n          csv += `\"${i.product.cpu[temp].cpuname}\",\"${i.product.cpu[temp].cpusno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n      //ram insert\n      for (let temp = 0; temp < maxramcount; temp++) {\n        if (i.product.ram[temp]) {\n          csv += `\"${i.product.ram[temp].ramname}\",\"${i.product.ram[temp].ramsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n      //hdd insert\n      for (let temp = 0; temp < maxhddcount; temp++) {\n        if (i.product.hdd[temp]) {\n          csv += `\"${i.product.hdd[temp].hddname}\",\"${i.product.hdd[temp].hddsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n      //smps insert\n      for (let temp = 0; temp < maxsmpscount; temp++) {\n        if (i.product.smps[temp]) {\n          csv += `\"${i.product.smps[temp].smpsname}\",\"${i.product.smps[temp].smpssno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n      //fan insert\n      for (let temp = 0; temp < maxfancount; temp++) {\n        if (i.product.fan[temp]) {\n          csv += `\"${i.product.fan[temp].fanname}\",\"${i.product.fan[temp].fansno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n      //motherboard insert\n      for (let temp = 0; temp < maxmotherboardcount; temp++) {\n        if (i.product.motherboard[temp]) {\n          csv += `\"${i.product.motherboard[temp].motherboardname}\",\"${i.product.motherboard[temp].motherboardsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n      //optical insert\n      for (let temp = 0; temp < maxopticaldrivecount; temp++) {\n        if (i.product.opticaldrive[temp]) {\n          csv += `\"${i.product.opticaldrive[temp].opticaldrivename}\",\"${i.product.opticaldrive[temp].opticaldrivesno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n      //keyboard insert\n      for (let temp = 0; temp < maxkeybdcount; temp++) {\n        if (i.product.keyboard[temp]) {\n          csv += `\"${i.product.keyboard[temp].keyboardname}\",\"${i.product.keyboard[temp].keyboardsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n      //mouse insert\n      for (let temp = 0; temp < maxmousecount; temp++) {\n        if (i.product.mouse[temp]) {\n          csv += `\"${i.product.mouse[temp].mousename}\",\"${i.product.mouse[temp].mousesno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n      //monitor insert\n      for (let temp = 0; temp < maxmonitorcount; temp++) {\n        if (i.product.monitor[temp]) {\n          csv += `\"${i.product.monitor[temp].monitorname}\",\"${i.product.monitor[temp].monitorsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n      //gcard insert\n      for (let temp = 0; temp < maxgcardcount; temp++) {\n        if (i.product.gcard[temp]) {\n          csv += `\"${i.product.gcard[temp].gcardname}\",\"${i.product.gcard[temp].gcardsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n      //enet insert\n      for (let temp = 0; temp < maxenetcount; temp++) {\n        if (i.product.enetcard[temp]) {\n          csv += `\"${i.product.enetcard[temp].enetcardname}\",\"${i.product.enetcard[temp].enetcardsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n      //serial insert\n      for (let temp = 0; temp < maxserialcardcount; temp++) {\n        if (i.product.serialcard[temp]) {\n          csv += `\"${i.product.serialcard[temp].serialcardname}\",\"${i.product.serialcard[temp].serialcardsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n      //parallel insert\n      for (let temp = 0; temp < maxparalellcardcount; temp++) {\n        // TODO must fix this laterrrr\n        if (i.product.parallelcard[temp]) {\n          let tstring = JSON.parse(\n            JSON.stringify(i.product.parallelcard[temp])\n          );\n          if (\n            tstring.parallelcardname !== undefined &&\n            tstring.parallelcard != \"\"\n          ) {\n            csv += `\"${i.product.parallelcard[temp].parallelcardname}\",\"${i.product.parallelcard[temp].parallelcardsno}\",`;\n          } else {\n            csv += `\"\",\"\",`;\n          }\n        }\n      }\n\n      //hba insert\n      for (let temp = 0; temp < maxhbacardcount; temp++) {\n        if (i.product.hbacard[temp]) {\n          csv += `\"${i.product.hbacard[temp].hbacardname}\",\"${i.product.hbacard[temp].hbacardsno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n      //raid controller insert\n      for (let temp = 0; temp < maxraidcount; temp++) {\n        if (i.product.raidcontroller[temp]) {\n          csv += `\"${i.product.raidcontroller[temp].raidcontrollername}\",\"${i.product.raidcontroller[temp].raidcontrollersno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n      //tape controller insert\n      for (let temp = 0; temp < maxtapecount; temp++) {\n        if (i.product.tapecontroller[temp]) {\n          csv += `\"${i.product.tapecontroller[temp].tapecontrollername}\",\"${i.product.tapecontroller[temp].tapecontrollersno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //tape controller insert\n      for (let temp = 0; temp < maxtapecount; temp++) {\n        if (i.product.tapecontroller[temp]) {\n          csv += `\"${i.product.tapecontroller[temp].tapecontrollername}\",\"${i.product.tapecontroller[temp].tapecontrollersno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      //others controller insert\n      for (let temp = 0; temp < maxotherscount; temp++) {\n        if (i.product.others[temp]) {\n          csv += `\"${i.product.others[temp].othersname}\",\"${i.product.others[temp].otherssno}\",`;\n        } else {\n          csv += `\"\",\"\",`;\n        }\n      }\n\n      csv += `\\n`;\n    });\n    // console.log(csv); //product.\n    const csvData = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    saveAs(csvData, \"Assets.csv\");\n  };\n\n  const downloadContractDetails = async () => {\n    let csv = `SLNo,Customer,Account,Unit,PoNumber,PoDate,ContactFrom,ContractTo,BillingFrom,BillingTo,Rate,Gst,Amount,ExpiryMonth,Product,SerialNo,\\n`;\n\n    let array;\n    let payload = {\n      pages: {\n        page: page,\n        limit: 10000000,\n      },\n      filters: {\n        business: Business,\n        producttype: product,\n        customer: customer,\n        account: account,\n        unitId: unit._id,\n        customerId: customer._id,\n        accountId: account._id,\n        searchtype: searchtype,\n        searchquery: searchquery,\n      },\n    };\n    try {\n      let response = await axios({\n        url: `${API}/asset/${Emp.getId()}/getall`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data.out);\n      array = response.data.out;\n      // return response.data;\n    } catch (error) {\n      throw error;\n    }\n\n    // let csv = `SLNo,Customer,Account,Unit,PoNumber,PoDate,ContactFrom,ContractTo,BillingFrom,BillingTo,Rate,Gst,Amount,Expiry Month,Product,SerialNo,\\n`;\n    array.map((i, count) => {\n      csv =\n        csv +\n        `\"${count + 1}\",\"${i.customerName}\",\"${i.accountName}\",\"${\n          i.unitName\n        }\",\"${i.ponumber}\",\"${moment(i.podate).format(\"DD/MM/YYYY\")}\",\"${moment(\n          i.contractfrom\n        ).format(\"DD/MM/YYYY\")}\",\"${moment(i.contractto).format(\n          \"DD/MM/YYYY\"\n        )}\",\"${moment(i.billingfrom).format(\"DD/MM/YYYY\")}\",\"${moment(\n          i.billingto\n        ).format(\"DD/MM/YYYY\")}\",\"${i.amcrate}\",\"${i.gstamount}\",\"${\n          i.netamount\n        }\",\"${moment(i.contractto).format(\"MMMM\")}\",\"${i.producttype}\",\"${\n          i.product.serialno\n        }\",\\n`;\n    });\n    console.log(csv); //product.\n    const csvData = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    saveAs(csvData, \"Assets.csv\");\n  };\n  const downloadMIFDetails = async () => {\n    let csv = `SLNo,Customer,Account,Unit,PoNumber,PoDate,ContactFrom,ContractTo,BillingFrom,BillingTo,Rate,Gst,Amount,ExpiryMonth,Product,SerialNo,Keyboard,KbdSerialNo,Mouse,MouseSerialNo,Monitor,MonitorSerialNo,\\n`;\n\n    let array;\n    let payload = {\n      pages: {\n        page: page,\n        limit: 10000000,\n      },\n      filters: {\n        business: Business,\n        producttype: product,\n        customer: customer,\n        account: account,\n        unitId: unit._id,\n        customerId: customer._id,\n        accountId: account._id,\n        searchtype: searchtype,\n        searchquery: searchquery,\n      },\n    };\n    try {\n      let response = await axios({\n        url: `${API}/asset/${Emp.getId()}/getall`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data.out);\n      array = response.data.out;\n      // return response.data;\n    } catch (error) {\n      throw error;\n    }\n\n    array.map((i, count) => {\n      csv =\n        csv +\n        `\"${count + 1}\",\"${i.customerName}\",\"${i.accountName}\",\"${\n          i.unitName\n        }\",\"${i.ponumber}\",\"${moment(i.podate).format(\"DD/MM/YYYY\")}\",\"${moment(\n          i.contractfrom\n        ).format(\"DD/MM/YYYY\")}\",\"${moment(i.contractto).format(\n          \"DD/MM/YYYY\"\n        )}\",\"${moment(i.billingfrom).format(\"DD/MM/YYYY\")}\",\"${moment(\n          i.billingto\n        ).format(\"DD/MM/YYYY\")}\",\"${i.amcrate}\",\"${i.gstamount}\",\"${\n          i.netamount\n        }\",\"${moment(i.contractto).format(\"MMMM\")}\",\"${i.producttype}\",\"${\n          i.product.serialno\n        }\",\"${\n          i.product.keyboard.length != 0\n            ? i.product.keyboard[0].keyboardname\n            : \"\"\n        }\",\"${\n          i.product.keyboard.length != 0\n            ? i.product.keyboard[0].keyboardsno\n            : \"\"\n        }\",\"${\n          i.product.mouse.length != 0 ? i.product.mouse[0].mousename : \"\"\n        }\",\"${\n          i.product.mouse.length != 0 ? i.product.mouse[0].mousesno : \"\"\n        }\",\"${\n          i.product.monitor.length != 0 ? i.product.monitor[0].monitorname : \"\"\n        }\",\"${\n          i.product.monitor.length != 0 ? i.product.monitor[0].monitorsno : \"\"\n        }\",\\n`;\n    });\n    console.log(csv); //product.\n    const csvData = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    saveAs(csvData, \"Assets.csv\");\n  };\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n  // -------Enabling Bottom Bar----\n  useEffect(() => {\n    // setBBarOpen(1);\n    return () => {\n      setBBarOpen(0);\n      setAssetDetails({});\n    };\n  }, []);\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Assets Management\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useMemo(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          business: Business,\n          producttype: product,\n          customer: customer,\n          account: account,\n          unitId: unit._id,\n          customerId: customer._id,\n          accountId: account._id,\n          searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/asset/${Emp.getId()}/getall`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        await setTotalResults(response.data.total);\n\n        console.log(\"response total\", response.data.total);\n\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n        // if (searchquery != \"\") {\n        //   setPage(1);\n        // }\n      } catch (error) {\n        throw error;\n      }\n\n      console.log(\"totalResults\", totalResults);\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, Business, product, refresh]);\n\n  console.log(selectedprod);\n\n  return (\n    <>\n      {/* ---------------------Modals----------------------------------------- */}\n      <CustomerSelection\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setUnit={setUnit}\n        unit={unit}\n        customer={customer}\n        setCustomer={setCustomer}\n        account={account}\n        setAccount={setAccount}\n        refresh={refresh}\n        setRefresh={setRefresh}\n      />\n      {AssetHistoryModal()}\n      {DeleteModal()}\n      {DwnldModal()}\n      {/* ---------------------Customer Selection Modal----------------------------------------- */}\n\n      {/* {floatbox ? <AssetFloat /> : null} */}\n      <div className=\"mb-64 mt-4\">\n        {/* <div className=\"flex items-center\">\n          <PageTitle>Assets Management</PageTitle>\n          <div>\n            <Button\n              className=\"mx-3\"\n              onClick={() => {\n                setFloatBox(!floatbox);\n              }}\n              icon={HeartIcon}\n              layout=\"link\"\n              aria-label=\"Like\"\n            />\n          </div>\n        </div> */}\n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-6 \">\n            <div class=\"relative  \">\n              <button\n                class=\" shadow-md appearance-none h-full rounded border block w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                onClick={() => {\n                  setIsModalOpen(!isModalOpen);\n                }}\n              >\n                Pick Customer\n              </button>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            <div class=\"relative mx-5 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={Business}\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Business Type\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"AMC\">AMC</option>\n                <option value=\"WTY\">Warranty</option>\n                <option value=\"NOS\">NOS</option>\n                <option value=\"DEAD\">DEAD</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/*------------ new product dropdown----------- */}\n            <div class=\"relative mx-5 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={product}\n                onChange={(e) => {\n                  setProduct(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Pick Product\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Console\">Console</option>\n                <option value=\"DMP\">DMP</option>\n                <option value=\"Inkjet\">Inkjet</option>\n                <option value=\"KVM\">KVM</option>\n                <option value=\"Laptop\">Laptop</option>\n                <option value=\"Laser\">Laser</option>\n                <option value=\"LMP\">LMP</option>\n                <option value=\"Module\">Module</option>\n                <option value=\"Router\">Router</option>\n                <option value=\"Scanner\">Scanner</option>\n                <option value=\"Server\">Server</option>\n                <option value=\"Desktop\">Desktop</option>\n                <option value=\"Storage\">Storage</option>\n                <option value=\"Switch\">Switch</option>\n                <option value=\"UPS\">UPS</option>\n                <option value=\"Ncompute\">Ncompute</option>\n                <option value=\"Others\">Others</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* -------------------------------Search Type--------------------------------------- */}\n            <div className=\"relative \">\n              <button\n                onClick={() => {\n                  setIsOpenTwo(true);\n                }}\n                className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                aria-label=\"Notifications\"\n                aria-haspopup=\"true\"\n              >\n                {searchtype ? searchlabel : \"Pick Search Type\"}\n              </button>\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n              <Dropdown\n                isOpen={isOpenTwo}\n                onClose={() => setIsOpenTwo(!isOpenTwo)}\n              >\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"\");\n                    setSearchLabel(\"\");\n                    setDisabler(true);\n                    setSearchQuery(\"\");\n                    setRefresh(!refresh);\n                  }}\n                >\n                  <span>All</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"prodserial\");\n                    setSearchLabel(\"Product Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Product Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"keyboardsno\");\n                    setSearchLabel(\"Keyboard Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Keyboard Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"mousesno\");\n                    setSearchLabel(\"Mouse Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Mouse Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"motherboardsno\");\n                    setSearchLabel(\"Motherboard Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Motherboard Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"monitorsno\");\n                    setSearchLabel(\"Monitor Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Monitor Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"hddsno\");\n                    setSearchLabel(\"HDD Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>HDD Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"cpusno\");\n                    setSearchLabel(\"CPU Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>CPU Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"ramsno\");\n                    setSearchLabel(\"Ram Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>RAM Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"smpssno\");\n                    setSearchLabel(\"SMPS Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>SMPS Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"fansno\");\n                    setSearchLabel(\"Fan Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Fan Serial</span>\n                </DropdownItem>\n                <DropdownItem\n                  onClick={() => {\n                    setIsOpenTwo(false);\n                    setSearchType(\"opticaldrivesno\");\n                    setSearchLabel(\"Optical Drive Serial\");\n                    setDisabler(false);\n                  }}\n                >\n                  <span>Optical Drive Serial</span>\n                </DropdownItem>\n              </Dropdown>\n            </div>\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  // setPage(1);\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search\"\n                  disabled={disabler}\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n\n            <div class=\"block relative xl:ml-64\">\n              <Button\n                layout=\"outline\"\n                onClick={() => {\n                  setIsDwnldModalOpen(true);\n                }}\n              >\n                Export Data\n              </Button>\n            </div>\n          </div>\n          {/* ----------------------------------------Row 2 -------------------------------------------------------------------- */}\n          {/* <div className=\"my-4 flex \">\n            <div class=\"relative \">\n              <select\n                class=\" shadow-md appearance-none h-full rounded border block w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                // value={sortBy}\n                // onChange={onSortToggle}\n              >\n                <option value=\"TIME_ASC\">Time(Latest)</option>\n                <option value=\"TIME_DESC\">Time(Oldest)</option>\n                <option value=\"NAME_ASC\">Name(A-Z)</option>\n                <option value=\"NAME_DESC\">Name(Z-A)</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n          </div> */}\n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Customer</TableCell>\n                <TableCell>Unit</TableCell>\n                <TableCell>Business</TableCell>\n                <TableCell>Product</TableCell>\n                <TableCell>Product Serial</TableCell>\n                <TableCell>Contract From</TableCell>\n                <TableCell>Contract To</TableCell>\n                <TableCell>Purchase Number</TableCell>\n                <TableCell>Purchase Date</TableCell>\n                <TableCell>Edit/Delete</TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <TableRow\n                  className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                    user.business == \"NOS\"\n                      ? \"bg-red-200 dark:bg-red-900 bg-transparent border-white\"\n                      : \"\"\n                  } ${\n                    activerowid == user._id\n                      ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                      : \"white\"\n                  } `}\n                  key={i}\n                  onClick={() => {\n                    setBBarOpen(1);\n                    setActiveRowId(user._id);\n                    // console.log(\"the id is \" + user._id);\n                    setSelectedProd(user);\n                    setAssetDetails(user);\n                    // console.log(user.product.keyboard[0].keyboardname);\n                  }}\n                >\n                  <TableCell className=\"w-8\">\n                    <div className=\"flex items-center text-sm \">\n                      {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                      <div>\n                        <p className=\"font-semibold\">{user.customerName}</p>\n                        <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p>\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.unitName}</span>\n                  </TableCell>\n                  <TableCell>\n                    <Badge\n                      type={user.business == \"AMC\" ? \"primary\" : \"success\"}\n                    >\n                      {user.business}\n                    </Badge>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.producttype}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.product.serialno}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.contractfrom).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.contractto).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.ponumber}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">\n                      {moment(user.podate).format(\"DD/MM/YYYY\")}\n                    </span>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex items-center space-x-4\">\n                      <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                        <Link\n                          key={user._id}\n                          to={`/app/unit/update/${user._id}`}\n                        >\n                          <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                        </Link>{\" \"}\n                      </Button>\n\n                      {Emp.getRole() == 14 ? null : (\n                        <Button\n                          layout=\"link\"\n                          size=\"icon\"\n                          aria-label=\"Delete\"\n                          onClick={async () => {\n                            console.log(\"delete Asset\");\n                            setIsDeleteModalOpen(true);\n                            setDeleteId(user._id);\n                          }}\n                        >\n                          <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                        </Button>\n                      )}\n                      <Button\n                        onClick={() => {\n                          console.log(\"hellloo\", data[i].product.history);\n                          setAssetHistory(data[i].product.history);\n                          setAssetHistoryModalOpen(true);\n                        }}\n                        layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"Edit\"\n                      >\n                        <MenuIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                      {/* <div>\n            <Button className=\"mx-3 mt02\">\n              {\" \"}\n              <Link\n                key={selectedprod._id}\n                to={`/app/unit/update/${selectedprod._id}`}\n              >\n                Edit\n              </Link>{\" \"}\n            </Button>\n            <Button\n              className=\"mx-3 mt02\"\n              onClick={async () => {\n                console.log(\"delete Asset\");\n                try {\n                  let response = await axios({\n                    url: `${API}/asset/${Emp.getId()}/delete`,\n                    method: \"POST\",\n                    data: { id: selectedprod._id },\n                  });\n                  console.log(response.data);\n                  // let temp = data.filter((x) => x._id != selectedprod._id);\n                  // setData(temp);\n\n                  // setData(response.data);\n                } catch (error) {\n                  throw error;\n                }\n              }}\n            >\n              Delete\n            </Button>\n          </div> */}\n                    </div>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n}\n\nexport default Assets;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className,\n}) {\n  const baseStyle = 'rounded-full p-5'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className=\"w-6 h-6\" />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","export default [\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/lokesh_coder/128.jpg',\n    name: 'Chandler Jacobi',\n    job: 'Direct Security Executive',\n    amount: 989.4,\n    status: 'primary',\n    date: 'Mon Feb 03 2020 04:13:15 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg',\n    name: 'Monserrat Marquardt',\n    job: 'Forward Accountability Producer',\n    amount: 471.44,\n    status: 'danger',\n    date: 'Fri Nov 29 2019 10:43:17 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jjsiii/128.jpg',\n    name: 'Lonie Wyman',\n    job: 'Legacy Program Director',\n    amount: 934.24,\n    status: 'success',\n    date: 'Fri Apr 03 2020 03:07:53 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/holdenweb/128.jpg',\n    name: 'Corine Abernathy',\n    job: 'Chief Factors Planner',\n    amount: 351.28,\n    status: 'warning',\n    date: 'Fri Jun 21 2019 20:21:55 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/operatino/128.jpg',\n    name: 'Lorenz Botsford',\n    job: 'Central Accountability Developer',\n    amount: 355.3,\n    status: 'neutral',\n    date: 'Wed Aug 28 2019 15:31:43 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/akmur/128.jpg',\n    name: 'Everette Botsford',\n    job: 'Product Group Architect',\n    amount: 525.42,\n    status: 'success',\n    date: 'Thu Jan 16 2020 09:53:33 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nateschulte/128.jpg',\n    name: 'Marilou Beahan',\n    job: 'Future Security Planner',\n    amount: 414.99,\n    status: 'success',\n    date: 'Mon Oct 28 2019 14:44:31 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jerrybai1907/128.jpg',\n    name: 'Ceasar Sauer',\n    job: 'Direct Brand Specialist',\n    amount: 488.0,\n    status: 'primary',\n    date: 'Tue Jul 23 2019 00:24:44 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg',\n    name: 'Rae McDermott',\n    job: 'Lead Branding Engineer',\n    amount: 502.69,\n    status: 'danger',\n    date: 'Sat Feb 01 2020 12:57:03 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/rtgibbons/128.jpg',\n    name: 'Mable Steuber',\n    job: 'National Group Executive',\n    amount: 911.09,\n    status: 'danger',\n    date: 'Mon Sep 09 2019 12:03:25 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/danthms/128.jpg',\n    name: 'Julian Glover',\n    job: 'Global Branding Assistant',\n    amount: 656.94,\n    status: 'danger',\n    date: 'Fri May 22 2020 17:46:12 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/andysolomon/128.jpg',\n    name: 'Duncan Toy',\n    job: 'Central Intranet Manager',\n    amount: 120.78,\n    status: 'danger',\n    date: 'Sun Nov 17 2019 11:59:50 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jesseddy/128.jpg',\n    name: 'Blanche Friesen',\n    job: 'Forward Identity Executive',\n    amount: 676.95,\n    status: 'danger',\n    date: 'Sun Jun 21 2020 16:46:39 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/haruintesettden/128.jpg',\n    name: 'Orion Koepp',\n    job: 'Global Accountability Strategist',\n    amount: 447.56,\n    status: 'danger',\n    date: 'Thu Jun 04 2020 18:29:41 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/vocino/128.jpg',\n    name: 'Dakota Vandervort',\n    job: 'Future Assurance Coordinator',\n    amount: 765.22,\n    status: 'danger',\n    date: 'Fri Jan 31 2020 13:02:55 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/zaki3d/128.jpg',\n    name: 'Lily Collier',\n    job: 'Forward Configuration Orchestrator',\n    amount: 449.11,\n    status: 'danger',\n    date: 'Sun Aug 18 2019 14:52:01 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/evanshajed/128.jpg',\n    name: 'Kayleigh Schumm',\n    job: 'Central Division Agent',\n    amount: 65.54,\n    status: 'danger',\n    date: 'Wed May 06 2020 17:49:09 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/mdsisto/128.jpg',\n    name: 'General McGlynn',\n    job: 'Central Web Analyst',\n    amount: 30.51,\n    status: 'danger',\n    date: 'Mon Mar 30 2020 01:24:54 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/woodydotmx/128.jpg',\n    name: 'Shayna Schumm',\n    job: 'Future Directives Engineer',\n    amount: 313.73,\n    status: 'danger',\n    date: 'Wed Jul 03 2019 10:01:06 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/mfacchinello/128.jpg',\n    name: 'Giovanna Sanford',\n    job: 'Dynamic Interactions Executive',\n    amount: 398.3,\n    status: 'danger',\n    date: 'Tue Oct 08 2019 17:08:43 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/ademilter/128.jpg',\n    name: 'Emie Mante',\n    job: 'Direct Factors Supervisor',\n    amount: 142.51,\n    status: 'danger',\n    date: 'Wed Jul 24 2019 19:17:16 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/tobysaxon/128.jpg',\n    name: 'Chance Muller',\n    job: 'Lead Usability Planner',\n    amount: 963.26,\n    status: 'danger',\n    date: 'Sun Dec 01 2019 14:04:10 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg',\n    name: 'Armani Torphy',\n    job: 'Forward Functionality Analyst',\n    amount: 445.23,\n    status: 'danger',\n    date: 'Tue Dec 24 2019 13:28:36 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/devinhalladay/128.jpg',\n    name: 'Braeden Ward',\n    job: 'Central Integration Director',\n    amount: 588.53,\n    status: 'danger',\n    date: 'Wed Apr 15 2020 21:40:11 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/kimcool/128.jpg',\n    name: 'Malcolm Price',\n    job: 'District Program Planner',\n    amount: 181.93,\n    status: 'danger',\n    date: 'Thu Oct 24 2019 07:09:03 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/angelceballos/128.jpg',\n    name: 'Susan Jast',\n    job: 'Future Paradigm Associate',\n    amount: 928.41,\n    status: 'danger',\n    date: 'Sun Feb 09 2020 23:22:23 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/peachananr/128.jpg',\n    name: 'Torrey Reynolds',\n    job: 'Lead Security Agent',\n    amount: 447.37,\n    status: 'danger',\n    date: 'Mon Oct 28 2019 04:10:39 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/agromov/128.jpg',\n    name: 'Travon Harber',\n    job: 'Legacy Marketing Facilitator',\n    amount: 422.48,\n    status: 'danger',\n    date: 'Sat Nov 09 2019 05:04:09 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/danpliego/128.jpg',\n    name: 'Hattie Gutkowski',\n    job: 'Chief Configuration Supervisor',\n    amount: 714.34,\n    status: 'danger',\n    date: 'Tue Oct 22 2019 22:36:23 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/ahmetalpbalkan/128.jpg',\n    name: 'Demarco Lang',\n    job: 'Investor Program Designer',\n    amount: 536.92,\n    status: 'danger',\n    date: 'Wed Apr 08 2020 03:05:59 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nasirwd/128.jpg',\n    name: 'Glennie Ziemann',\n    job: 'Dynamic Interactions Analyst',\n    amount: 597.25,\n    status: 'danger',\n    date: 'Mon Jun 22 2020 21:27:06 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/juaumlol/128.jpg',\n    name: 'Alta Howe',\n    job: 'District Intranet Executive',\n    amount: 42.28,\n    status: 'danger',\n    date: 'Sat Oct 12 2019 22:57:22 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/victordeanda/128.jpg',\n    name: 'Sydnee Gottlieb',\n    job: 'Global Response Specialist',\n    amount: 868.92,\n    status: 'danger',\n    date: 'Wed Feb 05 2020 05:17:34 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/baumannzone/128.jpg',\n    name: 'Arlene Schmitt',\n    job: 'Lead Metrics Consultant',\n    amount: 364.68,\n    status: 'danger',\n    date: 'Thu Oct 03 2019 08:47:32 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/chacky14/128.jpg',\n    name: 'Hilda Schoen',\n    job: 'National Solutions Facilitator',\n    amount: 260.91,\n    status: 'danger',\n    date: 'Wed Dec 04 2019 06:28:30 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/kostaspt/128.jpg',\n    name: 'Chase Bahringer',\n    job: 'Dynamic Communications Designer',\n    amount: 454.61,\n    status: 'danger',\n    date: 'Mon Nov 25 2019 16:59:38 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/timgthomas/128.jpg',\n    name: 'Lucile Hansen',\n    job: 'Customer Usability Facilitator',\n    amount: 982.22,\n    status: 'danger',\n    date: 'Sun Aug 25 2019 17:15:59 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/safrankov/128.jpg',\n    name: 'Mollie Heaney',\n    job: 'Forward Communications Director',\n    amount: 390.33,\n    status: 'danger',\n    date: 'Mon Jul 22 2019 01:45:19 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/justme_timothyg/128.jpg',\n    name: 'Bennie Kuvalis',\n    job: 'Future Factors Agent',\n    amount: 456.64,\n    status: 'danger',\n    date: 'Sat Feb 08 2020 07:55:08 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/Chakintosh/128.jpg',\n    name: 'Jodie Luettgen',\n    job: 'Customer Implementation Associate',\n    amount: 398.37,\n    status: 'danger',\n    date: 'Tue Jun 09 2020 11:19:53 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/weavermedia/128.jpg',\n    name: 'Bethel Quitzon',\n    job: 'Dynamic Web Strategist',\n    amount: 183.58,\n    status: 'danger',\n    date: 'Sun Dec 29 2019 18:56:54 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/gmourier/128.jpg',\n    name: 'Jon Dietrich',\n    job: 'Legacy Creative Planner',\n    amount: 439.01,\n    status: 'danger',\n    date: 'Sun Dec 29 2019 11:11:34 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/stefvdham/128.jpg',\n    name: 'Nakia Kihn',\n    job: 'Central Interactions Coordinator',\n    amount: 824.12,\n    status: 'danger',\n    date: 'Sun Sep 15 2019 06:43:56 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/thedamianhdez/128.jpg',\n    name: 'Assunta Grady',\n    job: 'Investor Operations Specialist',\n    amount: 172.97,\n    status: 'danger',\n    date: 'Tue Dec 17 2019 01:46:37 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nehfy/128.jpg',\n    name: 'Lukas Klocko',\n    job: 'Human Usability Associate',\n    amount: 515.74,\n    status: 'danger',\n    date: 'Mon Jun 15 2020 04:04:32 GMT-0300 (Brasilia Standard Time)',\n  },\n]\n"],"sourceRoot":""}