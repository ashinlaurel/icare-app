{"version":3,"sources":["pages/Employee/SalaryHistory.js"],"names":["SalaryHistory","useParams","id","useHistory","useState","activerowid","setActiveRowId","deleteId","setDeleteId","isDeleteModalOpen","setIsDeleteModalOpen","useContext","TopBarContext","setTopHeading","topheading","BottomBarContext","setBBarOpen","bbaropen","setSalaryDetails","salaryDetails","page","setPage","data","setData","Date","startDate","setStartDate","totalResults","setTotalResults","useEffect","a","console","log","payload","pages","limit","filters","date","axios","url","API","Emp","getId","method","response","total","out","createAndDownloadPdf","responseType","pdfBlob","Blob","type","saveAs","className","class","selected","onChange","dateFormat","showMonthYearPicker","map","user","i","_id","key","onClick","moment","format","employeeName","employeeID","EligibleDays","BplusDA","Deduction","TakeHomeSalary","GrossSalary","CTC","layout","aria-label","size","aria-hidden","resultsPerPage","label","p","isOpen","onClose","temp","filter","x"],"mappings":"gVAqVeA,UA7Sf,WACiBC,cAAPC,GACMC,cAFU,IAAD,EAGeC,mBAAS,GAHxB,mBAGhBC,EAHgB,KAGHC,EAHG,OAISF,mBAAS,GAJlB,mBAIhBG,EAJgB,KAINC,EAJM,OAK2BJ,oBAAS,GALpC,mBAKhBK,EALgB,KAKGC,EALH,OAOeC,qBAAWC,KAA7BC,GAPG,EAOfC,WAPe,EAOHD,eAPG,EAQ4CF,qBACjEI,KADgBC,GARK,EAQfC,SARe,EAQLD,aAA4BE,GARvB,EAQQC,cARR,EAQuBD,kBARvB,EAWCd,mBAAS,GAXV,mBAWhBgB,EAXgB,KAWVC,EAXU,OAYCjB,mBAAS,IAZV,mBAYhBkB,EAZgB,KAYVC,EAZU,OAeGnB,mBAAS,IAfZ,gCAgBCA,mBAAS,KAhBV,gCAiBWA,mBAAS,IAAIoB,OAjBxB,mBAiBhBC,EAjBgB,KAiBLC,EAjBK,OAqBiBtB,mBAAS,IArB1B,mBAqBhBuB,EArBgB,KAqBFC,EArBE,KA6BvBC,qBAAU,WAER,OADAhB,EAAc,kBACP,WACLA,EAAc,OAEf,IAIHgB,qBAAU,WAER,OAAO,WACLb,EAAY,GACZE,EAAiB,OAElB,IAEHW,qBAAU,YAER,uCAAC,8BAAAC,EAAA,6DACCC,QAAQC,IAAI,iBACRC,EAAU,CACZC,MAAO,CACLd,KAAMA,EACNe,MAjCe,IAmCjBC,QAAS,CACPC,KAAMZ,IARX,kBAcwBa,IAAM,CACzBC,IAAI,GAAD,OAAKC,IAAL,kBAAkBC,IAAIC,QAAtB,iBACHC,OAAQ,OACRrB,KAAMW,IAjBX,OAcOW,EAdP,OAuBGhB,EAAgBgB,EAAStB,KAAKuB,OAE9BtB,EAAQqB,EAAStB,KAAKwB,KAzBzB,uHAAD,yDA+BC,CAAC1B,EAAMK,IAGV,IAAMsB,EAAoB,uCAAG,WAAO7C,GAAP,mBAAA4B,EAAA,6DACvBG,EAAU,CACZ/B,GAAGA,GAFsB,SAINoC,IAAM,CACzBC,IAAI,GAAD,OAAKC,IAAL,kBAAkBC,IAAIC,QAAtB,sBACHC,OAAQ,OACRrB,KAAMW,EACNe,aAAc,SARW,OAIvBJ,EAJuB,OAWrBK,EAAU,IAAIC,KAAK,CAACN,EAAStB,MAAO,CAAE6B,KAAM,oBAElDC,iBAAOH,EAAS,cAbW,2CAAH,sDAuD1B,OACE,oCAEE,yBAAKI,UAAU,IAEb,yBAAKC,MAAM,gGACT,yBAAKD,UAAU,oCAAf,iBACA,yBAAKC,MAAM,kBACT,yBAAKA,MAAM,+LACT,kBAAC,IAAD,CACEC,SAAU9B,EACV+B,SAAU,SAACnB,GAAD,OAAUX,EAAaW,IACjCoB,WAAW,UACXC,qBAAmB,QAM7B,6BACE,kBAAC,iBAAD,CAAgBL,UAAU,QACxB,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,aACA,kBAAC,YAAD,iBACA,kBAAC,YAAD,oBACA,kBAAC,YAAD,sBACA,kBAAC,YAAD,wBACA,kBAAC,YAAD,mBACA,kBAAC,YAAD,yBACA,kBAAC,YAAD,qBACA,kBAAC,YAAD,YACA,kBAAC,YAAD,oBACA,kBAAC,YAAD,iBAGJ,kBAAC,YAAD,KACG/B,EAAKqC,KAAI,SAACC,EAAMC,GAAP,OACR,kBAAC,WAAD,CACER,UAAS,iDACPhD,GAAeuD,EAAKE,IAChB,yCACA,QAHG,KAKTC,IAAKF,EACLG,QAAS,WACPhD,EAAY,GACZV,EAAesD,EAAKE,KAGpB5C,EAAiB0C,KAInB,kBAAC,YAAD,CAAWP,UAAU,OACnB,yBAAKA,UAAU,8BAMb,6BACE,uBAAGA,UAAU,iBACVY,IAAOL,EAAKvB,MAAM6B,OAAO,kBAQlC,kBAAC,YAAD,KACE,0BAAMb,UAAU,WAAWO,EAAKO,eASlC,kBAAC,YAAD,KACE,0BAAMd,UAAU,WAAWO,EAAKQ,aAElC,kBAAC,YAAD,KACE,0BAAMf,UAAU,WAAWO,EAAKS,eAGlC,kBAAC,YAAD,KACE,0BAAMhB,UAAU,WAAWO,EAAKU,UAElC,kBAAC,YAAD,KACE,0BAAMjB,UAAU,WAAWO,EAAKW,YAElC,kBAAC,YAAD,KACE,0BAAMlB,UAAU,WAAWO,EAAKY,iBAElC,kBAAC,YAAD,KACE,0BAAMnB,UAAU,WAAWO,EAAKa,cAElC,kBAAC,YAAD,KACE,0BAAMpB,UAAU,WAAWO,EAAKc,MAGlC,kBAAC,YAAD,CAAWrB,UAAU,gBACrB,kBAAC,SAAD,CACMsB,OAAO,UACPC,aAAW,WACXZ,QAAS,WACPjC,QAAQC,IAAI,SACZe,EAAqBa,EAAKE,MAE5BT,UAAU,kBAPhB,aAcA,kBAAC,YAAD,KACE,yBAAKA,UAAU,+BAUb,kBAAC,SAAD,CACEsB,OAAO,OACPE,KAAK,OACLD,aAAW,SACXZ,QAAO,sBAAE,sBAAAlC,EAAA,sDACPC,QAAQC,IAAI,gBACZtB,GAAqB,GACrBF,EAAYoD,EAAKE,KAHV,4CAMT,kBAAC,YAAD,CAAWT,UAAU,UAAUyB,cAAY,kBAQzD,kBAAC,cAAD,KACE,kBAAC,aAAD,CACEnD,aAAcA,EACdoD,eA7QW,GA8QXC,MAAM,mBACNxB,SA3QZ,SAAsByB,GACpB5D,EAAQ4D,SA6EN,oCACE,kBAAC,QAAD,CACEC,OAAQzE,EACR0E,QAAS,kBAAMzE,GAAqB,KAEpC,kBAAC,cAAD,yCACA,kBAAC,YAAD,MACA,kBAAC,cAAD,KACE,kBAAC,SAAD,CACE2C,UAAU,mBACVW,QAAO,sBAAE,8BAAAlC,EAAA,+EAEgBQ,IAAM,CACzBC,IAAI,GAAD,OAAKC,IAAL,kBAAkBC,IAAIC,QAAtB,iBACHC,OAAQ,OACRrB,KAAM,CAAEpB,GAAIK,KALT,OAEDqC,EAFC,OAOLb,QAAQC,IAAIY,EAAStB,MACjB8D,EAAO9D,EAAK+D,QAAO,SAACC,GAAD,OAAOA,EAAExB,KAAOvD,KACvCgB,EAAQ6D,GACR1E,GAAqB,GAVhB,wHAFX","file":"static/js/56.c08f7f0f.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport { API } from \"../../backendapi\";\nimport { Card, CardBody } from \"@windmill/react-ui\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport { Input, HelperText, Label, Select } from \"@windmill/react-ui\";\nimport { Link } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { saveAs } from \"file-saver\"\n\nimport { EditIcon, TrashIcon, DownloadIcon } from \"../../icons\";\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  Button,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\n/////////////----------------->>>>>> bug <<<<<------------customerList refresh--------------------------\n\nfunction SalaryHistory() {\n  const { id } = useParams();\n  let history = useHistory();\n  const [activerowid, setActiveRowId] = useState(0);\n  const [deleteId, setDeleteId] = useState(0);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n  const { bbaropen, setBBarOpen, salaryDetails, setSalaryDetails } = useContext(\n    BottomBarContext\n  );\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n\n  // filters\n  const [month, setMonth] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Salary History\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  // -------Enabling Bottom Bar----\n  useEffect(() => {\n    // setBBarOpen(1);\n    return () => {\n      setBBarOpen(0);\n      setSalaryDetails({});\n    };\n  }, []);\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          date: startDate,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/admin/${Emp.getId()}/getAllSalary`,\n          method: \"POST\",\n          data: payload,\n        });\n\n        // console.log(response);\n        // console.log(response.data.out);\n        // console.log(response.data.total);\n        setTotalResults(response.data.total);\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, startDate]);\n\n\n  const createAndDownloadPdf = async (id) => {\n    let payload = {\n      id:id\n    };\n    let response = await axios({\n      url: `${API}/admin/${Emp.getId()}/downloadsalarypdf`,\n      method: \"POST\",\n      data: payload,\n      responseType: \"blob\",\n    });\n\n    const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\n\n    saveAs(pdfBlob, \"Salary.pdf\");\n  };\n\n\n\n  const DeleteModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isDeleteModalOpen}\n          onClose={() => setIsDeleteModalOpen(false)}\n        >\n          <ModalHeader>Are you sure you want to delete!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                try {\n                  let response = await axios({\n                    url: `${API}/admin/${Emp.getId()}/deleteSalary`,\n                    method: \"POST\",\n                    data: { id: deleteId },\n                  });\n                  console.log(response.data);\n                  let temp = data.filter((x) => x._id != deleteId);\n                  setData(temp);\n                  setIsDeleteModalOpen(false);\n\n                  // setData(response.data);\n                } catch (error) {\n                  throw error;\n                }\n              }}\n            >\n              Confirm Delete\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n  return (\n    <>\n      {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n      <div className=\"\">\n        {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n        <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-2 \">\n          <div className=\"font-semibold dark:text-gray-200\"> Select Month</div>\n          <div class=\"relative mx-1 \">\n            <div class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\">\n              <DatePicker\n                selected={startDate}\n                onChange={(date) => setStartDate(date)}\n                dateFormat=\"MM/yyyy\"\n                showMonthYearPicker\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Date</TableCell>\n                <TableCell>Employee</TableCell>\n                <TableCell>Employee ID</TableCell>\n                <TableCell>Eligible Days</TableCell>\n                <TableCell>Eligible B + DA</TableCell>\n                <TableCell>Deductions</TableCell>\n                <TableCell>Take Home Salary</TableCell>\n                <TableCell>Gross Salary</TableCell>\n                <TableCell>CTC</TableCell>\n                <TableCell>Salary Slip</TableCell>\n                <TableCell>Delete</TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <TableRow\n                  className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                    activerowid == user._id\n                      ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                      : \"white\"\n                  } `}\n                  key={i}\n                  onClick={() => {\n                    setBBarOpen(1);\n                    setActiveRowId(user._id);\n                    // console.log(\"the id is \" + user._id);\n                    // setSelectedProd(user);\n                    setSalaryDetails(user);\n                    // console.log(user.product.keyboard[0].kbdname);\n                  }}\n                >\n                  <TableCell className=\"w-8\">\n                    <div className=\"flex items-center text-sm \">\n                      {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                      <div>\n                        <p className=\"font-semibold\">\n                          {moment(user.date).format(\"DD/MM/YYYY\")}\n                        </p>\n                        {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p> */}\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.employeeName}</span>\n                  </TableCell>\n                  {/* <TableCell>\n                    <Badge\n                      type={user.business == \"AMC\" ? \"primary\" : \"success\"}\n                    >\n                      {user.business}\n                    </Badge>\n                  </TableCell> */}\n                  <TableCell>\n                    <span className=\"text-sm\">{user.employeeID}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.EligibleDays}</span>\n                  </TableCell>\n\n                  <TableCell>\n                    <span className=\"text-sm\">{user.BplusDA}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.Deduction}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.TakeHomeSalary}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.GrossSalary}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.CTC}</span>\n                  </TableCell>\n\n                  <TableCell className=\"text-center \">\n                  <Button\n                        layout=\"outline\"\n                        aria-label=\"DropDown\"\n                        onClick={() => {\n                          console.log(\"dwlod\");\n                          createAndDownloadPdf(user._id);\n                        }}\n                        className=\"rounded-lg m-1\"\n                      >\n                        Download\n                      </Button>\n                    </TableCell>\n\n\n                  <TableCell>\n                    <div className=\"flex items-center space-x-4\">\n                      {/* <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                        <Link\n                          key={user._id}\n                          to={`/app/unit/update/${user._id}`}\n                        >\n                          <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                        </Link>{\" \"}\n                      </Button> */}\n\n                      <Button\n                        layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"Delete\"\n                        onClick={async () => {\n                          console.log(\"delete Asset\");\n                          setIsDeleteModalOpen(true);\n                          setDeleteId(user._id);\n                        }}\n                      >\n                        <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n      </div>\n      {DeleteModal()}\n    </>\n  );\n}\n\nexport default SalaryHistory;\n"],"sourceRoot":""}