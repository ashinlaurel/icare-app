{"version":3,"sources":["pages/Inventory/CreateInvent.js"],"names":["CreateInvent","useContext","TopBarContext","setTopHeading","topheading","useState","messageModal","setMessageModal","modalMessage","setModalMessage","itemType","setItemType","condition","setCondition","location","setLocation","datecalculate","setDateCalculate","name","sno","invnumber","systype","invdate","expirydate","wty","values","setValues","type","takenFrom","caseId","err","setErr","useEffect","handleChange","e","target","value","submitItem","a","console","log","newitem","toLowerCase","Axios","url","API","Emp","getId","method","data","then","_id","newval","catch","useMemo","newlist","moment","format","add","subtract","className","onChange","selected","disabled","valid","readOnly","onClick","aria-label","aria-haspopup","isOpen","onClose"],"mappings":"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","file":"static/js/64.7948421a.chunk.js","sourcesContent":["import React, { useEffect, useContext, useState, useMemo } from \"react\";\nimport Emp from \"../../helpers/auth/EmpProfile\";\n\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport { API } from \"../../backendapi\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\n\nconst CreateInvent = () => {\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n  const [messageModal, setMessageModal] = useState(false);\n  const [modalMessage, setModalMessage] = useState(\"\");\n  const [itemType, setItemType] = useState(\"Mouse\");\n  const [condition, setCondition] = useState(\"Good\");\n  const [location, setLocation] = useState(\"Trivandrum\");\n  const [datecalculate, setDateCalculate] = useState(false);\n\n  const [values, setValues] = useState({\n    name: \"\",\n    sno: \"\",\n    invnumber: \"\",\n    systype: \"item\",\n    invdate: \"\",\n    expirydate: \"\",\n    wty: \"\",\n  });\n  const [err, setErr] = useState({\n    type: \"\",\n    name: \"\",\n    sno: \"\",\n    condition: \"\",\n    location: \"\",\n    // invnumber: \"\",\n    takenFrom: \"\",\n    caseId: \"\",\n  });\n\n  useEffect(() => {\n    setTopHeading(\"Create Item\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const submitItem = async () => {\n    if (values.name === \"\") {\n      setModalMessage(\"Product name necessary\");\n      setMessageModal(true);\n      console.log(\"missing inputs\");\n      return;\n    }\n    if (values.sno === \"\") {\n      setModalMessage(\"Serial number necessary\");\n      setMessageModal(true);\n      console.log(\"missing inputs\");\n      return;\n    }\n    if (values.invdate === \"\") {\n      setModalMessage(\"Added Date Required Necessary\");\n      setMessageModal(true);\n      console.log(\"missing inputs\");\n      return;\n    }\n    if (values.wty === \"\") {\n      setModalMessage(\"Warranty Period Necessary\");\n      setMessageModal(true);\n      console.log(\"missing inputs\");\n      return;\n    }\n    const newitem = {\n      name: values.name,\n      sno: values.sno,\n      type: itemType.toLowerCase(),\n      condition: condition,\n      location: location,\n      invnumber: values.invnumber,\n      systype: values.systype,\n      invdate: values.invdate,\n      expirydate: values.expirydate,\n      wty: values.wty,\n    };\n    console.log(newitem);\n    await Axios({\n      url: `${API}/inventory/${Emp.getId()}/create`,\n      method: \"POST\",\n      data: newitem,\n    })\n      .then((data) => {\n        console.log(\"Added\", data._id);\n        setModalMessage(\"Added to Inventory\");\n        setMessageModal(true);\n        // setIsReviewModalOpen(true);\n        let newval = values;\n        newval.name = \"\";\n        newval.sno = \"\";\n        newval.invnumber = \"\";\n\n        setValues(newval);\n\n        // setValues({ name: \"\", sno: \"\", invnumber: \"\", systype: \"item\" });\n        setErr({\n          type: \"\",\n          name: \"\",\n          sno: \"\",\n          condition: \"\",\n          location: \"\",\n          invnumber: \"\",\n        });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        setErr({ ...err });\n      });\n  };\n\n  const messageModalComponent = () => {\n    return (\n      <>\n        <Modal isOpen={messageModal} onClose={() => setMessageModal(false)}>\n          <ModalHeader>{modalMessage}</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setMessageModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  // ------Date Calculations-------\n\n  useMemo(() => {\n    // console.log(\"hello\");\n    // console.log(calnum);\n    let newlist = values;\n    // console.log(newlist);\n\n    switch (newlist.wty) {\n      case \"0D\":\n        newlist.expirydate = moment(values.invdate).format(\"DD-MM-YYYY\");\n\n        break;\n      case \"3M\":\n        newlist.expirydate = moment(values.invdate)\n          .add(3, \"M\")\n          .subtract(1, \"days\")\n          .format(\"DD-MM-YYYY\");\n\n        break;\n      case \"6M\":\n        newlist.expirydate = moment(values.invdate)\n          .add(6, \"M\")\n          .subtract(1, \"days\")\n          .format(\"DD-MM-YYYY\");\n\n        break;\n      case \"1Y\":\n        newlist.expirydate = moment(values.invdate)\n          .add(1, \"Y\")\n          .subtract(1, \"days\")\n          .format(\"DD-MM-YYYY\");\n\n        break;\n      case \"2Y\":\n        newlist.expirydate = moment(values.invdate)\n          .add(2, \"Y\")\n          .subtract(1, \"days\")\n          .format(\"DD-MM-YYYY\");\n\n        break;\n      case \"3Y\":\n        newlist.expirydate = moment(values.invdate)\n          .add(3, \"Y\")\n          .subtract(1, \"days\")\n          .format(\"DD-MM-YYYY\");\n\n        break;\n      case \"4Y\":\n        newlist.expirydate = moment(values.invdate)\n          .add(4, \"Y\")\n          .subtract(1, \"days\")\n          .format(\"DD-MM-YYYY\");\n\n        break;\n      case \"5Y\":\n        newlist.expirydate = moment(values.invdate)\n          .add(5, \"Y\")\n          .subtract(1, \"days\")\n          .format(\"DD-MM-YYYY\");\n\n        break;\n      case \"20Y\":\n        newlist.expirydate = moment(values.invdate)\n          .add(20, \"Y\")\n          .subtract(1, \"days\")\n          .format(\"DD-MM-YYYY\");\n\n        break;\n\n      default:\n        break;\n    }\n\n    setValues(newlist);\n\n    // console.log(\"newlist\", newlist);\n    // console.log(\"values\", values);\n\n    return () => {\n      console.log(\"Calculations done!\");\n    };\n  }, [datecalculate]);\n\n  return (\n    <div className=\"px-4 py-3 mt-4 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n      <Label className=\"font-bold\">\n        <span>Add Item To Inventory</span>\n      </Label>\n      <hr className=\"mb-5 mt-2\" />\n      {/* ------------------------Row 1-------------------------- */}\n      <div className=\"flex-row flex space-x-3\">\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Select Type*</span>\n            <Select\n              className=\"mt-1\"\n              onChange={(e) => {\n                setItemType(e.target.value);\n              }}\n            >\n              <option value=\"\" selected disabled>\n                Select Type\n              </option>\n\n              <option value=\"mouse\">Mouse</option>\n              <option value=\"keyboard\">Keyboard</option>\n              <option value=\"monitor\">Monitor</option>\n              <option value=\"cpu\">Cpu</option>\n              <option value=\"ram\">Ram</option>\n              <option value=\"fan\">Fan</option>\n              <option value=\"motherboard\">Motherboard</option>\n              <option value=\"smps\">SMPS</option>\n              <option value=\"hdd\">HDD</option>\n              <option value=\"gcard\">Gcard</option>\n              <option value=\"enetcard\">Enet Card</option>\n              <option value=\"serialcard\">Serial Card</option>\n              <option value=\"paralellcard\">Paralell Card</option>\n              <option value=\"opticaldrive\">Optical Drive</option>\n              <option value=\"others\">Others</option>\n            </Select>\n          </Label>\n        </div>\n\n        <>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Product Name*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.name}\n                onChange={handleChange(\"name\")}\n              />\n            </Label>\n            <HelperText valid={false}>{err.name}</HelperText>\n          </div>\n        </>\n\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Serial Number*</span>\n            <Input\n              className=\"mt-1\"\n              type=\"text\"\n              value={values.sno}\n              onChange={handleChange(\"sno\")}\n            />\n          </Label>\n          <HelperText valid={false}>{err.sno}</HelperText>\n        </div>\n\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Select Condition*</span>\n            <Select\n              className=\"mt-1\"\n              onChange={(e) => {\n                setCondition(e.target.value);\n              }}\n            >\n              <option value=\"Good\" selected>\n                Good\n              </option>\n              <option value=\"Bad\">Bad</option>\n              <option value=\"Used\">Used</option>\n              <option value=\"DOA\">DOA</option>\n              <option value=\"Damaged\">Damaged</option>\n              <option value=\"Damaged\">Scrap</option>\n            </Select>\n          </Label>\n        </div>\n      </div>\n      {/* ----------------------Row 2 ----------------------------- */}\n      <div className=\"flex-row flex space-x-3 my-2\">\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Select Location*</span>\n            <Select\n              className=\"mt-1\"\n              onChange={(e) => {\n                setLocation(e.target.value);\n              }}\n            >\n              <option value=\"Trivandrum\">Trivandrum</option>\n              <option value=\"Kottayam\">Kottayam</option>\n              <option value=\"Kozhikode\">Kozhikode</option>\n            </Select>\n          </Label>\n        </div>\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Date Of Addition*</span>\n            <Input\n              className=\"mt-1\"\n              type=\"date\"\n              value={values.invdate}\n              onChange={handleChange(\"invdate\")}\n            />\n          </Label>\n          {/* <HelperText valid={false}>{err.invnumber}</HelperText> */}\n        </div>\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Warranty*</span>\n            <Select\n              className=\"mt-1\"\n              value={values.wty}\n              onChange={(e) => {\n                let newlist = values;\n                newlist.wty = e.target.value;\n                setValues(newlist);\n                setDateCalculate(!datecalculate);\n              }}\n            >\n              <option value=\"\" selected disabled>\n                Select Category\n              </option>\n              <option value=\"0D\">0 days</option>\n              <option value=\"3M\">3 Months</option>\n              <option value=\"6M\">6 Months</option>\n              <option value=\"1Y\">1 Year</option>\n              <option value=\"2Y\">2 Years</option>\n              <option value=\"3Y\">3 Years</option>\n              <option value=\"4Y\">4 Years</option>\n              <option value=\"5Y\">5 Years</option>\n              <option value=\"20Y\">20 Years</option>\n            </Select>\n          </Label>\n        </div>\n\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Expiry Date</span>\n            <Input\n              className=\"mt-1\"\n              type=\"text\"\n              value={values.expirydate}\n              readOnly={true}\n            />\n          </Label>\n          <HelperText valid={false}>{err.name}</HelperText>\n        </div>\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Taken From</span>\n            <Input\n              className=\"mt-1\"\n              type=\"text\"\n              value={values.takenFrom}\n              onChange={handleChange(\"takenFrom\")}\n            />\n          </Label>\n          {/* <HelperText valid={false}>{err.invnumber}</HelperText> */}\n        </div>\n        <div className=\"flex flex-col w-full\">\n          <Label className=\"w-full\">\n            <span>Case ID</span>\n            <Input\n              className=\"mt-1\"\n              type=\"text\"\n              value={values.caseId}\n              onChange={handleChange(\"caseId\")}\n            />\n          </Label>\n          {/* <HelperText valid={false}>{err.invnumber}</HelperText> */}\n        </div>\n      </div>\n      {/* ///////////////////////////////////////////////////////// */}\n      {/* <Label className=\"font-bold mt-5 mb-2\">\n        <span>Expiry Date: {values.expirydate}</span>\n      </Label> */}\n      {/* <hr /> */}\n\n      {/* ///////////////////////////////////////////////////////// */}\n\n      <Button\n        onClick={() => {\n          submitItem();\n        }}\n        aria-label=\"Notifications\"\n        aria-haspopup=\"true\"\n        className=\"mt-4\"\n      >\n        {\" \"}\n        Add Item\n      </Button>\n      {messageModalComponent()}\n    </div>\n  );\n};\n\nexport default CreateInvent;\n"],"sourceRoot":""}