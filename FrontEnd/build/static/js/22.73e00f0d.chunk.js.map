{"version":3,"sources":["pages/Vendor/VendorUpdate.js","components/Modal/CustomerCreateModal.js","helpers/unitHelper.js","components/Modal/AddUnitModal.js"],"names":["VendorUpdate","id","useParams","useHistory","useState","isReviewModalOpen","setIsReviewModalOpen","isReqFieldModal","setIsReqFieldModal","setTopHeading","useContext","TopBarContext","name","aadharNo","PANNo","GSTNo","address","district","state","PIN","values","setValues","useEffect","thegetter","a","data","Axios","url","API","Emp","getId","method","res","console","log","handleChange","e","target","value","submitItem","payload","update","then","_id","catch","err","className","onChange","type","onClick","aria-label","aria-haspopup","isOpen","onClose","CustomerCreatetModal","isModalOpen","setIsModalOpen","setCustomer","getCustomers","post","search","role","users","temp","map","user","push","i","key","customerName","layout","unitCreate","newunit","unit","error","response","status","errors","AddUnitModal","account","setAccount","customer","customers","setCustomers","accounts","setAccounts","tabIndex","setTabIndex","pickCustomer","customerId","accs","pickAccount","accountName","selectedIndex","onSelect","ind"],"mappings":"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","file":"static/js/22.73e00f0d.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport Axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\n\nimport { signup, signin, authenticate } from \"../../helpers/auth\";\nimport CustomerCreateModal from \"../../components/Modal/CustomerCreateModal\";\nimport EmpProfile from \"../../helpers/auth/EmpProfile\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport { resetIdCounter } from \"react-tabs\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport { unitCreate } from \"../../helpers/unitHelper\";\nimport AddUnitModal from \"../../components/Modal/AddUnitModal\";\nimport { useHistory, useParams } from \"react-router-dom\";\n/////////////----------------->>>>>> bug <<<<<------------customerList refresh--------------------------\n\nfunction VendorUpdate() {\n  const { id } = useParams();\n  let history = useHistory();\n  // dropdown states\n  const [accType, setAccType] = useState(0); /////// 0-Customer 1-Account 2-Unit\n  const [sex, setSex] = useState(\"Male\");\n  const [dob, setDob] = useState(\"\");\n  const [location, setLocation] = useState(\"All\");\n\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [isErrModalOpen, setIsErrModalOpen] = useState(false);\n  const [isReqFieldModal, setIsReqFieldModal] = useState(false);\n  const { setTopHeading } = useContext(TopBarContext);\n\n  const [values, setValues] = useState({\n    //both\n\n    name:\"\",\n    aadharNo:\"\",\n    PANNo:\"\",\n    GSTNo:\"\",\n    address:\"\",\n    district:\"\",\n    state:\"\",\n    PIN:\"\",\n\n    // ---new ones\n  });\n\n\n  // ----------------------Heading Use Effect-------------\n\n  useEffect(() => {\n    setTopHeading(\"Update Vendor\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    thegetter();\n  }, [])\n\n  const thegetter = async () => {\n    let data = { id: id };\n    // console.log(API);\n    try {\n      let res = await Axios({\n        url: `${API}/vendor/${Emp.getId()}/getById`,\n        method: \"POST\",\n        data: data,\n      });\n\n      setValues(res.data);\n\n      console.log(\"Done\", res.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  \n\n  const submitItem = async () => {\n    if (values.name === \"\") {\n        setIsReqFieldModal(true);\n      console.log(\"missing inputs\");\n      return;\n    }\n    let payload={\n      id:id,\n      update:values\n    }\n  \n    await Axios({\n      url: `${API}/vendor/${Emp.getId()}/update`,\n      method: \"POST\",\n      data: payload,\n    })\n      .then((data) => {\n        console.log(\"Added\", data._id);\n        setIsReviewModalOpen(true);\n        })\n      .catch((err) => {\n        console.log(\"err\", err);\n        // setErr({ ...err });\n      });\n  };\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>\n            Vendor Updated Successfully!\n          </ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              // onClick={() => setIsReviewModalOpen(false)}\n              onClick={() => setIsReviewModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const ReqFieldErrModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReqFieldModal}\n          onClose={() => setIsReqFieldModal(false)}\n        >\n          <ModalHeader>Required fields are not filled!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReqFieldModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //ASSET\n  const addForm = () => {\n    return (\n      <div className=\"px-4 py-3 mt-4 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Add Vendor</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n  \n        {/* -------Row - 1 ---------------------- */}\n        <div className=\"flex-row flex space-x-3 mt-3 mb-2\">\n         \n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Name*</span>\n              <Input\n                className=\"mt-1\"\n                value={values.name}\n                onChange={handleChange(\"name\")}\n              />\n            </Label>{\" \"}\n          </div>\n\n         \n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>GST Number</span>\n              <Input\n                className=\"mt-1\"\n                value={values.GSTNo}\n                onChange={handleChange(\"GSTNo\")}\n              />\n            </Label>\n\n            </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>PAN Number</span>\n              <Input\n                className=\"mt-1\"\n                value={values.PANNo}\n                onChange={handleChange(\"PANNo\")}\n              />\n            </Label>{\" \"}\n          </div>\n\n\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Aadhar Number</span>\n              <Input\n                className=\"mt-1\"\n                value={values.aadharNo}\n                onChange={handleChange(\"aadharNo\")}\n              />\n            </Label>{\" \"}\n          </div>\n            \n          \n        </div>\n        {/* ---------------Row 4 ---------------- */}\n        <div className=\"flex-row flex space-x-3 mt-3 mb-2\">\n        <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Address</span>\n              <Input\n                className=\"mt-1\"\n                value={values.address}\n                onChange={handleChange(\"address\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>District</span>\n              <Input\n                className=\"mt-1\"\n                value={values.district}\n                onChange={handleChange(\"district\")}\n              />\n            </Label>\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>State</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.state}\n                onChange={handleChange(\"state\")}\n              />\n            </Label>{\" \"}\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>PIN</span>\n              <Input\n                className=\"mt-1\"\n                value={values.PIN}\n                onChange={handleChange(\"PIN\")}\n              />\n            </Label>{\" \"}\n          </div>\n          {/* <HelperText valid={false}>{digiterr.contactNo}</HelperText> */}\n        </div>\n      \n        {/* ///////////////////////////////////////////////////////// */}\n        <Button\n          onClick={submitItem}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4\"\n        >\n          Update Vendor\n        </Button>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {/* <PageTitle>Add Customer</PageTitle> */}\n      {addForm()}\n\n      {/* {productPicker()} */}\n      {ReviewSubmit()}\n\n      {ReqFieldErrModal()}\n    </>\n  );\n}\n\nexport default VendorUpdate;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nexport default function CustomerCreatetModal({\n  isModalOpen,\n  setIsModalOpen,\n  setCustomer,\n}) {\n  const [values, setValues] = useState([]);\n  useEffect(() => {\n    getCustomers();\n  }, []);\n\n  const getCustomers = () => {\n    Axios.post(`${API}/customer/customers`, { search: \"\", role: 1 })\n      .then((users) => {\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        setValues(temp);\n      })\n      .catch((err) => {\n        console.log(\"axiosErr\", err);\n      });\n  };\n\n  const userTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {values.map((user, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-900 \"\n                onClick={() => {\n                  setCustomer({\n                    _id: user._id,\n                    customerName: user.name,\n                  });\n                  setIsModalOpen(false);\n                }}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                {/* <TableCell>\n                    <span className=\"text-sm\">$ {user.email}</span>\n                  </TableCell> */}\n                {/* <TableCell>\n                    <Badge type={user.status}>{user.status}</Badge>\n                  </TableCell> */}\n                {/* <TableCell>\n                  <span className=\"text-sm\">{user.infoId.unit}</span>\n                </TableCell> */}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          {/* <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            /> */}\n        </TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>Modal header</ModalHeader>\n        <ModalBody>{userTable()}</ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Cancel\n          </Button>\n          <Button className=\"w-full sm:w-auto\">Accept</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import Axios from \"axios\";\nimport { API } from \"../backendapi\";\nimport Emp from \"../helpers/auth/EmpProfile\";\n\nexport const unitCreate = (newunit) => {\n  return Axios.post(`${API}/unit/${Emp.getId()}/create`, newunit)\n    .then((unit) => {\n      console.log(\"h\", unit.data);\n      return unit.data;\n    })\n    .catch((error) => {\n      console.log(\"ERRRROs\");\n      if (error.response) {\n        console.log(error.response.data);\n        console.log(error.response.status);\n        throw error.response.data.errors;\n      }\n    });\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../backendapi\";\n\nexport default function AddUnitModal({\n  isModalOpen,\n  setIsModalOpen,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  useEffect(() => {\n    Axios.post(`${API}/customer/customers`, { search: \"\", role: 1 })\n      .then((users) => {\n        console.log(users.data);\n        let temp = [];\n        users.data.map((user) => {\n          temp.push(user);\n        });\n        setCustomers(temp);\n      })\n      .catch((err) => {\n        console.log(\"axiosErr\", err);\n      });\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select {tabIndex == 0 ? <>Customer</> : <>Account</>}\n        </ModalHeader>\n        <ModalBody>\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n          </Tabs>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => setIsModalOpen(false)}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}