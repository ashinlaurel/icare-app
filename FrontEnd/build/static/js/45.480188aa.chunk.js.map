{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/Calls/UpdateAssetFromCall.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","UpdateAssetFromCall","useState","floatbox","setFloatBox","id","useParams","assetid","submitModal","setSubmitModal","_id","unitName","unit","setUnit","customerName","customer","setCustomer","accountName","account","setAccount","brand","setBrand","model","setModel","serialno","setSerialNo","os","setOs","cpuname","cpusno","cpu","setCpu","ramname","ramsno","ram","setram","hddname","hddsno","hdd","sethdd","smpsname","smpssno","smps","setsmps","fanname","fansno","fan","setfan","motherboardname","motherboardsno","motherboard","setmotherboard","opticaldrivename","opticaldrivesno","opticaldrive","setopticaldrive","kbdname","kbdsno","kbd","setkbd","mousename","mousesno","mouse","setmouse","monitorname","monitorsno","monitor","setmonitor","gcardname","gcardsno","gcard","setgcard","enetcardname","enetcardsno","enetcard","setenetcard","serialcardname","serialcardsno","serialcard","setserialcard","parallelcardname","parallelcardsno","parallelcard","setparallelcard","hbacardname","hbacardsno","hbacard","sethbacard","raidcontrollername","raidcontrollersno","raidcontroller","setraidcontroller","tapecontrollername","tapecontrollersno","tapecontroller","settapecontroller","othersname","otherssno","others","setothers","Business","setBusiness","POnumber","setPOnumber","POdate","setPOdate","ContractFrom","setContractFrom","ContractTo","setContractTo","BillingFrom","setBillingFrom","BillingTo","setBillingTo","AMCRate","setAMCRate","GST","setGST","GSTAMOUNT","setGSTAMOUNT","NetAmount","setNetAmount","product","setProduct","inventory","setInventory","isModalOpen","setIsModalOpen","getAsset","a","axios","post","API","Emp","getId","res","console","log","data","asset","producttype","customerId","accountId","business","ponumber","amcrate","moment","podate","format","contractfrom","contractto","billingfrom","billingto","gstamount","netamount","length","keyboard","netcardname","useEffect","handleInventory","payload","assetId","url","method","handleSubmit","e","preventDefault","gstperc","newproduct","newasset","loadProductOption","type","inputText","callback","temp","input","Producttype","response","out","map","item","i","name","value","sno","label","color","className","onClick","icon","HeartIcon","layout","aria-label","onChange","target","selected","disabled","parseInt","onSubmit","placeholder","newcpu","push","Add","pop","Remove","key","newlist","cacheOptions","defaultOptions","loadOptions","newarr","filter","x","newram","newfan","newmotherboard","newhdd","newsmps","newkbd","tempInv","op","newmouse","newmonitor","newgcard","newenetcard","newserialcard","newparallelcard","newhbacard","newraidcontroller","newtapecontroller","newopticaldrive","newothers","isOpen","onClose"],"mappings":"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","file":"static/js/45.480188aa.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { API } from \"../../backendapi\";\nimport AsyncSelect from \"react-select/async\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Select,\n  Textarea,\n  Button,\n  Dropdown,\n  DropdownItem,\n  Badge,\n} from \"@windmill/react-ui\";\n\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport { Add, Remove, HeartIcon } from \"../../icons\";\nimport UnitListModal from \"../../components/Modal/UnitListModal\";\nimport CreateAssetFloat from \"../../components/FloatDetails/CreateAssetFloat\";\n\n// Migration\nimport { handleMigration } from \"../../migration/migration\";\nimport { useParams } from \"react-router-dom\";\n\nfunction UpdateAssetFromCall() {\n  // floatbox\n  const [floatbox, setFloatBox] = useState(false);\n  const params  = useParams();\n  const id=params.assetid;\n  // console.log(id);\n  //modal\n  const [submitModal, setSubmitModal] = useState(false);\n\n  //customer\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n  //prodcut\n  const [brand, setBrand] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [serialno, setSerialNo] = useState(\"\");\n  const [os, setOs] = useState(\"\");\n  const [cpu, setCpu] = useState([{ cpuname: \"\", cpusno: \"\" }]);\n  const [ram, setram] = useState([{ ramname: \"\", ramsno: \"\" }]);\n  const [hdd, sethdd] = useState([{ hddname: \"\", hddsno: \"\" }]);\n  const [smps, setsmps] = useState([{ smpsname: \"\", smpssno: \"\" }]);\n  const [fan, setfan] = useState([{ fanname: \"\", fansno: \"\" }]);\n  const [motherboard, setmotherboard] = useState([\n    { motherboardname: \"\", motherboardsno: \"\" },\n  ]);\n  const [opticaldrive, setopticaldrive] = useState([\n    { opticaldrivename: \"\", opticaldrivesno: \"\" },\n  ]);\n  const [kbd, setkbd] = useState([{ kbdname: \"\", kbdsno: \"\" }]);\n  const [mouse, setmouse] = useState([{ mousename: \"\", mousesno: \"\" }]);\n  const [monitor, setmonitor] = useState([{ monitorname: \"\", monitorsno: \"\" }]);\n  const [gcard, setgcard] = useState([{ gcardname: \"\", gcardsno: \"\" }]);\n  const [enetcard, setenetcard] = useState([\n    { enetcardname: \"\", enetcardsno: \"\" },\n  ]);\n  const [serialcard, setserialcard] = useState([\n    { serialcardname: \"\", serialcardsno: \"\" },\n  ]);\n  const [parallelcard, setparallelcard] = useState([\n    { parallelcardname: \"\", parallelcardsno: \"\" },\n  ]);\n  const [hbacard, sethbacard] = useState([{ hbacardname: \"\", hbacardsno: \"\" }]);\n  const [raidcontroller, setraidcontroller] = useState([\n    { raidcontrollername: \"\", raidcontrollersno: \"\" },\n  ]);\n  const [tapecontroller, settapecontroller] = useState([\n    { tapecontrollername: \"\", tapecontrollersno: \"\" },\n  ]);\n  const [others, setothers] = useState([{ othersname: \"\", otherssno: \"\" }]);\n  //asset\n\n  const [Business, setBusiness] = useState(\"\");\n  const [POnumber, setPOnumber] = useState(\"\");\n  const [POdate, setPOdate] = useState(\"\");\n  const [ContractFrom, setContractFrom] = useState(\"\");\n  const [ContractTo, setContractTo] = useState(\"\");\n  const [BillingFrom, setBillingFrom] = useState(\"\");\n  const [BillingTo, setBillingTo] = useState(\"\");\n  const [AMCRate, setAMCRate] = useState(\"\");\n  const [GST, setGST] = useState(\"\");\n  const [GSTAMOUNT, setGSTAMOUNT] = useState(\"\");\n  const [NetAmount, setNetAmount] = useState(\"\");\n\n  //////////////-------------------------------------------->Product name not in asset\n  const [product, setProduct] = useState(\"Server\");\n\n  ////////////---------------- INVENTORY state\n  const [inventory  , setInventory]  = useState([]);\n\n  //MODAL\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const getAsset = async () => {\n    try {\n      let res = await axios.post(`${API}/asset/${Emp.getId()}/getbyid`, {\n        id: id,\n      });\n      console.log(\"asset\", res.data);\n      let asset = res.data;\n      setProduct(asset.producttype);\n      setUnit({ _id: id, unitName: asset.unitName });\n      setCustomer({ _id: asset.customerId, customerName: asset.customerName });\n      setAccount({ _id: asset.accountId, accountName: asset.accountName });\n      ////------------------------>>>>>>>>\n      // setProduct(\"Server\");\n      ////////---------ASSET INFO\n      setBusiness(asset.business);\n      setPOnumber(asset.ponumber);\n      setAMCRate(asset.amcrate);\n      // Dates --------------------------\n      setPOdate(moment(asset.podate).format(\"YYYY-MM-DD\"));\n      setContractFrom(moment(asset.contractfrom).format(\"YYYY-MM-DD\"));\n      setContractTo(moment(asset.contractto).format(\"YYYY-MM-DD\"));\n      setBillingFrom(moment(asset.billingfrom).format(\"YYYY-MM-DD\"));\n      setBillingTo(moment(asset.billingto).format(\"YYYY-MM-DD\"));\n      ////////////------------>>>>>>>> misiing field GST(asset.gs)\n      setGSTAMOUNT(asset.gstamount);\n      setNetAmount(asset.netamount);\n      // setProduct(asset);\n      //////////////////////////////\n\n      setBrand(asset.product.brand);\n      setModel(asset.product.model);\n      setSerialNo(asset.product.serialno);\n      setOs(asset.product.os);\n      setCpu(asset.product.cpu);\n      setram(asset.product.ram);\n      if (asset.product.hdd.length == 0) sethdd([{ hddname: \"\", hddsno: \"\" }]);\n      else sethdd(asset.product.hdd);\n      if (asset.product.smps.length == 0)\n        setsmps([{ smpsname: \"\", smpssno: \"\" }]);\n      else setsmps(asset.product.smps);\n      if (asset.product.fan.length == 0) setfan([{ fanname: \"\", fansno: \"\" }]);\n      else setfan(asset.product.fan);\n      if (asset.product.motherboard.length == 0)\n        setmotherboard([{ motherboardname: \"\", motherboardsno: \"\" }]);\n      else setmotherboard(asset.product.motherboard);\n      if (asset.product.opticaldrive.length == 0)\n        setopticaldrive([{ opticaldrivename: \"\", opticaldrivesno: \"\" }]);\n      else setopticaldrive(asset.product.opticaldrive);\n      if (asset.product.keyboard.length == 0)\n        setkbd([{ kbdname: \"\", kbdsno: \"\" }]);\n      else setkbd(asset.product.keyboard);\n      if (asset.product.mouse.length == 0)\n        setmouse([{ mousename: \"\", mousesno: \"\" }]);\n      else setmouse(asset.product.mouse);\n      if (asset.product.monitor.length == 0)\n        setmonitor([{ monitorname: \"\", monitorsno: \"\" }]);\n      else setmonitor(asset.product.monitor);\n      if (asset.product.gcard.length == 0)\n        setgcard([{ gcardname: \"\", gcardsno: \"\" }]);\n      else setgcard(asset.product.gcard);\n      if (asset.product.enetcard.length == 0)\n        setenetcard([{ netcardname: \"\", enetcardsno: \"\" }]);\n      else setenetcard(asset.product.enetcard);\n      if (asset.product.serialcard.length == 0)\n        setserialcard([{ serialcardname: \"\", serialcardsno: \"\" }]);\n      else setserialcard(asset.product.serialcard);\n\n      if (asset.product.parallelcard.length == 0)\n        setparallelcard([{ parallelcardname: \"\", parallelcardsno: \"\" }]);\n      else setparallelcard(asset.product.parallelcard);\n      if (asset.product.hbacard.length == 0)\n        sethbacard([{ hbacardname: \"\", hbacardsno: \"\" }]);\n      else sethbacard(asset.product.hbacard);\n      if (asset.product.raidcontroller.length == 0)\n        setraidcontroller([{ raidcontrollername: \"\", raidcontrollersno: \"\" }]);\n      else setraidcontroller(asset.product.raidcontroller);\n      if (asset.product.tapecontroller.length == 0)\n        settapecontroller([{ tapecontrollername: \"\", tapecontrollersno: \"\" }]);\n      else settapecontroller(asset.product.tapecontroller);\n      if (asset.product.others.length == 0)\n        setothers([{ othersname: \"\", otherssno: \"\" }]);\n      else setothers(asset.product.others);\n      //asset\n    } catch (err) {\n      console.log(\"assetFind Error\", err);\n    }\n  };\n\n  useEffect(() => {\n    getAsset();\n  }, []);\n\n  const UpdatedModal = () => {\n    return (\n      <>\n        <Modal isOpen={submitModal} onClose={() => setSubmitModal(false)}>\n          <ModalHeader>Asset Updated Successfully!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setSubmitModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const handleInventory =async ()=>{\n    let payload={inventory,assetId:id,product:product}\n    console.log(payload)\n    try {\n      let update = await axios({\n        url: `${API}/inventory/${Emp.getId()}/assetupdate`,\n        method: \"POST\",\n        data: payload,\n      });\n      // setSubmitModal(true);\n      console.log(\"Done\");\n    } catch (error) {\n      throw error;\n    } \n  }\n\n  //functions\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // console.log(inventory);\n    \n    let payload = {\n      business: Business,\n      producttype: product,\n      ponumber: POnumber,\n      podate: POdate,\n      contractfrom: ContractFrom,\n      contractto: ContractTo,\n      billingfrom: BillingFrom,\n      billingto: BillingTo,\n      amcrate: AMCRate,\n      gstperc: GST,\n      gstamount: GSTAMOUNT,\n      netamount: NetAmount,\n      ///------------------ cust info\n      // unitId: unit._id,\n      // unitName: unit.unitName,\n      // accountId: account._id,\n      // accountName: account.accountName,\n      // customerId: customer._id,\n      // customerName: customer.customerName,\n    };\n    if(payload.podate==\"Invalid date\")payload.podate=\"\";\n    if(payload.contractfrom==\"Invalid date\")payload.contractfrom=\"\";\n    if(payload.contractto==\"Invalid date\")payload.contractto=\"\";\n    if(payload.billingfrom==\"Invalid date\")payload.billingfrom=\"\";\n    if(payload.billingto==\"Invalid date\")payload.billingto=\"\";\n    let newproduct = {\n      brand: brand,\n      model: model,\n      serialno: serialno,\n      os: os,\n      cpu: cpu,\n      ram: ram,\n      hdd: hdd,\n      smps: smps,\n      fan: fan,\n      motherboard: motherboard,\n      opticaldrive: opticaldrive,\n      keyboard: kbd,\n      mouse: mouse,\n      monitor: monitor,\n      gcard: gcard,\n      enetcard: enetcard,\n      serialcard: serialcard,\n      parallelcard: parallelcard,\n      hbacard: hbacard,\n      raidcontroller: raidcontroller,\n      tapecontroller: tapecontroller,\n      others: others,\n    };\n    console.log(payload);\n\n    const data = { id: id, newasset: payload, newproduct: newproduct };\n    // console.log(API);\n    try {\n      let update = await axios({\n        url: `${API}/asset/${Emp.getId()}/update`,\n        method: \"POST\",\n        data: data,\n      });\n      handleInventory();\n      setSubmitModal(true);\n      console.log(\"Done\");\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //--------- Loading Functions --------\n\n  const loadProductOption = async (type,inputText, callback) => {\n    console.log(inputText);\n    let temp = [];\n    let payload = { input: inputText ,Producttype:type};\n    try {\n      let response = await axios({\n        url: `${API}/inventory/${Emp.getId()}/getProduct`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      temp = response.data;\n    } catch (error) {\n      throw error;\n    }\n    let out = [];\n    temp.map((item, i) => {\n      out[i] = {\n        id: item._id,\n        name: item.name,\n        value: item.sno,\n        label: item.sno,\n        color: \"#00B8D9\",\n      };\n    });\n    callback(out);\n  };\n\n  // useEffect(() => {\n  //   handleMigration();\n  // }, []);\n\n  //ASSET----------------------------------------------------\n  const assetPicker = () => {\n    return (\n      <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800\">\n        {/* {floatbox ? (\n          <UpdateAssetFloat Business={Business} POnumber={POnumber} />\n        ) : null} */}\n\n        <Label className=\"font-bold\">\n          <span>Asset Information</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n\n        <div className=\"flex flex-row space-x-4\">\n          <SectionTitle className=\"\">\n            Customer: {customer.customerName}\n          </SectionTitle>\n          <SectionTitle>Account: {account.accountName} </SectionTitle>\n          <SectionTitle>Unit: {unit.unitName}</SectionTitle>\n        </div>\n\n        {/* <Label className=\"font-bold\">\n          <span>Customer: {customer.customerName}</span>\n        </Label> */}\n        {/* ----------------------------Row - 1 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full \">\n            {/* <Label className=\"my-3\">\n              <span>Business</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={Business}\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n              />\n            </Label> */}\n            <Label className=\"my-3\">\n              <span>Business Type</span>\n              <Select\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n                className=\"mt-1\"\n                value={Business}\n              >\n                <option value=\"\" selected disabled>\n                  Select Business Type\n                </option>\n                <option value=\"AMC\">AMC</option>\n                <option value=\"Warranty\">Warranty</option>\n              </Select>\n            </Label>\n          </div>\n          <div className=\"w-full  \">\n            <Label className=\"my-3\">\n              <span>Purchase Order Number</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={POnumber}\n                onChange={(e) => {\n                  setPOnumber(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div>\n        {/* ----------------------------Row - 2 --------------------------------------------------------------------- */}\n\n        <div className=\"flex flex-col lg:flex-row  items-center justify-start lg:space-x-8\">\n          <Label className=\"w-full my-3\">\n            <span>Purchase Order Date</span>\n            <Input\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={POdate}\n              onChange={(e) => {\n                setPOdate(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Contract From</span>\n            <Input\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={ContractFrom}\n              onChange={(e) => {\n                setContractFrom(e.target.value);\n              }}\n            />\n          </Label>\n\n          <Label className=\"w-full my-3\">\n            <span>Contract To</span>\n            <Input\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={ContractTo}\n              onChange={(e) => {\n                setContractTo(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing From</span>\n            <Input\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={BillingFrom}\n              onChange={(e) => {\n                setBillingFrom(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing To</span>\n            <Input\n              type=\"date\"\n              className=\"mt-1\"\n              name=\"brand\"\n              value={BillingTo}\n              onChange={(e) => {\n                setBillingTo(e.target.value);\n              }}\n            />\n          </Label>\n        </div>\n        {/* ----------------------------Row - 3 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>AMC Rate</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={AMCRate}\n                onChange={(e) => {\n                  setAMCRate(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>GST</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={GST}\n                onChange={(e) => {\n                  setGST(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div>\n        {/* ----------------------------Row - 4 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3 font-bold\">\n              <span>GST AMOUNT: </span>\n\n              <span> Rs {AMCRate * (GST / 100)}</span>\n            </Label>\n          </div>\n          <div className=\"w-full font-bold\">\n            <Label className=\"my-3\">\n              <span>Net Amount: </span>\n              <span>\n                Rs {parseInt(AMCRate) + parseInt(AMCRate) * (GST / 100)}\n              </span>\n            </Label>\n          </div>\n        </div>\n        {/* <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>GST AMOUNT</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={GSTAMOUNT}\n                onChange={(e) => {\n                  setGSTAMOUNT(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>Net Amount</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={NetAmount}\n                onChange={(e) => {\n                  setNetAmount(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div> */}\n      </div>\n    );\n  };\n\n  //PRODUCT\n\n  const productPicker = () => {\n    return (\n      <>\n        <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800\">\n          <form onSubmit={handleSubmit}>\n            <Label className=\"font-bold\">\n              <span>Essential Details</span>\n            </Label>\n            <hr className=\"mb-5 mt-2\" />\n            <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n              <Label className=\"my-3 w-full\">\n                <span>Brand</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Brand\"\n                  name=\"brand\"\n                  value={brand}\n                  onChange={(e) => {\n                    setBrand(e.target.value);\n                  }}\n                />\n              </Label>\n              <Label className=\"my-3 w-full\">\n                <span>Model</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Model\"\n                  name=\"model\"\n                  value={model}\n                  onChange={(e) => {\n                    setModel(e.target.value);\n                  }}\n                />\n              </Label>\n              <Label className=\"my-3 w-full\">\n                <span>Serial Number</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Serial Number\"\n                  name=\"serialno\"\n                  value={serialno}\n                  onChange={(e) => {\n                    setSerialNo(e.target.value);\n                  }}\n                />\n              </Label>\n            </div>\n            {/* ---------------------------OS--------------------------------- */}\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <Label className=\"font-bold\">\n                  <span>Operating System</span>\n                </Label>\n                <hr className=\"mb-5 mt-2\" />\n                <Label className=\"my-3\">\n                  <span>OS</span>\n                  <Input\n                    className=\"mt-1\"\n                    placeholder=\"OS\"\n                    name=\"os\"\n                    value={os}\n                    onChange={(e) => {\n                      setOs(e.target.value);\n                    }}\n                  />\n                </Label>\n              </>\n            ) : null}\n\n            {/* //////////// ARRAY /////////////// */}\n            {/* -------------------CPU and RAM-------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------CPU------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>CPU</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newcpu = [...cpu];\n                            let add = { cpuname: \"\", cpusno: \"\" };\n                            newcpu.push(add);\n                            setCpu(newcpu);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newcpu = [...cpu];\n                            if (newcpu[1]) {\n                              newcpu.pop();\n                              setCpu(newcpu);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {cpu.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"w-full my-3\">\n                              <span>CPU {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`CPU ${i + 1}`}\n                                name=\"cpuname\"\n                                value={item.cpuname}\n                                onChange={(e) => {\n                                  let newlist = [...cpu];\n                                  newlist[i].cpuname = e.target.value;\n                                  setCpu(newlist);\n                                }}\n                              />\n                            </Label>\n                            {/* <Label className=\"w-full my-3\">\n                              <span>CPU {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`CPU ${i + 1}'s Serial Number `}\n                                name=\"cpusno\"\n                                value={item.cpusno}\n                                onChange={(e) => {\n                                  let newlist = [...cpu];\n                                  newlist[i].cpusno = e.target.value;\n                                  setCpu(newlist);\n                                }}\n                              />\n                            </Label> */}\n                            <Label className=\"my-3 w-full\">\n                              <span>CPU {i + 1}: Serial Number</span>\n                              <AsyncSelect\n                                cacheOptions\n                                defaultOptions\n                                value={{label:item.cpusno, value:item.cpusno}}\n                                // value={item.cpusno}\n                                loadOptions={(inputText, callback)=>loadProductOption(\"Cpu\",inputText, callback)}\n                                placeholder={`CPU ${i + 1}`}\n                                onChange={(e) => {\n                                  let newlist = [...cpu];\n                                  newlist[i].cpusno = e.value;\n                                  newlist[i].cpuname = e.name;\n                                  setCpu(newlist);\n                                  console.log(e);\n                                }}\n                                defaultOptions={false}\n                              />\n                            </Label>\n                            \n                            <div className=\"ml-3\">\n                              <Button\n                                onClick={() => {\n                                  let newarr = cpu.filter(x=>{\n                                    if(!(x.cpusno==item.cpusno&&x.cpuname==item.cpuname)) return x;\n                                  });\n                                  \n                                    setCpu(newarr);\n                                  \n                                }}\n                                icon={Remove}\n                                layout=\"link\"\n                                aria-label=\"Like\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------CPU------------------------------- */}\n\n              {/* ----------------RAM------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>RAM</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newram = [...ram];\n                            let add = { ramname: \"\", ramsno: \"\" };\n                            newram.push(add);\n                            setram(newram);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newram = [...ram];\n                            if (newram[1]) {\n                              newram.pop();\n                              setram(newram);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {ram.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>RAM {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`RAM ${i + 1}`}\n                                name=\"ramname\"\n                                value={item.ramname}\n                                onChange={(e) => {\n                                  let newlist = [...ram];\n                                  newlist[i].ramname = e.target.value;\n                                  setram(newlist);\n                                }}\n                              />\n                            </Label>\n                            {/* <Label className=\"my-3 w-full\">\n                              <span>RAM {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`RAM ${i + 1}'s Serial Number `}\n                                name=\"cpusno\"\n                                value={item.ramsno}\n                                onChange={(e) => {\n                                  let newlist = [...ram];\n                                  newlist[i].ramsno = e.target.value;\n                                  setram(newlist);\n                                }}\n                              />\n                            </Label> */}\n                            <Label className=\"my-3 w-full\">\n                              <span>RAM {i + 1}: Serial Number</span>\n                              <AsyncSelect\n                                cacheOptions\n                                defaultOptions\n                                value={{label:item.ramsno, value:item.ramsno}}\n                                // value={item.ramsno}\n                                loadOptions={(inputText, callback)=>loadProductOption(\"Ram\",inputText, callback)}\n                                placeholder={`Graphics Card ${i + 1}`}\n                                onChange={(e) => {\n                                  let newlist = [...ram];\n                                  newlist[i].ramsno = e.value;\n                                  newlist[i].ramname = e.name;\n                                  setram(newlist);\n                                  console.log(e);\n                                }}\n                                defaultOptions={false}\n                              />\n                            </Label>\n                            \n                            <div className=\"ml-3\">\n                              <Button\n                                onClick={() => {\n                                  let newarr = ram.filter(x=>{\n                                    if(!(x.ramsno==item.ramsno&&x.ramname==item.ramname)) return x;\n                                  });\n                                  \n                                    setram(newarr);\n                                  \n                                }}\n                                icon={Remove}\n                                layout=\"link\"\n                                aria-label=\"Like\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------RAM------------------------------- */}\n            </div>\n\n            {/* -----------------------fan and motherboard------------------------------ */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------fan------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>FAN</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newfan = [...fan];\n                            let add = { fanname: \"\", fansno: \"\" };\n                            newfan.push(add);\n                            setfan(newfan);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newfan = [...fan];\n                            if (newfan[1]) {\n                              newfan.pop();\n                              setfan(newfan);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {fan.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>FAN {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`FAN ${i + 1}`}\n                                name=\"fanname\"\n                                value={item.fanname}\n                                onChange={(e) => {\n                                  let newlist = [...fan];\n                                  newlist[i].fanname = e.target.value;\n                                  setfan(newlist);\n                                }}\n                              />\n                            </Label>\n                            {/* <Label className=\"my-3 w-full\">\n                              <span>FAN {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`FAN ${i + 1}'s Serial Number `}\n                                name=\"fansno\"\n                                value={item.fansno}\n                                onChange={(e) => {\n                                  let newlist = [...fan];\n                                  newlist[i].fansno = e.target.value;\n                                  setfan(newlist);\n                                }}\n                              />\n                            </Label> */}\n                            <Label className=\"my-3 w-full\">\n                              <span>Fan {i + 1}: Serial Number</span>\n                              <AsyncSelect\n                                cacheOptions\n                                defaultOptions\n                                value={{label:item.fansno, value:item.fansno}}\n                                // value={item.fansno}\n                                loadOptions={(inputText, callback)=>loadProductOption(\"Fan\",inputText, callback)}\n                                placeholder={`Fan ${i + 1}`}\n                                onChange={(e) => {\n                                  let newlist = [...fan];\n                                  newlist[i].fansno = e.value;\n                                  newlist[i].fanname = e.name;\n                                  setfan(newlist);\n                                  console.log(e);\n                                }}\n                                defaultOptions={false}\n                              />\n                            </Label>\n                            \n                            <div className=\"ml-3\">\n                              <Button\n                                onClick={() => {\n                                  let newarr = fan.filter(x=>{\n                                    if(!(x.fansno==item.fansno&&x.fanname==item.fanname)) return x;\n                                  });\n                                  \n                                    setfan(newarr);\n                                  \n                                }}\n                                icon={Remove}\n                                layout=\"link\"\n                                aria-label=\"Like\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------fan------------------------------- */}\n\n              {/* ----------------motherboard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Motherboard</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmotherboard = [...motherboard];\n                            let add = {\n                              motherboardname: \"\",\n                              motherboardsno: \"\",\n                            };\n                            newmotherboard.push(add);\n                            setmotherboard(newmotherboard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmotherboard = [...motherboard];\n                            if (newmotherboard[1]) {\n                              newmotherboard.pop();\n                              setmotherboard(newmotherboard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {motherboard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Motherboard {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Motherboard ${i + 1}`}\n                                name=\"motherboardname\"\n                                value={item.motherboardname}\n                                onChange={(e) => {\n                                  let newlist = [...motherboard];\n                                  newlist[i].motherboardname = e.target.value;\n                                  setmotherboard(newlist);\n                                }}\n                              />\n                            </Label>\n                            {/* <Label className=\"my-3 w-full\">\n                              <span>Motherboard {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Motherboard ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"motherboardsno\"\n                                value={item.motherboardsno}\n                                onChange={(e) => {\n                                  let newlist = [...motherboard];\n                                  newlist[i].motherboardsno = e.target.value;\n                                  setmotherboard(newlist);\n                                }}\n                              />\n                            </Label> */}\n                            <Label className=\"my-3 w-full\">\n                              <span>Motherboard {i + 1}: Serial Number</span>\n                              <AsyncSelect\n                                cacheOptions\n                                defaultOptions\n                                value={{label:item.motherboardsno, value:item.motherboardsno}}\n                                // value={item.motherboardsno}\n                                loadOptions={(inputText, callback)=>loadProductOption(\"Motherboard\",inputText, callback)}\n                                placeholder={`Motherboard ${i + 1}`}\n                                onChange={(e) => {\n                                  let newlist = [...motherboard];\n                                  newlist[i].motherboardsno = e.value;\n                                  newlist[i].motherboardname = e.name;\n                                  setmotherboard(newlist);\n                                  console.log(e);\n                                }}\n                                defaultOptions={false}\n                              />\n                            </Label>\n                            \n                            <div className=\"ml-3\">\n                              <Button\n                                onClick={() => {\n                                  let newarr = motherboard.filter(x=>{\n                                    if(!(x.motherboardsno==item.motherboardsno&&x.motherboardname==item.motherboardname)) return x;\n                                  });\n                                  \n                                    setmotherboard(newarr);\n                                  \n                                }}\n                                icon={Remove}\n                                layout=\"link\"\n                                aria-label=\"Like\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------motherboard------------------------------- */}\n            </div>\n\n            {/* ------------------------HDD And SMPS */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------hdd------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>HDD</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhdd = [...hdd];\n                            let add = { hddname: \"\", hddsno: \"\" };\n                            newhdd.push(add);\n                            sethdd(newhdd);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhdd = [...hdd];\n                            if (newhdd[1]) {\n                              newhdd.pop();\n                              sethdd(newhdd);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {hdd.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>HDD {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HDD ${i + 1}`}\n                                name=\"hddname\"\n                                value={item.hddname}\n                                onChange={(e) => {\n                                  let newlist = [...hdd];\n                                  newlist[i].hddname = e.target.value;\n                                  sethdd(newlist);\n                                }}\n                              />\n                            </Label>\n                            {/* <Label className=\"my-3 w-full\">\n                              <span>HDD {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HDD ${i + 1}'s Serial Number `}\n                                name=\"hddsno\"\n                                value={item.hddsno}\n                                onChange={(e) => {\n                                  let newlist = [...hdd];\n                                  newlist[i].hddsno = e.target.value;\n                                  sethdd(newlist);\n                                }}\n                              />\n                            </Label> */}\n                            <Label className=\"my-3 w-full\">\n                              <span>HDD {i + 1}: Serial Number</span>\n                              <AsyncSelect\n                                cacheOptions\n                                defaultOptions\n                                value={{label:item.hddsno, value:item.hddsno}}\n                                // value={item.hddsno}\n                                loadOptions={(inputText, callback)=>loadProductOption(\"HDD\",inputText, callback)}\n                                placeholder={`HDD ${i + 1}`}\n                                onChange={(e) => {\n                                  let newlist = [...hdd];\n                                  newlist[i].hddsno = e.value;\n                                  newlist[i].hddname = e.name;\n                                  sethdd(newlist);\n                                  console.log(e);\n                                }}\n                                defaultOptions={false}\n                              />\n                            </Label>\n                            \n                            <div className=\"ml-3\">\n                              <Button\n                                onClick={() => {\n                                  let newarr = hdd.filter(x=>{\n                                    if(!(x.hddsno==item.hddsno&&x.hddname==item.hddname)) return x;\n                                  });\n                                  \n                                    sethdd(newarr);\n                                  \n                                }}\n                                icon={Remove}\n                                layout=\"link\"\n                                aria-label=\"Like\"\n                              />\n                            </div>\n\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------hdd------------------------------- */}\n\n              {/* ----------------smps------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>SMPS</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newsmps = [...smps];\n                            let add = { smpsname: \"\", smpssno: \"\" };\n                            newsmps.push(add);\n                            setsmps(newsmps);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newsmps = [...smps];\n                            if (newsmps[1]) {\n                              newsmps.pop();\n                              setsmps(newsmps);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {smps.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>SMPS {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`SMPS ${i + 1}`}\n                                name=\"smpsname\"\n                                value={item.smpsname}\n                                onChange={(e) => {\n                                  let newlist = [...smps];\n                                  newlist[i].smpsname = e.target.value;\n                                  setsmps(newlist);\n                                }}\n                              />\n                            </Label>\n                            {/* <Label className=\"my-3 w-full\">\n                              <span>SMPS {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`SMPS ${i + 1}'s Serial Number `}\n                                name=\"smpssno\"\n                                value={item.smpssno}\n                                onChange={(e) => {\n                                  let newlist = [...smps];\n                                  newlist[i].smpssno = e.target.value;\n                                  setsmps(newlist);\n                                }}\n                              />\n                            </Label> */}\n                            <Label className=\"my-3 w-full\">\n                              <span>SMPS {i + 1}: Serial Number</span>\n                              <AsyncSelect\n                                cacheOptions\n                                defaultOptions\n                                value={{label:item.smpssno, value:item.smpssno}}\n                                // value={item.smpssno}\n                                loadOptions={(inputText, callback)=>loadProductOption(\"SMPS\",inputText, callback)}\n                                placeholder={`SMPS ${i + 1}`}\n                                onChange={(e) => {\n                                  let newlist = [...smps];\n                                  newlist[i].smpssno = e.value;\n                                  newlist[i].smpsname = e.name;\n                                  setsmps(newlist);\n                                  console.log(e);\n                                }}\n                                defaultOptions={false}\n                              />\n                            </Label>\n                            \n                            <div className=\"ml-3\">\n                              <Button\n                                onClick={() => {\n                                  let newarr = smps.filter(x=>{\n                                    if(!(x.smpssno==item.smpssno&&x.smpsname==item.smpsname)) return x;\n                                  });\n                                  \n                                    setsmps(newarr);\n                                  \n                                }}\n                                icon={Remove}\n                                layout=\"link\"\n                                aria-label=\"Like\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------smps------------------------------- */}\n            </div>\n\n            {/* -----------------------Keyboard And Mouse ------------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------kbd------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Keyboard</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newkbd = [...kbd];\n                            let add = { kbdname: \"\", kbdsno: \"\" };\n                            newkbd.push(add);\n                            setkbd(newkbd);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newkbd = [...kbd];\n                            if (newkbd[1]) {\n                              newkbd.pop();\n                              setkbd(newkbd);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {kbd.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Keyboard {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Keyboard ${i + 1}`}\n                                name=\"kbdname\"\n                                value={item.kbdname}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].kbdname = e.target.value;\n                                  setkbd(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Keyboard {i + 1}: Serial Number</span>\n                              {/* <Input\n                                className=\"mt-1\"\n                                placeholder={`Keyboard ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"kbdsno\"\n                                value={item.kbdsno}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].kbdsno = e.target.value;\n                                  setkbd(newlist);\n                                }}\n                              /> */}\n                              <AsyncSelect\n                                cacheOptions\n                                defaultOptions\n                                value={{label:item.kbdsno, value:item.kbdsno}}\n                                // value={item.kbdsno}\n                                loadOptions={(inputText, callback)=>loadProductOption(\"Keyboard\",inputText, callback)}\n                                placeholder={`Keyboard ${i + 1}`}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].kbdsno = e.value;\n                                  newlist[i].kbdname = e.name;\n                                  setkbd(newlist);\n                                  let tempInv=inventory;\n                                  tempInv.push([{name:e.name,sno:e.value,type:\"Keyboard\",op:\"ADD\"}])\n                                  setInventory(tempInv);\n                                 console.log(e);\n                                }}\n                                defaultOptions={false}\n                              />\n                            </Label>\n                            <div className=\"ml-3\">\n                              <Button\n                                onClick={() => {\n                                  let tempInv=inventory;\n                                  tempInv.push([{name:item.kbdname,sno:item.kbdsno,type:\"Keyboard\",op:\"DEL\"}])\n                                  setInventory(tempInv);\n\n                                  let newkbd = kbd.filter(x=>{\n                                    if(!(x.kbdsno==item.kbdsno&&x.kbdname==item.kbdname)) return x;\n                                  });\n                                  \n                                    setkbd(newkbd);\n                                  \n                                }}\n                                icon={Remove}\n                                layout=\"link\"\n                                aria-label=\"Like\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------kbd------------------------------- */}\n\n              {/* ----------------mouse------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Mouse</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmouse = [...mouse];\n                            let add = { mousename: \"\", mousesno: \"\" };\n                            newmouse.push(add);\n                            setmouse(newmouse);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmouse = [...mouse];\n                            if (newmouse[1]) {\n                              newmouse.pop();\n                              setmouse(newmouse);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {mouse.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Mouse {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Mouse ${i + 1}`}\n                                name=\"mousename\"\n                                value={item.mousename}\n                                onChange={(e) => {\n                                  let newlist = [...mouse];\n                                  newlist[i].mousename = e.target.value;\n                                  setmouse(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Mouse {i + 1}: Serial Number</span>\n                              {/* <Input\n                                className=\"mt-1\"\n                                placeholder={`Mouse ${i + 1}'s Serial Number `}\n                                name=\"mousesno\"\n                                value={item.mousesno}\n                                onChange={(e) => {\n                                  let newlist = [...mouse];\n                                  newlist[i].mousesno = e.target.value;\n                                  setmouse(newlist);\n                                }}\n                              /> */}\n                              <AsyncSelect\n                                cacheOptions\n                                defaultOptions\n                                value={{label:item.mousesno, value:item.mousesno}}\n                                // value={item.mousesno}\n                                loadOptions={(inputText, callback)=>loadProductOption(\"Mouse\",inputText, callback)}\n                                placeholder={`Mouse ${i + 1}`}\n                                onChange={(e) => {\n                                  let newlist = [...mouse];\n                                  newlist[i].mousesno = e.value;\n                                  newlist[i].mousename = e.name;\n                                  setmouse(newlist);\n                                  console.log(e);\n                                }}\n                                defaultOptions={false}\n                              />\n                            </Label>\n                            \n                            <div className=\"ml-3\">\n                              <Button\n                                onClick={() => {\n                                  let newarr = mouse.filter(x=>{\n                                    if(!(x.mousesno==item.mousesno&&x.mousename==item.mousename)) return x;\n                                  });\n                                  \n                                    setmouse(newarr);\n                                  \n                                }}\n                                icon={Remove}\n                                layout=\"link\"\n                                aria-label=\"Like\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------mouse------------------------------- */}\n            </div>\n\n            {/* ---------------------------Monitor and GCard ------------------------*/}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------monitor------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Monitor</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmonitor = [...monitor];\n                            let add = { monitorname: \"\", monitorsno: \"\" };\n                            newmonitor.push(add);\n                            setmonitor(newmonitor);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmonitor = [...monitor];\n                            if (newmonitor[1]) {\n                              newmonitor.pop();\n                              setmonitor(newmonitor);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {monitor.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Monitor {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Monitor ${i + 1}`}\n                                name=\"monitorname\"\n                                value={item.monitorname}\n                                onChange={(e) => {\n                                  let newlist = [...monitor];\n                                  newlist[i].monitorname = e.target.value;\n                                  setmonitor(newlist);\n                                }}\n                              />\n                            </Label>\n                            {/* <Label className=\"my-3 w-full\">\n                              <span>Monitor {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Monitor ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"monitorsno\"\n                                value={item.monitorsno}\n                                onChange={(e) => {\n                                  let newlist = [...monitor];\n                                  newlist[i].monitorsno = e.target.value;\n                                  setmonitor(newlist);\n                                }}\n                              />\n                            </Label> */}\n                            <Label className=\"my-3 w-full\">\n                              <span>Monitor {i + 1}: Serial Number</span>\n                              <AsyncSelect\n                                cacheOptions\n                                defaultOptions\n                                value={{label:item.monitorsno, value:item.monitorsno}}\n                                // value={item.monitorsno}\n                                loadOptions={(inputText, callback)=>loadProductOption(\"Monitor\",inputText, callback)}\n                                placeholder={`Monitor ${i + 1}`}\n                                onChange={(e) => {\n                                  let newlist = [...monitor];\n                                  newlist[i].monitorsno = e.value;\n                                  newlist[i].monitorname = e.name;\n                                  setmonitor(newlist);\n                                  console.log(e);\n                                }}\n                                defaultOptions={false}\n                              />\n                            </Label>\n                            \n                            <div className=\"ml-3\">\n                              <Button\n                                onClick={() => {\n                                  let newarr = monitor.filter(x=>{\n                                    if(!(x.monitorsno==item.monitorsno&&x.monitorname==item.monitorname)) return x;\n                                  });\n                                  \n                                    setmonitor(newarr);\n                                  \n                                }}\n                                icon={Remove}\n                                layout=\"link\"\n                                aria-label=\"Like\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------monitor------------------------------- */}\n\n              {/* ----------------gcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Graphics Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newgcard = [...gcard];\n                            let add = { gcardname: \"\", gcardsno: \"\" };\n                            newgcard.push(add);\n                            setgcard(newgcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newgcard = [...gcard];\n                            if (newgcard[1]) {\n                              newgcard.pop();\n                              setgcard(newgcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {gcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Graphics Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Graphics Card ${i + 1}`}\n                                name=\"gcardname\"\n                                value={item.gcardname}\n                                onChange={(e) => {\n                                  let newlist = [...gcard];\n                                  newlist[i].gcardname = e.target.value;\n                                  setgcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            {/* <Label className=\"my-3 w-full\">\n                              <span>Graphics Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Graphics Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"gcardsno\"\n                                value={item.gcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...gcard];\n                                  newlist[i].gcardsno = e.target.value;\n                                  setgcard(newlist);\n                                }}\n                              />\n                            </Label> */}\n                            <Label className=\"my-3 w-full\">\n                              <span>Graphics Card {i + 1}: Serial Number</span>\n                              <AsyncSelect\n                                cacheOptions\n                                defaultOptions\n                                value={{label:item.gcardsno, value:item.gcardsno}}\n                                // value={item.gcardsno}\n                                loadOptions={(inputText, callback)=>loadProductOption(\"GCard\",inputText, callback)}\n                                placeholder={`Graphics Card ${i + 1}`}\n                                onChange={(e) => {\n                                  let newlist = [...gcard];\n                                  newlist[i].gcardsno = e.value;\n                                  newlist[i].gcardname = e.name;\n                                  setgcard(newlist);\n                                  console.log(e);\n                                }}\n                                defaultOptions={false}\n                              />\n                            </Label>\n                            \n                            <div className=\"ml-3\">\n                              <Button\n                                onClick={() => {\n                                  let newarr = gcard.filter(x=>{\n                                    if(!(x.gcardsno==item.gcardsno&&x.gcardname==item.gcardname)) return x;\n                                  });\n                                  \n                                    setgcard(newarr);\n                                  \n                                }}\n                                icon={Remove}\n                                layout=\"link\"\n                                aria-label=\"Like\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------gcard------------------------------- */}\n            </div>\n\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------enetcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>E Net Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newenetcard = [...enetcard];\n                            let add = { enetcardname: \"\", enetcardsno: \"\" };\n                            newenetcard.push(add);\n                            setenetcard(newenetcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newenetcard = [...enetcard];\n                            if (newenetcard[1]) {\n                              newenetcard.pop();\n                              setenetcard(newenetcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {enetcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>E Net Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`E Net Card ${i + 1}`}\n                                name=\"enetcardname\"\n                                value={item.enetcardname}\n                                onChange={(e) => {\n                                  let newlist = [...enetcard];\n                                  newlist[i].enetcardname = e.target.value;\n                                  setenetcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            {/* <Label className=\"my-3 w-full\">\n                              <span>E Net Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`E Net Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"enetcardsno\"\n                                value={item.enetcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...enetcard];\n                                  newlist[i].enetcardsno = e.target.value;\n                                  setenetcard(newlist);\n                                }}\n                              />\n                            </Label> */}\n                            <Label className=\"my-3 w-full\">\n                              <span>Enet Card {i + 1}: Serial Number</span>\n                              <AsyncSelect\n                                cacheOptions\n                                defaultOptions\n                                value={{label:item.enetcardsno, value:item.enetcardsno}}\n                                // value={item.enetcardsno}\n                                loadOptions={(inputText, callback)=>loadProductOption(\"EnetCard\",inputText, callback)}\n                                placeholder={`Enet Card ${i + 1}`}\n                                onChange={(e) => {\n                                  let newlist = [...enetcard];\n                                  newlist[i].enetcardsno = e.value;\n                                  newlist[i].enetcardname = e.name;\n                                  setenetcard(newlist);\n                                  console.log(e);\n                                }}\n                                defaultOptions={false}\n                              />\n                            </Label>\n                            \n                            <div className=\"ml-3\">\n                              <Button\n                                onClick={() => {\n                                  let newarr = enetcard.filter(x=>{\n                                    if(!(x.enetcardsno==item.enetcardsno&&x.enetcardname==item.enetcardname)) return x;\n                                  });\n                                  \n                                    setenetcard(newarr);\n                                  \n                                }}\n                                icon={Remove}\n                                layout=\"link\"\n                                aria-label=\"Like\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------enetcard------------------------------- */}\n\n              {/* ----------------serialcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Serial Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newserialcard = [...serialcard];\n                            let add = { serialcardname: \"\", serialcardsno: \"\" };\n                            newserialcard.push(add);\n                            setserialcard(newserialcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newserialcard = [...serialcard];\n                            if (newserialcard[1]) {\n                              newserialcard.pop();\n                              setserialcard(newserialcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {serialcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Serial Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Serial Card ${i + 1}`}\n                                name=\"serialcardname\"\n                                value={item.serialcardname}\n                                onChange={(e) => {\n                                  let newlist = [...serialcard];\n                                  newlist[i].serialcardname = e.target.value;\n                                  setserialcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Serial Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Serial Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"serialcardsno\"\n                                value={item.serialcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...serialcard];\n                                  newlist[i].serialcardsno = e.target.value;\n                                  setserialcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------serialcard------------------------------- */}\n            </div>\n\n            {/* --------------------Parallel And HBD Card ----------------------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------parallelcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Parallel Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newparallelcard = [...parallelcard];\n                            let add = {\n                              parallelcardname: \"\",\n                              parallelcardsno: \"\",\n                            };\n                            newparallelcard.push(add);\n                            setparallelcard(newparallelcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newparallelcard = [...parallelcard];\n                            if (newparallelcard[1]) {\n                              newparallelcard.pop();\n                              setparallelcard(newparallelcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {parallelcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Parallel Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Parallel Card ${i + 1}`}\n                                name=\"parallelcardname\"\n                                value={item.parallelcardname}\n                                onChange={(e) => {\n                                  let newlist = [...parallelcard];\n                                  newlist[i].parallelcardname = e.target.value;\n                                  setparallelcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Parallel Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Parallel Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"parallelcardsno\"\n                                value={item.parallelcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...parallelcard];\n                                  newlist[i].parallelcardsno = e.target.value;\n                                  setparallelcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------parallelcard------------------------------- */}\n\n              {/* ----------------hbacard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>HBA Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhbacard = [...hbacard];\n                            let add = { hbacardname: \"\", hbacardsno: \"\" };\n                            newhbacard.push(add);\n                            sethbacard(newhbacard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhbacard = [...hbacard];\n                            if (newhbacard[1]) {\n                              newhbacard.pop();\n                              sethbacard(newhbacard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {hbacard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>HBA Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HBA Card ${i + 1}`}\n                                name=\"hbacardname\"\n                                value={item.hbacardname}\n                                onChange={(e) => {\n                                  let newlist = [...hbacard];\n                                  newlist[i].hbacardname = e.target.value;\n                                  sethbacard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>HBA Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HBA Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"hbacardsno\"\n                                value={item.hbacardsno}\n                                onChange={(e) => {\n                                  let newlist = [...hbacard];\n                                  newlist[i].hbacardsno = e.target.value;\n                                  sethbacard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------hbacard------------------------------- */}\n            </div>\n            {/* --------------------Raid And Tape Controller------------------------------ */}\n\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------raidcontroller------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Raid Controller</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newraidcontroller = [...raidcontroller];\n                            let add = {\n                              raidcontrollername: \"\",\n                              raidcontrollersno: \"\",\n                            };\n                            newraidcontroller.push(add);\n                            setraidcontroller(newraidcontroller);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newraidcontroller = [...raidcontroller];\n                            if (newraidcontroller[1]) {\n                              newraidcontroller.pop();\n                              setraidcontroller(newraidcontroller);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {raidcontroller.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Raid Controller {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Raid Controller ${i + 1}`}\n                                name=\"raidcontrollername\"\n                                value={item.raidcontrollername}\n                                onChange={(e) => {\n                                  let newlist = [...raidcontroller];\n                                  newlist[i].raidcontrollername =\n                                    e.target.value;\n                                  setraidcontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>\n                                Raid Controller {i + 1}: Serial Number\n                              </span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Raid Controller ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"raidcontrollersno\"\n                                value={item.raidcontrollersno}\n                                onChange={(e) => {\n                                  let newlist = [...raidcontroller];\n                                  newlist[i].raidcontrollersno = e.target.value;\n                                  setraidcontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------raidcontroller------------------------------- */}\n\n              {/* ----------------tapecontroller------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Tape Controller</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newtapecontroller = [...tapecontroller];\n                            let add = {\n                              tapecontrollername: \"\",\n                              tapecontrollersno: \"\",\n                            };\n                            newtapecontroller.push(add);\n                            settapecontroller(newtapecontroller);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newtapecontroller = [...tapecontroller];\n                            if (newtapecontroller[1]) {\n                              newtapecontroller.pop();\n                              settapecontroller(newtapecontroller);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {tapecontroller.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Tape Controller {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Tape Controller ${i + 1}`}\n                                name=\"tapecontrollername\"\n                                value={item.tapecontrollername}\n                                onChange={(e) => {\n                                  let newlist = [...tapecontroller];\n                                  newlist[i].tapecontrollername =\n                                    e.target.value;\n                                  settapecontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>\n                                Tape Controller {i + 1}: Serial Number\n                              </span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Tape Controller ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"tapecontrollersno\"\n                                value={item.tapecontrollersno}\n                                onChange={(e) => {\n                                  let newlist = [...tapecontroller];\n                                  newlist[i].tapecontrollersno = e.target.value;\n                                  settapecontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------tapecontroller------------------------------- */}\n            </div>\n\n            {/* ----------------opticaldrive------------------------------- */}\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <div className=\"flex flex-row items-center\">\n                  <Label className=\"font-bold\">\n                    <span>Optical Drive</span>\n                  </Label>\n                  <div className=\"ml-3 \">\n                    <Button\n                      onClick={() => {\n                        let newopticaldrive = [...opticaldrive];\n                        let add = { opticaldrivename: \"\", opticaldrivesno: \"\" };\n                        newopticaldrive.push(add);\n                        setopticaldrive(newopticaldrive);\n                      }}\n                      icon={Add}\n                      layout=\"link\"\n                      aria-label=\"Like\"\n                    />\n                  </div>\n                  <div className=\"ml-3\">\n                    <Button\n                      onClick={() => {\n                        let newopticaldrive = [...opticaldrive];\n                        if (newopticaldrive[1]) {\n                          newopticaldrive.pop();\n                          setopticaldrive(newopticaldrive);\n                        }\n                      }}\n                      icon={Remove}\n                      layout=\"link\"\n                      aria-label=\"Like\"\n                    />\n                  </div>\n                </div>\n                <hr className=\"mb-5 mt-2\" />\n                {opticaldrive.map((item, i) => {\n                  return (\n                    <div key={i}>\n                      <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                        <Label className=\"my-3 w-full\">\n                          <span>Optical Drive {i + 1}</span>\n                          <Input\n                            className=\"mt-1\"\n                            placeholder={`Opticaldrive ${i + 1}`}\n                            name=\"opticaldrivename\"\n                            value={item.opticaldrivename}\n                            onChange={(e) => {\n                              let newlist = [...opticaldrive];\n                              newlist[i].opticaldrivename = e.target.value;\n                              setopticaldrive(newlist);\n                            }}\n                          />\n                        </Label>\n                        <Label className=\"my-3 w-full\">\n                          <span>Opticaldrive {i + 1}: Serial Number</span>\n                          <Input\n                            className=\"mt-1\"\n                            placeholder={`Optical Drive ${\n                              i + 1\n                            }'s Serial Number `}\n                            name=\"opticaldrivesno\"\n                            value={item.opticaldrivesno}\n                            onChange={(e) => {\n                              let newlist = [...opticaldrive];\n                              newlist[i].opticaldrivesno = e.target.value;\n                              setopticaldrive(newlist);\n                            }}\n                          />\n                        </Label>\n                      </div>\n                    </div>\n                  );\n                })}\n              </>\n            ) : null}\n            {/* ----------------opticaldrive------------------------------- */}\n\n            {/* ----------------others------------------------------- */}\n            <div className=\"flex flex-row items-center\">\n              <Label className=\"font-bold\">\n                <span>Others</span>\n              </Label>\n              <div className=\"ml-3\">\n                <Button\n                  onClick={() => {\n                    let newothers = [...others];\n                    let add = { othersname: \"\", otherssno: \"\" };\n                    newothers.push(add);\n                    setothers(newothers);\n                  }}\n                  icon={Add}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                />\n              </div>\n              <div className=\"ml-3\">\n                <Button\n                  onClick={() => {\n                    let newothers = [...others];\n                    if (newothers[1]) {\n                      newothers.pop();\n                      setothers(newothers);\n                    }\n                  }}\n                  icon={Remove}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                />\n              </div>\n            </div>\n            <hr className=\"mb-5 mt-2\" />\n            {others.map((item, i) => {\n              return (\n                <div key={i}>\n                  <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                    <Label className=\"my-3 w-full\">\n                      <span>Others {i + 1}</span>\n                      <Input\n                        className=\"mt-1\"\n                        placeholder={`Others ${i + 1}`}\n                        name=\"othersname\"\n                        value={item.othersname}\n                        onChange={(e) => {\n                          let newlist = [...others];\n                          newlist[i].othersname = e.target.value;\n                          setothers(newlist);\n                        }}\n                      />\n                    </Label>\n                    <Label className=\"my-3 w-full\">\n                      <span>Others {i + 1}: Serial Number</span>\n                      <Input\n                        className=\"mt-1\"\n                        placeholder={`Others ${i + 1}'s Serial Number `}\n                        name=\"otherssno\"\n                        value={item.otherssno}\n                        onChange={(e) => {\n                          let newlist = [...others];\n                          newlist[i].otherssno = e.target.value;\n                          setothers(newlist);\n                        }}\n                      />\n                    </Label>\n                  </div>\n                </div>\n              );\n            })}\n\n            {/* ----------------others------------------------------- */}\n\n            <div className=\"flex items-center justify-center my-10\">\n              <Button type=\"submit\">Submit</Button>\n            </div>\n\n            {/* <Label className=\"mt-4\">\n              <span>Disabled</span>\n              <Input disabled className=\"mt-1\" placeholder=\"Jane Doe\" />\n            </Label> */}\n          </form>\n        </div>\n      </>\n    );\n  };\n\n  //DROPDOWN------------------------------------------------------------------------------------\n\n  const [isOpen, setIsOpen] = useState(false);\n  function toggleDropdown() {\n    setIsOpen(!isOpen);\n  }\n\n  const test = () => {\n    console.log(test);\n  };\n\n  return (\n    <>\n      <UnitListModal\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setUnit={setUnit}\n        unit={unit}\n        customer={customer}\n        setCustomer={setCustomer}\n        account={account}\n        setAccount={setAccount}\n      />\n      {/* Heading of page with float button */}\n      <div className=\"flex items-center\">\n        <PageTitle>Call Assets Management</PageTitle>\n        <div>\n          <Button\n            className=\"mx-3\"\n            onClick={() => {\n              setFloatBox(!floatbox);\n            }}\n            icon={HeartIcon}\n            layout=\"link\"\n            aria-label=\"Like\"\n          />\n        </div>\n      </div>\n      {assetPicker()}\n      {/* <SectionTitle>Pick Product</SectionTitle> */}\n      {/* {dropdown()} */}\n      {product != \"null\" ? (\n        <>\n          <SectionTitle>{product} </SectionTitle>\n          {productPicker()}\n        </>\n      ) : null}\n      {/* {productPicker()} */}\n      {/* /////---------------------------- FOOTER */}\n      {/* <div class=\" w-7/12 bottom-0  border-t border-grey p-4 fixed pin-b bg-gray-700 text-xs text-white\">\n        Asset Summary Asset Information:\n        <br />\n        Business: {Business} POnumber: {POnumber} ContractFrom: {ContractFrom}\n        ContractTo: {ContractTo} BillingFrom: {BillingFrom} BillingTo:{\" \"}\n        {BillingTo} AMCRate:\n        {AMCRate} GST:{GST} GSTAMOUNT:{GSTAMOUNT} NetAmount:{NetAmount}\n        <br />\n        Product: {product}\n        <br />\n        Brind: {brand} model: {model} serialno: {serialno} os: {os}\n        <br />\n        {cpu.map((p, i) => {\n          return (\n            <>\n              CPU:{p.cpuname}, {p.cpusno}\n            </>\n          );\n        })}\n      </div> */}\n      {UpdatedModal()}\n    </>\n  );\n}\n\nexport default UpdateAssetFromCall;\n"],"sourceRoot":""}