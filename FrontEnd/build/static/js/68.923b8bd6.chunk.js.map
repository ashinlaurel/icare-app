{"version":3,"sources":["pages/CustomerPages/RaiseCall.js"],"names":["RaiseCall","useHistory","useState","isReviewModalOpen","setIsReviewModalOpen","isReqFieldModal","setIsReqFieldModal","isAssetModal","setIsAssetModal","IsassetexistModal","setIsassetexistModal","assetexistmessage","setAssetexistmessage","setTopHeading","useContext","TopBarContext","isInfoModalOpen","setIsInfoModalOpen","product","brand","model","serialno","os","cpu","ram","hdd","smps","fan","motherboard","opticaldrive","keyboard","kbd","mouse","monitor","gcard","enetcard","serialcard","parallelcard","hbacard","raidcontroller","tapecontroller","others","infoModalAsset","setInfoModalAsset","activerowid","setActiveRowId","page","setPage","data","setData","isOpen","setIsOpen","isOpenTwo","setIsOpenTwo","refresh","setRefresh","disabler","setDisabler","Business","setProduct","_id","unitName","customerName","accountName","selectedprod","setSelectedProd","searchtype","setSearchType","searchlabel","setSearchLabel","searchquery","setSearchQuery","date","callStatus","engineer","callAttendDate","startOfService","endOfService","note","localStorage","getItem","actionTaken","callhistory","setCallHistory","totalResults","setTotalResults","successfulCallNo","setSuccessfulCallNo","onPageChange","p","useEffect","a","console","log","payload","pages","limit","filters","business","producttype","unitId","customerId","accountId","Cust","getRole","getId","axios","url","API","method","response","out","total","valobj","callNo","moment","format","contactPerson","phone","problem","time","values","setValues","handleChange","name","e","thedate","target","value","callNumberSetter","thecallcount","year","month","day","callnumber","thestring","temp","submitCall","JSON","stringify","newcall","assetId","history","regtimestamp","errid","message","className","type","placeholder","onChange","class","onClick","aria-label","aria-haspopup","xmlns","viewBox","d","onClose","onSubmit","preventDefault","disabled","map","user","i","key","ponumber","podate","fill","aria-hidden","resultsPerPage","label","item","cpuname","cpusno","ramname","ramsno","fanname","fansno","motherboardname","motherboardsno","hddname","hddsno","smpsname","smpssno","keyboardname","keyboardsno","mousename","mousesno","monitorname","monitorsno","gcardname","gcardsno","enetcardname","enetcardsno","serialcardname","serialcardsno","parallelcardname","parallelcardsno","hbacardname","hbacardsno","raidcontrollername","raidcontrollersno","tapecontrollername","tapecontrollersno","opticaldrivename","opticaldrivesno"],"mappings":"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","file":"static/js/68.923b8bd6.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../backendapi\";\nimport moment from \"moment\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\n\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport { signup, signin, authenticate } from \"../../helpers/auth\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\n\nimport { useHistory } from \"react-router-dom\";\n\n// --------ASSET\nimport { Link } from \"react-router-dom\";\nimport { TickIcon } from \"../../icons\";\nimport Cust from \"../../helpers/auth/CustProfile\";\n/////////////----------------->>>>>> bug <<<<<------------customerList refresh-------------------------\n\nfunction RaiseCall() {\n  let history = useHistory();\n\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [isReqFieldModal, setIsReqFieldModal] = useState(false);\n  const [isAssetModal, setIsAssetModal] = useState(false);\n  const [IsassetexistModal, setIsassetexistModal] = useState(false);\n  const [assetexistmessage, setAssetexistmessage] = useState(\"\");\n  const { setTopHeading } = useContext(TopBarContext);\n  const [isInfoModalOpen, setIsInfoModalOpen] = useState(false);\n  const [infoModalAsset, setInfoModalAsset] = useState({\n    product: {\n      brand: \"\",\n      model: \"\",\n      serialno: \"\",\n      os: \"\",\n      cpu: [],\n      ram: [],\n      hdd: [],\n      smps: [],\n      fan: [],\n      motherboard: [],\n      opticaldrive: [],\n      keyboard: [],\n      kbd: [],\n      mouse: [],\n      monitor: [],\n      gcard: [],\n      enetcard: [],\n      serialcard: [],\n      parallelcard: [],\n      hbacard: [],\n      raidcontroller: [],\n      tapecontroller: [],\n      others: [],\n    },\n  });\n\n  //---------------------------------- ASSETS VIEW STATES\n  // *\n  // *\n  // *\n  // *\n  // *\n  // *\n  // *\n  // *\n\n  // Bottom bar stuff\n\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  // dropdown and modals\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenTwo, setIsOpenTwo] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [Business, setBusiness] = useState(\"\");\n  const [product, setProduct] = useState(\"\");\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [theunitdetails, setTheUnitDetails] = useState({});\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // call history\n  const [callhistory, setCallHistory] = useState([\n    {\n      date: \"\",\n      callStatus: \"0\",\n      engineer: \"Yet To Be Assigned\",\n      callAttendDate: \"Nil\",\n      startOfService: \"Nil\",\n      endOfService: \"Nil\",\n      note: `Call has been registered (Customer:${localStorage.getItem(\n        \"name\"\n      )})`,\n      actionTaken: \"Nil\",\n    },\n  ]);\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n  const [successfulCallNo, setSuccessfulCallNo] = useState(\"\");\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Raise Call\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          business: \"\",\n          producttype: product,\n          // customer: customer,\n          // account: account,\n          unitId: \"\",\n          customerId: \"\",\n          accountId: \"\",\n          searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      console.log(Cust.getRole(), Cust.getId());\n      if (Cust.getRole() == 1) {\n        payload.filters.customerId = Cust.getId();\n      } else if (Cust.getRole() == 2) {\n        payload.filters.accountId = Cust.getId();\n      } else return;\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/asset/getallbycust`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, Business, product, refresh]);\n\n  // ----------------------Unit Details ------------------------------\n  // useEffect(() => {\n  //   console.log(\"-----------------------unit details ------------------------\");\n  //   console.log(theunitdetails);\n  //   setValues({\n  //     ...values,\n  //     contactPerson: theunitdetails.contactPerson,\n  //     phone: theunitdetails.contactNo,\n  //   });\n  // }, [refresh]);\n\n  const Asset = () => {\n    return (\n      <>\n        {/* ---------------------Customer Selection Modal----------------------------------------- */}\n\n        {/* ---------------------Customer Selection Modal----------------------------------------- */}\n\n        {/* {floatbox ? <AssetFloat /> : null} */}\n        <div className=\"mb-64 mt-1\">\n          <div className=\"dark:text-white flex items-center font-bold my-2 text-xl\">\n            Pick Faulty Product\n          </div>\n          {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n          <div className=\"\">\n            {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n            <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-6 \">\n              {/* ---------------------------Product Drop Down-------------------------------------- */}\n              <div className=\"relative z-40 \">\n                <button\n                  onClick={() => {\n                    setIsOpen(!isOpen);\n                  }}\n                  className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                  aria-label=\"Notifications\"\n                  aria-haspopup=\"true\"\n                >\n                  {product ? product : \"Pick Product\"}\n                </button>\n                <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                  <svg\n                    class=\"fill-current h-4 w-4\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 20 20\"\n                  >\n                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                  </svg>\n                </div>\n                <Dropdown isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"\");\n                    }}\n                  >\n                    <span>All</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"Console\");\n                    }}\n                  >\n                    <span>Console</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"DMP\");\n                    }}\n                  >\n                    <span>DMP</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"Inkjet\");\n                    }}\n                  >\n                    <span>Inkjet</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"KVM\");\n                    }}\n                  >\n                    <span>KVM</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"Laptop\");\n                    }}\n                  >\n                    <span>Laptop</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"Laser\");\n                    }}\n                  >\n                    <span>Laser</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"LMP\");\n                    }}\n                  >\n                    <span>LMP</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"Module\");\n                    }}\n                  >\n                    <span>Module</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"Router\");\n                    }}\n                  >\n                    <span>Router</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"Scanner\");\n                    }}\n                  >\n                    <span>Scanner</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"Server\");\n                    }}\n                  >\n                    <span>Server</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"Desktop\");\n                    }}\n                  >\n                    <span>Desktop</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"Storage\");\n                    }}\n                  >\n                    <span>Storage</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"Switch\");\n                    }}\n                  >\n                    <span>Switch</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"UPS\");\n                    }}\n                  >\n                    <span>UPS</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpen(false);\n                      setProduct(\"Others\");\n                    }}\n                  >\n                    <span>Others</span>\n                  </DropdownItem>\n                </Dropdown>\n              </div>\n\n              {/* -------------------------------Search Type--------------------------------------- */}\n              <div className=\"relative \">\n                <button\n                  onClick={() => {\n                    setIsOpenTwo(!isOpenTwo);\n                  }}\n                  className=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-4 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                  aria-label=\"Notifications\"\n                  aria-haspopup=\"true\"\n                >\n                  {searchtype ? searchlabel : \"Pick Item Type\"}\n                </button>\n                <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                  <svg\n                    class=\"fill-current h-4 w-4\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 20 20\"\n                  >\n                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                  </svg>\n                </div>\n                <Dropdown\n                  isOpen={isOpenTwo}\n                  onClose={() => setIsOpenTwo(false)}\n                >\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpenTwo(false);\n                      setSearchType(\"\");\n                      setSearchLabel(\"\");\n                      setDisabler(true);\n                      setSearchQuery(\"\");\n                      setRefresh(!refresh);\n                    }}\n                  >\n                    <span>All</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpenTwo(false);\n                      setSearchType(\"prodserial\");\n                      setSearchLabel(\"Product Serial\");\n                      setDisabler(false);\n                    }}\n                  >\n                    <span>Product Serial</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpenTwo(false);\n                      setSearchType(\"keyboardsno\");\n                      setSearchLabel(\"Keyboard Serial\");\n                      setDisabler(false);\n                    }}\n                  >\n                    <span>Keyboard Serial</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpenTwo(false);\n                      setSearchType(\"mousesno\");\n                      setSearchLabel(\"Mouse Serial\");\n                      setDisabler(false);\n                    }}\n                  >\n                    <span>Mouse Serial</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpenTwo(false);\n                      setSearchType(\"motherboardsno\");\n                      setSearchLabel(\"Motherboard Serial\");\n                      setDisabler(false);\n                    }}\n                  >\n                    <span>Motherboard Serial</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpenTwo(false);\n                      setSearchType(\"monitorsno\");\n                      setSearchLabel(\"Monitor Serial\");\n                      setDisabler(false);\n                    }}\n                  >\n                    <span>Monitor Serial</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpenTwo(false);\n                      setSearchType(\"hddsno\");\n                      setSearchLabel(\"HDD Serial\");\n                      setDisabler(false);\n                    }}\n                  >\n                    <span>HDD Serial</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpenTwo(false);\n                      setSearchType(\"cpusno\");\n                      setSearchLabel(\"CPU Serial\");\n                      setDisabler(false);\n                    }}\n                  >\n                    <span>CPU Serial</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpenTwo(false);\n                      setSearchType(\"ramsno\");\n                      setSearchLabel(\"Ram Serial\");\n                      setDisabler(false);\n                    }}\n                  >\n                    <span>RAM Serial</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpenTwo(false);\n                      setSearchType(\"smpssno\");\n                      setSearchLabel(\"SMPS Serial\");\n                      setDisabler(false);\n                    }}\n                  >\n                    <span>SMPS Serial</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpenTwo(false);\n                      setSearchType(\"fansno\");\n                      setSearchLabel(\"Fan Serial\");\n                      setDisabler(false);\n                    }}\n                  >\n                    <span>Fan Serial</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    onClick={() => {\n                      setIsOpenTwo(false);\n                      setSearchType(\"opticaldrivesno\");\n                      setSearchLabel(\"Optical Drive Serial\");\n                      setDisabler(false);\n                    }}\n                  >\n                    <span>Optical Drive Serial</span>\n                  </DropdownItem>\n                </Dropdown>\n              </div>\n              {/* -----------------Search Bar------------------------------------ */}\n              <div class=\"block relative xl:ml-64\">\n                <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                  <svg\n                    viewBox=\"0 0 24 24\"\n                    class=\"h-4 w-4 fill-current text-gray-500\"\n                  >\n                    <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                  </svg>\n                </span>\n                <form\n                  onSubmit={(e) => {\n                    e.preventDefault();\n                    setRefresh(!refresh);\n                  }}\n                >\n                  <input\n                    value={searchquery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    placeholder=\"Search Serial Number\"\n                    disabled={disabler}\n                    class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                  />\n                </form>\n              </div>\n            </div>\n            {/* ----------------------------------------Row 2 -------------------------------------------------------------------- */}\n            {/* <div className=\"my-4 flex \">\n            <div class=\"relative \">\n              <select\n                class=\" shadow-md appearance-none h-full rounded border block w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                // value={sortBy}\n                // onChange={onSortToggle}\n              >\n                <option value=\"TIME_ASC\">Time(Latest)</option>\n                <option value=\"TIME_DESC\">Time(Oldest)</option>\n                <option value=\"NAME_ASC\">Name(A-Z)</option>\n                <option value=\"NAME_DESC\">Name(Z-A)</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n          </div> */}\n          </div>\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n          <TableContainer className=\"mt-4\">\n            <Table>\n              <TableHeader>\n                <tr>\n                  <TableCell>Customer</TableCell>\n                  <TableCell>Unit</TableCell>\n                  {/* <TableCell>Business</TableCell> */}\n                  <TableCell>Product</TableCell>\n                  <TableCell>Product Serial</TableCell>\n                  {/* <TableCell>Contract From</TableCell> */}\n                  {/* <TableCell>Contract To</TableCell> */}\n                  <TableCell>Purchase Number</TableCell>\n                  <TableCell>Purchase Date</TableCell>\n                  <TableCell>Selected</TableCell>\n                  <TableCell>Info</TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {data.map((user, i) => (\n                  <TableRow\n                    className={`hover:shadow-lg dark:hover:bg-gray-900 ${\n                      activerowid == user._id\n                        ? \"bg-gray-100 shadow-lg dark:bg-gray-900\"\n                        : \"white\"\n                    } `}\n                    key={i}\n                    onClick={() => {\n                      setActiveRowId(user._id);\n                      // console.log(\"the id is \" + user._id);\n                      setSelectedProd(user);\n                      // setAssetDetails(user);\n                      // console.log(user.product.keyboard[0].keyboardname);\n                    }}\n                  >\n                    <TableCell className=\"w-8\">\n                      <div className=\"flex items-center text-sm \">\n                        {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                        <div>\n                          <p className=\"font-semibold\">{user.customerName}</p>\n                          <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                            {user.accountName}\n                          </p>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.unitName}</span>\n                    </TableCell>\n                    {/* <TableCell>\n                      <Badge\n                        type={user.business == \"AMC\" ? \"primary\" : \"success\"}\n                      >\n                        {user.business}\n                      </Badge>\n                    </TableCell> */}\n                    <TableCell>\n                      <span className=\"text-sm\">{user.producttype}</span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">{user.product.serialno}</span>\n                    </TableCell>\n                    {/* <TableCell>\n                      <span className=\"text-sm\">\n                        {moment(user.contractfrom).format(\"DD/MM/YYYY\")}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">\n                        {moment(user.contractto).format(\"DD/MM/YYYY\")}\n                      </span>\n                    </TableCell> */}\n                    <TableCell>\n                      <span className=\"text-sm\">{user.ponumber}</span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm\">\n                        {moment(user.podate).format(\"DD/MM/YYYY\")}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm \">\n                        {user._id == selectedprod._id ? (\n                          <TickIcon\n                            fill=\"green\"\n                            className=\"w-5 h-5\"\n                            aria-hidden=\"true\"\n                          />\n                        ) : null}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <span\n                        onClick={() => {\n                          setInfoModalAsset(user);\n                          setIsInfoModalOpen(true);\n                        }}\n                        className=\" text-gray-600 dark:text-gray-200 px-3 py-3 text-sm bg-gray-200 dark:bg-gray-700 tetx-white rounded-md font-semibold cursor-pointer hover:bg-gray-300 dark:hover:bg-gray-800\"\n                      >\n                        More Info\n                      </span>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n            <TableFooter>\n              <Pagination\n                totalResults={totalResults}\n                resultsPerPage={resultsPerPage}\n                label=\"Table navigation\"\n                onChange={onPageChange}\n              />\n            </TableFooter>\n            <div className=\"flex justify-end\">\n              <Button className=\" mb-10 my-2 \" onClick={submitCall}>\n                Register Call\n              </Button>\n            </div>\n          </TableContainer>\n\n          {/* ----------------------------------------------Table----------------------------------------------------- */}\n        </div>\n\n        {/* ------------------------------------Bottom Bar---------------------------------- */}\n      </>\n    );\n  };\n  // *\n  // *\n  // *\n  // *\n  // *\n  // *\n  // *\n  //---------------------------------- ASSETS VIEW STATES\n\n  let valobj = {\n    //both\n    callNo: \"\",\n    date: moment().format(\"YYYY-MM-DD\"),\n    contactPerson: localStorage.getItem(\"name\"),\n    phone: localStorage.getItem(\"phone\"),\n    callStatus: \"Pending for allocation\",\n    problem: \"\",\n    time: moment().format(\"HH:MM\"),\n  };\n  const [values, setValues] = useState(valobj);\n\n  // ----------------------Heading Use Effect-------------\n\n  useEffect(() => {\n    setTopHeading(\"Register Call\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  const handleChange = (name) => (e) => {\n    let thedate = e.target.value;\n    setValues({ ...values, [name]: e.target.value });\n    if (name == \"date\") {\n      callNumberSetter(thedate);\n    }\n  };\n\n  const callNumberSetter = async (date) => {\n    let payload = {\n      date: date,\n    };\n    let thecallcount = 0;\n    try {\n      thecallcount = await axios({\n        url: `${API}/call/custcallsbydate`,\n        method: \"POST\",\n        data: payload,\n      });\n    } catch (error) {\n      throw error;\n    }\n\n    let year = moment(date).format(\"YY\");\n    let month = moment(date).format(\"MM\");\n    let day = moment(date).format(\"DD\");\n    let callnumber = thecallcount.data + 1;\n    if (callnumber < 10) {\n      callnumber = \"0\" + callnumber;\n    }\n\n    let thestring = year + month + day + callnumber;\n    setValues({ ...values, callNo: thestring, date: date });\n    // ------history management\n    let temp = callhistory;\n    temp[0].date = date;\n    setCallHistory(temp);\n\n    console.log(thestring);\n  };\n\n  useEffect(() => {\n    callNumberSetter(moment());\n  }, []);\n\n  const submitCall = async () => {\n    if (\n      values.callNo === \"\" ||\n      // (values.contactPerson === \"\") |\n      // (values.phone === \"\") |\n      values.problem === \"\" ||\n      values.date === \"\" ||\n      values.time === \"\"\n    ) {\n      setIsReqFieldModal(true);\n      return;\n    }\n    if (JSON.stringify(selectedprod) == JSON.stringify({})) {\n      setIsAssetModal(true);\n      return;\n    }\n    // e.preventDefault();\n    setSuccessfulCallNo(values.callNo);\n    const newcall = {\n      callNo: values.callNo,\n      date: values.date,\n      time: values.time,\n      contactPerson: values.contactPerson,\n      phone: values.phone,\n      problem: values.problem,\n      unitId: selectedprod.unitId,\n      unitName: selectedprod.unitName,\n      accountId: selectedprod.accountId,\n      accountName: selectedprod.accountName,\n      customerId: selectedprod.customerId,\n      customerName: selectedprod.customerName,\n      assetId: selectedprod._id,\n      callStatus: 0,\n      history: callhistory,\n      regtimestamp: moment().format(),\n      // employeeId:\"\"\n    };\n    console.log(\"CALL->\", newcall);\n    try {\n      await axios({\n        url: `${API}/call/${Cust.getId()}/customercreate`,\n        method: \"POST\",\n        data: newcall,\n      });\n      setIsReviewModalOpen(true);\n      setValues(valobj);\n      console.log(\"Done\");\n    } catch (error) {\n      console.log(error.response.data);\n      if (error.response.data.errid == 1) {\n        setAssetexistmessage(error.response.data.message);\n        setIsassetexistModal(true);\n      }\n    }\n  };\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>\n            Created Call No. {successfulCallNo} Successfully!\n          </ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReviewModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const ReqFieldErrModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReqFieldModal}\n          onClose={() => setIsReqFieldModal(false)}\n        >\n          <ModalHeader>Required fields are not filled!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReqFieldModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const AssetSelectedModal = () => {\n    return (\n      <>\n        <Modal isOpen={isAssetModal} onClose={() => setIsAssetModal(false)}>\n          <ModalHeader>Asset is not selected!</ModalHeader>\n          <ModalBody>Please select asset before registering call.</ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsAssetModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const AssetExistsModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={IsassetexistModal}\n          onClose={() => setIsassetexistModal(false)}\n        >\n          <ModalHeader>Call already raised for asset!</ModalHeader>\n          <ModalBody>\n            Call No {assetexistmessage} already raised for asset.\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsassetexistModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //  -------------------INFORMATION MODAL --------------------\n  const InformationModal = () => {\n    console.log(infoModalAsset);\n    return (\n      <>\n        <Modal\n          isOpen={isInfoModalOpen}\n          onClose={() => setIsInfoModalOpen(false)}\n          className=\" bg-white dark:bg-gray-800 px-10 w-205    py-10 rounded-lg\"\n        >\n          <ModalHeader>Product Information</ModalHeader>\n          <ModalBody>\n            <div className=\"  \">\n              <div className=\" \">\n                <div className=\" dark:text-gray-200 text-black flex flex-row flex-wrap items-center   rounded-md justify-between lg:space-x-2  w-full \">\n                  {/* /////////////////////////////// . PRODUCT INFO  ///////////////////////////////////////////// */}\n                  <div className=\"flex flex-col lg:flex-row items-center justify-between lg:space-x-2  w-full  bg-gray-100 dark:bg-cool-gray-900 px-2  rounded-md\">\n                    <div className=\"my-2  \">\n                      <span>Brand :</span>\n                      <span className=\"font-semibold\">\n                        {\" \"}\n                        {infoModalAsset.product.brand}\n                      </span>\n                    </div>\n                    <div className=\"my-2 \">\n                      <span>Model:</span>\n                      <span className=\"font-semibold\">\n                        {\" \"}\n                        {infoModalAsset.product.model}\n                      </span>\n                    </div>\n                    <div className=\"my-2 \">\n                      <span>Serial Number: </span>\n                      <span className=\"font-semibold\">\n                        {\" \"}\n                        {infoModalAsset.product.serialno}\n                      </span>\n                    </div>\n\n                    {infoModalAsset.producttype == \"Laptop\" ||\n                    infoModalAsset.producttype == \"Server\" ||\n                    infoModalAsset.producttype == \"Desktop\" ? (\n                      <>\n                        <div className=\"\">\n                          <span>Operating System : </span>\n                          <span className=\"font-semibold\">\n                            {infoModalAsset.product.os}\n                          </span>\n                        </div>\n                      </>\n                    ) : null}\n                  </div>\n                  <br />\n                </div>\n                {/* <div className=\"flex flex-row flex-wrap items-center justify-start lg:space-x-2  \"> */}\n                {/* -------------------CPU and RAM-------------------------- */}\n                <div className=\"flex flex-col lg:flex-row lg:flex-wrap items-start lg:space-x-1 justify-between \">\n                  {/* ----------------CPU------------------------------- */}\n                  {infoModalAsset.producttype == \"Laptop\" ||\n                  infoModalAsset.producttype == \"Server\" ||\n                  infoModalAsset.producttype == \"Desktop\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">CPU</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {/* <hr className=\"mb-2 mt-1\" /> */}\n                        {infoModalAsset.product.cpu.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>{item.cpuname}</span>\n                                </div>\n                                <div className=\"w-full my-1 break-all\">\n                                  <span>{item.cpusno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n                  {/* ----------------CPU------------------------------- */}\n                  {/* ----------------ram------------------------------- */}\n                  {infoModalAsset.producttype == \"Laptop\" ||\n                  infoModalAsset.producttype == \"Server\" ||\n                  infoModalAsset.producttype == \"Desktop\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">RAM</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.ram.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>{item.ramname}</span>\n                                </div>\n                                <div className=\"w-full my-1 break-all\">\n                                  <span>{item.ramsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n                  {/* </div> */}\n                  {/* ----------------ram------------------------------- */}\n                  {/* </div> */}\n                  {/* <div className=\"flex flex-col lg:flex-row items-start lg:space-x-1\"> */}\n                  {/* ----------------fan------------------------------- */}\n                  {infoModalAsset.producttype == \"Laptop\" ||\n                  infoModalAsset.producttype == \"Server\" ||\n                  infoModalAsset.producttype == \"Desktop\" ||\n                  infoModalAsset.producttype == \"Storage\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">FAN</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.fan.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>{item.fanname}</span>\n                                </div>\n                                <div className=\"w-full my-1 break-all\">\n                                  <span>{item.fansno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n                  {/* ----------------fan------------------------------- */}\n                  {/* ----------------motherboard------------------------------- */}\n\n                  {infoModalAsset.producttype == \"Laptop\" ||\n                  infoModalAsset.producttype == \"Server\" ||\n                  infoModalAsset.producttype == \"Desktop\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">Mother-Board</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.motherboard.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 mx-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>{item.motherboardname}</span>\n                                </div>\n                                <div className=\"w-full my-1 break-all\">\n                                  <span>{item.motherboardsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n                  {/* ----------------motherboard------------------------------- */}\n                  {/* </div>\n                <div className=\"flex flex-col lg:flex-row items-start lg:space-x-1\"> */}\n                  {/* ----------------hdd------------------------------- */}\n                  {infoModalAsset.producttype == \"Laptop\" ||\n                  infoModalAsset.producttype == \"Server\" ||\n                  infoModalAsset.producttype == \"Desktop\" ||\n                  infoModalAsset.producttype == \"Storage\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">HDD</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.hdd.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>{item.hddname}</span>\n                                </div>\n                                <div className=\"w-full my-1 break-all\">\n                                  <span>S.No:{item.hddsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------hdd------------------------------- */}\n\n                  {/* ----------------smps------------------------------- */}\n                  {infoModalAsset.producttype == \"Laptop\" ||\n                  infoModalAsset.producttype == \"Server\" ||\n                  infoModalAsset.producttype == \"Desktop\" ||\n                  infoModalAsset.producttype == \"Storage\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">SMPS</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.smps.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>{item.smpsname}</span>\n                                </div>\n                                <div className=\"w-full my-1 break-all\">\n                                  <span>{item.smpssno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n                  {/* </div> */}\n\n                  {/* ----------------smps------------------------------- */}\n\n                  {/* <div className=\"flex flex-col lg:flex-row items-start lg:space-x-1\"> */}\n                  {/* ----------------kbd------------------------------- */}\n                  {infoModalAsset.producttype == \"Laptop\" ||\n                  infoModalAsset.producttype == \"Server\" ||\n                  infoModalAsset.producttype == \"Desktop\" ||\n                  infoModalAsset.producttype == \"Router\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">Keyboard</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.keyboard.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>{item.keyboardname}</span>\n                                </div>\n                                <div className=\"w-full my-1 break-all\">\n                                  <span>{item.keyboardsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------keyboard------------------------------- */}\n\n                  {/* ----------------mouse------------------------------- */}\n                  {infoModalAsset.producttype == \"Laptop\" ||\n                  infoModalAsset.producttype == \"Server\" ||\n                  infoModalAsset.producttype == \"Desktop\" ||\n                  infoModalAsset.producttype == \"Storage\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">Mouse</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.mouse.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>{item.mousename}</span>\n                                </div>\n                                <div className=\"w-full my-1 break-all\">\n                                  <span>{item.mousesno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------mouse------------------------------- */}\n                  {/* </div>\n\n                <div className=\"flex flex-col lg:flex-row items-start lg:space-x-1\"> */}\n                  {/* ----------------monitor------------------------------- */}\n                  {infoModalAsset.producttype == \"Laptop\" ||\n                  infoModalAsset.producttype == \"Server\" ||\n                  infoModalAsset.producttype == \"Desktop\" ||\n                  infoModalAsset.producttype == \"Router\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">Monitor</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.monitor.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>{item.monitorname}</span>\n                                </div>\n                                <div className=\"w-full my-1 break-all\">\n                                  <span>{item.monitorsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------monitor------------------------------- */}\n\n                  {/* ----------------gcard------------------------------- */}\n                  {infoModalAsset.producttype == \"Laptop\" ||\n                  infoModalAsset.producttype == \"Server\" ||\n                  infoModalAsset.producttype == \"Desktop\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">Graphics Card</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.gcard.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>{item.gcardname}</span>\n                                </div>\n                                <div className=\"w-full my-1 break-all\">\n                                  <span>{item.gcardsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------gcard------------------------------- */}\n                  {/* </div> */}\n\n                  {/* <div className=\"flex flex-col lg:flex-row items-start lg:space-x-1\"> */}\n                  {/* ----------------enetcard------------------------------- */}\n                  {infoModalAsset.producttype == \"Laptop\" ||\n                  infoModalAsset.producttype == \"Server\" ||\n                  infoModalAsset.producttype == \"Desktop\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">ENET Card</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.enetcard.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>{item.enetcardname}</span>\n                                </div>\n                                <div className=\"w-full my-1 break-all\">\n                                  <span>{item.enetcardsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------enetcard------------------------------- */}\n\n                  {/* ----------------serialcard------------------------------- */}\n                  {infoModalAsset.producttype == \"Server\" ||\n                  infoModalAsset.producttype == \"Desktop\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">Serial Card</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.serialcard.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>{item.serialcardname}</span>\n                                </div>\n                                <div className=\"w-full my-1 break-all\">\n                                  <span>{item.serialcardsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------serialcard------------------------------- */}\n                  {/* </div>\n\n                <div className=\"flex flex-col lg:flex-row items-start lg:space-x-1\"> */}\n                  {/* ----------------parallelcard------------------------------- */}\n                  {infoModalAsset.producttype == \"Server\" ||\n                  infoModalAsset.producttype == \"Desktop\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">Parallel Card</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.parallelcard.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>{item.parallelcardname}</span>\n                                </div>\n                                <div className=\"w-full my-1 break-all\">\n                                  <span>{item.parallelcardsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------parallelcard------------------------------- */}\n\n                  {/* ----------------hbacard------------------------------- */}\n                  {infoModalAsset.producttype == \"Server\" ||\n                  infoModalAsset.producttype == \"Storage\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">HBA Card</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.hbacard.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>{item.hbacardname}</span>\n                                </div>\n                                <div className=\"w-full my-1 break-all\">\n                                  <span>{item.hbacardsno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------hbacard------------------------------- */}\n\n                  {/* ----------------raidcontroller------------------------------- */}\n                  {infoModalAsset.producttype == \"Server\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">Raid Controller</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.raidcontroller.map(\n                          (item, i) => {\n                            return (\n                              <div key={i}>\n                                <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                  <div className=\"w-full my-1\">\n                                    <span>{item.raidcontrollername}</span>\n                                  </div>\n                                  <div className=\"w-full my-1\">\n                                    <span>{item.raidcontrollersno}</span>\n                                  </div>\n                                </div>\n                              </div>\n                            );\n                          }\n                        )}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------raidcontroller------------------------------- */}\n                  {/* </div>\n                <div className=\"flex flex-col lg:flex-row items-start lg:space-x-1\"> */}\n                  {/* ----------------tapecontroller------------------------------- */}\n                  {infoModalAsset.producttype == \"Server\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">Tape Controller</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.tapecontroller.map(\n                          (item, i) => {\n                            return (\n                              <div key={i}>\n                                <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                  <div className=\"w-full my-1\">\n                                    <span>{item.tapecontrollername}</span>\n                                  </div>\n                                  <div className=\"w-full my-1\">\n                                    <span>{item.tapecontrollersno}</span>\n                                  </div>\n                                </div>\n                              </div>\n                            );\n                          }\n                        )}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------tapecontroller------------------------------- */}\n\n                  {/* ----------------opticaldrive------------------------------- */}\n                  {infoModalAsset.producttype == \"Server\" ||\n                  infoModalAsset.producttype == \"Desktop\" ||\n                  infoModalAsset.producttype == \"Laptop\" ? (\n                    <div className=\" w-64 text-gray-800 dark:text-gray-200 my-4 bg-gray-100 dark:bg-cool-gray-900 p-2 rounded-md\">\n                      <>\n                        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2 font-semibold\">\n                          <div className=\"w-full my-1\">Optical Drive</div>\n                          <div className=\"w-full my-1\">Serial No.</div>\n                        </div>\n                        {infoModalAsset.product.opticaldrive.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>{item.opticaldrivename}</span>\n                                </div>\n                                <div className=\"w-full my-1 break-all\">\n                                  <span>{item.opticaldrivesno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    </div>\n                  ) : null}\n\n                  {/* ----------------opticaldrive------------------------------- */}\n\n                  {/* ----------------others------------------------------- */}\n                  {/* <div className=\"w-full my-4 bg-gray-100 dark:bg-gray-800 p-2 rounded-md\">\n                    {true ? (\n                      <>\n                        <div className=\"flex flex-row items-center\">\n                          <div className=\"font-semibold\">\n                            <span>others</span>\n                          </div>\n                        </div>\n                        <hr className=\"mb-2 mt-1\" />\n                        {infoModalAsset.product.others.map((item, i) => {\n                          return (\n                            <div key={i}>\n                              <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-2\">\n                                <div className=\"w-full my-1\">\n                                  <span>\n                                    item.othersname}\n                                  </span>\n                                </div>\n                                <div className=\"w-full my-1\">\n                                  <span>{item.otherssno}</span>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    ) : null}\n                  </div> */}\n\n                  {/* ----------------others------------------------------- */}\n                </div>\n                {/* //////////////////////////////////////////////////////////////////////////// */}\n              </div>\n              {/* //////////////////////////////////////////////////////////////////////////// */}\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsInfoModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n  const addForm = () => {\n    return (\n      <div className=\"px-4 py-3 mt-4 mb-2 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <div className=\"flex flex-row w-full text-xl align-middle\">\n            <span className=\" text-black dark:text-gray-50 font-semibold\">\n              CALL NUMBER:\n            </span>\n            <span className=\"dark:text-purple-400 text-purple-700 font-bold\">\n              {values.callNo}\n            </span>\n\n            {/* <HelperText valid={false}>{err.callNo}</HelperText> */}\n          </div>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n        {/* ------------------------Row 1-------------------------- */}\n        <div className=\"flex-row flex space-x-1\">\n          {/* <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Date*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"date\"\n                value={values.date}\n                onChange={handleChange(\"date\")}\n              />\n            </Label>\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span>Time*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"time\"\n                value={values.time}\n                onChange={handleChange(\"time\")}\n              />\n            </Label>\n          </div> */}\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span className=\"font-semibold\">Contact Person*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                placeholder=\"\"\n                value={values.contactPerson}\n                onChange={handleChange(\"contactPerson\")}\n              />\n            </Label>\n          </div>\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span className=\"font-semibold\">Phone Number*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.phone}\n                onChange={handleChange(\"phone\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.username}</HelperText> */}\n          </div>\n        </div>\n        {/* ----------------------Row 2 ----------------------------- */}\n        <div className=\"flex-row flex space-x-1 \">\n          <div className=\"flex flex-col w-full\">\n            <Label className=\"w-full\">\n              <span className=\"font-semibold\"> Problem Description*</span>\n              <Input\n                className=\"mt-1\"\n                type=\"text\"\n                value={values.problem}\n                onChange={handleChange(\"problem\")}\n              />\n            </Label>\n            {/* <HelperText valid={false}>{err.username}</HelperText> */}\n          </div>\n        </div>\n        {/* ///////////////////////////////////////////////////////// */}\n        {/* <Label className=\"font-bold mt-2 mb-1\">\n        \n        </Label> */}\n\n        {/* ///////////////////////////////////////////////////////// */}\n\n        <>\n          {/* <Button\n              onClick={() => setIsModalOpen(true)}\n              aria-label=\"Notifications\"\n              aria-haspopup=\"true\"\n              className=\"mt-4 mr-2\"\n            >\n              {customer.customerName === \"\" ? (\n                <>Select Associations</>\n              ) : (\n                <>Customer: {customer.customerName}</>\n              )}\n            </Button> */}\n        </>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {/* <PageTitle>Add Customer</PageTitle> */}\n      {addForm()}\n      {Asset()}\n\n      {/* {productPicker()} */}\n      {ReviewSubmit()}\n      {ReqFieldErrModal()}\n      {AssetSelectedModal()}\n      {AssetExistsModal()}\n      {InformationModal()}\n    </>\n  );\n}\n\nexport default RaiseCall;\n"],"sourceRoot":""}