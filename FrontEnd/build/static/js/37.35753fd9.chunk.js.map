{"version":3,"sources":["pages/Customers/CreateUnit.js","components/Modal/CustomerCreateModal.js","helpers/unitHelper.js","components/Modal/AddUnitModal.js"],"names":["CreateUnit","useState","isModalOpen","setIsModalOpen","isReviewModalOpen","setIsReviewModalOpen","isErrModalOpen","setIsErrModalOpen","_id","customerName","customer","setCustomer","accountName","account","setAccount","unitName","assetId","address","district","state","locationType","pincode","GSTnumber","contactPerson","contactNo","altContact","WhatsappNo","values","setValues","handleChange","name","e","target","value","submitUnit","a","payload","customerId","customerMame","accountId","whatsappNo","unitCreate","then","data","console","log","catch","err","AddUnitModal","PageTitle","className","type","onChange","onClick","aria-label","aria-haspopup","isOpen","onClose","CustomerCreateModal","customers","setCustomers","tabIndex","setTabIndex","search","setSearch","handleSubmit","preventDefault","role","axios","url","API","method","response","useEffect","pickCustomer","selectedIndex","onSelect","ind","onSubmit","placeholder","map","i","key","newunit","Axios","post","Emp","getId","unit","error","status","errors","accounts","setAccounts","accs","pickAccount"],"mappings":"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","file":"static/js/37.35753fd9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../backendapi\";\n\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n} from \"@windmill/react-ui\";\n\nimport { signup, signin, authenticate } from \"../../helpers/auth\";\nimport CustomerCreateModal from \"../../components/Modal/CustomerCreateModal\";\nimport { unitCreate } from \"../../helpers/unitHelper\";\nimport AccountListModal from \"../../components/Modal/AccountListModel\";\nimport AddUnitModal from \"../../components/Modal/AddUnitModal\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nfunction CreateUnit() {\n  //modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [isErrModalOpen, setIsErrModalOpen] = useState(false);\n\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n  const [values, setValues] = useState({\n    unitName: \"defaultUnit\",\n    assetId: [],\n    address: \"default\",\n    district: \"default\",\n    state: \"default\",\n    locationType: \"default\",\n    pincode: \"default\",\n    GSTnumber: \"default\",\n    contactPerson: \"default\",\n    contactNo: \"default\",\n    altContact: \"default\",\n    WhatsappNo: \"default\",\n  });\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const submitUnit = async (e) => {\n    if (customer._id == \"\" || account._id == \"\") {\n      setIsErrModalOpen(true);\n      return;\n    }\n    // e.preventDefault();\n    const payload = {\n      customerId: customer._id,\n      customerName: customer.customerMame,\n      accountId: account._id,\n      accountName: account.accountName,\n\n      unitName: values.unitName,\n      address: values.address,\n      district: values.district,\n      state: values.state,\n      locationType: values.locationType,\n      pincode: values.pincode,\n      GSTnumber: values.GSTnumber,\n      contactPerson: values.contactPerson,\n      contactNo: values.contactNo,\n      altContact: values.altContact,\n      whatsappNo: values.WhatsappNo,\n    };\n    unitCreate(payload)\n      .then((data) => {\n        console.log(\"Signed Up\", data);\n        setIsReviewModalOpen(true);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        // setErr({ ...err });\n      });\n  };\n\n  //ASSET\n  const addForm = () => {\n    return (\n      <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <Label className=\"font-bold\">\n          <span>Add Unit</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n        <Label>\n          <span>Unit Name</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.unitName}\n            onChange={handleChange(\"unitName\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Address</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.address}\n            onChange={handleChange(\"address\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>District</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.district}\n            onChange={handleChange(\"district\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>state</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.state}\n            onChange={handleChange(\"state\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Location Type</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.locationType}\n            onChange={handleChange(\"locationType\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>PIN code</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.pincode}\n            onChange={handleChange(\"pincode\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>GST Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.GSTnumber}\n            onChange={handleChange(\"GSTnumber\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Person</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactPerson}\n            onChange={handleChange(\"contactPerson\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Contact Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.contactNo}\n            onChange={handleChange(\"contactNo\")}\n          />\n        </Label>{\" \"}\n        <Label>\n          <span>Whatsapp Number</span>\n          <Input\n            className=\"mt-1\"\n            type=\"text\"\n            value={values.WhatsappNo}\n            onChange={handleChange(\"WhatsappNo\")}\n          />\n        </Label>\n        <hr className=\"my-8\" />\n        <Button\n          onClick={() => setIsModalOpen(true)}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4 mx-3\"\n        >\n          Select Customer\n        </Button>\n        <hr className=\"my-8\" />\n        <Button\n          onClick={submitUnit}\n          aria-label=\"Notifications\"\n          aria-haspopup=\"true\"\n          className=\"mt-4\"\n        >\n          Create Unit\n        </Button>\n      </div>\n    );\n  };\n\n  const ReviewSubmit = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>Unit Created Successfully!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReviewModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const AccCustErr = () => {\n    return (\n      <>\n        <Modal isOpen={isErrModalOpen} onClose={() => setIsErrModalOpen(false)}>\n          <ModalHeader>Customer or Account Not Selected!</ModalHeader>\n          <ModalBody>\n            If Customer does not have any accounts under it, make them first.\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsErrModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <AddUnitModal\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setAccount={setAccount}\n        account={account}\n        customer={customer}\n        setCustomer={setCustomer}\n      />\n      <PageTitle>Add Unit</PageTitle>\n      {addForm()}\n\n      {/* {productPicker()} */}\n      {ReviewSubmit()}\n      {AccCustErr()}\n    </>\n  );\n}\n\nexport default CreateUnit;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport { API } from \"../../backendapi\";\n\nexport default function CustomerCreateModal({\n  isModalOpen,\n  setIsModalOpen,\n  customer,\n  setCustomer,\n}) {\n  const [customers, setCustomers] = useState([]);\n  // const [accounts, setAccounts] = useState([]);\n  // const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n  const [tempbadgeView, setTempBadgeView] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setIsModalOpen(false);\n    // setTempBadgeView(customer.customerName);\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>Select Customer</ModalHeader>\n        <ModalBody className=\"overflow-y-scroll h-64\">\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n          </Tabs>\n        </ModalBody>\n        <ModalFooter>\n          {/* <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {tempbadgeView}\n          </Badge> */}\n          {/* <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge> */}\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","import Axios from \"axios\";\nimport { API } from \"../backendapi\";\nimport Emp from \"../helpers/auth/EmpProfile\";\n\nexport const unitCreate = (newunit) => {\n  return Axios.post(`${API}/unit/${Emp.getId()}/create`, newunit)\n    .then((unit) => {\n      console.log(\"h\", unit.data);\n      return unit.data;\n    })\n    .catch((error) => {\n      console.log(\"ERRRROs\");\n      if (error.response) {\n        console.log(error.response.data);\n        console.log(error.response.status);\n        throw error.response.data.errors;\n      }\n    });\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport { API } from \"../../backendapi\";\n\nexport default function AddUnitModal({\n  isModalOpen,\n  setIsModalOpen,\n\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  // const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select {tabIndex == 0 ? <>Customer</> : <>Account</>}\n        </ModalHeader>\n        <ModalBody className=\"overflow-y-scroll h-64\">\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n          </Tabs>\n        </ModalBody>\n        <ModalFooter>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              // setRefresh(!refresh);\n\n              setAccounts([]);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n"],"sourceRoot":""}