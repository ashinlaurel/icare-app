{"version":3,"sources":["pages/Assets/UpdateAsset.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["UpdateAsset","useState","id","useParams","submitModal","setSubmitModal","_id","unitName","unit","setUnit","customerName","customer","setCustomer","accountName","account","setAccount","brand","setBrand","model","setModel","serialno","setSerialNo","os","setOs","cpuname","cpusno","cpu","setCpu","ramname","ramsno","ram","setram","hddname","hddsno","hdd","sethdd","smpsname","smpssno","smps","setsmps","fanname","fansno","fan","setfan","motherboardname","motherboardsno","motherboard","setmotherboard","opticaldrivename","opticaldrivesno","opticaldrive","setopticaldrive","keyboardname","keyboardsno","kbd","setkbd","mousename","mousesno","mouse","setmouse","monitorname","monitorsno","monitor","setmonitor","gcardname","gcardsno","gcard","setgcard","enetcardname","enetcardsno","enetcard","setenetcard","serialcardname","serialcardsno","serialcard","setserialcard","parallelcardname","parallelcardsno","parallelcard","setparallelcard","hbacardname","hbacardsno","hbacard","sethbacard","raidcontrollername","raidcontrollersno","raidcontroller","setraidcontroller","tapecontrollername","tapecontrollersno","tapecontroller","settapecontroller","othersname","otherssno","others","setothers","Business","setBusiness","POnumber","setPOnumber","POdate","setPOdate","ContractFrom","setContractFrom","ContractTo","setContractTo","BillingFrom","setBillingFrom","BillingTo","setBillingTo","AMCRate","setAMCRate","GST","setGST","GSTAMOUNT","setGSTAMOUNT","NetAmount","setNetAmount","servicelocation","setServiceLocation","product","setProduct","isModalOpen","setIsModalOpen","getAsset","a","axios","post","API","Emp","getId","res","console","log","data","asset","producttype","customerId","accountId","business","ponumber","amcrate","moment","podate","format","contractfrom","contractto","billingfrom","billingto","gstperc","gstamount","netamount","length","keyboard","netcardname","useEffect","handleSubmit","e","preventDefault","payload","newproduct","newasset","url","method","className","onChange","target","value","selected","disabled","name","type","parseInt","onSubmit","placeholder","onClick","newcpu","push","icon","Add","layout","aria-label","pop","Remove","map","item","i","key","newlist","newram","newfan","newmotherboard","newhdd","newsmps","newkbd","newmouse","newmonitor","newgcard","newenetcard","newserialcard","newparallelcard","newhbacard","newraidcontroller","newtapecontroller","newopticaldrive","newothers","isOpen","onClose","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/45.34cd3281.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { API } from \"../../backendapi\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport SectionTitle from \"../../components/Typography/SectionTitle\";\nimport {\n  Input,\n  HelperText,\n  Label,\n  Select,\n  Textarea,\n  Button,\n  Dropdown,\n  DropdownItem,\n  Badge,\n} from \"@windmill/react-ui\";\n\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport { Add, Remove, HeartIcon } from \"../../icons\";\nimport UnitListModal from \"../../components/Modal/UnitListModal\";\nimport CreateAssetFloat from \"../../components/FloatDetails/CreateAssetFloat\";\n\n// Migration\nimport { handleMigration } from \"../../migration/migration\";\nimport { useParams } from \"react-router-dom\";\n\nfunction UpdateAsset() {\n  // floatbox\n  const [floatbox, setFloatBox] = useState(false);\n  const { id } = useParams();\n  // console.log(id);\n  //modal\n  const [submitModal, setSubmitModal] = useState(false);\n\n  //customer\n  const [unit, setUnit] = useState({ _id: \"\", unitName: \"\" });\n  const [customer, setCustomer] = useState({ _id: \"\", customerName: \"\" });\n  const [account, setAccount] = useState({ _id: \"\", accountName: \"\" });\n  //prodcut\n  const [brand, setBrand] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [serialno, setSerialNo] = useState(\"\");\n  const [os, setOs] = useState(\"\");\n  const [cpu, setCpu] = useState([{ cpuname: \"\", cpusno: \"\" }]);\n  const [ram, setram] = useState([{ ramname: \"\", ramsno: \"\" }]);\n  const [hdd, sethdd] = useState([{ hddname: \"\", hddsno: \"\" }]);\n  const [smps, setsmps] = useState([{ smpsname: \"\", smpssno: \"\" }]);\n  const [fan, setfan] = useState([{ fanname: \"\", fansno: \"\" }]);\n  const [motherboard, setmotherboard] = useState([\n    { motherboardname: \"\", motherboardsno: \"\" },\n  ]);\n  const [opticaldrive, setopticaldrive] = useState([\n    { opticaldrivename: \"\", opticaldrivesno: \"\" },\n  ]);\n  const [kbd, setkbd] = useState([{ keyboardname: \"\", keyboardsno: \"\" }]);\n  const [mouse, setmouse] = useState([{ mousename: \"\", mousesno: \"\" }]);\n  const [monitor, setmonitor] = useState([{ monitorname: \"\", monitorsno: \"\" }]);\n  const [gcard, setgcard] = useState([{ gcardname: \"\", gcardsno: \"\" }]);\n  const [enetcard, setenetcard] = useState([\n    { enetcardname: \"\", enetcardsno: \"\" },\n  ]);\n  const [serialcard, setserialcard] = useState([\n    { serialcardname: \"\", serialcardsno: \"\" },\n  ]);\n  const [parallelcard, setparallelcard] = useState([\n    { parallelcardname: \"\", parallelcardsno: \"\" },\n  ]);\n  const [hbacard, sethbacard] = useState([{ hbacardname: \"\", hbacardsno: \"\" }]);\n  const [raidcontroller, setraidcontroller] = useState([\n    { raidcontrollername: \"\", raidcontrollersno: \"\" },\n  ]);\n  const [tapecontroller, settapecontroller] = useState([\n    { tapecontrollername: \"\", tapecontrollersno: \"\" },\n  ]);\n  const [others, setothers] = useState([{ othersname: \"\", otherssno: \"\" }]);\n  //asset\n\n  const [Business, setBusiness] = useState(\"\");\n  const [POnumber, setPOnumber] = useState(\"\");\n  const [POdate, setPOdate] = useState(\"\");\n  const [ContractFrom, setContractFrom] = useState(\"\");\n  const [ContractTo, setContractTo] = useState(\"\");\n  const [BillingFrom, setBillingFrom] = useState(\"\");\n  const [BillingTo, setBillingTo] = useState(\"\");\n  const [AMCRate, setAMCRate] = useState(\"\");\n  const [GST, setGST] = useState(\"\");\n  const [GSTAMOUNT, setGSTAMOUNT] = useState(\"\");\n  const [NetAmount, setNetAmount] = useState(\"\");\n  const [servicelocation, setServiceLocation] = useState(\"\");\n\n  //////////////-------------------------------------------->Product name not in asset\n  const [product, setProduct] = useState(\"Server\");\n\n  //MODAL\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const getAsset = async () => {\n    try {\n      let res = await axios.post(`${API}/asset/${Emp.getId()}/getbyid`, {\n        id: id,\n      });\n      console.log(\"asset\", res.data);\n      let asset = res.data;\n      setServiceLocation(asset.servicelocation);\n      setProduct(asset.producttype);\n      setUnit({ _id: id, unitName: asset.unitName });\n      setCustomer({ _id: asset.customerId, customerName: asset.customerName });\n      setAccount({ _id: asset.accountId, accountName: asset.accountName });\n      ////------------------------>>>>>>>>\n      // setProduct(\"Server\");\n      ////////---------ASSET INFO\n      setBusiness(asset.business);\n      setPOnumber(asset.ponumber);\n      setAMCRate(asset.amcrate);\n      // Dates --------------------------\n      setPOdate(moment(asset.podate).format(\"YYYY-MM-DD\"));\n      setContractFrom(moment(asset.contractfrom).format(\"YYYY-MM-DD\"));\n      setContractTo(moment(asset.contractto).format(\"YYYY-MM-DD\"));\n      setBillingFrom(moment(asset.billingfrom).format(\"YYYY-MM-DD\"));\n      setBillingTo(moment(asset.billingto).format(\"YYYY-MM-DD\"));\n      ////////////------------>>>>>>>> misiing field GST(asset.gs)\n      setGST(asset.gstperc);\n      setGSTAMOUNT(asset.gstamount);\n      setNetAmount(asset.netamount);\n      // setProduct(asset);\n      //////////////////////////////\n\n      setBrand(asset.product.brand);\n      setModel(asset.product.model);\n      setSerialNo(asset.product.serialno);\n      setOs(asset.product.os);\n      setCpu(asset.product.cpu);\n      setram(asset.product.ram);\n      if (asset.product.hdd.length == 0) sethdd([{ hddname: \"\", hddsno: \"\" }]);\n      else sethdd(asset.product.hdd);\n      if (asset.product.smps.length == 0)\n        setsmps([{ smpsname: \"\", smpssno: \"\" }]);\n      else setsmps(asset.product.smps);\n      if (asset.product.fan.length == 0) setfan([{ fanname: \"\", fansno: \"\" }]);\n      else setfan(asset.product.fan);\n      if (asset.product.motherboard.length == 0)\n        setmotherboard([{ motherboardname: \"\", motherboardsno: \"\" }]);\n      else setmotherboard(asset.product.motherboard);\n      if (asset.product.opticaldrive.length == 0)\n        setopticaldrive([{ opticaldrivename: \"\", opticaldrivesno: \"\" }]);\n      else setopticaldrive(asset.product.opticaldrive);\n      if (asset.product.keyboard.length == 0)\n        setkbd([{ keyboardname: \"\", keyboardsno: \"\" }]);\n      else setkbd(asset.product.keyboard);\n      if (asset.product.mouse.length == 0)\n        setmouse([{ mousename: \"\", mousesno: \"\" }]);\n      else setmouse(asset.product.mouse);\n      if (asset.product.monitor.length == 0)\n        setmonitor([{ monitorname: \"\", monitorsno: \"\" }]);\n      else setmonitor(asset.product.monitor);\n      if (asset.product.gcard.length == 0)\n        setgcard([{ gcardname: \"\", gcardsno: \"\" }]);\n      else setgcard(asset.product.gcard);\n      if (asset.product.enetcard.length == 0)\n        setenetcard([{ netcardname: \"\", enetcardsno: \"\" }]);\n      else setenetcard(asset.product.enetcard);\n      if (asset.product.serialcard.length == 0)\n        setserialcard([{ serialcardname: \"\", serialcardsno: \"\" }]);\n      else setserialcard(asset.product.serialcard);\n\n      if (asset.product.parallelcard.length == 0)\n        setparallelcard([{ parallelcardname: \"\", parallelcardsno: \"\" }]);\n      else setparallelcard(asset.product.parallelcard);\n      if (asset.product.hbacard.length == 0)\n        sethbacard([{ hbacardname: \"\", hbacardsno: \"\" }]);\n      else sethbacard(asset.product.hbacard);\n      if (asset.product.raidcontroller.length == 0)\n        setraidcontroller([{ raidcontrollername: \"\", raidcontrollersno: \"\" }]);\n      else setraidcontroller(asset.product.raidcontroller);\n      if (asset.product.tapecontroller.length == 0)\n        settapecontroller([{ tapecontrollername: \"\", tapecontrollersno: \"\" }]);\n      else settapecontroller(asset.product.tapecontroller);\n      if (asset.product.others.length == 0)\n        setothers([{ othersname: \"\", otherssno: \"\" }]);\n      else setothers(asset.product.others);\n      //asset\n    } catch (err) {\n      console.log(\"assetFind Error\", err);\n    }\n  };\n\n  useEffect(() => {\n    getAsset();\n  }, []);\n\n  const UpdatedModal = () => {\n    return (\n      <>\n        <Modal isOpen={submitModal} onClose={() => setSubmitModal(false)}>\n          <ModalHeader>Asset Updated Successfully!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setSubmitModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  //functions\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      business: Business,\n      producttype: product,\n      ponumber: POnumber,\n      podate: POdate,\n      contractfrom: ContractFrom,\n      contractto: ContractTo,\n      billingfrom: BillingFrom,\n      billingto: BillingTo,\n      amcrate: AMCRate,\n      gstperc: GST,\n      gstamount: GSTAMOUNT,\n      netamount: NetAmount,\n      servicelocation: servicelocation,\n      ///------------------ cust info\n      // unitId: unit._id,\n      // unitName: unit.unitName,\n      // accountId: account._id,\n      // accountName: account.accountName,\n      // customerId: customer._id,\n      // customerName: customer.customerName,\n    };\n    if (payload.podate == \"Invalid date\") payload.podate = \"\";\n    if (payload.contractfrom == \"Invalid date\") payload.contractfrom = \"\";\n    if (payload.contractto == \"Invalid date\") payload.contractto = \"\";\n    if (payload.billingfrom == \"Invalid date\") payload.billingfrom = \"\";\n    if (payload.billingto == \"Invalid date\") payload.billingto = \"\";\n    let newproduct = {\n      brand: brand,\n      model: model,\n      serialno: serialno,\n      os: os,\n      cpu: cpu,\n      ram: ram,\n      hdd: hdd,\n      smps: smps,\n      fan: fan,\n      motherboard: motherboard,\n      opticaldrive: opticaldrive,\n      keyboard: kbd,\n      mouse: mouse,\n      monitor: monitor,\n      gcard: gcard,\n      enetcard: enetcard,\n      serialcard: serialcard,\n      parallelcard: parallelcard,\n      hbacard: hbacard,\n      raidcontroller: raidcontroller,\n      tapecontroller: tapecontroller,\n      others: others,\n    };\n    console.log(payload, newproduct);\n\n    const data = { id: id, newasset: payload, newproduct: newproduct };\n    // console.log(API);\n    try {\n      let update = await axios({\n        url: `${API}/asset/${Emp.getId()}/update`,\n        method: \"POST\",\n        data: data,\n      });\n      setSubmitModal(true);\n      console.log(\"Done\");\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // useEffect(() => {\n  //   handleMigration();\n  // }, []);\n\n  //ASSET----------------------------------------------------\n  const assetPicker = () => {\n    return (\n      <div className=\"px-4 py-3 mt-4 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800\">\n        {/* {floatbox ? (\n          <UpdateAssetFloat Business={Business} POnumber={POnumber} />\n        ) : null} */}\n\n        <Label className=\"font-bold\">\n          <span>Asset Information</span>\n        </Label>\n        <hr className=\"mb-5 mt-2\" />\n\n        <div className=\"flex flex-row space-x-4\">\n          <SectionTitle className=\"\">\n            Customer: {customer.customerName}\n          </SectionTitle>\n          <SectionTitle>Account: {account.accountName} </SectionTitle>\n          <SectionTitle>Unit: {unit.unitName}</SectionTitle>\n        </div>\n\n        {/* <Label className=\"font-bold\">\n          <span>Customer: {customer.customerName}</span>\n        </Label> */}\n        {/* ----------------------------Row - 1 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full \">\n            {/* <Label className=\"my-3\">\n              <span>Business</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={Business}\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n              />\n            </Label> */}\n            <Label className=\"my-3\">\n              <span>Business Type</span>\n              <Select\n                onChange={(e) => {\n                  setBusiness(e.target.value);\n                }}\n                className=\"mt-1\"\n                value={Business}\n              >\n                <option value=\"\" selected disabled>\n                  Select Business Type\n                </option>\n                <option value=\"AMC\">AMC</option>\n                <option value=\"Warranty\">Warranty</option>\n              </Select>\n            </Label>\n          </div>\n          <div className=\"w-full  \">\n            <Label className=\"my-3\">\n              <span>Purchase Order Number</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={POnumber}\n                onChange={(e) => {\n                  setPOnumber(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full \">\n            <Label className=\"my-3\">\n              <span>Service Location*</span>\n              <Select\n                value={servicelocation}\n                onChange={(e) => {\n                  setServiceLocation(e.target.value);\n                }}\n                className=\"mt-1\"\n              >\n                <option value=\"\" selected disabled>\n                  Select Service Location\n                </option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </Select>\n            </Label>\n          </div>\n        </div>\n        {/* ----------------------------Row - 2 --------------------------------------------------------------------- */}\n\n        <div className=\"flex flex-col lg:flex-row  items-center justify-start lg:space-x-8\">\n          <Label className=\"w-full my-3\">\n            <span>Purchase Order Date</span>\n            <Input\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={POdate}\n              onChange={(e) => {\n                setPOdate(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Contract From</span>\n            <Input\n              className=\"mt-1\"\n              type=\"date\"\n              name=\"brand\"\n              value={ContractFrom}\n              onChange={(e) => {\n                setContractFrom(e.target.value);\n              }}\n            />\n          </Label>\n\n          <Label className=\"w-full my-3\">\n            <span>Contract To</span>\n            <Input\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={ContractTo}\n              onChange={(e) => {\n                setContractTo(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing From</span>\n            <Input\n              className=\"mt-1\"\n              name=\"brand\"\n              type=\"date\"\n              value={BillingFrom}\n              onChange={(e) => {\n                setBillingFrom(e.target.value);\n              }}\n            />\n          </Label>\n          <Label className=\"w-full my-3\">\n            <span>Billing To</span>\n            <Input\n              type=\"date\"\n              className=\"mt-1\"\n              name=\"brand\"\n              value={BillingTo}\n              onChange={(e) => {\n                setBillingTo(e.target.value);\n              }}\n            />\n          </Label>\n        </div>\n        {/* ----------------------------Row - 3 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>AMC Rate</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={AMCRate}\n                onChange={(e) => {\n                  setAMCRate(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>GST</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={GST}\n                onChange={(e) => {\n                  setGST(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div>\n        {/* ----------------------------Row - 4 --------------------------------------------------------------------- */}\n        <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3 font-bold\">\n              <span>GST AMOUNT: </span>\n\n              <span> Rs {AMCRate * (GST / 100)}</span>\n            </Label>\n          </div>\n          <div className=\"w-full font-bold\">\n            <Label className=\"my-3\">\n              <span>Net Amount: </span>\n              <span>\n                Rs {parseInt(AMCRate) + parseInt(AMCRate) * (GST / 100)}\n              </span>\n            </Label>\n          </div>\n        </div>\n        {/* <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>GST AMOUNT</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={GSTAMOUNT}\n                onChange={(e) => {\n                  setGSTAMOUNT(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n          <div className=\"w-full\">\n            <Label className=\"my-3\">\n              <span>Net Amount</span>\n              <Input\n                className=\"mt-1\"\n                name=\"brand\"\n                value={NetAmount}\n                onChange={(e) => {\n                  setNetAmount(e.target.value);\n                }}\n              />\n            </Label>\n          </div>\n        </div> */}\n      </div>\n    );\n  };\n\n  //PRODUCT\n\n  const productPicker = () => {\n    return (\n      <>\n        <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-lg dark:bg-gray-800\">\n          <form onSubmit={handleSubmit}>\n            <Label className=\"font-bold\">\n              <span>Essential Details</span>\n            </Label>\n            <hr className=\"mb-5 mt-2\" />\n            <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n              <Label className=\"my-3 w-full\">\n                <span>Brand</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Brand\"\n                  name=\"brand\"\n                  value={brand}\n                  onChange={(e) => {\n                    setBrand(e.target.value);\n                  }}\n                />\n              </Label>\n              <Label className=\"my-3 w-full\">\n                <span>Model</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Model\"\n                  name=\"model\"\n                  value={model}\n                  onChange={(e) => {\n                    setModel(e.target.value);\n                  }}\n                />\n              </Label>\n              <Label className=\"my-3 w-full\">\n                <span>Serial Number</span>\n                <Input\n                  className=\"mt-1\"\n                  placeholder=\"Serial Number\"\n                  name=\"serialno\"\n                  value={serialno}\n                  onChange={(e) => {\n                    setSerialNo(e.target.value);\n                  }}\n                />\n              </Label>\n            </div>\n            {/* ---------------------------OS--------------------------------- */}\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <Label className=\"font-bold\">\n                  <span>Operating System</span>\n                </Label>\n                <hr className=\"mb-5 mt-2\" />\n                <Label className=\"my-3\">\n                  <span>OS</span>\n                  <Input\n                    className=\"mt-1\"\n                    placeholder=\"OS\"\n                    name=\"os\"\n                    value={os}\n                    onChange={(e) => {\n                      setOs(e.target.value);\n                    }}\n                  />\n                </Label>\n              </>\n            ) : null}\n\n            {/* //////////// ARRAY /////////////// */}\n            {/* -------------------CPU and RAM-------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------CPU------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>CPU</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newcpu = [...cpu];\n                            let add = { cpuname: \"\", cpusno: \"\" };\n                            newcpu.push(add);\n                            setCpu(newcpu);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newcpu = [...cpu];\n                            if (newcpu[1]) {\n                              newcpu.pop();\n                              setCpu(newcpu);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {cpu.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"w-full my-3\">\n                              <span>CPU {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`CPU ${i + 1}`}\n                                name=\"cpuname\"\n                                value={item.cpuname}\n                                onChange={(e) => {\n                                  let newlist = [...cpu];\n                                  newlist[i].cpuname = e.target.value;\n                                  setCpu(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"w-full my-3\">\n                              <span>CPU {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`CPU ${i + 1}'s Serial Number `}\n                                name=\"cpusno\"\n                                value={item.cpusno}\n                                onChange={(e) => {\n                                  let newlist = [...cpu];\n                                  newlist[i].cpusno = e.target.value;\n                                  setCpu(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------CPU------------------------------- */}\n\n              {/* ----------------RAM------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>RAM</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newram = [...ram];\n                            let add = { ramname: \"\", ramsno: \"\" };\n                            newram.push(add);\n                            setram(newram);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newram = [...ram];\n                            if (newram[1]) {\n                              newram.pop();\n                              setram(newram);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {ram.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>RAM {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`RAM ${i + 1}`}\n                                name=\"ramname\"\n                                value={item.ramname}\n                                onChange={(e) => {\n                                  let newlist = [...ram];\n                                  newlist[i].ramname = e.target.value;\n                                  setram(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>RAM {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`RAM ${i + 1}'s Serial Number `}\n                                name=\"cpusno\"\n                                value={item.ramsno}\n                                onChange={(e) => {\n                                  let newlist = [...ram];\n                                  newlist[i].ramsno = e.target.value;\n                                  setram(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------RAM------------------------------- */}\n            </div>\n\n            {/* -----------------------fan and motherboard------------------------------ */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------fan------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>FAN</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newfan = [...fan];\n                            let add = { fanname: \"\", fansno: \"\" };\n                            newfan.push(add);\n                            setfan(newfan);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newfan = [...fan];\n                            if (newfan[1]) {\n                              newfan.pop();\n                              setfan(newfan);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {fan.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>FAN {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`FAN ${i + 1}`}\n                                name=\"fanname\"\n                                value={item.fanname}\n                                onChange={(e) => {\n                                  let newlist = [...fan];\n                                  newlist[i].fanname = e.target.value;\n                                  setfan(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>FAN {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`FAN ${i + 1}'s Serial Number `}\n                                name=\"fansno\"\n                                value={item.fansno}\n                                onChange={(e) => {\n                                  let newlist = [...fan];\n                                  newlist[i].fansno = e.target.value;\n                                  setfan(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------fan------------------------------- */}\n\n              {/* ----------------motherboard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Motherboard</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmotherboard = [...motherboard];\n                            let add = {\n                              motherboardname: \"\",\n                              motherboardsno: \"\",\n                            };\n                            newmotherboard.push(add);\n                            setmotherboard(newmotherboard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmotherboard = [...motherboard];\n                            if (newmotherboard[1]) {\n                              newmotherboard.pop();\n                              setmotherboard(newmotherboard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {motherboard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Motherboard {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Motherboard ${i + 1}`}\n                                name=\"motherboardname\"\n                                value={item.motherboardname}\n                                onChange={(e) => {\n                                  let newlist = [...motherboard];\n                                  newlist[i].motherboardname = e.target.value;\n                                  setmotherboard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Motherboard {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Motherboard ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"motherboardsno\"\n                                value={item.motherboardsno}\n                                onChange={(e) => {\n                                  let newlist = [...motherboard];\n                                  newlist[i].motherboardsno = e.target.value;\n                                  setmotherboard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------motherboard------------------------------- */}\n            </div>\n\n            {/* ------------------------HDD And SMPS */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------hdd------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>HDD</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhdd = [...hdd];\n                            let add = { hddname: \"\", hddsno: \"\" };\n                            newhdd.push(add);\n                            sethdd(newhdd);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhdd = [...hdd];\n                            if (newhdd[1]) {\n                              newhdd.pop();\n                              sethdd(newhdd);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {hdd.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>HDD {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HDD ${i + 1}`}\n                                name=\"hddname\"\n                                value={item.hddname}\n                                onChange={(e) => {\n                                  let newlist = [...hdd];\n                                  newlist[i].hddname = e.target.value;\n                                  sethdd(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>HDD {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HDD ${i + 1}'s Serial Number `}\n                                name=\"hddsno\"\n                                value={item.hddsno}\n                                onChange={(e) => {\n                                  let newlist = [...hdd];\n                                  newlist[i].hddsno = e.target.value;\n                                  sethdd(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------hdd------------------------------- */}\n\n              {/* ----------------smps------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>SMPS</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newsmps = [...smps];\n                            let add = { smpsname: \"\", smpssno: \"\" };\n                            newsmps.push(add);\n                            setsmps(newsmps);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newsmps = [...smps];\n                            if (newsmps[1]) {\n                              newsmps.pop();\n                              setsmps(newsmps);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {smps.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>SMPS {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`SMPS ${i + 1}`}\n                                name=\"smpsname\"\n                                value={item.smpsname}\n                                onChange={(e) => {\n                                  let newlist = [...smps];\n                                  newlist[i].smpsname = e.target.value;\n                                  setsmps(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>SMPS {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`SMPS ${i + 1}'s Serial Number `}\n                                name=\"smpssno\"\n                                value={item.smpssno}\n                                onChange={(e) => {\n                                  let newlist = [...smps];\n                                  newlist[i].smpssno = e.target.value;\n                                  setsmps(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------smps------------------------------- */}\n            </div>\n\n            {/* -----------------------Keyboard And Mouse ------------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------kbd------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Keyboard</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newkbd = [...kbd];\n                            let add = { keyboardname: \"\", keyboardsno: \"\" };\n                            newkbd.push(add);\n                            setkbd(newkbd);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newkbd = [...kbd];\n                            if (newkbd[1]) {\n                              newkbd.pop();\n                              setkbd(newkbd);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {kbd.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Keyboard {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Keyboard ${i + 1}`}\n                                name=\"keyboardname\"\n                                value={item.keyboardname}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].keyboardname = e.target.value;\n                                  setkbd(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Keyboard {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Keyboard ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"keyboardsno\"\n                                value={item.keyboardsno}\n                                onChange={(e) => {\n                                  let newlist = [...kbd];\n                                  newlist[i].keyboardsno = e.target.value;\n                                  setkbd(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------kbd------------------------------- */}\n\n              {/* ----------------mouse------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Mouse</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmouse = [...mouse];\n                            let add = { mousename: \"\", mousesno: \"\" };\n                            newmouse.push(add);\n                            setmouse(newmouse);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmouse = [...mouse];\n                            if (newmouse[1]) {\n                              newmouse.pop();\n                              setmouse(newmouse);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {mouse.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Mouse {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Mouse ${i + 1}`}\n                                name=\"mousename\"\n                                value={item.mousename}\n                                onChange={(e) => {\n                                  let newlist = [...mouse];\n                                  newlist[i].mousename = e.target.value;\n                                  setmouse(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Mouse {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Mouse ${i + 1}'s Serial Number `}\n                                name=\"mousesno\"\n                                value={item.mousesno}\n                                onChange={(e) => {\n                                  let newlist = [...mouse];\n                                  newlist[i].mousesno = e.target.value;\n                                  setmouse(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------mouse------------------------------- */}\n            </div>\n\n            {/* ---------------------------Monitor and GCard ------------------------*/}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------monitor------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Router\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Monitor</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmonitor = [...monitor];\n                            let add = { monitorname: \"\", monitorsno: \"\" };\n                            newmonitor.push(add);\n                            setmonitor(newmonitor);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newmonitor = [...monitor];\n                            if (newmonitor[1]) {\n                              newmonitor.pop();\n                              setmonitor(newmonitor);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {monitor.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Monitor {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Monitor ${i + 1}`}\n                                name=\"monitorname\"\n                                value={item.monitorname}\n                                onChange={(e) => {\n                                  let newlist = [...monitor];\n                                  newlist[i].monitorname = e.target.value;\n                                  setmonitor(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Monitor {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Monitor ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"monitorsno\"\n                                value={item.monitorsno}\n                                onChange={(e) => {\n                                  let newlist = [...monitor];\n                                  newlist[i].monitorsno = e.target.value;\n                                  setmonitor(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------monitor------------------------------- */}\n\n              {/* ----------------gcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Graphics Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newgcard = [...gcard];\n                            let add = { gcardname: \"\", gcardsno: \"\" };\n                            newgcard.push(add);\n                            setgcard(newgcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newgcard = [...gcard];\n                            if (newgcard[1]) {\n                              newgcard.pop();\n                              setgcard(newgcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {gcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Graphics Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Graphics Card ${i + 1}`}\n                                name=\"gcardname\"\n                                value={item.gcardname}\n                                onChange={(e) => {\n                                  let newlist = [...gcard];\n                                  newlist[i].gcardname = e.target.value;\n                                  setgcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Graphics Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Graphics Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"gcardsno\"\n                                value={item.gcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...gcard];\n                                  newlist[i].gcardsno = e.target.value;\n                                  setgcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------gcard------------------------------- */}\n            </div>\n\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------enetcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Laptop\" ||\n                product == \"Server\" ||\n                product == \"Desktop\" ||\n                product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>E Net Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newenetcard = [...enetcard];\n                            let add = { enetcardname: \"\", enetcardsno: \"\" };\n                            newenetcard.push(add);\n                            setenetcard(newenetcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newenetcard = [...enetcard];\n                            if (newenetcard[1]) {\n                              newenetcard.pop();\n                              setenetcard(newenetcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {enetcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>E Net Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`E Net Card ${i + 1}`}\n                                name=\"enetcardname\"\n                                value={item.enetcardname}\n                                onChange={(e) => {\n                                  let newlist = [...enetcard];\n                                  newlist[i].enetcardname = e.target.value;\n                                  setenetcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>E Net Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`E Net Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"enetcardsno\"\n                                value={item.enetcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...enetcard];\n                                  newlist[i].enetcardsno = e.target.value;\n                                  setenetcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------enetcard------------------------------- */}\n\n              {/* ----------------serialcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Serial Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newserialcard = [...serialcard];\n                            let add = { serialcardname: \"\", serialcardsno: \"\" };\n                            newserialcard.push(add);\n                            setserialcard(newserialcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newserialcard = [...serialcard];\n                            if (newserialcard[1]) {\n                              newserialcard.pop();\n                              setserialcard(newserialcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {serialcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Serial Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Serial Card ${i + 1}`}\n                                name=\"serialcardname\"\n                                value={item.serialcardname}\n                                onChange={(e) => {\n                                  let newlist = [...serialcard];\n                                  newlist[i].serialcardname = e.target.value;\n                                  setserialcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Serial Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Serial Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"serialcardsno\"\n                                value={item.serialcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...serialcard];\n                                  newlist[i].serialcardsno = e.target.value;\n                                  setserialcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------serialcard------------------------------- */}\n            </div>\n\n            {/* --------------------Parallel And HBD Card ----------------------------------------- */}\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------parallelcard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Desktop\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Parallel Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newparallelcard = [...parallelcard];\n                            let add = {\n                              parallelcardname: \"\",\n                              parallelcardsno: \"\",\n                            };\n                            newparallelcard.push(add);\n                            setparallelcard(newparallelcard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newparallelcard = [...parallelcard];\n                            if (newparallelcard[1]) {\n                              newparallelcard.pop();\n                              setparallelcard(newparallelcard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {parallelcard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Parallel Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Parallel Card ${i + 1}`}\n                                name=\"parallelcardname\"\n                                value={item.parallelcardname}\n                                onChange={(e) => {\n                                  let newlist = [...parallelcard];\n                                  newlist[i].parallelcardname = e.target.value;\n                                  setparallelcard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>Parallel Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Parallel Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"parallelcardsno\"\n                                value={item.parallelcardsno}\n                                onChange={(e) => {\n                                  let newlist = [...parallelcard];\n                                  newlist[i].parallelcardsno = e.target.value;\n                                  setparallelcard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------parallelcard------------------------------- */}\n\n              {/* ----------------hbacard------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" || product == \"Storage\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>HBA Card</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhbacard = [...hbacard];\n                            let add = { hbacardname: \"\", hbacardsno: \"\" };\n                            newhbacard.push(add);\n                            sethbacard(newhbacard);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newhbacard = [...hbacard];\n                            if (newhbacard[1]) {\n                              newhbacard.pop();\n                              sethbacard(newhbacard);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {hbacard.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>HBA Card {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HBA Card ${i + 1}`}\n                                name=\"hbacardname\"\n                                value={item.hbacardname}\n                                onChange={(e) => {\n                                  let newlist = [...hbacard];\n                                  newlist[i].hbacardname = e.target.value;\n                                  sethbacard(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>HBA Card {i + 1}: Serial Number</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`HBA Card ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"hbacardsno\"\n                                value={item.hbacardsno}\n                                onChange={(e) => {\n                                  let newlist = [...hbacard];\n                                  newlist[i].hbacardsno = e.target.value;\n                                  sethbacard(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------hbacard------------------------------- */}\n            </div>\n            {/* --------------------Raid And Tape Controller------------------------------ */}\n\n            <div className=\"flex flex-col lg:flex-row items-start lg:space-x-3\">\n              {/* ----------------raidcontroller------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Raid Controller</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newraidcontroller = [...raidcontroller];\n                            let add = {\n                              raidcontrollername: \"\",\n                              raidcontrollersno: \"\",\n                            };\n                            newraidcontroller.push(add);\n                            setraidcontroller(newraidcontroller);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newraidcontroller = [...raidcontroller];\n                            if (newraidcontroller[1]) {\n                              newraidcontroller.pop();\n                              setraidcontroller(newraidcontroller);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {raidcontroller.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Raid Controller {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Raid Controller ${i + 1}`}\n                                name=\"raidcontrollername\"\n                                value={item.raidcontrollername}\n                                onChange={(e) => {\n                                  let newlist = [...raidcontroller];\n                                  newlist[i].raidcontrollername =\n                                    e.target.value;\n                                  setraidcontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>\n                                Raid Controller {i + 1}: Serial Number\n                              </span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Raid Controller ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"raidcontrollersno\"\n                                value={item.raidcontrollersno}\n                                onChange={(e) => {\n                                  let newlist = [...raidcontroller];\n                                  newlist[i].raidcontrollersno = e.target.value;\n                                  setraidcontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------raidcontroller------------------------------- */}\n\n              {/* ----------------tapecontroller------------------------------- */}\n              <div className=\"w-full\">\n                {product == \"Server\" ? (\n                  <>\n                    <div className=\"flex flex-row items-center\">\n                      <Label className=\"font-bold\">\n                        <span>Tape Controller</span>\n                      </Label>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newtapecontroller = [...tapecontroller];\n                            let add = {\n                              tapecontrollername: \"\",\n                              tapecontrollersno: \"\",\n                            };\n                            newtapecontroller.push(add);\n                            settapecontroller(newtapecontroller);\n                          }}\n                          icon={Add}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                      <div className=\"ml-3\">\n                        <Button\n                          onClick={() => {\n                            let newtapecontroller = [...tapecontroller];\n                            if (newtapecontroller[1]) {\n                              newtapecontroller.pop();\n                              settapecontroller(newtapecontroller);\n                            }\n                          }}\n                          icon={Remove}\n                          layout=\"link\"\n                          aria-label=\"Like\"\n                        />\n                      </div>\n                    </div>\n                    <hr className=\"mb-5 mt-2\" />\n                    {tapecontroller.map((item, i) => {\n                      return (\n                        <div key={i}>\n                          <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                            <Label className=\"my-3 w-full\">\n                              <span>Tape Controller {i + 1}</span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Tape Controller ${i + 1}`}\n                                name=\"tapecontrollername\"\n                                value={item.tapecontrollername}\n                                onChange={(e) => {\n                                  let newlist = [...tapecontroller];\n                                  newlist[i].tapecontrollername =\n                                    e.target.value;\n                                  settapecontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                            <Label className=\"my-3 w-full\">\n                              <span>\n                                Tape Controller {i + 1}: Serial Number\n                              </span>\n                              <Input\n                                className=\"mt-1\"\n                                placeholder={`Tape Controller ${\n                                  i + 1\n                                }'s Serial Number `}\n                                name=\"tapecontrollersno\"\n                                value={item.tapecontrollersno}\n                                onChange={(e) => {\n                                  let newlist = [...tapecontroller];\n                                  newlist[i].tapecontrollersno = e.target.value;\n                                  settapecontroller(newlist);\n                                }}\n                              />\n                            </Label>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </>\n                ) : null}\n              </div>\n              {/* ----------------tapecontroller------------------------------- */}\n            </div>\n\n            {/* ----------------opticaldrive------------------------------- */}\n            {product == \"Laptop\" ||\n            product == \"Server\" ||\n            product == \"Desktop\" ? (\n              <>\n                <div className=\"flex flex-row items-center\">\n                  <Label className=\"font-bold\">\n                    <span>Optical Drive</span>\n                  </Label>\n                  <div className=\"ml-3 \">\n                    <Button\n                      onClick={() => {\n                        let newopticaldrive = [...opticaldrive];\n                        let add = { opticaldrivename: \"\", opticaldrivesno: \"\" };\n                        newopticaldrive.push(add);\n                        setopticaldrive(newopticaldrive);\n                      }}\n                      icon={Add}\n                      layout=\"link\"\n                      aria-label=\"Like\"\n                    />\n                  </div>\n                  <div className=\"ml-3\">\n                    <Button\n                      onClick={() => {\n                        let newopticaldrive = [...opticaldrive];\n                        if (newopticaldrive[1]) {\n                          newopticaldrive.pop();\n                          setopticaldrive(newopticaldrive);\n                        }\n                      }}\n                      icon={Remove}\n                      layout=\"link\"\n                      aria-label=\"Like\"\n                    />\n                  </div>\n                </div>\n                <hr className=\"mb-5 mt-2\" />\n                {opticaldrive.map((item, i) => {\n                  return (\n                    <div key={i}>\n                      <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                        <Label className=\"my-3 w-full\">\n                          <span>Optical Drive {i + 1}</span>\n                          <Input\n                            className=\"mt-1\"\n                            placeholder={`Opticaldrive ${i + 1}`}\n                            name=\"opticaldrivename\"\n                            value={item.opticaldrivename}\n                            onChange={(e) => {\n                              let newlist = [...opticaldrive];\n                              newlist[i].opticaldrivename = e.target.value;\n                              setopticaldrive(newlist);\n                            }}\n                          />\n                        </Label>\n                        <Label className=\"my-3 w-full\">\n                          <span>Opticaldrive {i + 1}: Serial Number</span>\n                          <Input\n                            className=\"mt-1\"\n                            placeholder={`Optical Drive ${\n                              i + 1\n                            }'s Serial Number `}\n                            name=\"opticaldrivesno\"\n                            value={item.opticaldrivesno}\n                            onChange={(e) => {\n                              let newlist = [...opticaldrive];\n                              newlist[i].opticaldrivesno = e.target.value;\n                              setopticaldrive(newlist);\n                            }}\n                          />\n                        </Label>\n                      </div>\n                    </div>\n                  );\n                })}\n              </>\n            ) : null}\n            {/* ----------------opticaldrive------------------------------- */}\n\n            {/* ----------------others------------------------------- */}\n            <div className=\"flex flex-row items-center\">\n              <Label className=\"font-bold\">\n                <span>Others</span>\n              </Label>\n              <div className=\"ml-3\">\n                <Button\n                  onClick={() => {\n                    let newothers = [...others];\n                    let add = { othersname: \"\", otherssno: \"\" };\n                    newothers.push(add);\n                    setothers(newothers);\n                  }}\n                  icon={Add}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                />\n              </div>\n              <div className=\"ml-3\">\n                <Button\n                  onClick={() => {\n                    let newothers = [...others];\n                    if (newothers[1]) {\n                      newothers.pop();\n                      setothers(newothers);\n                    }\n                  }}\n                  icon={Remove}\n                  layout=\"link\"\n                  aria-label=\"Like\"\n                />\n              </div>\n            </div>\n            <hr className=\"mb-5 mt-2\" />\n            {others.map((item, i) => {\n              return (\n                <div key={i}>\n                  <div className=\"flex flex-col lg:flex-row items-center justify-start lg:space-x-8\">\n                    <Label className=\"my-3 w-full\">\n                      <span>Others {i + 1}</span>\n                      <Input\n                        className=\"mt-1\"\n                        placeholder={`Others ${i + 1}`}\n                        name=\"othersname\"\n                        value={item.othersname}\n                        onChange={(e) => {\n                          let newlist = [...others];\n                          newlist[i].othersname = e.target.value;\n                          setothers(newlist);\n                        }}\n                      />\n                    </Label>\n                    <Label className=\"my-3 w-full\">\n                      <span>Others {i + 1}: Serial Number</span>\n                      <Input\n                        className=\"mt-1\"\n                        placeholder={`Others ${i + 1}'s Serial Number `}\n                        name=\"otherssno\"\n                        value={item.otherssno}\n                        onChange={(e) => {\n                          let newlist = [...others];\n                          newlist[i].otherssno = e.target.value;\n                          setothers(newlist);\n                        }}\n                      />\n                    </Label>\n                  </div>\n                </div>\n              );\n            })}\n\n            {/* ----------------others------------------------------- */}\n\n            <div className=\"flex items-center justify-center my-10\">\n              <Button type=\"submit\">Submit</Button>\n            </div>\n\n            {/* <Label className=\"mt-4\">\n              <span>Disabled</span>\n              <Input disabled className=\"mt-1\" placeholder=\"Jane Doe\" />\n            </Label> */}\n          </form>\n        </div>\n      </>\n    );\n  };\n\n  //DROPDOWN------------------------------------------------------------------------------------\n\n  const [isOpen, setIsOpen] = useState(false);\n  function toggleDropdown() {\n    setIsOpen(!isOpen);\n  }\n\n  const test = () => {\n    console.log(test);\n  };\n\n  return (\n    <>\n      <UnitListModal\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        setUnit={setUnit}\n        unit={unit}\n        customer={customer}\n        setCustomer={setCustomer}\n        account={account}\n        setAccount={setAccount}\n      />\n      {/* Heading of page with float button */}\n\n      {assetPicker()}\n      {/* <SectionTitle>Pick Product</SectionTitle> */}\n      {/* {dropdown()} */}\n      {product != \"null\" ? (\n        <>\n          <SectionTitle>{product} </SectionTitle>\n          {productPicker()}\n        </>\n      ) : null}\n      {/* {productPicker()} */}\n      {/* /////---------------------------- FOOTER */}\n      {/* <div class=\" w-7/12 bottom-0  border-t border-grey p-4 fixed pin-b bg-gray-700 text-xs text-white\">\n        Asset Summary Asset Information:\n        <br />\n        Business: {Business} POnumber: {POnumber} ContractFrom: {ContractFrom}\n        ContractTo: {ContractTo} BillingFrom: {BillingFrom} BillingTo:{\" \"}\n        {BillingTo} AMCRate:\n        {AMCRate} GST:{GST} GSTAMOUNT:{GSTAMOUNT} NetAmount:{NetAmount}\n        <br />\n        Product: {product}\n        <br />\n        Brind: {brand} model: {model} serialno: {serialno} os: {os}\n        <br />\n        {cpu.map((p, i) => {\n          return (\n            <>\n              CPU:{p.cpuname}, {p.cpusno}\n            </>\n          );\n        })}\n      </div> */}\n      {UpdatedModal()}\n    </>\n  );\n}\n\nexport default UpdateAsset;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}