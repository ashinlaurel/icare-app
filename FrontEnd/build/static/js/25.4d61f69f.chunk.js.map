{"version":3,"sources":["pages/Inventory/Inventory.js","components/Modal/AssetFilters/CustomerSelection.js","helpers/toolfuctions/toolfunctions.js"],"names":["Inventory","useState","isDeleteModalOpen","setIsDeleteModalOpen","deleteId","setDeleteId","isViewModalOpen","setIsViewModalOpen","viewId","setViewId","useContext","BottomBarContext","setBBarOpen","bbaropen","setAssetDetails","assetdetails","activerowid","setActiveRowId","TopBarContext","setTopHeading","topheading","page","setPage","data","setData","refresh","setRefresh","type","setType","location","setLocation","condition","setCondition","selectedprod","searchtype","searchquery","setSearchQuery","totalResults","setTotalResults","useEffect","a","console","log","payload","pages","limit","filters","axios","url","API","Emp","getId","method","response","out","total","isOpen","onClose","className","onClick","id","temp","filter","x","_id","item","name","sno","invnumber","gstno","expirydate","moment","invdate","format","purchlocation","panno","wty","vendor","invtype","purchtype","aadharno","amount","nettax","igst","tcs","rate","taxcategory","cgst","invamount","taxperc","sgst","ViewModal","class","value","onChange","e","target","disabled","selected","xmlns","viewBox","d","onSubmit","preventDefault","placeholder","map","user","i","key","capitalize","systype","brand","model","layout","size","aria-label","to","aria-hidden","resultsPerPage","label","p","CustomerSelection","isModalOpen","setIsModalOpen","unit","setUnit","account","setAccount","customer","setCustomer","customers","setCustomers","accounts","setAccounts","units","setUnits","tabIndex","setTabIndex","search","setSearch","handleChange","handleSubmit","role","pickCustomer","customerName","accountName","unitName","Axios","post","customerId","accs","pickAccount","accountId","u","pickUnit","selectedIndex","onSelect","ind","exports","s","charAt","toUpperCase","slice"],"mappings":"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","file":"static/js/25.4d61f69f.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport Emp from \"../../helpers/auth/EmpProfile\";\nimport { EditIcon, TrashIcon } from \"../../icons\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\n\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  Button,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Dropdown,\n  DropdownItem,\n} from \"@windmill/react-ui\";\n\nimport { API } from \"../../backendapi\";\nimport CustomerSelection from \"../../components/Modal/AssetFilters/CustomerSelection\";\nimport { BottomBarContext } from \"../../context/BottomBarContext\";\nimport { Link } from \"react-router-dom\";\nimport { TopBarContext } from \"../../context/TopBarContext\";\nimport { capitalize } from \"../../helpers/toolfuctions/toolfunctions\";\n\nfunction Inventory() {\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [deleteId, setDeleteId] = useState(0);\n  const [isViewModalOpen, setIsViewModalOpen] = useState(false);\n  const [viewId, setViewId] = useState(0);\n\n  const { bbaropen, setBBarOpen, setAssetDetails, assetdetails } = useContext(\n    BottomBarContext\n  );\n  // table variable styles\n  const [activerowid, setActiveRowId] = useState(0);\n\n  const { topheading, setTopHeading } = useContext(TopBarContext);\n\n  const [floatbox, setFloatBox] = useState(false);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  // dropdown and modals\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenTwo, setIsOpenTwo] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [refresh, setRefresh] = useState(true);\n  const [disabler, setDisabler] = useState(true);\n\n  // filterhooks\n  const [type, setType] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n\n  // Selected Prod for the bottom bar----------\n  const [selectedprod, setSelectedProd] = useState({});\n\n  // search\n  const [searchtype, setSearchType] = useState(\"\");\n  const [searchlabel, setSearchLabel] = useState(\"\");\n  const [searchquery, setSearchQuery] = useState(\"\");\n\n  // Getting data states\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  const DeleteModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isDeleteModalOpen}\n          onClose={() => setIsDeleteModalOpen(false)}\n        >\n          <ModalHeader>Are you sure you want to delete!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                try {\n                  let response = await axios({\n                    url: `${API}/inventory/${Emp.getId()}/delete`,\n                    method: \"POST\",\n                    data: { id: deleteId },\n                  });\n                  console.log(response.data);\n                  let temp = data.filter((x) => x._id != deleteId);\n                  setData(temp);\n                  setIsDeleteModalOpen(false);\n\n                  // setData(response.data);\n                } catch (error) {\n                  throw error;\n                }\n              }}\n            >\n              Confirm Delete\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const ViewModal = () => {\n    \n    if(data[viewId]){\n    let item = data[viewId];\n    return (\n      <>\n        <Modal\n          isOpen={isViewModalOpen}\n          onClose={() => setIsViewModalOpen(false)}\n          className=\"w-8/12 dark:bg-gray-800 p-10 my-12  bg-gray-50 text-gray-900 dark:text-white  rounded-lg overflow-y-scroll\"\n        >\n          <ModalHeader className=\"flex flex-row justify-between text-xl\">\n          <div>{item.name}</div>\n          <div>Condition: <Badge>{item.condition}</Badge> </div>\n          </ModalHeader>\n          <ModalBody>\n\n          <div className=\"font-semibold text-xl my-2\">Product Description</div>\n          \n          <div className=\"flex flex-col lg:flex-row items-center dark:bg-gray-700 justify-between bg-gray-100 rounded-lg p-5 \">\n              <div className=\"my-3  flex-col flex\">\n                \n              <div className=\"font-semibold\" > Serial No: {item.sno}</div>\n              <div>Invnetory No:{item.invnumber}</div>\n              <div>Location:{item.location}</div>\n              <div>GST No: {item.gstno}</div>\n              <div>Expiry Date: {item.expirydate}</div>\n                \n                \n                \n\n              </div>\n              <div className=\"my-3 font- flex-col flex\">\n              <span className=\"font-semibold\" >Type:{item.type}</span>\n              <div>inventory Date: {moment(item.invdate).format(\"DD/MM/YY\")}</div>\n              <div>Purchase Location: {item.purchlocation}</div>\n              <div>PAN No: {item.panno}</div>\n              <div>Warranty: {item.wty}</div>\n              \n               \n                \n              </div>\n                <div className=\"my-3  flex-col flex\">\n                <div className=\"font-semibold\" >vendor:{item.vendor}</div>\n                <div>Inventory Type: {item.invtype}</div>\n                <div>Purchase type: {item.purchtype}</div>\n                <div>Aadhar No: {item.aadharno}</div>\n                \n                \n                  \n                  \n                  \n                </div>\n                \n           </div>\n\n           <div className=\"font-semibold text-xl my-2\">Product Rates</div>\n\n           <div className=\"flex flex-col lg:flex-row items-center dark:bg-gray-700 justify-between bg-gray-100 rounded-lg p-5 \">\n              <div className=\"my-3  flex-col flex\">\n              <span className=\"font-semibold\" >Amount:{item.amount}</span> \n              <div className=\"font-semibold\" >Net tax: {item.nettax}</div>\n              <div>IGST: {item.igst}</div>\n              <div>TCS: {item.tcs}</div> \n                \n                \n\n              </div>\n              <div className=\"my-3 font- flex-col flex\">\n              <div className=\"font-semibold\" >Rate: {item.rate}</div>\n              <span>Tax Category:{item.taxcategory}</span> \n              <div>CGST : {item.cgst}</div>\n                 \n              \n               \n                \n              </div>\n                <div className=\"my-3  flex-col flex\">\n                <div className=\"font-semibold\">Invoice Amount:{item.invamount}</div>\n                <div>Tax percentage: {item.taxperc}</div>\n                <div>SGST: {item.sgst}</div>\n                \n                \n                  \n                  \n                  \n                </div>\n                \n           </div>\n\n\n           {/* <div className=\"flex flex-col lg:flex-row items-center justify-between bg-gray-100 rounded-lg p-3 \">\n              <div className=\"my-3  flex-col flex\">\n                \n                \n                <span>Type:{item.type}</span>\n                <span>vendor:{item.vendor}</span>\n                <span>location:{item.location}</span>\n                <span>Invnetory No:{item.invnumber}</span>\n                <span>taxcategory:{item.taxcategory}</span>\n                <span>amount:{item.amount}</span>\n                \n\n              </div>\n              <div className=\"my-3 font-semibold flex-col flex\">\n                \n                <div>inventory Date: {moment(item.invdate).format(\"DD/MM/YY\")}</div>\n                <div>gstno: {item.gstno}</div>\n                <div>taxperc: {item.taxperc}</div>\n                <div>tcs: {item.tcs}</div>\n                <div>expirydate: {item.expirydate}</div>\n                <div>Warranty: {item.wty}</div>\n              </div>\n                <div className=\"my-3 font-semibold flex-col flex\">\n                  <div> Serial No: {item.sno}</div>\n                  <div>Inventory Type: {item.invtype}</div>\n                  <div>Inventory Type: {item.invtype}</div>\n                  <div>panno: {item.panno}</div>\n                  <div>nettax: {item.nettax}</div>\n                  <div>igst: {item.igst}</div>\n                  \n                </div>\n                <div className=\"my-3 font-semibold flex-col flex\">\n                  <div> Condition: {item.condition}</div>\n                  <div>Purchase type: {item.purchtype}</div>\n                  <div>aadharno: {item.aadharno}</div>\n                  <div>rate: {item.rate}</div>\n                  <div>cgst: {item.cgst}</div>\n                  <div>sgst: {item.sgst}</div>\n                  \n                </div>\n           </div> */}\n\n              \n              <div  className=\"flex flex-col lg:flex-row items-center justify-between\">\n              {/* <div className=\"font-semibold\">Invoice Amount:{item.invamount}</div> */}\n              </div>\n          \n          </ModalBody>\n          <ModalFooter>\n            \n          </ModalFooter>\n        </Modal>\n      </>\n    );\n    }\n  };\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n  // -------Enabling Bottom Bar----\n  useEffect(() => {\n    // setBBarOpen(1);\n    return () => {\n      setBBarOpen(0);\n      setAssetDetails({});\n    };\n  }, []);\n  // -------------------------------\n  // ----------------------Heading Use Effect-------------\n  useEffect(() => {\n    setTopHeading(\"Inventory\");\n    return () => {\n      setTopHeading(\"\");\n    };\n  }, []);\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          type: type,\n          location: location,\n          condition: condition,\n          searchtype: searchtype,\n          searchquery: searchquery,\n        },\n      };\n      // console.log(`${API}/asset/${Emp.getId()}/getall`);\n\n      try {\n        let response = await axios({\n          url: `${API}/inventory/${Emp.getId()}/getall`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n        // const { total, data } = response.data;\n        // console.log(data + \"Now\");\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, location, condition, type, refresh]);\n\n  console.log(selectedprod);\n\n  return (\n    <>\n      {DeleteModal()}\n      {ViewModal()}\n\n      <div className=\"mb-64 mt-4\">\n        {/* ------------------------------------------Filters----------------------------------------------------------------------------  */}\n        <div className=\"\">\n          {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n          <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-2 \">\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={type}\n                onChange={(e) => {\n                  setType(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Item Type\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Mouse\">Mouse</option>\n                <option value=\"Keyboard\">Keyboard</option>\n                <option value=\"Monitor\">Monitor</option>\n                <option value=\"Cpu\">Cpu</option>\n                <option value=\"Ram\">Ram</option>\n                <option value=\"Fan\">Fan</option>\n                <option value=\"Motherboard\">Motherboard</option>\n                <option value=\"SMPS\">SMPS</option>\n                <option value=\"HDD\">HDD</option>\n                <option value=\"SMPS\">SMPS</option>\n                <option value=\"GCard\">Gcard</option>\n                <option value=\"EnetCard\">Enet Card</option>\n                <option value=\"SerialCard\">Serial Card</option>\n                <option value=\"ParalellCard\">Paralell Card</option>\n                <option value=\"OpticalDrive\">Optical Drive</option>\n                <option value=\"Others\">Others</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* -----------------------------------------Location ----------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={location}\n                onChange={(e) => {\n                  setLocation(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Location\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Trivandrum\">Trivandrum</option>\n                <option value=\"Kottayam\">Kottayam</option>\n                <option value=\"Kozhikode\">Kozhikode</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n            {/* ---------------------------Condition Drop Down-------------------------------------- */}\n            <div class=\"relative mx-1 \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                value={condition}\n                onChange={(e) => {\n                  setCondition(e.target.value);\n                }}\n              >\n                <option value=\"\" disabled selected>\n                  Condition\n                </option>\n                <option value=\"\">All</option>\n                <option value=\"Good\">Good</option>\n                <option value=\"Bad\">Bad</option>\n                <option value=\"Used\">Used</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* -----------------Search Bar------------------------------------ */}\n            <div class=\"block relative xl:ml-64\">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  value={searchquery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search\"\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n        <TableContainer className=\"mt-4\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Type</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Serial Number</TableCell>\n                <TableCell>Location</TableCell>\n                <TableCell>Inv Number</TableCell>\n                <TableCell>Condition</TableCell>\n                <TableCell>View</TableCell>\n                <TableCell>Edit/Delete</TableCell>\n              </tr>\n            </TableHeader>\n            <TableBody>\n              {data.map((user, i) => (\n                <TableRow\n                  className={`hover:shadow-lg dark:hover:bg-gray-600 ${\n                    activerowid == user._id\n                      ? \"bg-blue-300 shadow-lg dark:bg-gray-600\"\n                      : \"white\"\n                  } `}\n                  key={i}\n                  onClick={() => {\n                    setActiveRowId(user._id);\n                    // console.log(\"the id is \" + user._id);\n                    // setSelectedProd(user);\n                    // setAssetDetails(user);\n                    // console.log(user.product.keyboard[0].kbdname);\n                  }}\n                >\n                  <TableCell className=\"w-8\">\n                    <div className=\"flex items-center text-sm \">\n                      {/* <Avatar\n                        className=\"hidden ml-2 mr-3 md:block\"\n                        src=\"https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg\"\n                        alt=\"User image\"\n                      /> */}\n                      <div>\n                        <p className=\"font-semibold\">{capitalize(user.type)}</p>\n                        {/* <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                          {user.accountName}\n                        </p> */}\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    {user.systype == \"item\" ? (\n                      <span className=\"text-sm\">{user.name}</span>\n                    ) : (\n                      <span className=\"text-sm\">{user.brand + user.model}</span>\n                    )}\n                  </TableCell>\n\n                  <TableCell>\n                    <span className=\"text-sm\">{user.sno}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.location}</span>\n                  </TableCell>\n                  <TableCell>\n                    <span className=\"text-sm\">{user.invnumber}</span>\n                  </TableCell>\n                  <TableCell>\n                    <Badge\n                      type={user.condition == \"Good\" ? \"primary\" : \"danger\"}\n                    >\n                      {user.condition}\n                    </Badge>\n                  </TableCell>\n                  <TableCell>\n                    <Button\n                      onClick={() => {\n                        setViewId(i);\n                        setIsViewModalOpen(true);\n                      }}\n                      layout=\"outline\"\n                    >\n                      View\n                    </Button>\n                  </TableCell>\n\n                  <TableCell>\n                    <div className=\"flex items-center space-x-4\">\n                      <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                        <Link\n                          key={user._id}\n                          to={`/app/inventory/update/${user._id}`}\n                        >\n                          <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                        </Link>{\" \"}\n                      </Button>\n\n                      <Button\n                        layout=\"link\"\n                        size=\"icon\"\n                        aria-label=\"Delete\"\n                        onClick={async () => {\n                          console.log(\"delete Asset\");\n                          setIsDeleteModalOpen(true);\n                          setDeleteId(user._id);\n                        }}\n                      >\n                        <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                      </Button>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              label=\"Table navigation\"\n              onChange={onPageChange}\n            />\n          </TableFooter>\n        </TableContainer>\n\n        {/* ----------------------------------------------Table----------------------------------------------------- */}\n      </div>\n\n      {/* ------------------------------------Bottom Bar---------------------------------- */}\n    </>\n  );\n}\n\nexport default Inventory;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport { API } from \"../../../backendapi\";\n\nexport default function CustomerSelection({\n  isModalOpen,\n  setIsModalOpen,\n  unit,\n  setUnit,\n  account,\n  setAccount,\n  customer,\n  setCustomer,\n  refresh,\n  setRefresh,\n}) {\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  //   Search Functions---------------------------------------------------------\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  //   -----------------------Send Search for Fuzzy ---------------------------------------------------------\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let payload = {\n      search: search,\n      role: 1,\n    };\n    try {\n      let response = await axios({\n        url: `${API}/customer/customers`,\n        method: \"POST\",\n        data: payload,\n      });\n      console.log(response.data);\n      setCustomers(response.data);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  //   ---------------Intital Load ----------------------------\n\n  useEffect(() => {\n    (async function thegetter() {\n      let payload = {\n        search: search,\n        role: 1,\n      };\n      try {\n        let response = await axios({\n          url: `${API}/customer/customers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data);\n        setCustomers(response.data);\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }, []);\n\n  const pickCustomer = async (customer) => {\n    // console.log(customer);\n    setCustomer({\n      _id: customer._id,\n      customerName: customer.name,\n    });\n    setAccount({\n      _id: \"\",\n      accountName: \"\",\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const accs = await Axios.post(`${API}/customer/accounts`, {\n        customerId: customer._id,\n      });\n      console.log(accs.data);\n      // let temp = [];\n      // accs.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setAccounts(accs.data);\n      //   setTabIndex(1);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickAccount = async (account) => {\n    console.log(account);\n    setAccount({\n      _id: account._id,\n      accountName: account.name,\n    });\n    setUnit({\n      _id: \"\",\n      unitName: \"\",\n    });\n    try {\n      const u = await Axios.post(`${API}/customer/units`, {\n        accountId: account._id,\n      });\n      console.log(u.data);\n      // let temp = [];\n      // u.data.map((acc) => {\n      //   temp.push(acc);\n      // });\n      setUnits(u.data);\n      //   setTabIndex(2);\n    } catch (err) {\n      console.log(\"axiosErr\", err);\n    }\n  };\n\n  const pickUnit = async (unit) => {\n    console.log(unit);\n    setUnit({\n      _id: unit._id,\n      unitName: unit.unitName,\n    });\n  };\n\n  const CustomerTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Customer</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n            <tr>\n              <TableCell>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    className=\"block w-full pr-20 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray form-input\"\n                    placeholder=\"Search Customers\"\n                    onChange={handleChange}\n                  />\n                </form>\n              </TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {customers.map((customer, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickCustomer(customer)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{customer.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const AccountTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Account</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {accounts.map((account, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickAccount(account)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{account.name}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  const UnitTable = () => {\n    return (\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Unit</TableCell>\n              {/* <TableCell>Unit</TableCell> */}\n              {/* <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell> */}\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {units.map((unit, i) => (\n              <TableRow\n                key={i}\n                className=\"hover:bg-purple-200 cursor-pointer\"\n                onClick={() => pickUnit(unit)}\n              >\n                <TableCell>\n                  <div>\n                    <div>\n                      <p className=\"font-semibold\">{unit.unitName}</p>\n                    </div>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter></TableFooter>\n      </TableContainer>\n    );\n  };\n\n  return (\n    <>\n      {/* <div>\n      <Button onClick={openModal}>Open modal</Button>\n    </div> */}\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <ModalHeader>\n          Select{\" \"}\n          {tabIndex == 0 ? (\n            <>Customer</>\n          ) : tabIndex == 1 ? (\n            <>Account</>\n          ) : (\n            <>Unit</>\n          )}\n        </ModalHeader>\n        <ModalBody>\n          <Tabs selectedIndex={tabIndex} onSelect={(ind) => setTabIndex(ind)}>\n            <TabList>\n              <Tab>Customer</Tab>\n              <Tab>Account</Tab>\n              <Tab>Unit</Tab>\n            </TabList>\n            <TabPanel>{CustomerTable()}</TabPanel>\n            <TabPanel>{AccountTable()}</TabPanel>\n            <TabPanel>{UnitTable()}</TabPanel>\n          </Tabs>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Customer: {customer.customerName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Account : {account.accountName}\n          </Badge>\n          <Badge className=\"mx-2 text-md\" type=\"success\">\n            Unit: {unit.unitName}\n          </Badge>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"w-full sm:w-auto\"\n            // layout=\"outline\"\n            onClick={() => {\n              setIsModalOpen(false);\n              setRefresh(!refresh);\n            }}\n          >\n            Select\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}\n","exports.capitalize = (s) => {\n  if (typeof s !== \"string\") return \"\";\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n"],"sourceRoot":""}